12599	register.tag decorator ,	@ register . tag
13822	define function dictvale , with an argument t .	def dictvalue ( t ) :
11338	templatetags_modules_candidates is an list with an argument string STR0 .	templatetags_modules_candidates = [ STR0 ]
17509	decrement self.active_readers by integer 1 ,	self . active_readers -= 1
9845	for every bytes in stream ,	for bytes in stream :
8272	if construct is true ,	if construct :
11999	if value is None ,	if value is None :
8024	created with 2 arguments : required as boolean False and widget set to HiddenInput . value under the MAX_NUM_FORM_COUNT of the self.base_fields dictionary is an instance of IntegerField class ,	self . base_fields [ MAX_NUM_FORM_COUNT ] = IntegerField ( required = False , widget = HiddenInput )
3296	STR0 STR1 STR2 , where STR3 is replaced by value under the STR4 key of the connection.settings_dict dictionary and e. call the function six.reraise with 3 arguments : CommandError , CommandError created with argument new_msg ,	six . reraise ( CommandError , CommandError ( new_msg ) , sys . exc_info ( ) [ 2 ] )
8091	and i is greater than or equal to self.min_num , value under the STR0 key of the defaults dictionary is boolean True .	defaults [ STR0 ] = True
2096	msg_count is integer 0 .	msg_count = 0
8527	define the method _construct_form with 3 arguments : self , i and unpacked dictionary kwargs .	def _construct_form ( self , i , ** kwargs ) :
18454	substitute the result for block_re . call the function re.compile with an argument raw string STR0 , substitute the result for endblock_re .	endblock_re = re . compile ( STR0^\s*endblocktrans$STR1 )
16936	consume_next is boolean True .	consume_next = True
12622	where STR0 is replaced with first element of bits . call the method parser.compile_filter with second element of bits as an argument , substitute the result for filepath .	filepath = parser . compile_filter ( bits [ 1 ] )
8363	get STR0 attribute from the options object , if it exists substitute it for self.help_texts , if not self.help_texts is None .	self . help_texts = getattr ( options , STR0 , None )
4769	from importlib import import_module into default name space .	from importlib import import_module
13327	return retval .	return retval
9234	an empty string for STR0 and self.clear_checkbox_label for STR1 . template is a string STR2 .	template = STR0
9517	return obj .	return obj
5968	define the method __init__ with arguments self , name , sysid and pubid .	def __init__ ( self , name , sysid , pubid ) :
12355	substitute format_string for self.format_string .	self . format_string = format_string
15679	import module sys .	import sys
15894	get name attribute from the instance object , call it and return the result .	return getattr ( instance , name ) ( )
8644	skip this loop iteration .	continue
15430	if value under the STR0 key of the self.feed dictionary is not None ,	if self . feed [ STR0 ] is not None :
2668	if self has an STR0 attribute , has_old_option is boolean True , otherwise it is boolean False .	has_old_option = hasattr ( self , STR0 )
16683	substitute value under the KEY key of the root dictionary for oldkey .	oldkey = root [ KEY ]
11747	call the function _urlize with 3 arguments : value , nofollow set to boolean True , autoescape set to autoescape ,	return mark_safe ( _urlize ( value , nofollow = True , autoescape = autoescape ) )
9848	if bytes_read is greater than rollback ,	if bytes_read > rollback :
3585	call the method self.compression_formats.keys , convert it to list , substitute it for cmp_fmts if cmp_fmt is None ,	cmp_fmts = list ( self . compression_formats . keys ( ) ) if cmp_fmt is None else [ cmp_fmt ]
11199	if name is callable object ,	if callable ( name ) :
7247	define the method _get_regex an argument self .	def _get_regex ( self ) :
11110	call the function re.compile with an argument raw string STR0 , substitute the result for kwarg_re .	kwarg_re = re . compile ( STR0 )
5092	make a directory top_dir .	os . makedirs ( top_dir )
17202	substitute old_attr for new_attr .	new_attr = old_attr
594	property decorator ,	@ property
15101	logger.disabled is boolean True .	logger . disabled = True
6104	call the function importlib.import_module with 2 arguments : flup_module converted to string and appended to STR0 character , and string STR1 , substitute the result for module .	module = importlib . import_module ( STR0 % flup_module , STR1 )
14334	for every key in self ,	for key in self :
12514	call the method parser.delete_first_token .	parser . delete_first_token ( )
6752	do nothing .	pass
2502	if not ,	else :
6025	call the __init__ method from the base class of the WSGIServer class , with 2 arguments : unpacked list args and unpacked dictionary kwargs .	super ( WSGIServer , self ) . __init__ ( * args , ** kwargs )
9743	use the result and file_obj as arguments for the call to the method self._files.appendlist . break the loop execution .	break
17028	for every item in elt ,	for item in elt :
2740	call the function no_style , substitute the result for self.style .	self . style = no_style ( )
16959	skip this loop iteration .	continue
18098	call the function lazy_number with 5 arguments : ungettext , six.text_type , singular set to singular , plural set to plural ,	return lazy_number ( ungettext , six . text_type , singular = singular , plural = plural , number = number )
14486	if self.timezone is false ,	if not self . timezone :
12956	try ,	try :
5366	return the length of self.object_list .	return len ( self . object_list )
7685	remove entry at the attr key of the declared_fields dictionary .	declared_fields . pop ( attr )
10008	if return value of the self.is_secure is false and server port is not equal to string STR0 , join host and server_port into a string , separated with STR1 , substitute the result for host .	host = STR0 % ( host , server_port )
13144	define the method load_template_source with 3 arguments : self , template_name , template_dirs set to None .	def load_template_source ( self , template_name , template_dirs = None ) :
8016	DELETION_FIELD_NAME is a string STR0 .	DELETION_FIELD_NAME = STR0
2859	from django.utils import termcolors into default name space .	from django . utils import termcolors
6380	call the method LocaleRegexProvider.__init__ with arguments self and regex .	LocaleRegexProvider . __init__ ( self , regex )
16525	call the method lexer.lex with an arguments js , for every name and tok in the result ,	for name , tok in lexer . lex ( js ) :
17365	define the function iterbytes with an argument buf .	def iterbytes ( buf ) :
1455	substitute True for self.close_called .	self . close_called = True
4056	value under the all_label key of the directory_created dictionary is boolean True .	directory_created [ app_label ] = True
1758	otherwise if any other exception is caught ,	except :
8593	seen_data is an empty set .	seen_data = set ( )
9726	call the function exhaust with an argument stream .	exhaust ( stream )
12771	define the function make_origin with 4 arguments : display_name , loader , name and dirs .	def make_origin ( display_name , loader , name , dirs ) :
15864	call the function new_method_proxy with an argument hash , substitute the result for __hash__ .	__hash__ = new_method_proxy ( hash )
13700	if USE_INOTIFY is true ,	if USE_INOTIFY :
3605	use it as an argument for the call to the glob.iglob , for every candidate in result , call the method os.path.basename with an argument candidate , is result is contained in targets ,	if os . path . basename ( candidate ) in targets :
1294	define the method open with arguments self , name and mode defaulting to string STR0 .	def open ( self , name , mode = STR0 ) :
18623	if priority is true ,	if priority :
2630	if self.cmd has an attribute STR0 and next statement is not true : args is true or any arg doesnt start with STR1 for arg in args ,	if ( hasattr ( self . cmd , STR0 ) and not ( args or any ( [ not arg . startswith ( STR1 ) for arg in args ] ) ) ) :
12976	raise an TemplateSyntaxError exception with an argument string STR0 ,	raise TemplateSyntaxError ( STR0 % bits [ 0 ] )
9098	if extend is boolean True ,	if extend is True :
13241	define the method nud with 2 arguments : self and parser .	def nud ( self , parser ) :
6518	if lookup_view is contained in self._callback_strs ,	if lookup_view in self . _callback_strs :
12689	call the method token.split_contents , substitute the result for bits .	bits = token . split_contents ( )
9258	update default_attrs dictionary with attrs entry .	default_attrs . update ( attrs )
4089	use it as an argument for the call to the method self.style.MIGRATE_HEADING , write the result to self.stdout . for every migration in merge_migrations ,	for migration in merge_migrations :
16671	increment stats dictionary value under the HITS key by integer 1 .	stats [ HITS ] += 1
7499	if self.require_all_fields is true ,	if self . require_all_fields :
17458	for every slots_var in slots ,	for slots_var in slots :
6266	join func.__class__.__module__ and func.__class__.__name__ into a string , separated by character STR0 , substitute it for self._func_path .	self . _func_path = STR0 . join ( [ func . __class__ . __module__ , func . __class__ . __name__ ] )
17699	if words is not empty and length is smaller than or equal to integer 0 ,	if words and length <= 0 :
9650	for every handler in handlers ,	for handler in handlers :
1202	call the OVERLAPPED function , substitute the result for overlapped .	overlapped = OVERLAPPED ( )
1900	call the method self._load_post_and_files .	self . _load_post_and_files ( )
15998	close file descriptor s .	s . close ( )
2516	append string STR0 , where STR1 is replaced by name to the usage .	usage . append ( STR0 % name )
1586	derive the class TemporaryFileUploadHandler from the FileUploadHandler base class .	class TemporaryFileUploadHandler ( FileUploadHandler ) :
17548	finally perform ,	finally :
16420	call the function _explode_shorthand_ip_string with an argument ip_str , substitute the result for ip_str .	ip_str = _explode_shorthand_ip_string ( ip_str )
13052	substitute loaders for self._loaders .	self . _loaders = loaders
15590	if lang is None ,	if lang is None :
17000	return a list containing an empty string and a list containing an empty list .	return [ ] , [ [ ] ]
14761	if not ,	else :
6431	substitute tuple containing 2 elements : sum of p_pattern and prefix , and sub_pattern for value under the namespace key of the namespace dictionary .	namespaces [ namespace ] = ( p_pattern + prefix , sub_pattern )
18506	for every part in plural ,	for part in plural :
9290	call the function force_text with an argument value , substitute the result for value under the STR0 key of the final_attrs .	final_attrs [ STR0 ] = force_text ( value )
14030	if length of password is greater than inner.block_size ,	if len ( password ) > inner . block_size :
14650	result of the call to the function _ with an argument string STR0 for 1 , result of the call to the function _ with an argument string STR1 for 2 , result of the call to the function _ with an argument string STR2 for 3 , result of the call to the function _ with an argument string STR3 for 4 , result of the call to the function _ with an argument string STR4 for 5 , and result of the call to the function _ with an argument string STR5 for 6 . WEEKDAYS_REV is an dictionary with 7 entries : 0 for STR6 , 1 for STR7 , 2 for STR8 , 3 for STR9 , 4 for STR10 , 5 for STR11 and 6 for STR12 .	WEEKDAYS_REV = { STR0 : 0 , STR1 : 1 , STR2 : 2 , STR3 : 3 , STR4 : 4 , STR5 : 5 , STR6 : 6 }
18667	if data is contained in self.children ,	if data in self . children :
10202	define the method setlistdefault with 3 arguments : self , key and default_list set to None .	def setlistdefault ( self , key , default_list = None ) :
13142	if ValueError exception is caught ,	except ValueError :
15369	define the method add_item with 17 arguments : self , title , link , description , author_email set to None , author_name set to None ,	def add_item ( self , title , link , description , author_email = None , author_name = None , author_link = None , pubdate = None , comments = None , unique_id = None , unique_id_is_permalink = None , enclosure = None , categories = ( ) , item_copyright = None , ttl = None , updateddate = None , ** kwargs ) :
7557	substitute allow_files and allow_folders for self.allow_files and self.allow_folders .	self . allow_files , self . allow_folders = allow_files , allow_folders
14778	call the function view_func with 3 arguments : request , unpacked list args , unpacked dictionary kwargs , substitute the result for response .	response = view_func ( request , * args , ** kwargs )
15856	if not ,	else :
17692	define the method _text_words with 3 arguments : self , length and truncate .	def _text_words ( self , length , truncate ) :
18393	if _supported is None ,	if _supported is None :
14303	update self.__dict__ dictionary with obj_dict .	self . __dict__ . update ( obj_dict )
8774	derive the class InlineForeignKeyField from the Field base class .	class InlineForeignKeyField ( Field ) :
6838	from django.utils.encoding import force_str into default name space .	from django . utils . encoding import force_str
11928	decorator function register.filter with an argument is_safe set to boolean False .	@ register . filter ( is_safe = False )
3957	with the result renamed to fp , perform the following : read data from file fp , use the result as an argument for the call to the function plural_forms_re.search , substitute it for m .	m = plural_forms_re . search ( fp . read ( ) )
11413	define the method __delitem__ with 2 arguments : self and key .	def __delitem__ ( self , key ) :
12632	raise an TemplateSyntaxError exception with an argument string STR0 ,	raise TemplateSyntaxError ( STR0 % ( taglib , e ) )
8388	raise an FieldError exception with an argument message .	raise FieldError ( message )
13168	self._post_render_callbacks is an empty list .	self . _post_render_callbacks = [ ]
10744	if TemplateSyntaxError , renamed to e , exception is caught ,	except TemplateSyntaxError as e :
16254	call the function six.reraise with 3 arguments : ValueError , instance of a class ValueError , created with an argument string ,	six . reraise ( ValueError , ValueError ( STR0 % date ) , sys . exc_info ( ) [ 2 ] )
3793	get the value under the STR0 key of the options dictionary , if it is true ,	if options . get ( STR0 ) :
18601	call the method cmatch.group with an argument integer 1 , format with the result string STR0 , write it to out .	out . write ( STR0 % cmatch . group ( 1 ) )
17561	if k equals a string STR0 ,	if k == STR0 :
15652	call the function force_str with an argument : default if it is true , or if not , first element of the result of the function ,	format = force_str ( default or get_format ( STR0 ) [ 0 ] )
8457	if value under the name key of self.cleaned_data dictionary is not None ,	if self . cleaned_data . get ( name ) is not None and self . cleaned_data [ name ] . _state . adding :
15918	get maximal element from roots and substitute it for root .	root = max ( roots )
13750	substitute jython_reloader for reloader .	reloader = jython_reloader
7109	try ,	try :
6814	derive the class MaxLengthValidator form the BaseValidator base class .	class MaxLengthValidator ( BaseValidator ) :
11092	call the method template_localtime with 2 arguments : value and use_tz=context.use_tz , substitute the result for value .	value = template_localtime ( value , use_tz = context . use_tz )
1621	derive class FileProxyMixin from the base class object , making it a new-style class .	class FileProxyMixin ( object ) :
12515	return a class instance FilterNode , called with an arguments filter_expr and nodelist .	return FilterNode ( filter_expr , nodelist )
15832	define the method _setup with an argument self .	def _setup ( self ) :
1571	define the method handle_raw_input with arguments : self , input_data , META , content_length , boundary and encoding set to None .	def handle_raw_input ( self , input_data , META , content_length , boundary , encoding = None ) :
9491	substitute i-th element of value for widget_value .	widget_value = value [ i ]
2059	try ,	try :
1376	if _file is None ,	if _file is None :
15972	replace every occurrence of STR0 in p for STR1 ,	paras = [ STR0 % p . replace ( STR1 , STR2 ) for p in paras ]
9070	define the method __getitem__ with arguments self and name .	def add_js ( self , data ) :
3032	otherwise if f.unique is true ,	elif f . unique :
10432	define the serialize content with an argument self .	def serialize ( self ) :
16638	root is a list with elements : root , root , None and None .	root [ : ] = [ root , root , None , None ]
9302	define the method __init__ with 3 arguments : self , attrs set to None and choices set to an empty tuple .	def __init__ ( self , attrs = None , choices = ( ) ) :
4852	call the method logging.getLogger with an argument string STR0 , substitute the result for logger .	logger = logging . getLogger ( STR0 )
5852	call the method self.indent with argument integer 2 .	self . indent ( 2 )
9935	substitute the result for key . pdict is an empty dictionary .	pdict = { }
8163	forms_valid is True .	forms_valid = True
3285	request user input from the standard input , assign it o confirm , with the query string : STR0	confirm = input ( STR0You have requested a flush of the database. This will IRREVERSIBLY DESTROY all data currently in the %r database, and return each table to an empty state. Are you sure you want to do this? Type STR2 to continue, or STR3 to cancel: STR1 % connection . settings_dict [ STR4 ] )
10771	append node to nodelist .	nodelist . append ( node )
12123	substitute cyclevars for self.cyclevars .	self . cyclevars = cyclevars
8893	if value is not an instance of list or tuple types ,	if not isinstance ( value , ( list , tuple ) ) :
11389	if value is not None ,	if value is not None :
7805	return boolean True .	return True
5392	from django.conf import settings into default name space .	from django . conf import settings
14478	return self.data.hour .	return self . data . hour
8002	from django.forms.utils import ErrorList into default name space .	from django . forms . utils import ErrorList
7425	call the function self.coerce with an argument value , substitute it for value .	value = self . coerce ( value )
12259	call the method self.nodelist_false.render with an argument context , return the result .	return self . nodelist_false . render ( context )
5449	use the global variable _serializers .	global _serializers
8359	get STR0 attribute from the options object , if it exists substitute it for self.exclude , if not self.exclude is None .	self . exclude = getattr ( options , STR0 , None )
14565	if self.data is an instance of datetime.datetime and result of the function is_aware called with an argument self.data evaluates to true ,	if isinstance ( self . data , datetime . datetime ) and is_aware ( self . data ) :
4478	for every ip in tuple containing 3 elements : self._ipython , self._ipython_pre_100 and self._ipython_pre_011 ,	for ip in ( self . _ipython , self . _ipython_pre_100 , self . _ipython_pre_011 ) :
14623	if match is true ,	if match :
10596	define the method __init__ with 3 arguments : self , msg and params set to an empty tuple .	def __init__ ( self , msg , params = ( ) ) :
6020	derive the class WSGIServer from simple_server.WSGIServer and object base classes .	class WSGIServer ( simple_server . WSGIServer , object ) :
2667	call the function color_style , substitute the result for self.style .	self . style = color_style ( )
11952	if vale is None or an empty string ,	if value in ( None , ) :
8085	if self.initial is true and STR0 key is not contained in kwargs ,	if self . initial and STR0 not in kwargs :
16913	get the next element of the iterable pattern_iter , assign the result for ch and escaped , respectively .	ch , escaped = next ( pattern_iter )
4360	import module sys .	import sys
18425	if request has an attribute STR0 ,	if hasattr ( request , STR0 ) :
10068	substitute val for self._encoding .	self . _encoding = val
8626	for every form in self.initial_forms ,	for form in self . initial_forms :
9995	self.resolver_match is None .	self . resolver_match = None
15783	if self._delegate_bytes and six.PY2 are both true ,	if self . _delegate_bytes and six . PY2 :
9969	from django.core.exceptions import DisallowedHost and ImproperlyConfigured into default name space .	from django . core . exceptions import DisallowedHost , ImproperlyConfigured
6769	call the function validate_ipv6_address with an argument value .	validate_ipv6_address ( value )
3286	STR0 STR1Type STR2 to continue , or STR3 to cancel : `` , where STR4 is replaced with value under the STR5 key of the connection.settings_dict dictionary . if not ,	else :
4054	if init_path is not a file ,	if not os . path . isfile ( init_path ) :
4995	and include_auto_created set to boolean True , call the method connection.creation.sql_destroy_indexes_for_model with arguments model and style , extend the output with the result .	output . extend ( connection . creation . sql_destroy_indexes_for_model ( model , style ) )
11536	substitute token.source for node.source .	node . source = token . source
12882	if not ,	else :
2116	if use_tls is None substitute settings.EMAIL_USE_TLS for self.username , if not substitute use_tls for self.use_tls .	self . use_tls = settings . EMAIL_USE_TLS if use_tls is None else use_tls
3813	call the method settings.configure with an argument USE_I18N set to boolean True .	settings . configure ( USE_I18N = True )
17214	with different 3 string arguments , the others are results of the call to the function MovedModule called with 3 string arguments . for every attr in _moved_attributes ,	for attr in _moved_attributes :
130	raise an exception of class NotImplementedError with string STR0 as argument .	raise NotImplementedError ( STR0 )
