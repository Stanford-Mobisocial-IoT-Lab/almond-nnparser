64	if key if contained in value under the DEFAULT_CACHE_ALIAS key of caches dictionary , return boolean True , otherwise return False .	return key in caches [ DEFAULT_CACHE_ALIAS ]
12800	loaders is an empty list .	loaders = [ ]
9994	self.method is None .	self . method = None
14917	compile a regex from raw string STR0 , substitute it for CONVERT_PATTERN .	CONVERT_PATTERN = re . compile ( STR0 )
4246	if self.verbosity is greater or equal to 3 ,	if self . verbosity >= 3 :
18533	call the method one_percent_re.sub with 2 arguments : string STR0 and t.contents , substitute the result for contents .	contents = one_percent_re . sub ( STR0 , t . contents )
9182	derive the class PasswordInput from the TextInput base class .	class PasswordInput ( TextInput ) :
573	derive the class CacheClass from the base class LocMemCache .	class CacheClass ( LocMemCache ) :
10006	convert the value under the STR0 key of the self.META dictionary to a string , substitute result for server_port .	server_port = str ( self . META [ STR0 ] )
1385	close fd file .	os . close ( fd )
4253	if refto is contained in seen_models ,	if refto in seen_models :
14815	return wrapped .	return wrapped
17437	call the function write with an argument arg .	write ( arg )
3429	append string STR0 to field_notes .	field_notes . append ( STR0 )
12825	if context_instance is false ,	if not context_instance :
17383	substitute if _locs_ is None for _locs_ .	_locs_ = frame . f_locals
15569	return nothing .	return
2956	locale_dirs is a list of elements from the list of path names that maths the basedir path with STR0 wild card characters for which call to the os.path.isdir returned true , assign it to locale_dirs .	locale_dirs = filter ( os . path . isdir , glob . glob ( STR0 % basedir ) )
18307	if _active has an attribute STR0 ,	if hasattr ( _active , STR0 ) :
12114	call the function format_html with an argument empty string , return the result .	return format_html ( "" )
5884	otherwise , if field.rel is true and field.rel is an instance of models.ManyToOneRel ,	elif field . rel and isinstance ( field . rel , models . ManyToOneRel ) :
6016	call the import_string with app_path as an argument , return the result .	return import_string ( app_path )
4522	compile the handle.read in mode STR0 source is read from file pythonrc , execute the compiled script with imported_objects variables .	exec ( compile ( handle . read ( ) , pythonrc , STR0 ) , imported_objects )
4971	if only_django ,	if only_django :
92	evaluate the function import_string with key_func as argument , return the result .	return import_string ( key_func )
9471	substitute CheckboxFieldRenderer for renderer .	renderer = CheckboxFieldRenderer
6586	ns_pattern is an empty string .	ns_pattern = ''
15967	call the function normalize_newlines with an argument value , substitute the result for value .	value = normalize_newlines ( value )
17953	substitute offset.seconds for offset .	offset = offset . seconds // 60
6525	call the method self.reverse_dict.getlist with an argument lookup_view , substitute the result for possibilities .	possibilities = self . reverse_dict . getlist ( lookup_view )
12724	if as_ is not equal to string STR0 ,	if as_ != STR0 :
8855	define the method prepare_value with 2 arguments : self and value .	def prepare_value ( self , value ) :
2975	po_path is a string containing joined directory path from dirpath and f .	po_path = os . path . join ( dirpath , f )
16230	define the function http_date with an argument epoch_seconds set to None .	def http_date ( epoch_seconds = None ) :
17419	if want_unicode is false ,	if not want_unicode :
10543	__all__ is a tuple containing 4 strings : STR0 , STR1 , STR2 and STR3 .	__all__ = ( STR0 , STR1 , STR2 , STR3 )
2735	replace STR0 in string STR1 with e.__class__.__name__ and e , respectively , write it to the stderr stream .	stderr . write ( STR0 % ( e . __class__ . __name__ , e ) )
11386	define the method _reset_dicts with 2 arguments : self and value set to None .	def _reset_dicts ( self , value = None ) :
17021	increment i-th element of result by piece .	result [ i ] += piece
13095	try ,	try :
17851	from django.utils.html import avoid_wrapping into default name space .	from django . utils . html import avoid_wrapping
6186	if is_compressed is true ,	if is_compressed :
8125	property decorator ,	@ property
13549	import module sys .	import sys
6385	if default_kwargs exists , substitute it for self.default_kwargs , otherwise self.default_kwargs is an empty dictionary .	self . default_kwargs = default_kwargs or { }
16041	define the function trim_url with 2 arguments : x and limit set to trim_url_limit .	def trim_url ( x , limit = trim_url_limit ) :
10123	if not ,	else :
4168	substitute the value under the STR0 key of options dictionary for app_label .	app_label = options [ STR0 ]
2175	call the function sanitize_address with arguments addr and email_message.encoding , for every addr in return value of the function email_message.recipients , store the results in a recipients list .	recipients = [ sanitize_address ( addr , email_message . encoding ) for addr in email_message . recipients ( ) ]
11126	return kwargs .	return kwargs
13411	make a directory named original_path .	os . makedirs ( original_path )
5214	if not ,	else :
673	import memcache .	import memcache
12938	call the method self.template.resolve with an argument context , substitute the result for template .	template = self . template . resolve ( context )
13311	substitute mapped_tokens for self.tokens .	self . tokens = mapped_tokens
2621	from django.utils.deprecation import RemovedInDjango19Warning and RemovedInDjango20Warning into default name space .	from django . utils . deprecation import RemovedInDjango19Warning , RemovedInDjango20Warning
6546	candidate_subs is dictionary created from elements in return value of the function urlquote called with argument v , mapped with a function k , for every k and v in return value of the method candidate_subs.items .	candidate_subs = dict ( ( k , urlquote ( v ) ) for ( k , v ) in candidate_subs . items ( ) )
17206	if old_attr is None ,	if old_attr is None :
16398	join first 5 elements of hextets into a string , separated by STR0 , substitute the result for result .	result = STR0 . join ( hextets [ 0 : 6 ] )
18452	call the function re.compile with an argument string STR0 [ ^ STR1 ) | ( ? : STR4 ] * ? ' ) ) ( \s+.*context\s+ ( ( ? : STR2 ] * ? STR3 , substitute the result for inline_re .	inline_re = re . compile ( STR STR0[^ STR1)|(?: STR4]*?'))(\s+.*context\s+((?: STR2]*? STR3"" )
11007	call the function ugettext_lazy with an argument value , return the result .	return ugettext_lazy ( value )
17070	remove kwargs dictionary element under the STR0 key , substitute it for method .	method = kwargs . pop ( STR0 )
12286	for every _ and nodelist in self.conditions_nodelists ,	for _ , nodelist in self . conditions_nodelists :
11375	define the method __init__ with 4 arguments : self , context , unpacked list args and unpacked dictionary kwargs .	def __init__ ( self , context , * args , ** kwargs ) :
11647	try ,	try :
779	define private method __str__ with argument self .	def __str__ ( self ) :
14821	substitute base.__name__ for class_name .	class_name = base . __name__
7305	derive the class ImageField from the base class FileField class .	class ImageField ( FileField ) :
16153	find the last index of newline occurrence in self.__starttag_text , subtract it from total length of self.__starttag_text , substitute the result for offset .	offset = ( len ( self . __starttag_text ) - self . __starttag_text . rfind ( STR0 ) )
18395	if lang_code is true ,	if lang_code :
15471	call the method handler.addQuickElement with 3 arguments : string STR0 , value under the STR1 key of the item dictionary , and guid_attrs .	handler . addQuickElement ( STR0 , item [ STR1 ] , guid_attrs )
426	define the method _cull with argument self .	def _cull ( self ) :
18690	import module warnings .	import warnings
8602	create a tuple out of elements under the key field of the form.cleaned_data dictionary , add elements of date_data to it , substitute it for data .	data = ( form . cleaned_data [ field ] , ) + date_data
8453	call the method self._get_validation_exclusions , substitute the result for exclude .	exclude = self . _get_validation_exclusions ( )
4548	output_transaction is boolean True .	output_transaction = True
13387	define the function npath with an argument path .	def npath ( path ) :
16420	call the function _explode_shorthand_ip_string with an argument ip_str , substitute the result for ip_str .	ip_str = _explode_shorthand_ip_string ( ip_str )
2185	import module mimetypes .	import mimetypes
4007	write string STR0 with STR1 where STR2 is replaced with app_label , write it for self.stderr .	self . stderr . write ( STR0 % app_label )
14417	return value .	return value
16424	return boolean False .	return False
8613	if not ,	else :
11658	reverse element order of dicts , join them in a string , substitute the result for number .	number = '' . join ( reversed ( digits ) )
18032	call the method timezone.normalize with an argument value , substitute the result for value .	value = timezone . normalize ( value )
12716	register.tag decorator ,	@ register . tag
18805	if contents is not None ,	if contents is not None :
1102	decorator python_2_unicode_compatible ,	@ python_2_unicode_compatible
3570	raise an exceptions	raise
4520	try ,	try :
10513	do nothing .	pass
1006	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
2345	call the make_msgid function , substitute it for value under the STR0 key of msg dictionary .	msg [ STR0 ] = make_msgid ( )
8075	return initial_forms .	return initial_forms
5548	return obj .	return obj
14065	if OSError , renamed to e , exception is caught ,	except OSError as e :
8135	if self.can_delete is true and call to the method self._should_delete_form with an argument form , evaluates to true ,	if self . can_delete and self . _should_delete_form ( form ) :
968	substitute message for self.message .	self . message = message
14847	if m is false ,	if not m :
3250	raise an CommandError with argument : string STR0 , where STR1 is replaced with : model._meta.app_label and model._meta.object_name joined into a string , with separator STR2 , result joined into a string , separated by string STR3 for every model and deps in sorted list of elements skipped sorted by key : return value of the lambda function with an argument obj , and result the __name__ field of the first element of obj .	raise CommandError ( STR0 % STR1 . join ( STR2 % ( model . _meta . app_label , model . _meta . object_name ) for model , deps in sorted ( skipped , key = lambda obj : obj [ 0 ] . __name__ ) ) )
15903	return an property object with getter function fget , setter function fset , destructor fdel and documentation string doc .	return property ( fget , fset , fdel , doc )
5590	define the function Deserializer with arguments stream_or_string and unpacked dictionary options .	def Deserializer ( stream_or_string , ** options ) :
16606	_CacheInfo is an instance of namedtuple class created with 2 arguments : string STR0 and a list with 4 elements : string STR4 , STR1 , STR2 and STR3 .	_CacheInfo = namedtuple ( STR0 , [ STR1 , STR2 , STR3 , STR4 ] )
10150	derive the class QueryDict from the base class MultiValueDict .	class QueryDict ( MultiValueDict ) :
13263	define the function prefix with 2 arguments bp and func .	def prefix ( bp , func ) :
10296	from django.utils.http import cookie_date into default name space .	from django . utils . http import cookie_date
6198	call the serializer function , call the loads method on the return value with an argument data , return the result .	return serializer ( ) . loads ( data )
403	call the function pickle.dumps with expiry and integer -1 as arguments , use the result as the argument for the call to f.write function .	f . write ( pickle . dumps ( expiry , - 1 ) )
18799	from xml.sax.saxutils import XMLGenerator into default name space .	from xml . sax . saxutils import XMLGenerator
16	call the function signals.request_finished.connect with argument cache.close .	signals . request_finished . connect ( cache . close )
16638	root is a list with elements : root , root , None and None .	root [ : ] = [ root , root , None , None ]
16532	otherwise if name equals a string STR0 .	elif name == STR0 :
17627	call the function re.compile with an argument raw string STR0 , substitute the result for re_newlines .	re_newlines = re . compile ( STR0 )
11098	return value .	return value
13627	trans_real._default is None .	trans_real . _default = None
11274	substitute last element of bits for target_var .	target_var = bits [ - 1 ]
4223	write to the standard output result of the call to the method self.style.MIGRATE_SUCCESS with string STR0 as a argument .	self . stdout . write ( self . style . MIGRATE_SUCCESS ( STR0 ) )
544	define the method _has_expired with self and key as arguments .	def _has_expired ( self , key ) :
1378	call the function os.fdopen with arguments fd and mode , substitute it for _file .	_file = os . fdopen ( fd , mode )
5603	define the class DjangoJSONEncoder from the json.JSONEncoder base class .	class DjangoJSONEncoder ( json . JSONEncoder ) :
8179	append form.errors to self._errors .	self . _errors . append ( form . errors )
1863	try ,	try :
9929	boundarystream is an instance of InterBoundaryIter class , created with self._stream and self._separator as arguments .	boundarystream = InterBoundaryIter ( self . _stream , self . _separator )
9719	break the loop execution .	break
396	call the function self._key_to_file with key and version as arguments , substitute it for fname .	fname = self . _key_to_file ( key , version )
2807	missing_args_message is an string STR0 .	missing_args_message = STR0
16881	get the next element of the iterable pattern_iter , assign the result for ch and escaped , respectively .	ch , escaped = next ( pattern_iter )
3183	call the method app_list.items , use the result as an argument for the call to the function sort_dependencies , for every model in result ,	for model in sort_dependencies ( app_list . items ( ) ) :
9319	if option_value is contained in selected_choices ,	if option_value in selected_choices :
11660	if InvalidOperation exception is caught ,	except InvalidOperation :
10372	substitute has_header for __contains__ .	__contains__ = has_header
12202	substitute i incremented by 1 for value under the STR0 key of the loop_dict dictionary .	loop_dict [ STR0 ] = i + 1
17655	call the function force_text with an argument truncate , substitute the result for truncate .	truncate = force_text ( truncate )
2761	call the method connection.ops.start_transaction_sql , if it evaluates to true ,	if connection . ops . start_transaction_sql ( ) :
7270	call the method __init__ from the base class of the FileField class , with 2 arguments : unpacked list args and unpacked dictionary .	super ( FileField , self ) . __init__ ( * args , ** kwargs )
15878	if self._wrapped is empty ,	if self . _wrapped is empty :
5184	call the method re.search with 2 arguments : raw string STR0 and name , if it evaluates to false ,	if not re . search ( STR0 , name ) :
11865	decorator function register.filter with 2 arguments string STR0 and is_safe set to boolean True .	@ register . filter ( STR0 , is_safe = True )
2878	assign the value of the dictionary color_settings under the key role to format , if key doesnt exist assign the empty dictionary .	format = color_settings . get ( role , { } )
14496	call the function _ with an argument string STR0 , return the result .	return _ ( STR0 )
1447	define method __init__ with self class instance , mode string STR0 , bufsize set to integer -1 , suffix and prefix set to empty strig , dir set to None as the arguments .	def __init__ ( self , mode = STR0 , bufsize = - 1 , suffix = STR1' , dir = None ) :
11783	call the function mark_for_escaping with an argument value , return the result .	return mark_for_escaping ( value )
16389	join elements of hextets into a string , separated with STR0 , substitute it for result .	result = STR0 . join ( hextets )
14285	define the method __copy__ with an argument self .	def __copy__ ( self ) :
3988	call the method parser.add_argument with 5 arguments : string STR1 , action as a string STR2 , dest as string STR3 , default set to boolean False , help as a string STR0 .	parser . add_argument ( STR1 , action = STR2 , dest = STR3 , default = False , help = STR0 )
17201	if not ,	else :
12339	output is an empty string .	output = ''
10556	from django.utils.encoding import force_str and force_text into default name space .	from django . utils . encoding import force_str , force_text
18344	call the function do_translate with 2 arguments : message and string STR0 , return the result .	return do_translate ( message , STR0 )
10113	data is an instance of BytesIO class , created with an argument : self._body .	data = BytesIO ( self . _body )
8638	append form to self.saved_forms .	self . saved_forms . append ( form )
7554	derive the class FilePathField from the base class ChoiceField class .	class FilePathField ( ChoiceField ) :
13673	call the function fn with list of arguments args and dictionary of argument values kwargs .	fn ( * args , ** kwargs )
16238	raise an ValueError exception with an argument string STR0 formated with date .	raise ValueError ( STR0 % date )
12576	substitute parser for self.template_parser .	self . template_parser = parser
12508	call the method parser.compile_filter with an argument string STR0 , where STR1 is replaced with rest , substitute the result for filter_expr .	filter_expr = parser . compile_filter ( STR0 % ( rest ) )
14188	define the method __copy__ with an argument self .	def __copy__ ( self ) :
10592	derive the class TemplateEncodingError form the base class Exception .	class TemplateEncodingError ( Exception ) :
18231	convert fist p elements of language to lowercase , append STR0 to it , covert to lowercase language elements from ( p+1 ) -th index to the end , append it to the previous result , return it .	return language [ : p ] . lower ( ) + STR0 + language [ p + 1 : ] . lower ( )
10892	call the method match.group with 2 arguments : strings STR0 and STR1 , substitute the result for var and constant , respectively .	var , constant = match . group ( STR0 , STR1 )
13800	call the BaseConverter function with BASE36_ALPHABET as argument , store the result in base36 .	base36 = BaseConverter ( BASE36_ALPHABET )
10992	try ,	try :
11173	if unhandled_params is true ,	if unhandled_params :
14707	append site to sites .	sites . append ( site )
7660	if with_base_fields is true ,	if with_base_fields :
6017	if ImportError , rename it to e , exception is caught ,	except ImportError as e :
7100	return attrs .	return attrs
15721	classmethod decorator ,	@ classmethod
412	define the method _delete with self and fname as arguments .	def _delete ( self , fname ) :
68	if value under the DEFAULT_CACHE_ALIAS key of caches dictionary is not equal to other , return boolean True , otherwise return False .	return caches [ DEFAULT_CACHE_ALIAS ] != other
18098	call the function lazy_number with 5 arguments : ungettext , six.text_type , singular set to singular , plural set to plural , and number set to number , return the result .	return lazy_number ( ungettext , six . text_type , singular = singular , plural = plural , number = number )
51	substitute cache for value under the alias key of self._caches.caches dictionary .	self . _caches . caches [ alias ] = cache
11414	delete value under the key key of dictionary at last element of self.dicts .	del self . dicts [ - 1 ] [ key ]
5148	write content to new_file file .	new_file . write ( content )
11948	if IndexError exception is caught ,	except IndexError :
6834	import module re .	import re
4501	call the method self.run_shell with an argument shell set to value under the STR0 key of the options dictionary .	self . run_shell ( shell = options [ STR0 ] )
5114	docs_version is a string STR0 .	docs_version = STR0
12630	call the function get_library with an argument taglib , substitute the result for lib .	lib = get_library ( taglib )
11941	convert value to an integer .	value = int ( value )
15624	define the function date_format with 3 arguments : value , format set to None and use_l10n set to None .	def date_format ( value , format = None , use_l10n = None ) :
17551	color_names is a tuple with 8 elements : strings STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 and STR7 .	color_names = ( STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 , STR7 )
14193	call the method __setitem__ from the base class of the class SortedDict , with 2 arguments key and value .	super ( SortedDict , self ) . __setitem__ ( key , value )
4037	define the method write_migration_files with arguments self and changes .	def write_migration_files ( self , changes ) :
17139	instantiate class X , get its length .	len ( X ( ) )
8090	if i is greater than , or equal to the result of the call to the method self.initial_form_count ,	if i >= self . initial_form_count ( ) and i >= self . min_num :
16406	from django.core.validators import validate_ipv4_address .	from django . core . validators import validate_ipv4_address
