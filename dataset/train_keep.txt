10362	convert header to lowercase , use it as the key to get the value from the self._headers dictionary , return the second element of the result .	return self . _headers [ header . lower ( ) ] [ 1 ]
7955	call the method format_html with 3 arguments : string STR0 , contents and label_suffix , substitute the result for contents .	contents = format_html ( STR0 , contents , label_suffix )
9452	define the method subwidgets with 5 arguments : self , name , value , attrs set to None and choices set to an empty tuple .	def subwidgets ( self , name , value , attrs = None , choices = ( ) ) :
3245	append model to model_list .	model_list . append ( model )
12455	raise an TemplateSyntaxError exception with an argument string STR0 .	raise TemplateSyntaxError ( STR0 )
5533	return a string STR0 , where STR1 are replaced with self.object._meta.app_label , self.object._meta.object_name and self.object.pk , respectively .	return STR0 % ( self . object . _meta . app_label , self . object . _meta . object_name , self . object . pk )
15947	define the function escape with an argument text .	def escape ( text ) :
6721	if message is not None	if message is not None :
8117	self._deleted_form_indexes is an empty list .	self . _deleted_form_indexes = [ ]
8760	if can_fail is true ,	if can_fail :
9735	if retval is true ,	if retval :
12176	yield node .	yield node
6685	if schemes is not None ,	if schemes is not None :
7125	default_error_messages is a dictionary with 4 initial entries : return value of the function _ called with string as an argument , STR0 for STR1 , return value of the function ungettext_lazy called with 3 string arguments : STR2 , STR3 , and STR4 for STR5 , return value of the function ungettext_lazy called with 3 string arguments : STR6 , STR7 and STR8 , for STR9 and return value of the function ungettext_lazy called with 3 string arguments : STR10 , STR11 and STR12 for STR13 .	default_error_messages = { STR0 : _ ( STR1 ) , STR2 : ungettext_lazy ( STR3 , STR4 , STR5 ) , STR6 : ungettext_lazy ( STR7 , STR8 , STR9 ) , STR10 : ungettext_lazy ( STR11 , STR12 , STR13 ) , }
15554	from django.utils import dateformat , numberformat and datetime_safe into default name space .	from django . utils import dateformat , numberformat , datetime_safe
7726	define the method _html_output with 6 arguments : self , normal_row , error_row , row_ender , help_text_html and errors_on_separate_row .	def _html_output ( self , normal_row , error_row , row_ender , help_text_html , errors_on_separate_row ) :
17802	replace every occurrence of STR0 in s with STR1 .	s = s . replace ( STR0 , STR1 )
7006	define the method to_python with arguments self and value .	def to_python ( self , value ) :
767	derive class CheckMessage from object base class .	class CheckMessage ( object ) :
14716	define the method __new__ with 3 arguments : cls , unpacked list args and unpacked dictionary kwargs .	def __new__ ( cls , * args , ** kwargs ) :
4677	call the function check_for_migrations with 2 arguments : app_config and connection .	check_for_migrations ( app_config , connection )
15999	if HTMLParseError or UnboundLocalError exceptions are caught ,	except ( HTMLParseError , UnboundLocalError ) :
18311	define the function get_language .	def get_language ( ) :
10395	if domain is not None ,	if domain is not None :
10935	if not ,	else :
11045	get the STR0 attribute of e object , if it exists and is true ,	if getattr ( e , STR0 , False ) :
16515	call the method __init__ with 2 arguments : self.states and string STR0 from the base class of the class JsLexer .	super ( JsLexer , self ) . __init__ ( self . states , STR0 )
10952	otherwise if obj is an instance of EscapeData ,	elif isinstance ( obj , EscapeData ) :
112	if ValueError or TypeError exceptions occurred ,	except ( ValueError , TypeError ) :
807	call the __init__ method with 3 arguments : WARNING , unpacked list args and unpacked dictionary kwargs from the base class of Warning .	return super ( Warning , self ) . __init__ ( WARNING , * args , ** kwargs )
12894	substitute self.context.render_context for render_context .	render_context = self . context . render_context
3092	from django.utils.deprecation import RemovedInDjango19Warning into default name space .	from django . utils . deprecation import RemovedInDjango19Warning
15482	handler is an instance of SimplerXMLGenerator class , created with 2 arguments : outfile and encoding .	handler = SimplerXMLGenerator ( outfile , encoding )
2373	if self.attachments is true ,	if self . attachments :
12753	define the method load_template with 3 arguments : self , template_name and template_dirs set to None .	def load_template ( self , template_name , template_dirs = None ) :
84	MEMCACHE_MAX_KEY_LENGTH is integer 250 .	MEMCACHE_MAX_KEY_LENGTH = 250
5547	do nothing .	pass
4775	missing_args_message is a string STR0 .	missing_args_message = STR0
14424	from django.utils.translation import ugettext as _ into default name space .	from django . utils . translation import ugettext as _
13756	BASE16_ALPHABET is a string STR0 .	BASE16_ALPHABET = STR0
7041	if self has an attribute STR0 ,	if hasattr ( self , STR0 ) :
11820	if TypeError or VariableDoesNotExist exceptions are caught ,	except ( TypeError , VariableDoesNotExist ) :
5895	call the method node.getElementsByTagName with an argument string STR0 , if it evaluates to true ,	if node . getElementsByTagName ( STR0 ) :
8753	otherwise if length of fks_to_parent is zero ,	elif len ( fks_to_parent ) == 0 :
18282	reverse settings.LOCALE_PATHS element order , for every localedir in the result ,	for localedir in reversed ( settings . LOCALE_PATHS ) :
15316	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
6968	from django.utils.six.moves.urllib.parse import urlsplit and urlunsplit into default name space .	from django . utils . six . moves . urllib . parse import urlsplit , urlunsplit
16366	return ipv4_unpacked .	return ipv4_unpacked
17999	if self.old_timezone is None ,	if self . old_timezone is None :
9468	substitute RadioFieldRenderer for renderer .	renderer = RadioFieldRenderer
14082	if err_log is true ,	if err_log :
14781	call the method middleware.process_exception with 2 arguments : request and e , substitute the result for result .	result = middleware . process_exception ( request , e )
12382	url is an empty string .	url = STR
18807	call the method self.endElement with an argument name .	self . endElement ( name )
11524	remove first element from self.command_stack .	self . command_stack . pop ( )
8944	convert items of attrs dictionary to list of tuples , for every attr and value in it ,	for attr , value in list ( attrs . items ( ) ) :
8465	if self._validate_unique is true ,	if self . _validate_unique :
12952	call the method token.contents.split , substitute the result for bits .	bits = token . contents . split ( )
2998	help is an string STR0 .	help = STR0
16019	call the function allow_lazy with 2 arguments : remove_tags , six.text_type , substitute the result for remove_tags .	remove_tags = allow_lazy ( remove_tags , six . text_type )
13977	substitute settings.SECRET_KEY for secret .	secret = settings . SECRET_KEY
12945	call the method template.render with an argument context , return the result .	return template . render ( context )
7553	return boolean False .	return False
1970	if connection exists dont change it , if not call the get_connection function with username set to auth_user , password set to auth_password , fail_silently set to fail_silently as arguments , assign the result to connection .	connection = connection or get_connection ( username = auth_user , password = auth_password , fail_silently = fail_silently )
8655	if pk.editable is true , or pk.auto_created is true or pk is an instance of AutoField class , or if pk.rel is true ,	return ( ( not pk . editable ) or ( pk . auto_created or isinstance ( pk , AutoField ) ) or ( pk . rel and pk . rel . parent_link and pk_is_not_editable ( pk . rel . to . _meta . pk ) ) )
972	property getter decorator ,	@ property
2223	define the function forbid_multi_line_headers with arguments : name , val and encoding .	def forbid_multi_line_headers ( name , val , encoding ) :
6976	default_error_messages is an dictionary containing entry : return value of the function _ called with an string STR0 for STR1 .	default_error_messages = { STR0 : _ ( STR1 ) , }
9717	increment i-th element of counters by chunk_length .	counters [ i ] += chunk_length
9638	for every x in upload_handlers if x.chunk_size is true , append x.chunk_size to a list , substitute the result for possible_sizes .	possible_sizes = [ x . chunk_size for x in upload_handlers if x . chunk_size ]
2778	visible_issue_count is an integer 0 .	visible_issue_count = 0
2178	call the method self.connection.sendmail with arguments : from_email , recipients and return value of the function message.as_bytes .	self . connection . sendmail ( from_email , recipients , message . as_bytes ( ) )
2623	derive the class CommandError from the base class Exception .	class CommandError ( Exception ) :
4389	get the value under the STR0 key of the options dictionary , if it is false ,	if not options . get ( STR0 ) :
6779	raise a ValueError exception with an argument STR0 , replace STR1 with protocol , and ip_address_validator_map converted to a list , respectively .	raise ValueError ( STR0 % ( protocol , list ( ip_address_validator_map ) ) )
6595	if KeyError exception is caught ,	except KeyError :
6694	if ValidationError , renamed to e , is caught ,	except ValidationError as e :
8532	call the method self._get_to_python with an argument pk_field , substitute the result for to_python .	to_python = self . _get_to_python ( pk_field )
9449	if renderer is true ,	if renderer :
4901	import module re .	import re
17199	if old_attr is None ,	if old_attr is None :
8749	if length of fks_to_parent equals integer 1 .	if len ( fks_to_parent ) == 1 :
762	INFO is integer 20 .	INFO = 20
2638	define the function handle_default_options with an argument options .	def handle_default_options ( options ) :
16527	tok is a string STR200 ,	tok = STR200
7203	default_error_messages is an dictionary with an entry : return value of the function _ called with an argument string STR0 for STR1 .	default_error_messages = { STR0 : _ ( STR1 ) }
5737	from django.core.serializers.python import Serializer as PythonSerializer into default name space .	from django . core . serializers . python import Serializer as PythonSerializer
8135	if self.can_delete is true and call to the method self._should_delete_form with an argument form , evaluates to true ,	if self . can_delete and self . _should_delete_form ( form ) :
6661	if code is not None ,	if code is not None :
15402	substitute item_date for latest_date .	latest_date = item_date
3507	get the value under the STR0 key of the options dictionary , substitute it for self.database .	self . using = options . get ( STR0 )
12458	return an instance of AutoEscapeControlNode with 2 arguments : boolean exception arg equals to string STR0 , and nodelist .	return AutoEscapeControlNode ( ( arg == STR0 ) , nodelist )
9149	unpack dictionary kwargs , map it through self.attrs and convert to dictionary , substitute the result for attrs .	attrs = dict ( self . attrs , ** kwargs )
14376	define the method __new__ with 3 arguments : cls , unpacked list args and unpacked dictionary kwargs .	def __new__ ( cls , * args , ** kwargs ) :
4093	call the method questioner.ask_merge with an argument app_label , if it evaluates to true ,	if questioner . ask_merge ( app_label ) :
16729	define the function import_by_path with 2 arguments dotted_path and error_prefix set to an empty string..	def import_by_path ( dotted_path , error_prefix = STR ) :
3295	Possible reasons : \n ''	new_msg = ( STR0 STR1 STR2 STR3 STR4 STR5 ) % ( connection . settings_dict [ STR6 ] , e )
10349	convert STR0 to a string , if it is contained in value or STR1 converted to an string is contained in value ,	if str ( STR0 ) in value or str ( STR1 ) in value :
12149	call the function self.filter_expr.resolve with an argument context , return the result .	return self . filter_expr . resolve ( context )
17195	if new_mod is None ,	if new_mod is None :
8407	self._validate_unique is boolean False .	self . _validate_unique = False
15689	call the function warnings.warn with 3 arguments : string STR0 , RemovedInDjango19Warning and stacklevel set to integer 2 .	warnings . warn ( STR0 STR1 , RemovedInDjango19Warning , stacklevel = 2 )
6995	substitute Field.creation_counter for self.creation_counter .	self . creation_counter = Field . creation_counter
7421	define the method _coerce with arguments self and value .	def _coerce ( self , value ) :
16315	if url starts with STR0 ,	if url . startswith ( STR0 ) :
10772	define the method enter_command with 3 arguments : self , command and token .	def enter_command ( self , command , token ) :
5199	replace STR0 in string STR1 with self.app_or_project .	prefix = STR0 % self . app_or_project
725	do nothing .	pass
8	from django.utils.module_loading import import_string into default name space .	from django . utils . module_loading import import_string
12964	acceptable_endblocks is a tuple with 2 elements : string STR0 and STR1 , where STR2 replaced with block_name .	acceptable_endblocks = ( STR0 , STR1 % block_name )
5180	raise an CommandError exception with an argument string STR0 , replace STR1 with self.app_or_project and template .	raise CommandError ( STR0 % ( self . app_or_project , template ) )
1330	raise an NotImplementedError exception with argument string STR0 .	raise NotImplementedError ( STR0 )
7627	strip whitespaces from both sides of the value , substitute it for value .	value = value . strip ( )
3321	define the method handle with 2 arguments : self and unpacked dictionary options .	def handle ( self , ** options ) :
331	return boolean True .	return True
9264	call the function format_html with 3 arguments : string ( STR0 , return value of the function flatatt , called with an argument final_attrs and return value of the function force_text called with an argument value , return the result .	return format_html ( STR0 , flatatt ( final_attrs ) , force_text ( value ) )
5331	sum bottom and self.per_page , substitute the result for top .	top = bottom + self . per_page
2481	raise an CommandError exception with an argument string STR0 , with STR1 replaced by name .	raise CommandError ( STR0 % name )
1308	call the os.path.splitext with argument file_name , assign the result to the file_root and file_ext respectively .	file_root , file_ext = os . path . splitext ( file_name )
14546	return the value under the self.data.month key of the MONTHS_AP dictionary .	return MONTHS_AP [ self . data . month ]
3971	return msgs .	return msgs
18424	return lang_code .	return lang_code
17339	call the method e.encode with an argument string STR0 .	return s . encode ( STR0 )
12245	if self is not contained in state_frame ,	if self not in state_frame :
7888	substitute field for self.field .	self . field = field
7800	if code is None ,	if code is None :
16708	from __future__ import absolute_import into default name space .	from __future__ import absolute_import
5632	from django.utils import six into default name space .	from django . utils import six
1921	if UnicodeDecodeError exception is caught ,	except UnicodeDecodeError :
18755	if ImportError exception is caught ,	except ImportError :
11304	call the function context.get with 2 argument STR0 and None , substitute the result for csrf_token .	csrf_token = context . get ( STR0 , None )
2771	app_configs is not None .	app_configs = None
5460	from django.utils.deprecation import RemovedInDjango19Warning into default name space .	from django . utils . deprecation import RemovedInDjango19Warning
5310	substitute object_list for self.object_list .	self . object_list = object_list
6753	return boolean False .	return False
293	call the self.validate_key method with argument key .	self . validate_key ( key )
3801	raise an CommandError exception with an argument string STR0 .	raise CommandError ( STR0 STR1 )
14625	if value under the STR0 key of the kw dictionary is true ,	if kw [ STR0 ] :
18183	append STR0 to string created from first p elements of languages converted to lowercase , convert slice of language string from ( p+1 ) -th index to the end to uppercase , append it to the previous result , return the resulting string .	return language [ : p ] . lower ( ) + STR0 + language [ p + 1 : ] . upper ( )
6261	append x to self.namespaces list for every x in namespaces , only if x is true .	self . namespaces = [ x for x in namespaces if x ]
16813	if not ,	else :
11525	define the method error with 3 arguments : self , token and msg .	def error ( self , token , msg ) :
7012	if value is contained in self.empty_values ,	if value in self . empty_values :
287	call the method router.db_for_write with argument self.cache_model_class , substitute the result for db .	db = router . db_for_write ( self . cache_model_class )
16452	split ip_str into parts by STR0 , substitute the result for new_ip .	new_ip = ip_str . split ( STR0 )
16243	increment year by integer 2000 .	year += 2000
7022	if errors is true ,	if errors :
5907	call the function getInnerText with an argument node , call the strip method on the result , substitute the result for field_value .	field_value = getInnerText ( node ) . strip ( )
3652	define the function humanize with an argument dirname .	def humanize ( dirname ) :
8543	define the method get_queryset with an argument self .	def get_queryset ( self ) :
10132	call the method self._stream.read with 2 arguments : unpacked list args and unpacked dictionary kwargs .	return self . _stream . read ( * args , ** kwargs )
1696	define the method get_response , with self class instance and request as the arguments .	def get_response ( self , request ) :
11552	if Exception , renamed to e , exception is caught ,	except Exception as e :
13953	for every c in candidate without the last element and in reversed order , convert c into an integer , use the result as an key to get the value from the LUHN_ODD_LOOKUP dictionary , sum all the results and substitute the result for odds .	odds = sum ( LUHN_ODD_LOOKUP [ int ( c ) ] for c in candidate [ - 2 : : - 2 ] )
22	if KeyError exception is caught ,	except KeyError :
4221	otherwise if action equals to string STR0 .	elif action == STR0 :
17062	define the method __add__ with 2 arguments self and rhs .	def __add__ ( self , rhs ) :
18738	if UnicodeDecodeError exception is caught ,	except UnicodeDecodeError :
4591	from django.core.management.base import AppCommand into default name space .	from django . core . management . base import AppCommand
14234	append value under k key of self dictionary to a list , for every k in self.keyOrder , return the result .	return [ self [ k ] for k in self . keyOrder ]
3186	if model._meta.proxy is false and return value of the function router.allow_migrate called with arguments using and model is true ,	if not model . _meta . proxy and router . allow_migrate ( using , model ) :
2927	with open file path in append mode ,	with open ( path , STR0 ) :
8250	__all__ is a tuple containing strings : STR0 , STR1 , STR2 , STR3 , STR4 ,	__all__ = ( STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 , STR7 , STR8 , STR9 , STR10 , STR11 , )
12280	derive the class IfNode from Node base class .	class IfNode ( Node ) :
2865	return boolean False .	return False
13758	BASE36_ALPHABET is a string STR0 .	BASE36_ALPHABET = STR0
17204	if not ,	else :
2146	try ,	try :
7736	call the function six.text_type with an argument bf , append the result to hidden_fields .	hidden_fields . append ( six . text_type ( bf ) )
7880	for field in self if field.is_hidden is true , append field to a list , return the resulting list .	return [ field for field in self if field . is_hidden ]
10345	instantiate class Header with 3 arguments : value , string STR0 , maxlinelen set to sys.maxsize , call the encode method on it , convert the result into a string and substitute it for value .	value = str ( Header ( value , STR0 , maxlinelen = sys . maxsize ) . encode ( ) )
11102	define the method __repr__ with an argument self .	def __repr__ ( self ) :
5555	from django.core.serializers.base import DeserializationError into default name space .	from django . core . serializers . base import DeserializationError
13814	compile regular expression based on the string STR0 and assign the result to cc_delim_re .	cc_delim_re = re . compile ( STR0 )
378	define the method add with 5 arguments , self class instance , key , value , timeout set to DEFAULT_TIMEOUT and version set to None .	def add ( self , key , value , timeout = DEFAULT_TIMEOUT , version = None ) :
9948	while first element of s is equal to bytes string STR0 ,	while s [ : 1 ] == STR0 :
13594	if _cached_filenames is empty and settings.USE_I18N is True ,	if not _cached_filenames and settings . USE_I18N :
15734	if cls._delegate_bytes and cls._delegate_text are both false , raise an error , with an argument string STR0 .	assert not ( cls . _delegate_bytes and cls . _delegate_text ) , STR0
5623	if not ,	else :
2901	define method handle with arguments self , unapcked list app_labels and unpacked dictionary options .	def handle ( self , * app_labels , ** options ) :
3641	if not ,	else :
2343	call the formatdate function , substitute it for value under the STR0 key of msg dictionary .	msg [ STR0 ] = formatdate ( )
14553	return string STR0 .	return STR0
8549	if qs.ordered is false ,	if not qs . ordered :
2554	append tuple containing two entries : app_config.label and integer 0 to options , for every app_config in app_configs .	options += [ ( app_config . label , 0 ) for app_config in app_configs ]
7399	return an empty string .	return STR
14081	call the method sys.stderr.close .	sys . stderr . close ( )
11982	call the function timesince with 2 arguments : value and arg , return the result .	return timesince ( value , arg )
18172	check_for_language is lambda function that returns boolean True for every argument x .	check_for_language = lambda x : True
17189	return attrs .	return attrs
9045	self._js is an empty list .	self . _js = [ ]
7743	if bf.label is true ,	if bf . label :
1281	from django.conf import settings into default name space .	from django . conf import settings
7661	for every base in reversed order of bases ,	for base in bases [ : : - 1 ] :
7031	define the method widget_attrs with arguments self and widget .	def widget_attrs ( self , widget ) :
12677	return an instance of a SpacelessNode class , created with an argument nodelist .	return SpacelessNode ( nodelist )
8447	for every message in messages ,	for message in messages :
11683	decorator stringfilter ,	@ stringfilter
14350	call the method self.iteritems , return list of results .	return list ( self . iteritems ( ) )
6978	creation_counter is an integer 0 .	creation_counter = 0
14808	substitute old_method_name for self.old_method_name .	self . old_method_name = old_method_name
5372	return self.object_list element at index .	return self . object_list [ index ]
18699	substitute self.__offset.seconds for offset .	offset = self . __offset . seconds // 60
1088	yield one element from the buffer_ iterable .	yield buffer_
12724	if as_ is not equal to string STR0 ,	if as_ != STR0 :
6683	define the method __init__ with 3 arguments : self , schemes set to None and unpacked dictionary kwargs .	def __init__ ( self , schemes = None , ** kwargs ) :
12282	substitute conditions_nodelists for self.conditions_nodelists .	self . conditions_nodelists = conditions_nodelists
18038	from django.utils import six into default name space .	from django . utils import six
8010	__all__ is a tuple containing strings STR0 , STR1 and STR2 .	__all__ = ( STR0 , STR1 , STR2 )
381	call the method self.set with key , value , timeout and version as arguments .	self . set ( key , value , timeout , version )
2570	call the function sys.exit with an integer 1 as an argument .	sys . exit ( 1 )
8418	exclude is an empty list .	exclude = [ ]
13668	if filename ends with string STR0 return I18N_MODIFIED , otherwise return FILE_MODIFIED .	return I18N_MODIFIED if filename . endswith ( STR0 ) else FILE_MODIFIED
7860	try ,	try :
10083	raise an AttributeError exception with an argument string STR0 .	raise AttributeError ( STR0 )
16435	return boolean True .	return True
10160	call the method query_string.decode , substitute the result for query_string .	query_string = query_string . decode ( )
5875	for every field_node in return value of the method node.getElementsByTagName with an argument string STR0 .	for field_node in node . getElementsByTagName ( STR0 ) :
13083	return result	return result
13566	termios is None .	termios = None
7970	if not ,	else :
7691	define the method __init__ with 4 arguments : self , data set to None , files set to None , auto_id is an string STR0 , prefix is None , initial set to None , error_class set to ErrorList , label_suffix set to None , empty_permitted set to boolean False .	def __init__ ( self , data = None , files = None , auto_id = STR0 , prefix = None , initial = None , error_class = ErrorList , label_suffix = None , empty_permitted = False ) :
3066	define the function module_to_dict with 2 arguments : module and omittable as a lambda function with an argument k ,	def module_to_dict ( module , omittable = lambda k : k . startswith ( STR0 ) ) :
13946	from django.utils import six into default name space .	from django . utils import six
6497	if TypeError exception is caught ,	except TypeError :
13284	substitute value for self.value .	self . value = value
16595	define the method filter with 2 arguments : self and record .	def filter ( self , record ) :
12526	raise an TemplateSyntaxError exception with an argument string STR0 , where STR1 is replaced with token.contents .	raise TemplateSyntaxError ( STR0 STR1 % token . contents )
14286	call the method self.__class__ with an argument list , with elements : tuples with 2 elements : k and hard copy of list v , for every k and v in result of method the self.lists .	return self . __class__ ( [ ( k , v [ : ] ) for k , v in self . lists ( ) ] )
4154	if app_label is not contained in executor.loader.migrated_apps ,	if app_label not in executor . loader . migrated_apps :
5209	split the_path at the STR0 character , substitute last element of the result for used_name .	used_name = the_path . split ( STR0 ) [ - 1 ]
6088	call the method sys.stderr.write with an argument string STR0 , where STR1 is replaced by e .	sys . stderr . write ( STR0 % e )
13399	define the function rmtree_errorhandler with 3 arguments func , path and exc_info .	def rmtree_errorhandler ( func , path , exc_info ) :
10864	append self.pointer to self.backout .	self . backout . append ( self . pointer )
384	call the function self._key_to_file with key and version as arguments , substitute it for fname .	fname = self . _key_to_file ( key , version )
1534	define the method __init__ with 4 arguments : self , name , content and content_type defaulting to a string STR0 .	def __init__ ( self , name , content , content_type = STR0 ) :
7837	if not ,	else :
571	call the method self._cache.clear .	self . _cache . clear ( )
5805	call the method self.xml.startElement with arguments string STR0 and attrs .	self . xml . startElement ( STR0 , attrs )
540	delete the value under the key key of self._expire_info dictionary .	del self . _expire_info [ key ]
242	call the method self.make_key with key and version set to version as arguments , substitute the result for key .	key = self . make_key ( key , version = version )
561	try ,	try :
2435	call the method self._create_mime_attachment with unpacked list alternative as an argument , use the result as an argument for the call to the msg.attach method .	msg . attach ( self . _create_mime_attachment ( * alternative ) )
2046	derive the class EmailBackend from the ConsoleEmailBackend base class .	class EmailBackend ( ConsoleEmailBackend ) :
13019	call the function template_dir.decode with an argument fs_encoding , substitute the result for template_dir .	template_dir = template_dir . decode ( fs_encoding )
14710	for every site in sites ,	for site in sites :
3584	databases is a list containing 2 elements : self.using and None .	databases = [ self . using , None ]
10795	insert token at the beginning of self.tokens .	self . tokens . insert ( 0 , token )
603	return integer 0 .	return 0
6187	prefix the base64d with a STR0 character .	base64d = STR0 + base64d
14850	try ,	try :
13729	try ,	try :
5082	call the method parser.add_argument with 6 arguments : string STR1 , string STR2 , dest set to string STR3 , action set to STR4 , default is a list containing string STR5 and help set to string : STR6 .	parser . add_argument ( STR1 , STR2 , dest = STR3 , action = STR4 , default = [ STR5 ] , help = STR6 STR7 STR8 )
14348	substitute _itervalues for itervalues .	itervalues = _itervalues
9189	value is None .	value = None
6149	import module json .	import json
5391	import module importlib .	import importlib
13660	substitute mtime for the value under the filename key of _mtimes dictionary .	_mtimes [ filename ] = mtime
12890	if push is not None ,	if push is not None :
18496	call the function endblock_re.match with an argument t.contents , substitute the result for endbmatch .	endbmatch = endblock_re . match ( t . contents )
12111	get the value under the STR0 key of the context dictionary , if it exists substitute the result for csrf_token , if not csrf_token is None .	csrf_token = context . get ( STR0 , None )
17850	import module datetime .	import datetime
5988	derive the class ExternalReferenceForbidden from the DefusedXmlException base class .	class ExternalReferenceForbidden ( DefusedXmlException ) :
16994	for every elt in source ,	for elt in source :
5696	call the Model._meta.get_field method with an argument field_name , substitute the result for field .	field = Model . _meta . get_field ( field_name )
2058	otherwise if self.file_path file path doesnt exists ,	elif not os . path . exists ( self . file_path ) :
14804	substitute RemovedInDjango19Warning for RemovedInNextVersionWarning .	RemovedInNextVersionWarning = RemovedInDjango19Warning
2662	_called_from_command_line is boolean False .	_called_from_command_line = False
1817	return empty bytes string .	return b STR
10681	return result .	return result
18343	define the function gettext with an argument message .	def gettext ( message ) :
17125	substitute sys.maxsize for MAXSIZE .	MAXSIZE = sys . maxsize
11008	return value .	return value
9377	if string STR0 is contained in self.attrs ,	if STR0 in self . attrs :
17584	if part is contained in PALETTES ,	if part in PALETTES :
13830	if not ,	else :
5257	import module os .	import os
17810	call the function re.compile with 2 arguments : raw string STR0 ] * ( ? : ( ? : STR1\\ ] |\\ . ) *STR2 ] * ) + ) | \+ ) '' , and re.VERBOSE , substitute the result for smart_split_re .	smart_split_re = re . compile ( STR0 , re . VERBOSE )
12762	raise an NotImplementedError with an argument string STR0 .	raise NotImplementedError ( STR0 )
6571	if urlconf is None ,	if urlconf is None :
16695	with lock ,	with lock :
70	define the function close_caches with dictionary pair of elements kwargs as argument .	def close_caches ( ** kwargs ) :
9444	derive the class RendererMixin from the object base class .	class RendererMixin ( object ) :
17194	if PY3 is true ,	if PY3 :
12354	define the method __init__ with 2 arguments : self and format_string .	def __init__ ( self , format_string ) :
16987	if ch equals a string STR0 ,	if ch == STR0 :
6809	compare is a lambda function with arguments self , a and b , return value is boolean true if a is lesser than b , otherwise is false .	compare = lambda self , a , b : a < b
3839	call the function check_programs with 3 arguments : strings STR0 , STR1 and STR2 .	check_programs ( STR0 , STR1 , STR2 )
10873	append self.pointer to self.backout .	self . backout . append ( self . pointer )
3572	increment self.fixture_object_count by objects_in_fixture .	self . fixture_object_count += objects_in_fixture
12862	if IndexError exception is caught ,	except IndexError :
11346	substitute _templatetags_modules for templatetags_modules .	templatetags_modules = _templatetags_modules
83	DEFAULT_TIMEOUT is a instance of the class object .	DEFAULT_TIMEOUT = object ( )
2213	pid is integer 1 .	pid = 1
6385	if default_kwargs exists , substitute it for self.default_kwargs , otherwise self.default_kwargs is an empty dictionary .	self . default_kwargs = default_kwargs or { }
2795	if msg is true ,	if msg :
8736	value under the name key of the form.fields dictionary is an instance of InlineForeignKeyField created with 2 arguments : self.instance and unpacked dictionary kwargs .	form . fields [ name ] = InlineForeignKeyField ( self . instance , ** kwargs )
18371	define the function ungettext with 3 arguments : singular , plural and number .	def ungettext ( singular , plural , number ) :
1553	define the method __str__ with argument self .	def __str__ ( self ) :
11321	define the function import_library with an argument taglib_module .	def import_library ( taglib_module ) :
