4285	if self.verbosity is greater or equal to integer 1 ,	if self . verbosity >= 1 :
17805	replace every occurrence of STR0 in s with STR1 .	s = s . replace ( STR0 , STR1 )
8765	return fk .	return fk
268	with return value of the function transaction.atomic with using set to db as arguments , perform the following ,	with transaction . atomic ( using = db ) :
11434	update flat dictionary with d .	flat . update ( d )
17166	substitute name for new .	new = name
12706	if name is true ,	if name :
1670	skip this iteration of he smallest enclosing loop .	continue
17649	derive the class Truncator form the SimpleLazyObject class .	class Truncator ( SimpleLazyObject ) :
13340	call the method t.led with 2 arguments left and self .	left = t . led ( left , self )
8046	define the method __bool__ with an argument self .	def __bool__ ( self ) :
14941	call the method sys.exc_info , substitute the result without the first element for e and tb .	e , tb = sys . exc_info ( ) [ 1 : ]
3362	used_column_names is an empty list .	used_column_names = [ ]
4950	table_names is an empty list .	table_names = [ ]
7299	return initial .	return initial
7298	if data is not None or FILE_INPUT_CONTRADICTION ,	if data in ( None , FILE_INPUT_CONTRADICTION ) :
11333	templatetags_modules is an empty list .	templatetags_modules = [ ]
3254	from importlib import import_module into default name space .	from importlib import import_module
10336	if not ,	else :
2916	import module glob .	import glob
15278	if s is an instance of an object Promise .	if isinstance ( s , Promise ) :
10141	define the method __init__ with an argument self .	def xreadlines ( self ) :
2911	for every tag in tags , are false , for every tag in tags , if return value of the method checks.tag_exists called with an argument tag , evaluates to false , use tag as an argument to call the iterator method next , substitute the result for invalid_tag .	invalid_tag = next ( tag for tag in tags if not checks . tag_exists ( tag ) )
2892	from django.core.checks.registry import registry into default name space .	from django . core . checks . registry import registry
4620	from django.core.management.sql import sql_indexes into default name space .	from django . core . management . sql import sql_indexes
11097	if not ,	else :
18530	if not ,	else :
7707	for every name in self.fields ,	for name in self . fields :
13251	derive the class Operator from the base class TokenBase .	class Operator ( TokenBase ) :
6077	for every x in argset ,	for x in argset :
11963	decorator function register.filter with 2 arguments expects_localtime set to boolean True and is_safe set to boolean False .	@ register . filter ( expects_localtime = True , is_safe = False )
11921	call the function _helper with 2 arguments : sublist_item and tabs incremented by 1 , substitute the result for sublist .	sublist = _helper ( sublist_item , tabs + 1 )
11050	derive the class Node form the base class object .	class Node ( object ) :
7103	define the method to_python with arguments self and value .	def to_python ( self , value ) :
13427	from django.utils import six into default name space .	from django . utils import six
17307	if STR0 is contained in klass.__dict__ for any klass in __mro__ field of the obj class , return boolean True , otherwise return False .	return any ( STR0 in klass . __dict__ for klass in type ( obj ) . __mro__ )
13675	call the sys.exc_info function , assign the result to et , ev and tb , respectively .	et , ev , tb = sys . exc_info ( )
15928	from django.utils.encoding import force_text and force_str into default name space .	from django . utils . encoding import force_text , force_str
3324	append new line to line , write it to self.stdout stream .	self . stdout . write ( STR0 % line )
15945	call the function re.compile with 2 arguments : raw string STR0 , formated with string created by joining elements of result of the function re.escape with an argument x , with separator STR1 , for every x in DOTS , and re.DOTALL , substitute the result for hard_coded_bullets_re .	hard_coded_bullets_re = re . compile ( STR0 % STR1 . join ( re . escape ( x ) for x in DOTS ) , re . DOTALL )
2112	if host exists substitute it for self.host , if not substitute settings.EMAIL_HOST for self.host .	self . host = host or settings . EMAIL_HOST
6520	if ImportError , AttributeError , renamed to e , exceptions are caught ,	except ( ImportError , AttributeError ) as e :
8194	if index is not None and index is smaller than return value of the method self.initial_form_count ,	if index is not None and index < self . initial_form_count ( ) :
17740	replace STR0 in string STR1 with tag , append the result to out .	out += STR0 % tag
8450	call the method self.add_error with 2 arguments : None and errors .	self . add_error ( None , errors )
12191	substitute length of values for len_values .	len_values = len ( values )
18695	define the method __init__ with 2 arguments : self and offset .	def __init__ ( self , offset ) :
552	if not ,	else :
6113	substitute the value under the STR0 key of options dictionary for value under the STR1 key of wsgi_opts dictionary .	wsgi_opts [ STR1 ] = options [ STR0 ]
12747	derive the class BaseLoader from the object base class .	class BaseLoader ( object ) :
6938	get the name key of the data dictionary , if the key exists return it , if not return None .	return data . get ( name , None )
17974	define the function _get_timezone_name with an argument timezone .	def _get_timezone_name ( timezone ) :
897	define the function i18n with an argument request .	def i18n ( request ) :
2975	po_path is a string containing joined directory path from dirpath and f .	po_path = os . path . join ( dirpath , f )
18273	try ,	try :
10843	increment i by integer 1 .	i += 1
8965	for every e in errors convert e into a string and append it to a string STR0 , join all the results into a string separated by newlines , append the result to output .	output . append ( STR0 . join ( STR1 % e for e in errors ) )
9901	if ValueError exception is caught ,	except ValueError :
6344	substitute the compiled_regex for value under the language_code key of the self._regex_dict dictionary .	self . _regex_dict [ language_code ] = compiled_regex
1566	self.content_type is None .	self . content_type = None
18171	get_language_bidi is lambda function returning boolean True if settings.LANGUAGE_CODE is contained in settings.LANGUAGES_BIDI .	get_language_bidi = lambda : settings . LANGUAGE_CODE in settings . LANGUAGES_BIDI
17705	open_tags is an empty list .	open_tags = [ ]
6927	if settings.USE_L10N is true ,	if settings . USE_L10N :
8227	sum max_num and DEFAULT_MAX_NUM , substitute the result for absolute_max .	absolute_max = max_num + DEFAULT_MAX_NUM
10424	do nothing .	pass
17568	if string STR0 is not contained in opts ,	if STR0 not in opts :
10725	call the method self.compile_filter_error with 2 arguments : token and e , if it evaluates to false ,	if not self . compile_filter_error ( token , e ) :
2609	utility is a instance of ManagementUtility class , created with an argument argv .	utility = ManagementUtility ( argv )
15318	from django.utils.xmlutils import SimplerXMLGenerator into default name space .	from django . utils . xmlutils import SimplerXMLGenerator
10064	define the method encoding with an argument self .	def encoding ( self ) :
1131	define the method _get_image_dimensions with self class instance as the argument .	def _get_image_dimensions ( self ) :
5534	define the method save , with 3 arguments : self , save_m2m set to boolean True and using set to boolean True .	def save ( self , save_m2m = True , using = None ) :
17988	delete _active.value .	del _active . value
14711	concatenate first site elements of s , syear and elements of s from the site incremented by integer 4 index , substitute the result for s .	s = s [ : site ] + syear + s [ site + 4 : ]
2495	define the method __init__ with arguments : self class instance and argv set to None .	def __init__ ( self , argv = None ) :
11691	define the function stringformat with 2 arguments value and arg .	def stringformat ( value , arg ) :
2167	increment num_sent by one .	num_sent += 1
14460	return an empty string .	return STR
8551	substitute qs for self._queryset .	self . _queryset = qs
4633	join statements in a string separated by newline , return the result .	return STR0 . join ( statements )
5442	call the get_serializer function with an argument format , call the return value object and substitute it for s .	s = get_serializer ( format ) ( )
15478	derive the class Atom1Feed from the SyndicationFeed base class .	class Atom1Feed ( SyndicationFeed ) :
18565	call the method imatch.group with an argument integer 2 , use the result as an argument for the call to the method context_re.match , substitute the result for context_match .	context_match = context_re . match ( imatch . group ( 2 ) )
4197	if plan is not true ,	if not plan :
852	if check is not contained in self.registered_checks .	if check not in self . registered_checks :
18415	if LookupError exception is caught ,	except LookupError :
12395	if self.asvar is None ,	if self . asvar is None :
3572	increment self.fixture_object_count by objects_in_fixture .	self . fixture_object_count += objects_in_fixture
10971	call the function warnings.warn with 3 arguments : string STR0 , RemovedInDjango20Warning , and stacklevel set to integer 2 .	warnings . warn ( STR0 , RemovedInDjango20Warning , stacklevel = 2 )
3806	call the function handle_extensions exts , substitute self.extensions .	self . extensions = handle_extensions ( exts )
13000	return an instance of IncludeNode class , created with 3 arguments : return value of the method parser.compile_filter ,	return IncludeNode ( parser . compile_filter ( bits [ 1 ] ) , extra_context = namemap , isolated_context = isolated_context )
6267	if not ,	else :
11622	call the function force_text with an argument text , substitute the result for input_val .	input_val = force_text ( text )
7804	if error.code equals code ,	if error . code == code :
12798	use global variable template_source_loaders .	global template_source_loaders
9641	if encoding is true , substitute it for self._encoding , if not substitute settings.DEFAULT_CHARSET for self._encoding .	self . _encoding = encoding or settings . DEFAULT_CHARSET
15767	call the function func with 2 arguments : unpacked list self.__args and unpacked dictionary self.__kw , return the result .	return func ( * self . __args , ** self . __kw )
3870	raise an CommandError exception with an argument string STR0 , where STR1 is replaced with errors .	raise CommandError ( STR0 % errors )
2743	self.stderr is an instance of an OutputWrapper object , created with 2 arguments : value under the STR0 key of the options dictionary , if it doesnt exists use the sys.stderr instead , and self.style.ERROR .	self . stderr = OutputWrapper ( options . get ( STR0 , sys . stderr ) , self . style . ERROR )
18709	return self.__offset .	return self . __offset
6627	substitute urlconf_name for _urlconfs.value .	_urlconfs . value = urlconf_name
691	import module hashlib .	import hashlib
10401	define the method set_signed_cookie with 5 arguments : self , key , value , salt as an empty string and unpacked dictionary kwarg .	def set_signed_cookie ( self , key , value , salt = STR , ** kwargs ) :
15194	if handlers is true ,	if handlers :
10544	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
17124	substitute bytes for binary_type .	binary_type = bytes
7838	if cleaned_data is not None ,	if cleaned_data is not None :
6659	if message is not None ,	if message is not None :
4868	exit the program with failures converted to boolean as a message .	sys . exit ( bool ( failures ) )
16739	get value under the STR0 key of the kwargs dictionary , substitute it for register_to .	register_to = kwargs . get ( STR0 )
4767	raise an CommandError exception with an argument string STR0 , where STR1 is replaced with app_name .	raise CommandError ( STR0 % app_name )
4619	from django.core.management.base import AppCommand into default name space .	from django . core . management . base import AppCommand
8900	raise an ValidationError with 3 arguments : dictionary self.error_messages value under the key STR0 , code set to string STR1pk ' .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 , params = { STR2 : pk } , )
3798	get the value under the STR0 key of the options dictionary , substitute it for self.no_obsolete .	self . no_obsolete = options . get ( STR0 )
14937	call the method self.importer with an argument used .	self . importer ( used )
6389	self._namespace_dict is an empty dictionary .	self . _namespace_dict = { }
9567	if six.PY2 is true and rawdata is an instance of the type six.text_type .	if six . PY2 and isinstance ( rawdata , six . text_type ) :
3540	for every line in sequence_sql ,	for line in sequence_sql :
3159	if LookupError exception is caught ,	except LookupError :
5474	if self.use_natural_keys is true ,	if self . use_natural_keys :
17834	call the method _entity_re.sub with 2 arguments : _replace_entity and text , return the result .	return _entity_re . sub ( _replace_entity , text )
18634	derive the class Node from object base class .	class Node ( object ) :
6726	substitute whitelist for self.domain_whitelist .	self . domain_whitelist = whitelist
16553	if logging_config is true ,	if logging_config :
12109	derive the class CsrfTokenNode from Node base class .	class CsrfTokenNode ( Node ) :
1633	define lambda function that returns self.file.tell field , use it as an argument for property function , put the result in tell .	tell = property ( lambda self : self . file . tell )
7097	substitute self.min_value for the value under the STR0 key of the attrs dictionary .	attrs [ STR0 ] = self . min_value
12574	substitute TemplateSyntaxError for error_class .	error_class = TemplateSyntaxError
2324	if attachments exists substitute it for self.attachments , if not attachments is an empty list .	self . attachments = attachments or [ ]
8754	raise an ValueError with an argument string STR0 , where STR1 is replaced with , model._meta.app_label , model._meta.object_name , fk_name , respectively .	raise ValueError ( STR0 % ( model . _meta . app_label , model . _meta . object_name , fk_name ) )
16316	return boolean False .	return False
12964	acceptable_endblocks is a tuple with 2 elements : string STR0 and STR1 , where STR2 replaced with block_name .	acceptable_endblocks = ( STR0 , STR1 % block_name )
10471	append value to self._closable_objects list .	self . _closable_objects . append ( value )
8922	define the function modelform_defines_fields with an argument form_class .	def modelform_defines_fields ( form_class ) :
8675	widget is an instance of HiddenInput class	widget = HiddenInput
7617	return an empty string .	return STR
5396	_serializers is an empty dictionary .	_serializers = { }
8839	call the method __deepcopy__ from the base class of the class ChoiceField , with an argument memo , substitute the result for result .	result = super ( ChoiceField , self ) . __deepcopy__ ( memo )
10957	define the method args_check with 3 arguments : name , func and provided .	def args_check ( name , func , provided ) :
6600	add ns_pattern and extra , substitute the result for ns_pattern .	ns_pattern = ns_pattern + extra
4248	evaluate connection.creation.sql_create_model method with model , no_style ( ) and seen_models as arguments , assign the result to the sql and references , respectively .	sql , references = connection . creation . sql_create_model ( model , no_style ( ) , seen_models )
8803	define the method __init__ with 2 arguments : self and field .	def __init__ ( self , field ) :
17501	if self.active_writers and self.waiting_writers both equal to integer 0 ,	if self . active_writers == 0 and self . waiting_writers == 0 :
7653	if name is false ,	if not name :
5538	set accessor_name of the self.object to object_list .	setattr ( self . object , accessor_name , object_list )
17349	substitute operator.getitem for indexbytes .	indexbytes = operator . getitem
989	if self has an STR0 attribute ,	if hasattr ( self , STR0 ) :
4119	from django.db.migrations.state import ProjectState into default name space .	from django . db . migrations . state import ProjectState
13943	return tuple , consisting of first element of t converted to lowercase and second element of t .	return t [ 0 ] . lower ( ) , t [ 1 ]
13012	app_template_dirs is an empty list .	app_template_dirs = [ ]
14393	substitute complain for __imul__ .	__imul__ = complain
3220	if not ,	else :
5546	if Model.DoesNotExist exception is caught ,	except Model . DoesNotExist :
12928	break from the loop execution .	break
17854	define the function timesince with d , now defaulting to None , reversed defaulting to False as arguments .	def timesince ( d , now = None , reversed = False ) :
18676	return self .	return self
13851	define the function _set_response_etag , with response as an argument .	def _set_response_etag ( response ) :
5673	define the method getvalue with an argument self .	def getvalue ( self ) :
10282	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
18186	define the function get_language_from_request with 2 arguments : request and check_path set to boolean False .	def get_language_from_request ( request , check_path = False ) :
13814	compile regular expression based on the string STR0 and assign the result to cc_delim_re .	cc_delim_re = re . compile ( STR0 )
4744	writer is an instance of a class MigrationWriter , created with an argument new_migration .	writer = MigrationWriter ( new_migration )
13116	define the method load_template_source with 3 arguments : self , template_name , template_dirs set to None .	def load_template_source ( self , template_name , template_dirs = None ) :
16693	return result .	return result
16021	call the method re.sub with 3 arguments : raw string STR0 , string STR1 and result of the function force_text , called with an argument value , return the result .	return re . sub ( STR0 , STR1 , force_text ( value ) )
6212	if self.sep is not contained in signed_value ,	if self . sep not in signed_value :
18071	call the function lazy with 2 arguments : pgettext and six.text_type , substitute pgettext_lazy .	pgettext_lazy = lazy ( pgettext , six . text_type )
10381	call the method timezone.is_aware with an argument expires , if it evaluates to true ,	if timezone . is_aware ( expires ) :
14639	if length of tzinfo is greater than integer 3 , convert elements of tzinfo from indexes 1 to 3 to an integer , substitute the result for offset_mins , otherwise offset_mins is integer 0 .	offset_mins = int ( tzinfo [ - 2 : ] ) if len ( tzinfo ) > 3 else 0
12687	register.tag decorator ,	@ register . tag
12547	raise an TemplateSyntaxError exception with an argument string STR0 , where STR1 is replaced with first element of bits .	raise TemplateSyntaxError ( STR0 % bits [ 0 ] )
1927	replace STR0 in the string STR1 with response.status_code and response.reason_phrase , respectively , substitute it for status .	status = STR0 % ( response . status_code , response . reason_phrase )
17439	call the function _add_doc with 2 arguments : reraise and string STR0 .	_add_doc ( reraise , STR0 )
3729	call the function os.unlink with an argument work_file .	os . unlink ( work_file )
7266	default_error_messages is an dictionary with 5 initial entries : return value of the function _ called with an argument string , STR0 for STR3 , return value of the function _ called with an argument , string STR1 for STR4 , return value of the function _ called with an argument STR2 , for STR5 , return value of the function ungettext_lazy called with 3 arguments : string STR6 , string STR7 and string STR8 for STR9 , and return value of the function _ called with an argument string , STR10 for STR11 .	default_error_messages = { STR3 : _ ( STR0 ) , STR4 : _ ( STR1 ) , STR5 : _ ( STR2 ) , STR6 : ungettext_lazy ( STR7 , STR8 , STR9 ) , STR10 : _ ( STR11 ) }
1607	call the function BytesIO , substitute the result for self.file .	self . file = BytesIO ( )
7423	return self.empty_value .	return self . empty_value
5928	if model_identifier is false ,	if not model_identifier :
14348	substitute _itervalues for itervalues .	itervalues = _itervalues
702	from .messages import CheckMessage , Debug , Info , Warning , Error , Critical , DEBUG , INFO , WARNING , ERROR and CRITICAL into default name space .	from . messages import ( CheckMessage , Debug , Info , Warning , Error , Critical , DEBUG , INFO , WARNING , ERROR , CRITICAL )
6761	define the function validate_ipv6_address with an argument value .	def validate_ipv6_address ( value ) :
11171	if defaults is not None ,	if defaults is not None :
2895	help is a string STR0 .	help = STR0
7514	raise an ValidationError with 2 arguments : value under the STR0 key of the self.error_messages dictionary and code set to STR1 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 )
18672	return data .	return data
14201	define the method pop with 3 arguments : self , k and unpacked list args .	def pop ( self , k , * args ) :
916	from django.utils.encoding import force_text into default name space .	from django . utils . encoding import force_text
15045	if root is true ,	if root :
13976	if secret is None ,	if secret is None :
10444	if value has an STR0 attribute ,	if hasattr ( value , STR0 ) :
18104	call the function _trans.deactivate , return the result .	return _trans . deactivate ( )
13621	return filenames .	return filenames
12164	substitute nodelist_loop for self.nodelist_loop .	self . nodelist_loop = nodelist_loop
5323	if number equals a integer 1 and self.allow_empty_first_page is true ,	if number == 1 and self . allow_empty_first_page :
7302	if data is None ,	if data is None :
16791	return boolean True .	return True
10126	if self has an attribute STR0 ,	if hasattr ( self , STR0 ) :
18108	substitute deactivate for self.deactivate .	self . deactivate = deactivate
9617	FIELD is a field '' .	FIELD = STR0
11709	decorator function register.filter with an argument is_safe set to boolean True .	@ register . filter ( is_safe = True )
13125	call the method resource.decode with an argument settings.FILE_CHARSET , substitute the result for resource .	resource = resource . decode ( settings . FILE_CHARSET )
1685	if value under the key 'ATOMIC_REQUESTS of db.settings_dic dictionary is True and db.alias is not present in the non_atomic_requests ,	if ( db . settings_dict [ STR0 ] and db . alias not in non_atomic_requests ) :
8779	remove element from kwargs dictionary under the key STR0 , substitute it for self.pk_field if it exists , if not self.pk_field is boolean False .	self . pk_field = kwargs . pop ( STR0 , False )
4110	import module traceback .	import traceback
12694	kwargs is an empty dictionary .	kwargs = { }
10172	encoding.setter decorator ,	@ encoding . setter
4041	substitute STR1 in a string STR0 with app_label , append newline to it , use it as an argument for the call to the method self.style.MIGRATE_HEADING , write the result to self.stdout .	self . stdout . write ( self . style . MIGRATE_HEADING ( STR0 % app_label ) + STR1 )
5981	substitute base for self.base .	self . base = base
12797	define the function find_template with 2 : template_name and dirs set to None .	def find_template ( name , dirs = None ) :
7610	derive the class IPAddressField from the base class CharField class .	class IPAddressField ( CharField ) :
9980	do nothing .	pass
15707	return res .	return res
5639	do nothing .	pass
5579	get the value under the STR0 key of the self.options dictionary , substitute it for indent .	indent = self . options . get ( STR0 )
2443	call the function socket.getfqdn , substitute the result for self._fqdn .	self . _fqdn = socket . getfqdn ( )
6521	raise an NoReverseMatch exception with an argument string STR0 , where STR1 is replaced with lookup_view and e , respectively .	raise NoReverseMatch ( STR0 % ( lookup_view , e ) )
9440	derive the class RadioFieldRenderer from the ChoiceFieldRenderer base class .	class RadioFieldRenderer ( ChoiceFieldRenderer ) :
4315	raise a CommandError exception , with string STR0 as argument , substitute STR1 in previous string with , string joined from invalided_apps list and separated with string STR2 .	raise CommandError ( STR0 % ( STR1 . join ( invalid_apps ) ) )
13385	call the method path.decode with an argument fs_encoding , return the result .	return path . decode ( fs_encoding )
1299	if content has an STR0 attribute ,	if not hasattr ( content , STR0 ) :
14278	raise an MultiValueDictKeyError exception with printable representation of key .	raise MultiValueDictKeyError ( repr ( key ) )
12264	if not ,	else :
8095	return form .	return form
10687	if in_tag and is not contained in self.verbatim ,	if in_tag and not self . verbatim :
5096	if not ,	else :
9452	define the method subwidgets with 5 arguments : self , name , value , attrs set to None and choices set to an empty tuple .	def subwidgets ( self , name , value , attrs = None , choices = ( ) ) :
7944	call the method data , substitute the result for data .	data = data ( )
15355	d is an empty string .	d = STR
12580	register.tag decorator function with an argument STR0 ,	@ register . tag ( STR0 )
15953	call the function force_text with an argument value , call the method translate on the result , with an argument _js_escapes , use the result as an argument for the call to the mark_safe function , return the result .	return mark_safe ( force_text ( value ) . translate ( _js_escapes ) )
16687	substitute oldroot for value under the key key of the cache dictionary .	cache [ key ] = oldroot
6390	self._app_dict is an empty dictionary .	self . _app_dict = { }
15359	derive the class SyndicationFeed from the object base class .	class SyndicationFeed ( object ) :
6708	try ,	try :
17222	_urllib_parse_moved_attributes is a list with 16 elemetns , all of them are the results of the call to the function MovedAttribute with different 3 string arguments .	_urllib_parse_moved_attributes = [ MovedAttribute ( STR0 , STR1 , STR2 ) , MovedAttribute ( STR3 , STR4 , STR5 ) , MovedAttribute ( STR6 , STR7 , STR8 ) , MovedAttribute ( STR9 , STR10 , STR11 ) , MovedAttribute ( STR12 , STR13 , STR14 ) , MovedAttribute ( STR15 , STR16 , STR17 ) , MovedAttribute ( STR18 , STR19 , STR20 ) , MovedAttribute ( STR21 , STR22 , STR23 ) , MovedAttribute ( STR24 , STR25 , STR26 ) , MovedAttribute ( STR27 , STR28 , STR29 ) , MovedAttribute ( STR30 , STR31 , STR32 ) , MovedAttribute ( STR33 , STR34 , STR35 ) , MovedAttribute ( STR36 , STR37 , STR38 ) , MovedAttribute ( STR39 , STR40 , STR41 ) , MovedAttribute ( STR42 , STR43 , STR44 ) , MovedAttribute ( STR45 , STR46 , STR47 ) , ]
4438	try ,	try :
3142	raise an CommandError exception with an argument string STR0 .	raise CommandError ( STR0 )
10337	call the method value.decode with an argument charset , substitute the result for value .	value = value . decode ( charset )
6746	if literal_match is true ,	if literal_match :
12338	if IOError exception is caught ,	except IOError :
3885	ignore is a lambda function with pattern as an argument , return value is the return value of the function fnmatch.fnmatchcase , called with arguments : filename and pattern .	ignore = lambda pattern : fnmatch . fnmatchcase ( filename , pattern )
14626	left justify value under the STR0 key of the kw dictionary , in the field of width 6 , fill the rest with STR1 , substitute the result for value under the STR2 key of the kw dictionary .	kw [ STR0 ] = kw [ STR1 ] . ljust ( 6 , STR2 )
8130	self._ordering is an empty list .	self . _ordering = [ ]
17722	if self_closing is true or tagname is contained in html4_singlets ,	if self_closing or tagname in html4_singlets :
5693	skip this loop iteration ,	continue
17555	opt_dict is an dictionary with 5 elements : STR0 for STR1 , STR2 for STR3 , STR4 for STR5 , STR6 for STR7 , and STR8 for STR9 .	opt_dict = { STR0 : STR1 , STR2 : STR3 , STR4 : STR5 , STR6 : STR7 , STR8 : STR9 }
9888	if TypeError exception is caught ,	except TypeError :
455	call close method on a file stream .	f . close ( )
4174	run_syncdb is boolean True .	run_syncdb = True
2357	define the method attach with 4 arguments : self , filename set to None , content set to None and mimetype set to None .	def attach ( self , filename = None , content = None , mimetype = None ) :
3355	call the method connection.introspection.get_relations with 2 arguments cursor , table_name and substitute the result for relations .	relations = connection . introspection . get_relations ( cursor , table_name )
17604	if palette equals value under the NOCOLOR_PALETTE key of the PALETTES dictionary ,	if palette == PALETTES [ NOCOLOR_PALETTE ] :
2339	if self.cc is true ,	if self . cc :
7846	property decorator ,	@ property
15239	check if obj is instance of the object _PROTECTED_TYPES , return the boolean result .	return isinstance ( obj , _PROTECTED_TYPES )
10707	self.tags is an empty dictionary .	self . tags = { }
7121	if widget is an instance of the NumberInput class , and string STR0 is not contained in widget.attrs ,	if isinstance ( widget , NumberInput ) and STR0 not in widget . attrs :
8532	call the method self._get_to_python with an argument pk_field , substitute the result for to_python .	to_python = self . _get_to_python ( pk_field )
15942	call the function re.compile with raw string STR0 , substitute the result for simple_email_re .	simple_email_re = re . compile ( STR0 )
7171	if input_formats is not None ,	if input_formats is not None :
3557	loaded_objects_in_fixture is integer 0 .	loaded_objects_in_fixture = 0
10527	if response.streaming is True ,	if response . streaming :
1487	bring integer 2 to the power of 10 , multiply it by integer 64 , substitute the result for DEFAULT_CHUNK_SIZE .	DEFAULT_CHUNK_SIZE = 64 * 2 ** 10
3755	derive the class Command from the BaseCommands base class .	class Command ( BaseCommand ) :
4459	requires_system_checks is boolean False .	requires_system_checks = False
1528	define the method chunks with arguments self ad chunk_size set to None .	def chunks ( self , chunk_size = None ) :
512	call the self._cull method .	self . _cull ( )
14367	for every key and value in items of other_dict dictionary ,	for key , value in other_dict . items ( ) :
4989	and include_auto_created set to boolean True , call the method connection.creation.sql_indexes_for_model with arguments model and style , extend output with the result .	output . extend ( connection . creation . sql_indexes_for_model ( model , style ) )
17045	from django.utils.functional import curry and Promise into default name space .	from django . utils . functional import curry , Promise
17561	if k equals a string STR0 ,	if k == STR0 :
885	return string STR0 .	return STR0
11258	define the method assignment_tag with 4 arguments : self , func set to None , takes_context set to None and name set to None .	def assignment_tag ( self , func = None , takes_context = None , name = None ) :
16064	call the function smart_urlquote with an argument middle , substitute the result for url .	url = smart_urlquote ( middle )
368	try ,	try :
8793	if self.to_field is true ,	if self . to_field :
18777	return major .	return major
773	substitute obj for self.obj .	self . obj = obj
5266	stderr set to PIPE , close_fds set to boolean True is os.name is not equal to STR0 , universal_newlines set to boolean True . if OSError , renamed to e , exception is caught ,	except OSError as e :
5845	if not ,	else :
17093	if not ,	else :
12754	call the method self.load_template_source with arguments template_name and template_dirs , assign the result to source and display_name .	source , display_name = self . load_template_source ( template_name , template_dirs )
2774	call the method self.check with 2 arguments app_configs set to app_configs , display_num_errors set to display_num_errors , return the result .	return self . check ( app_configs = app_configs , display_num_errors = display_num_errors )
11335	use global variable templatetags_modules .	global templatetags_modules
11572	return output .	return output
17322	call the function _add_doc with 2 arguments : get_unbound_function and string STR0 .	_add_doc ( get_unbound_function , STR0 )
11558	try ,	try :
1749	call the method self.get_exception_response with request , resolver and integer 403 as the arguments , assign the result to response .	response = self . get_exception_response ( request , resolver , 403 )
2193	from email.mime.multipart import MIMEMultipart into default name space .	from email . mime . multipart import MIMEMultipart
1062	try ,	try :
14242	define the method copy with an argument self .	def copy ( self ) :
12417	call the method self.max_width.resolve with an argument context , convert the result to an integer and substitute it for max_width .	max_width = int ( self . max_width . resolve ( context ) )
3421	substitute col_name for value under the STR0 key of the field_params dictionary .	field_params [ STR0 ] = col_name
4970	define the function sql_flush with 4 arguments : style , connection , only_django set to boolean False ,	def sql_flush ( style , connection , only_django = False , reset_sequences = True , allow_cascade = False ) :
9356	call the method self.build_attrs with 2 arguments : attrs and name set to name , substitute the result for final_attrs .	final_attrs = self . build_attrs ( attrs , name = name )
2542	call the function get_commands , convert the result to a list , append string STR0 to it , substitute it for subcommands .	subcommands = list ( get_commands ( ) ) + [ STR0 ]
7889	substitute name for self.name .	self . name = name
18114	call the function deactivate_all .	deactivate_all ( )
18194	import module sys .	import sys
8619	define the method save_existing_objects with 2 arguments : self and commit set to boolean True .	def save_existing_objects ( self , commit = True ) :
14481	define the method H with an argument self .	def H ( self ) :
5722	if not ,	else :
13263	define the function prefix with 2 arguments bp and func .	def prefix ( bp , func ) :
17609	import module unicodedata .	import unicodedata
10324	join headers into a string , separated by string STR0 .	return STR0 . join ( headers )
16680	substitute key for value under the KEY key of the oldroot dictionary .	oldroot [ KEY ] = key
9146	define the method render with 4 arguments : self , name , value and attrs set to None .	def render ( self , name , value , attrs = None ) :
13589	return an empty list .	return [ ]
498	if pickled is not None .	if pickled is not None :
16946	skip this loop iteration .	continue
2071	define the method _get_filename with argument self .	def _get_filename ( self ) :
2439	define the method __str__ with argument self .	def __str__ ( self ) :
14360	if args is true ,	if args :
3143	app_list is an instance of OrderedDict class , created with an argument a tuple containing elements : app_config and None , for every app_config in return value of the method apps.get_app_configs , only if app_config.models_module is not None , and app_config is not contained in excluded_apps .	app_list = OrderedDict ( ( app_config , None ) for app_config in apps . get_app_configs ( ) if app_config . models_module is not None and app_config not in excluded_apps )
16899	otherwise if ch equals a string STR0 ,	elif ch != STR0 :
3876	return potfiles .	return potfiles
6446	call the function get_language , substitute the result for language_code .	language_code = get_language ( )
10585	libraries is an empty dictionary .	libraries = { }
8907	return qs .	return qs
2205	derive the class BadHeaderError from the ValueError base class .	class BadHeaderError ( ValueError ) :
9046	for every name in MEDIA_TYPES ,	for name in MEDIA_TYPES :
3610	raise an CommandError exception with an argument string STR0 , where STR1 is replaced with : fixture_name and result of the function humanize called with an argument fixture_dir .	raise CommandError ( STR0 % ( fixture_name , humanize ( fixture_dir ) ) )
7002	add self.default_validators and validators , substitute the result for self.validators .	self . validators = self . default_validators + validators
13364	import module sys .	import sys
1752	evaluate the function force_text with e as an argument , extra is an dictionary with two pair of elements , STR0 with integer value of 400 and STR1 with value request , respectively use the previous to call the function security_logger.error .	security_logger . error ( force_text ( e ) , extra = { STR0 : 400 , STR1 : request } )
9089	sup_cls is base class of the class cls .	sup_cls = super ( cls , self )
7976	if extra_classes is not empty put its elements into a set , substitute it for extra_classes , if not extra_classes is an empty set .	extra_classes = set ( extra_classes or [ ] )
16906	terminal_char is an string STR0 .	terminal_char = STR0
6448	call the method self._populate .	self . _populate ( )
6785	clean is a lambda function with arguments self and x , return value is x .	clean = lambda self , x : x
4289	if model is contained in created_models ,	if model in created_models :
1603	self.activated is boolean True .	self . activated = True
12372	define the method __init__ with 5 arguments : self , view_name , args , kwargs and asvar .	def __init__ ( self , view_name , args , kwargs , asvar ) :
8259	skip this loop iteration .	continue
6340	try ,	try :
12935	call the method __init__ from the base class of the class IncludeNode , called with 2 arguments : unpacked dictionary args , and unpacked dictionary kwargs .	super ( IncludeNode , self ) . __init__ ( * args , ** kwargs )
3584	databases is a list containing 2 elements : self.using and None .	databases = [ self . using , None ]
11563	if UnicodeDecodeError exception is caught ,	except UnicodeDecodeError :
7829	substitute value for the value under the name key of the self.cleaned_data dictionary .	self . cleaned_data [ name ] = value
11708	instantiate class Truncator , with an argument value , call the method chars on the result with an argument length , return the result .	return Truncator ( value ) . chars ( length )
1362	raise an exception .	raise
16358	doublecolon_len is an integer 0 .	doublecolon_len = 0
15911	if not ,	else :
2594	call the method self.autocomplete .	self . autocomplete ( )
11699	call the function re.sub with 3 arguments : string STR0 , lambda function with an argument m and return value , result of the m.group method called with an argument integer 0 converted into lowercase and result of the method value.title , substitute the result for t .	t = re . sub ( STR0 , lambda m : m . group ( 0 ) . lower ( ) , value . title ( ) )
10315	if reason is not None ,	if reason is not None :
17466	substitute memoryview for memoryview .	memoryview = memoryview
12869	if IndexError exception is caught ,	except IndexError :
12707	call the method parser.compile_filter with an argument value , substitute the result for value under the name key of kwargs dictionary .	kwargs [ name ] = parser . compile_filter ( value )
5500	define the method start_serialization with an argument self .	def start_serialization ( self ) :
3132	raise an CommandError exception with an argument string STR0 , where STR1 is replaced with exclude .	raise CommandError ( STR0 % exclude )
8894	raise an ValidationError with 2 arguments : dictionary self.error_messages value under the key STR0 , and code set to string 'list .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 )
2060	call the os.makedirs with argument self.file_path .	os . makedirs ( self . file_path )
8853	return an instance of ModelChoiceIterator class , created with an argument self .	return ModelChoiceIterator ( self )
18797	substitute changeset for get_git_changeset.cache .	get_git_changeset . cache = changeset
6671	define the method __call__ with arguments self and value .	def __call__ ( self , value ) :
11424	if key is contained in d ,	if key in d :
5755	call the handle_filed method of the base class of the Serializer class , with arguments obj and field .	super ( Serializer , self ) . handle_field ( obj , field )
16891	instantiate a class Group with 2 arguments : string STR0 formated with name , and name , append it to result .	result . append ( Group ( ( ( STR0 % name ) , name ) ) )
2985	if errors is True ,	if errors :
16514	define the method __init__ with an argument self .	def __init__ ( self ) :
11773	decorator stringfilter ,	@ stringfilter
16929	otherwise if count is greater than integer 1 ,	elif count > 1 :
16088	call the function mark_safe with an argument word , substitute the result for i-th element of words .	words [ i ] = mark_safe ( word )
1303	replace all the strings STRspecial with STR0 in the string name , use it as an argument for the call to the force_text function , return the result .	return force_text ( name . replace ( STRspecial , STR0 ) )
18363	if _default is None ,	if _default is None :
4830	self.test_runner is None .	self . test_runner = None
3063	if OSError exception is caught ,	except OSError :
5960	substitute self.start_doctype_decl for parser.StartDoctypeDeclHandler .	parser . StartDoctypeDeclHandler = self . start_doctype_decl
17087	return an instance of SafeBytes , created with an argument data .	return SafeBytes ( data )
4739	extend replaces list with migration.replaces ,	replaces . extend ( migration . replaces )
6188	instantiate the TimestampSigner object with arguments key and salt set to salt , call its method sign with an argument base64 , return it .	return TimestampSigner ( key , salt = salt ) . sign ( base64d )
16949	if representative is None ,	if representative is None :
3580	call the method warnings.warn with 2 arguments : string STR0 , where STR1 is replaced with fixture_name , and RuntimeWarning .	warnings . warn ( STR0 % fixture_name , RuntimeWarning )
1521	raise an exception .	raise
17161	derive class MovedModule from the _LazyDescr base class .	class MovedModule ( _LazyDescr ) :
2569	print opt_label to the standard output .	print ( opt_label )
4808	return nothing .	return
2943	get the value under the key STR0 of the options dictionary , substitute it for exclude .	exclude = options . get ( STR0 )
17861	call the function datetime.datetime with utc as argument if call to the is_aware ( d ) returns True , if not None is the argument , store the result in now .	now = datetime . datetime . now ( utc if is_aware ( d ) else None )
8260	if fields is not None and f.name is not contained in fields ,	if fields is not None and f . name not in fields :
18696	call the function warnings.warn with 2 arguments : STR0 and RemovedInDjango19Warning .	warnings . warn ( STR0 , RemovedInDjango19Warning )
6998	for every c in reversed order of self.__class__.__mro__ ,	for c in reversed ( self . __class__ . __mro__ ) :
14362	if other_dict is an instance of MultiValueDict .	if isinstance ( other_dict , MultiValueDict ) :
8554	call the method form.save with an argument commit as commit , return the result .	return form . save ( commit = commit )
3624	convert settings.FIXTURE_DIRS to a list , extend dirs by it .	dirs . extend ( list ( settings . FIXTURE_DIRS ) )
8899	if ValueError exception is caught ,	except ValueError :
1989	substitute fail_silently for self.fail_silently .	self . fail_silently = fail_silently
2698	parser is an instance of CommandParser class , created with 3 arguments : self , prog as a string created by joining : os.path.basename ( prog_name ) and subcommand , separated by whitespace and description set to self.help , if exists , or None , otherwise .	parser = CommandParser ( self , prog = STR0 % ( os . path . basename ( prog_name ) , subcommand ) , description = self . help or None )
15370	called with 2 arguments : s and string_only as boolean True . if categories is true ,	to_unicode = lambda s : force_text ( s , strings_only = True )
7663	call the method six.iteritems with an argument base.base_fields , convert it to a list and append fields to it , substitute the result for fields .	fields = list ( six . iteritems ( base . base_fields ) ) + fields
3680	substitute dirpath for self.dirpath .	self . dirpath = dirpath
2689	parser is an instance of the object OptionParser , created with arguments : prog set to prog_name , usage set to return value of the method self.usage called with an argument subcommand , version set to return value of the method self.get_version .	parser = OptionParser ( prog = prog_name , usage = self . usage ( subcommand ) , version = self . get_version ( ) )
10610	derive the class StringOrigin form the base class Origin .	class StringOrigin ( Origin ) :
3091	from django.db import router and DEFAULT_DB_ALIAS into default name space .	from django . db import router , DEFAULT_DB_ALIAS
11288	define the function dec with an argument func .	def dec ( func ) :
10581	SINGLE_BRACE_END is a string STR0 .	SINGLE_BRACE_END = STR0
14251	self.dict is an instance of OrderedDict class , created with arguments : tuples with 2 argument x and None , for every x in iterables , if iterable is true , otherwise use an empty list as an argument .	self . dict = OrderedDict ( ( ( x , None ) for x in iterable ) if iterable else [ ] )
3061	try ,	try :
8442	substitute value under the NON_FIELD_ERRORS key of opts.error_messages dictionary for error_messages .	error_messages = opts . error_messages [ NON_FIELD_ERRORS ]
18553	if t.token_type equals TOKEN_BLOCK ,	if t . token_type == TOKEN_BLOCK :
18507	call the method blankout with 2 arguments : part and STR0 , write the result to out .	out . write ( blankout ( part , STR0 ) )
3434	convert new_name to a string and append string STR0 to it , substitute the result for new_name .	new_name = STR0 % new_name
13914	if header list is not None ,	if headerlist is not None :
4464	call the method parser.add_argument with 5 arguments : string STR2 , string STR3 , choices set to string self.shells , dest as a string STR4 and help as a string STR5 .	parser . add_argument ( STR2 , STR3 , choices = self . shells , dest = STR4 , help = STR5 )
14753	return _dec .	return _dec
5576	if value under the STR0 key of the self.options dictionary is true ,	if self . options . get ( STR0 ) :
16011	define the function remove_tags with 2 arguments : html and tags .	def remove_tags ( html , tags ) :
13220	if self._is_rendered is false .	if not self . _is_rendered :
8020	define the method __init__ with 3 arguments : self , unpacked list args and unpacked dictionary kwargs .	def __init__ ( self , * args , ** kwargs ) :
17218	delete attr .	del attr
14908	define the method __getitem__ with 2 arguments : self and key .	def __getitem__ ( self , key ) :
18749	from __future__ import absolute_import into default name space .	from __future__ import absolute_import
8280	if f doesnt has an STR0 attribute ,	if not hasattr ( f , STR0 ) :
15283	evaluate the method six.text_type ( s ) , on the result call the method encode with encoding as an argument , return the result .	return six . text_type ( s ) . encode ( encoding )
803	define initialization method __init__ with self class instance , unpacked list args , unpacked dictionary kwargs as arguments .	def __init__ ( self , * args , ** kwargs ) :
13797	return neg and res .	return neg , res
6436	call the function normalize with an argument p_pattern , substitute the result for bits .	bits = normalize ( p_pattern )
14585	i is integer 365 .	i = 365
14775	if result is not None ,	if result is not None :
14707	append site to sites .	sites . append ( site )
8860	return value.pk .	return value . pk
13225	call the method HttpResponse.content.fset with 2 arguments : self and value .	HttpResponse . content . fset ( self , value )
10438	property decorator ,	@ property
9122	define the method __str__ with an argument self .	def __str__ ( self ) :
5987	call the method tpl.format with an arguments self.name , self.sysid and self.pubid .	return tpl . format ( self . name , self . sysid , self . pubid )
3861	join into a path : path and string STR0 , where STR1 is replaced with self.domain converted into a string .	potfile = os . path . join ( path , STR0 % str ( self . domain ) )
3288	if confirm equals a string STR0 ,	if confirm == STR0 :
10954	if not ,	else :
13422	return supported .	return supported
9096	get the attribute STR0 of the cls object , if it exists substitute it for extend , if not extend is boolean True .	extend = getattr ( definition , STR0 , True )
6681	call a function _ with a string STR0 as an argument , substitute the result for message .	message = _ ( STR0 )
13262	return Operator .	return Operator
12123	substitute cyclevars for self.cyclevars .	self . cyclevars = cyclevars
11286	raise an TemplateSyntaxError exception with an argument string STR0 .	raise TemplateSyntaxError ( STR0 )
5036	return output .	return output
14845	define the function valid_ident with an argument s .	def valid_ident ( s ) :
8645	if self.can_delete is true and call to the function self._should_delete_form with an argument form evaluates to true ,	if self . can_delete and self . _should_delete_form ( form ) :
8268	for every f in file_field_list ,	for f in file_field_list :
4079	break the loop execution ,	break
6764	define the function validate_ipv46_address with an argument value .	def validate_ipv46_address ( value ) :
12589	call the method parse from the instance of TemplateIfParser class , created with 2 arguments parser and bits , substitute the result for condition .	condition = TemplateIfParser ( parser , bits ) . parse ( )
4297	call the method cursor.execute with sql as argument .	cursor . execute ( sql )
16236	break from the loop execution .	break
7127	substitute max_digits and decimal_places for self.max_digits and self.decimal_places .	self . max_digits , self . decimal_places = max_digits , decimal_places
9716	call the method handler.receive_data_chunk with 2 arguments : chunk and i-th element of counters , substitute the result for chunk .	chunk = handler . receive_data_chunk ( chunk , counters [ i ] )
7371	return boolean False ,	return False
16230	define the function http_date with an argument epoch_seconds set to None .	def http_date ( epoch_seconds = None ) :
7044	return boolean True .	return True
9981	derive the class RawPostDataException from the base class Exception .	class RawPostDataException ( Exception ) :
4564	output_transaction is boolean True .	output_transaction = True
5506	define the method end_object with argument self and obj .	def end_object ( self , obj ) :
11088	call the function force_str with 3 arguments : string STR0 , with STR1 replaced with first 25 elements of self.s string , string STR2 and errors set to a string STR3 , return the result .	return force_str ( STR0 % self . s [ : 25 ] , STR1 , errors = STR2 )
9135	self.attrs is an empty dictionary .	self . attrs = { }
10485	derive the class HttpResponsePermanentRedirect from the HttpResponseRedirectBase base class .	class HttpResponsePermanentRedirect ( HttpResponseRedirectBase ) :
1737	call the function middleware_method with the request and response as the arguments , assign the result to response .	response = middleware_method ( request , response )
6798	derive the class MaxValueValidator form the BaseValidator base class .	class MaxValueValidator ( BaseValidator ) :
13009	define the function calculate_app_template_dirs .	def calculate_app_template_dirs ( ) :
631	zip together new_keys and keys , convert it to dictionary , assign it to m .	m = dict ( zip ( new_keys , keys ) )
15962	kwargs_safe is a dictionary created for every k and v in result of the function six.iteritems called with an argument kwargs , with value result of the conditional_escape function called with an argument v for key k .	kwargs_safe = dict ( ( k , conditional_escape ( v ) ) for ( k , v ) in six . iteritems ( kwargs ) )
2891	from django.core import checks into default name space .	from django . core import checks
1897	evaluate the function http.parse_cookie with raw_cookie as an argument , return the result .	return http . parse_cookie ( raw_cookie )
1325	define the method accessed_time with arguments self and name .	def accessed_time ( self , name ) :
10721	call the method self.empty_variable with an argument token ,	self . empty_variable ( token )
9974	from django.utils.encoding import force_bytes , force_text , force_str and iri_to_uri into default name space .	from django . utils . encoding import force_bytes , force_text , force_str , iri_to_uri
12016	if value is None ,	if value is None :
18151	call the function re.compile with an argument string STR0 , substitute the result for trim_whitespace_re .	trim_whitespace_re = re . compile ( STR0 )
8632	if commit is true ,	if commit :
76	import module warnings .	import warnings
7687	substitute declared_fields for new_class.declared_fields .	new_class . declared_fields = declared_fields
6697	try ,	try :
9955	substitute first end elements of s for f .	f = s [ : end ]
2687	if self.use_argparse is false ,	if not self . use_argparse :
4730	call the method optimizer.optimize with 2 arguments operations and migration.app_label , substitute the result for new_operations .	new_operations = optimizer . optimize ( operations , migration . app_label )
10695	content is an empty string .	content = STR
16565	substitute record.request for request .	request = record . request
11246	call the function func with 2 arguments : unpacked list resolved_args and unpacked dictionary resolved_kwargs , return it .	return func ( * resolved_args , ** resolved_kwargs )
4294	try ,	try :
5001	call the function re.compile with an argument raw string STR0 , substitute the result for comment_re .	comment_re = re . compile ( STR0 )
8591	add row_data to seen_data set .	seen_data . add ( row_data )
14924	define the method __init__ with 2 arguments : self and config .	def __init__ ( self , config ) :
18636	define the method __init__ with 4 arguments : self , children set to None , connector set to None and negated set to boolean False .	def __init__ ( self , children = None , connector = None , negated = False ) :
7214	call the method formats.get_format_lazy with an argument string STR0 , substitute the result for input_formats .	input_formats = formats . get_format_lazy ( STR0 )
8388	raise an FieldError exception with an argument message .	raise FieldError ( message )
7739	if css_classes is true ,	if css_classes :
4381	define the method handle with 3 arguments : self , unpacked list args and unpacked dictionary options .	def handle ( self , * args , ** options ) :
12392	if self.asvar is None ,	if self . asvar is None :
10241	get is a string STR0 .	get = STR0
1184	substitute c_void_p for PVOID .	PVOID = c_void_p
7155	raise an ValidationError with 3 arguments : value under the STR0 key of the self.error_messages dictionary , code set to string STR1 and params set to a dictionary with an entry : self.decimal_places for STR2 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 , params = { STR2 : self . decimal_places } , )
10021	define the method get_full_path with an argument self .	def get_full_path ( self ) :
764	ERROR is integer 40 .	ERROR = 40
15751	get the value under the funcname key of the t-th elment of self.__dispatch dictionary , call the result with 3 arguments : res , unpacked list args and unpacked dictionary kw , return the result .	return self . __dispatch [ t ] [ funcname ] ( res , * args , ** kw )
676	define the method _cache with self class instance as an argument .	def _cache ( self ) :
6497	if TypeError exception is caught ,	except TypeError :
10818	define the method back with an argument self .	def back ( self ) :
5632	from django.utils import six into default name space .	from django . utils import six
3216	if model has an STR0 attribute ,	if hasattr ( model , STR0 ) :
17965	_localtime is an instance of LocalTimezone class .	_localtime = LocalTimezone ( )
13995	zip val1 and va2 into list of tuples , for every x and y in the result ,	for x , y in zip ( val1 , val2 ) :
6181	call the function zlib.compress with an argument data , substitute the result for compressed .	compressed = zlib . compress ( data )
16895	if ch is contained in string STR0 ,	if ch in STR0 :
11590	from django.utils.translation import ugettext and ungettext into default name space .	from django . utils . translation import ugettext , ungettext
17753	define the function normalize_newlines with an argument text .	def normalize_newlines ( text ) :
14833	if old_method is false and new_method is true ,	if not old_method and new_method :
12138	from pprint import pformat .	from pprint import pformat
9246	call the function mark_safe with an argument template , formated with substitutions , return the result .	return mark_safe ( template % substitutions )
3412	field_params is an empty dictionary .	field_params = { }
16719	split dotted_path into two parts from the right at the STR0 character , assign the result to module_path and class_name , respectively .	module_path , class_name = dotted_path . rsplit ( STR0 , 1 )
7046	if initial_value is not equal to data_value , return boolean True , otherwise return boolean False .	return initial_value != data_value
9032	from django.utils.safestring import mark_safe into default name space .	from django . utils . safestring import mark_safe
8652	from django.db.models import AutoField , OneToOneField and ForeignKey .	from django . db . models import AutoField , OneToOneField , ForeignKey
722	settings.SITE_ID .	settings . SITE_ID
8043	return self.forms element at the index index .	return self . forms [ index ]
530	return new_value .	return new_value
16802	if ImportError exception is caught ,	except ImportError :
52	return cache .	return cache
7101	derive the class FloatField from the base class IntegerField class .	class FloatField ( IntegerField ) :
12722	otherwise if length of bits equals integer 6 ,	elif len ( bits ) == 6 :
8958	if self is false ,	if not self :
3921	if pofile path exists ,	if os . path . exists ( pofile ) :
18604	split p into two parts at the first STR0 , use the second element of the result to format string STR1 , write it to out .	out . write ( STR0 % p . split ( STR1 , 1 ) [ 1 ] )
10475	allowed_schemes is an list containing 3 elements : strings STR0 , STR1 and STR2 .	allowed_schemes = [ STR0 , STR1 , STR2 ]
10116	try ,	try :
11492	from django.utils.encoding import force_text into default name space .	from django . utils . encoding import force_text
1958	from django.core.mail.message import EmailMessage , EmailMultiAlternatives , SafeMIMEText , SafeMIMEMultipart , DEFAULT_ATTACHMENT_MIME_TYPE , make_msgid , BadHeaderError and forbid_multi_line_headers into default name space .	from django . core . mail . message import ( EmailMessage , EmailMultiAlternatives , SafeMIMEText , SafeMIMEMultipart , DEFAULT_ATTACHMENT_MIME_TYPE , make_msgid , BadHeaderError , forbid_multi_line_headers )
15171	remove element under STR0 key of kwargs dictionary , substitute the result for value under STR1 key of kwargs dictionary .	kwargs [ STR0 ] = kwargs . pop ( STR1 )
11961	if AttributeError exception is caught ,	except AttributeError :
3219	for every dep in deps call the method apps.get_model with an argument dep , and append the result to the list , substitute it for deps .	deps = [ apps . get_model ( dep ) for dep in deps ]
1485	__all__ is a tuple containing strings : STR0 , STR1 , STR2 and STR3 .	__all__ = ( STR0 , STR1 , STR2 , STR3 )
131	define the method get with 4 arguments , self , key , default set to None and version set to None .	def get ( self , key , default = None , version = None ) :
14484	return a string STR0 formated with self.data.minute .	return STR0 % self . data . minute
4751	write string STR0 to self.stdout .	self . stdout . write ( STR0 )
14060	call the method os.chdir with an argument our_home_dir .	os . chdir ( our_home_dir )
12269	substitute var1 and var2 for self.var1 and self.var2 , respectively .	self . var1 , self . var2 = var1 , var2
2321	if from_email exists substitute from_email for self.from_email , if not substitute settings.DEFAULT_FROM_EMAIL for self.from_email .	self . from_email = from_email or settings . DEFAULT_FROM_EMAIL
10804	if filter_name is contained in self.filters ,	if filter_name in self . filters :
13511	get the directory name of filename , substitute it for dirname .	dirname = os . path . dirname ( filename )
12607	if not ,	else :
13662	if mtime is different than the value of dictionary _mtimes under the key filename ,	if mtime != _mtimes [ filename ] :
17583	for every part in parts ,	for part in parts :
3645	derive class SingleZipReader for zipfile.ZipFile base class .	class SingleZipReader ( zipfile . ZipFile ) :
10811	self.pointer is integer 0 .	self . pointer = 0
8881	define the method __init__ with 10 arguments : self , queryset , cache_choices set to None , required set to boolean True , widget set to None , label set to None , initial set to None , help_text set to an empty strign , unpacked list args and unpacked dictionary kwargs .	def __init__ ( self , queryset , cache_choices = None , required = True , widget = None , label = None , initial = None , help_text = STR , * args , ** kwargs ) :
2472	return commands .	return commands
12954	raise an TemplateSyntaxError exception with an argument string STR0 , where STR1 is replaced with first element of bits .	raise TemplateSyntaxError ( STR0 % bits [ 0 ] )
4527	from django.core.management.base import AppCommand into default name space .	from django . core . management . base import AppCommand
6646	from django.utils import six into default name space .	from django . utils import six
13521	derive the class ZipArchive from the BaseArchive base class .	class ZipArchive ( BaseArchive ) :
13245	define the method display with an argument self .	def display ( self ) :
13266	define the method nud with 2 arguments self and parser .	def nud ( self , parser ) :
1296	define the method save with arguments self , name and content .	def save ( self , name , content ) :
8014	MAX_NUM_FORM_COUNT is a string STR0 .	MAX_NUM_FORM_COUNT = STR0
16186	import module base64 .	import base64
17886	pytz is None .	pytz = None
17331	define the function itervalues with 2 arguments : d and unpacked dictionary kw .	def itervalues ( d , ** kw ) :
10428	streaming is boolean False .	streaming = False
10847	raise an TemplateSyntaxError exception with an argument string STR0 , where STR1 is replaced with i and STR2 is replaced with subject .	raise TemplateSyntaxError ( STR0 % ( i , subject ) )
14350	call the method self.iteritems , return list of results .	return list ( self . iteritems ( ) )
3081	otherwise if value under the key key of the user_settings dictionary is not equal to the value under the key key of the default_settings dictionary ,	elif user_settings [ key ] != default_settings [ key ] :
17094	substitute SafeBytes for SafeString .	SafeString = SafeBytes
10786	define the method unclosed_block_tag with 2 arguments : self and parse_until .	def unclosed_block_tag ( self , parse_until ) :
8671	call the method qs.using with an argument form.instance._state.db , substitute the result for qs .	qs = qs . using ( form . instance . _state . db )
1568	self.charset is None .	self . charset = None
8756	fks_to_parent is a list containing f for every f in opts.fields , only if f is an instance of ForeignKey , and , if f.rel.toequals parent_model or f.rel.to is contained in result of the call to the method parent_model._meta.get_parent_list .	fks_to_parent = [ f for f in opts . fields if isinstance ( f , ForeignKey ) and ( f . rel . to == parent_model or f . rel . to in parent_model . _meta . get_parent_list ( ) ) ]
16857	consume_next is boolean True .	consume_next = True
6771	raise a ValidationError exception with 2 arguments : return value of the function _ called with an argument string STR0 , and code set to string STR1 .	raise ValidationError ( _ ( STR0 ) , code = STR1 )
4580	substitute True for output_transaction .	output_transaction = True
13955	if ValueError exception is caught ,	except ValueError :
15111	if string STR0 is contained in config ,	if STR0 in config :
3803	if extensions is false , substitute it for exts , otherwise exts is a list containing string STR0 .	exts = extensions if extensions else [ STR0 ]
3307	call the method router.get_migratable_models with arguments app_config , database and include_auto_created set to boolean True , extend all_models list with the result .	all_models . extend ( router . get_migratable_models ( app_config , database , include_auto_created = True ) )
5652	call the function is_protected_type with an argument value , if it evaluates to true ,	if is_protected_type ( value ) :
16547	substitute logging.getLogger for getLogger .	getLogger = logging . getLogger
14837	from django.utils.deprecation import RemovedInDjango19Warning into default name space .	from django . utils . deprecation import RemovedInDjango19Warning
10944	if STR0 attribute of func object exists and is true ,	if getattr ( func , STR0 , False ) :
10000	if settings.USE_X_FORWARDED_HOST is true and STR0 is contained in self.META .	if settings . USE_X_FORWARDED_HOST and ( STR0 in self . META ) :
9369	input_type is None .	input_type = None
6985	if widget is an instance of type class ,	if isinstance ( widget , type ) :
14366	trym	try :
1879	define the method _get_request with self class instance as argument .	def _get_request ( self ) :
6907	call the function six.iteritems with an argument self.months , convert the result to a list and substitute it for choices .	choices = list ( six . iteritems ( self . months ) )
6956	import module warnings .	import warnings
7147	substitute absolute value of the exponent for decimals .	decimals = abs ( exponent )
18263	define the method _init_translation_catalog with an argument self .	def _init_translation_catalog ( self ) :
6396	if not ,	else :
1300	content is a File object instance created with content argument .	content = File ( content )
10293	from django.http.cookie import SimpleCookie into default name space .	from django . http . cookie import SimpleCookie
8472	call the method self._update_errors with an argument e .	self . _update_errors ( e )
7621	substitute unpack_ipv4 for self.unpack_ipv4 .	self . unpack_ipv4 = unpack_ipv4
505	delete the value under key key of self._cache dictionary .	del self . _cache [ key ]
16342	raise an TypeError with an argument string STR0 .	raise TypeError ( STR0 )
13934	call method sort on the headerlist .	headerlist . sort ( )
14391	substitute complain for __delslice__ .	__delslice__ = complain
16129	slice the list from the i-th to the endpos-th element , substitute it for self.__starttag_text .	self . __starttag_text = rawdata [ i : endpos ]
3941	call the function popen_wrapper with an argument args , assign the result to msgs , errors and status , respectively .	msgs , errors , status = popen_wrapper ( args )
15250	if not ,	else :
16318	if url_info.netloc is false and url_info.scheme is true ,	if not url_info . netloc and url_info . scheme :
8735	substitute self.fk.rel.field_name for value under the STR0 key of the kwargs dictionary .	kwargs [ STR0 ] = self . fk . rel . field_name
7701	self._errors is None .	self . _errors = None
6451	define the method namespace_dict with an argument self .	def namespace_dict ( self ) :
5889	if not ,	else :
10091	if self doesnt have an STR0 attribute ,	if not hasattr ( self , STR0 ) :
3632	substitute the last element of parts for parts .	parts = parts [ : - 1 ]
6687	define the method __call__ with arguments self and value .	def __call__ ( self , value ) :
2351	define the method recipients with argument self .	def recipients ( self ) :
16923	consume_next is boolean False .	consume_next = False
4654	if AmbiguityError exception is raised ,	except AmbiguityError :
5436	f _serializers is false ,	if not _serializers :
6299	raise an exception .	raise
17682	substitute i for end_index .	end_index = i
5045	define the function emit_post_migrate_signal with 4 arguments : created_models , verbosity , interactive and db .	def emit_post_migrate_signal ( created_models , verbosity , interactive , db ) :
5698	if field.rel.to._default_manager has an attribute STR0 ,	if hasattr ( field . rel . to . _default_manager , STR0 ) :
9843	bytes_read is integer 0 .	bytes_read = 0
8206	call the method self.empty_form.is_multipart , return the result	return self . empty_form . is_multipart ( )
1453	define the method close with self class instance as the argument .	def close ( self ) :
7283	raise an ValidationError with 2 arguments : value under the STR0 key of the self.error_messages dictionary and code set to STR1 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 )
5564	call the method self.options.update with dictionary as an argument , containing 1 element : boolean False for STR0 .	self . options . update ( { STR0 : False } )
16981	remove last element for quant .	quant = quant [ : - 1 ]
3648	call the method self.namelist , if the length of the result is not integer 1 ,	if len ( self . namelist ( ) ) != 1 :
16800	if not ,	else :
11459	for every d in last element of self.dicts ,	for d in self . dicts [ - 1 ] :
12219	if not ,	else :
18344	call the function do_translate with 2 arguments : message and string STR0 , return the result .	return do_translate ( message , STR0 )
15334	call the function is_aware with an argument date , if it evaluates to true ,	if is_aware ( date ) :
8369	if bases equals a tuple with an element : class BaseModelForm .	if bases == ( BaseModelForm , ) :
15883	define the method __deepcopy__ with 2 arguments self and memo .	def __deepcopy__ ( self , memo ) :
13960	import module hashlib .	import hashlib
18782	if length of version does not equals to integer 5 , raise an exception .	assert len ( version ) == 5
5930	try ,	try :
6682	schemes is a list containing 4 initial elements : STR0 , STR1 , STR2 and STR3 .	schemes = [ STR0 , STR1 , STR2 , STR3 ]
15223	define the private method __str__ , with self instance of this class as the only argument .	def __str__ ( self ) :
15036	if StandardError , renamed to e , exception is caught ,	except StandardError as e :
9944	substitute value for the vale under the name key of the pdict dictionary .	pdict [ name ] = value
6772	ip_address_validator_map is a dictionary containing 3 initial entries : tuple containing 2 elements : list with an element , validate_ipv46_address and return value of the function _ with an argument string STR0 for STR1 , tuple containing 2 elements : list with an element validate_ipv4_address and return value of the function _ with an argument string , STR2 for STR3 and tuple containing 2 elements : list with an element validate_ipv6_address , and return value of the function _ with an argument string STR4 for STR5 .	ip_address_validator_map = { STR0 : ( [ validate_ipv46_address ] , _ ( STR1 ) ) , STR2 : ( [ validate_ipv4_address ] , _ ( STR3 ) ) , STR4 : ( [ validate_ipv6_address ] , _ ( STR5 ) ) , }
2711	define the method print_help with 3 arguments : self , prog_name and subcommand .	def print_help ( self , prog_name , subcommand ) :
9904	if header_end equals integer negative 1 ,	if header_end == - 1 :
9973	from django.utils.datastructures import MultiValueDict and ImmutableList into default name space .	from django . utils . datastructures import MultiValueDict , ImmutableList
9907	substitute first header_end elements of chunk list for header .	header = chunk [ : header_end ]
66	if value under the DEFAULT_CACHE_ALIAS key of caches dictionary equals to other , return boolean True , otherwise return False .	return caches [ DEFAULT_CACHE_ALIAS ] == other
15432	if value under the STR0 key of the self.feed dictionary is not None ,	if self . feed [ STR0 ] is not None :
12408	define the method __init__ with 5 arguments : self , val_expr , max_expr , max_width and asvar set to None .	def __init__ ( self , val_expr , max_expr , max_width , asvar = None ) :
12926	blocks is a dictionary with elements : n for n.name , for every n in return value of the method , compiled_parent.nodelist.get_nodes_by_type , called with an argument BlockNode .	blocks = dict ( ( n . name , n ) for n in compiled_parent . nodelist . get_nodes_by_type ( BlockNode ) )
3671	and result of the bitwise OR performed on the re.MULTILINE and re.DOTALL operands , substitute the result for plural_forms_re/ STATUS_OK is integer 0 .	STATUS_OK = 0
17461	return wrapper .	return wrapper
15451	_version is a string STR0 .	_version = STR0
2877	for every role in termcolors.PALETTES list at the index termcolors.NOCOLOR_PALETTE ,	for role in termcolors . PALETTES [ termcolors . NOCOLOR_PALETTE ] :
5080	call the method parser.add_argument with 3 arguments : string STR0 , nargs set to STR1 and help set to string STR2 .	parser . add_argument ( STR0 , nargs = STR1 , help = STR2 )
8504	if STR0 attribute of Meta object is None and STR1 attribute of Meta object is None ,	if ( getattr ( Meta , STR0 , None ) is None and getattr ( Meta , STR1 , None ) is None ) :
1952	convert key and default to strings , get the value under the key string key of the environ dictionary , if it does not exists use the , default string value , substitute it for value .	value = environ . get ( str ( key ) , str ( default ) )
9587	try ,	try :
8405	if initial is not None ,	if initial is not None :
14339	for every key in self ,	for key in self :
3556	objects_in_fixture is integer 0 .	objects_in_fixture = 0
906	return an dictionary containing 1 entry : return value of the function timezone.get_current_timezone_name for STR0 .	return { STR0 : timezone . get_current_timezone_name ( ) }
13462	define the method close with an argument self .	def close ( self ) :
8995	define the method __repr__ with an argument self .	def __repr__ ( self ) :
9631	content_length is integer 0 .	content_length = 0
2612	import module os .	import os
17442	substitute type.__call__ for __call__ .	__call__ = type . __call__
2180	if self.fail_silently is false ,	if not self . fail_silently :
6707	define the function validate_integer with an argument value .	def validate_integer ( value ) :
2781	append e to infos list for every e in all_issues , if checks.INFO is lesser or equal to e.level , and e.level is lesser than checks.WARNING and result of the method e.is_silenced in false .	infos = [ e for e in all_issues if checks . INFO <= e . level < checks . WARNING and not e . is_silenced ( ) ]
1375	for every chunk in content.chunks function return value ,	for chunk in content . chunks ( ) :
7376	define the method _has_changed with arguments self , initial and data .	def _has_changed ( self , initial , data ) :
10890	raise an TemplateSyntaxError exception with an argument string STR0 , where STR1 is replaced with first upto elements of token string , token string elements from upto to start index , and token string elements from start index to the end .	raise TemplateSyntaxError ( STR0 % ( token [ : upto ] , token [ upto : start ] , token [ start : ] ) )
6006	from django.utils import six into default name space .	from django . utils import six
6970	from django.core.validators import EMPTY_VALUES into default name space .	from django . core . validators import EMPTY_VALUES
2990	from django.conf import settings into default name space .	from django . conf import settings
1382	if _file is not None ,	if _file is not None :
1132	if self does not have an attribute named STR0 .	if not hasattr ( self , STR0 ) :
13519	define the method close with an argument self .	def close ( self ) :
16861	get the next element of the iterable pattern_iter , assign the result for ch and escaped , respectively .	ch , escaped = next ( pattern_iter )
11162	if kwargs is true ,	if kwargs :
16390	convert result to lowercase and return it .	return result . lower ( )
205	self.abstract is boolean False .	self . abstract = False
16368	for every index in range of integers from 0 to length of hextets , not included ,	for index in range ( len ( hextets ) ) :
15580	locales is a list with an element locale .	locales = [ locale ]
197	derive class Options from the base class object .	class Options ( object ) :
17958	_localtime is None .	_localtime = None
15051	remove config dictionary element under STR0 key , if it exists substitute it for disable_existing , if not , disable_existing is boolean True .	disable_existing = config . pop ( STR0 , True )
10284	import module json .	import json
4773	derive class Command from the TemplateCommand base class .	class Command ( TemplateCommand ) :
8465	if self._validate_unique is true ,	if self . _validate_unique :
2968	extend locations with tuple containing dirpath and f , for every f in filenames , only if it ends with string STR0 .	locations . extend ( ( dirpath , f ) for f in filenames if f . endswith ( STR0 ) )
2010	define the method write_message with arguments self and message .	def write_message ( self , message ) :
18389	return boolean False .	return False
8162	return boolean False .	return False
18046	if settings.USE_I18N is true ,	if settings . USE_I18N :
8402	if not ,	else :
2567	if second element of options is true ,	if option [ 1 ] :
559	if KeyError exception is caught ,	except KeyError :
6081	substitute x for k and boolean True for v .	k , v = x , True
18210	_translations is an empty dictionary .	_translations = { }
6558	call the __init__ method of the base class of the class LocaleRegexURLResolver , with arguments : None , urlconf_name , default_kwargs , app_name and namespace .	super ( LocaleRegexURLResolver , self ) . __init__ ( None , urlconf_name , default_kwargs , app_name , namespace )
2674	STR2 , replace STR3 for self.__class__.__name__ . call the method self.requires_system_checks with an argument : self.requires_system_checks if has_new_option is true , or if it is false , but has_old_option is true use self.requires_model_validation , if they are both false use boolean True as an argument .	self . requires_system_checks = ( self . requires_system_checks if has_new_option else self . requires_model_validation if has_old_option else True )
904	define the function tz with an argument request .	def tz ( request ) :
6153	from django.utils import baseconv into default name space .	from django . utils import baseconv
18310	call the method gettext_module.NullTranslations , substitute the result for _active.value .	_active . value = gettext_module . NullTranslations ( )
16982	join elements of quant into a string , split it by string STR0 , substitute the result for values .	values = STR . join ( quant ) . split ( STR0 )
8519	define the method _existing_object with 2 arguments : self and pk .	def _existing_object ( self , pk ) :
460	if self._dir file path does not exists ,	if not os . path . exists ( self . _dir ) :
711	decorator register with argument Tags.compatibility .	@ register ( Tags . compatibility )
10521	define function fix_location_header with request and response as arguments .	def fix_location_header ( request , response ) :
4939	return final_output .	return final_output
8313	call the method qs.values_list with 2 arguments : string STR0 and flat set to boolean True , put the results in a list , substitute the result for value under the f.name key of data dictionary .	data [ f . name ] = list ( qs . values_list ( STR0 , flat = True ) )
14595	call the function six.text_type with an argument self.data.year , return the result without the first 2 elements .	return six . text_type ( self . data . year ) [ 2 : ]
7278	raise an ValidationError with 2 arguments : value under the STR0 key of the self.error_messages dictionary and code set to STR1 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 )
1597	return self.file .	return self . file
7450	initial is an empty list .	initial = [ ]
15930	from django.utils.safestring import SafeData and mark_safe into default name space .	from django . utils . safestring import SafeData , mark_safe
3280	call the function import_module with 2 arguments : string .management and app_config.name .	import_module ( STR0 , app_config . name )
16853	derive the class NonCapture from list base class .	class NonCapture ( list ) :
16829	if STR0 is not contained in str_number ,	if STR0 in str_number :
9393	call the function format_html with 2 arguments : string STR0 and result of the function flatatt , called with an argument final_attrs , return the result .	return format_html ( STR0 , flatatt ( final_attrs ) )
15025	if first two elements of sys.version_info equal to integers 2 ant 7 , respectively ,	if sys . version_info [ : 2 ] == ( 2 , 7 ) :
3356	if NotImplementedError exception is caught ,	except NotImplementedError :
15515	for every item in self.items ,	for item in self . items :
10871	while i is lesser than length of subject and i-th element of subject is an empty space or tab character .	while i < len ( subject ) and subject [ i ] in ( STR , STR0 ) :
16682	substitute value under the NEXT key of the oldroot dictionary for root and first element of nonlocal_root .	root = nonlocal_root [ 0 ] = oldroot [ NEXT ]
12024	convert bytes to floating point number , substitute it for bytes .	bytes = float ( bytes )
5580	if self.first is false ,	if not self . first :
16287	decrement factor by one .	factor -= 1
15754	value under the klass key of the cls.__dispatch dictionary is an empty dictionary .	cls . __dispatch [ klass ] = { }
14679	sites is an empty list .	sites = [ ]
11513	define the method create_token with 4 arguments : self , token_string , source and in_tag .	def create_token ( self , token_string , source , in_tag ) :
5250	if sys.platform starts with string STR0 ,	if sys . platform . startswith ( STR0 ) :
7743	if bf.label is true ,	if bf . label :
13174	raise an ContentNotRenderedError exception with an argument string STR0 .	raise ContentNotRenderedError ( STR0 )
9602	import module sys .	import sys
11292	call the method self.get_resolved_arguments with context as an argument , substitute the result for resolved_args and resolved_kwargs .	resolved_args , resolved_kwargs = self . get_resolved_arguments ( context )
11646	instantiate class Decimal with string STR0 as argument , divide it by product of instance of Decimal class created with integer 10 , and absolute value of p , substitute the result for exp .	exp = Decimal ( STR0 ) / ( Decimal ( 10 ) ** abs ( p ) )
13334	substitute self.current_token for t .	t = self . current_token
12339	output is an empty string .	output = STR
18480	join comment elements into a string , substitute it for content .	content = STR . join ( comment )
9049	call the method self.render , return the result .	return self . render ( )
3108	get the value under the STR0 key of the options dictionary , substitute the result for format .	format = options . get ( STR0 )
11830	try ,	try :
5703	call the method field.rel.to._meta.pk.to_python with an argument value , use the result as an argument for the call to the , smart_text function , return the result .	return smart_text ( field . rel . to . _meta . pk . to_python ( value ) )
17492	call the method threading.RLock , substitute the result for self.mutex .	self . mutex = threading . RLock ( )
74	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
482	define the method add with 5 arguments , self class instance , key , value , timeout set to DEFAULT_TIMEOUT and version set to None .	def add ( self , key , value , timeout = DEFAULT_TIMEOUT , version = None ) :
2948	if value under the STR0 key of os.environ dictionary exists .	if os . environ . get ( STR0 ) :
7491	return value .	return value
11075	call the function force_text with an argument bit , append the result to bits .	bits . append ( force_text ( bit ) )
18515	message_context is None .	message_context = None
9186	substitute render_value for self.render_value .	self . render_value = render_value
12333	if not ,	else :
18802	if attrs is None ,	if attrs is None :
8672	if form._meta.widgets is true ,	if form . _meta . widgets :
7260	default_validators is a list with an element validators.validate_email .	default_validators = [ validators . validate_email ]
15199	define the method configure_logger with 4 arguments : self , name , config , incremental set to boolean False .	def configure_logger ( self , name , config , incremental = False ) :
4884	call the method connection.creation.create_test_db with verbosity set to verbosity , autoclobber set to inverse value of interactive , serialize set to boolean False , substitute the return value for db_name .	db_name = connection . creation . create_test_db ( verbosity = verbosity , autoclobber = not interactive , serialize = False )
3447	append string STR0 to field_notes .	field_notes . append ( STR0 )
17777	return nothing .	return
10677	split tag_re by self.template_string separator , for every bit in result ,	for bit in tag_re . split ( self . template_string ) :
17131	substitute str for binary_type .	binary_type = str
5584	if indent is true ,	if indent :
1779	call the function reraise from the module six , with list of arguments exec_info .	six . reraise ( * exc_info )
10351	return value .	return value
13259	call the function func with 3 arguments : context , self.first and self.second , return the result .	return func ( context , self . first , self . second )
11484	processors is an empty tuple .	processors = ( )
9824	if InputStreamExhausted exception is caught ,	except InputStreamExhausted :
6968	from django.utils.six.moves.urllib.parse import urlsplit and urlunsplit into default name space .	from django . utils . six . moves . urllib . parse import urlsplit , urlunsplit
15716	substitute kw for self.__kw .	self . __kw = kw
11378	substitute context for self.context .	self . context = context
17511	increment self.active_writers by 1 .	self . active_writers += 1
12174	yield node .	yield node
6305	return lookup_view	return lookup_view
445	call the method self.validate_key with argument key .	self . validate_key ( key )
3573	if Exception , renamed to e , exception is caught ,	except Exception as e :
16098	substitute version_info from module sys for surrent_version .	current_version = sys . version_info
572	call the method self._expire_info.clear .	self . _expire_info . clear ( )
15927	import module sys .	import sys
5747	call the method self.represent_scalar with 2 arguments : string STR0 and data converted into a string , return the result .	return self . represent_scalar ( STR0 , str ( data ) )
1617	set file pointer at the beginning of the self.file file .	self . file . seek ( 0 )
11018	substitute element at the bit index of current for current .	current = current [ bit ]
18528	if inplural is true ,	if inplural :
4558	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
5098	raise an CommandError exception with an argument message .	raise CommandError ( message )
5884	otherwise , if field.rel is true and field.rel is an instance of models.ManyToOneRel ,	elif field . rel and isinstance ( field . rel , models . ManyToOneRel ) :
8418	exclude is an empty list .	exclude = [ ]
2787	if issues is true ,	if issues :
14010	dklen is None .	dklen = None
15090	try ,	try :
952	substitute message.error_list for message .	message = message . error_list
17815	define the function _replace_entity with an argument match .	def _replace_entity ( match ) :
17192	define the method __init__ with 6 arguments : self , name , old_mod , new_mod , old_attr set to None , new_attr set to None .	def __init__ ( self , name , old_mod , new_mod , old_attr = None , new_attr = None ) :
869	define the method tags_available with argument self .	def tags_available ( self ) :
11203	call the method self.tag with 2 arguments name and func , return the result .	return self . tag ( name , func )
18449	define the function blankout with 2 arguments : src and char .	def blankout ( src , char ) :
12301	if match is true ,	if match :
13916	if not ,	else :
2300	call the method MIMEMultipart.__setitem__ with arguments self , name and val .	MIMEMultipart . __setitem__ ( self , name , val )
4570	return nothing .	return
5843	call the method self.xml.startElement with an argument string STR0 .	self . xml . endElement ( STR0 )
15809	define the method inner with 2 arguments : self and unpacked list args .	def inner ( self , * args ) :
7956	substitute self.field.widget for widget .	widget = self . field . widget
11269	if name is true , substitute it for function_name , if not get STR0 attribute from func object , if it exists , substitute __name__ field of the result for function_name , in not , substitute func.__name__ for function_name .	function_name = ( name or getattr ( func , STR0 , func ) . __name__ )
6796	if other is an instance of self.__class__ and , self.limit_value equals to other.limit_value , and self.message equals to other.message , and self.code equals to other.code , return boolean True , otherwise return boolean False .	return isinstance ( other , self . __class__ ) and ( self . limit_value == other . limit_value ) and ( self . message == other . message ) and ( self . code == other . code )
7007	return value .	return value
17570	join elements of code_list in a string , separated by STR0 , format string STR1 with it , append text to the result if exists , return the string .	return STR0 % ( ( STR1 % STR2 . join ( code_list ) ) , text or STR )
13910	call the function _generate_cache_header_key with key_prefix and request as arguments , substitute the result for cache_key .	cache_key = _generate_cache_header_key ( key_prefix , request )
14763	define the function make_middleware_decorator with an argument middleware_class .	def make_middleware_decorator ( middleware_class ) :
11733	decorator function register.filter with an argument is_safe set to boolean False .	@ register . filter ( is_safe = False )
6101	call the function fastcgi_help with an argument string STR0 , return the result .	return fastcgi_help ( STR0 )
5556	from django.core.serializers.python import Serializer as PythonSerializer into default name space .	from django . core . serializers . python import Serializer as PythonSerializer
6889	substitute value.year , value.month and value.day for year_val , month_val and day_val , respectively .	year_val , month_val , day_val = value . year , value . month , value . day
13744	define the function main , with main_func , args defaulting to None and kwargs defaulting to None as arguments .	def main ( main_func , args = None , kwargs = None ) :
7312	if data has an STR0 attribute ,	if hasattr ( data , STR0 ) :
8537	if i is greater or equal to the result of the method self.initial_form_count and self.initial_extra is true ,	if i >= self . initial_form_count ( ) and self . initial_extra :
12403	define the method __init__ with 2 arguments : self and content .	def __init__ ( self , content ) :
11188	append resolved_args to a list containing context element , substitute it for resolved_args .	resolved_args = [ context ] + resolved_args
8855	define the method prepare_value with 2 arguments : self and value .	def prepare_value ( self , value ) :
3360	if NotImplementedError exception is caught ,	except NotImplementedError :
5867	raise an StopIteration exception .	raise StopIteration
2216	idstring is an empty string .	idstring = STR
4113	from django.core.management.base import BaseCommand and CommandError into default name space .	from django . core . management . base import BaseCommand , CommandError
17727	if ValueError exception is caught ,	except ValueError :
357	import module glob .	import glob
10452	define the method write with 2 arguments : self and content .	def write ( self , content ) :
12086	from django.template.defaultfilters import date into default name space .	from django . template . defaultfilters import date
5409	ba_serializer is a instance of BadSerializer class , created with an argument exc .	bad_serializer = BadSerializer ( exc )
9823	instantiate class BoundaryIter with 2 arguments : self._stream and self._boundary , use it to instantiate LazyStream class , return it .	return LazyStream ( BoundaryIter ( self . _stream , self . _boundary ) )
11618	special_floats is an list with 3 elements , pos_inf , neg_inf and nan , all converted to strings .	special_floats = [ str ( pos_inf ) , str ( neg_inf ) , str ( nan ) ]
11253	return dec .	return dec
1127	get property attribute _get_width , and substitute it for width .	width = property ( _get_width )
10517	raise an TypeError exception with an argument string STR0 .	raise TypeError ( STR0 )
563	if KeyError exception is caught ,	except KeyError :
18394	_supported is an instance of OrderedDict class , created with an argument settings.LANGUAGES .	_supported = OrderedDict ( settings . LANGUAGES )
9347	call the method render from the base class of the class NullBooleanSelect , with 4 arguments : name , value , attrs and choices , return the result .	return super ( NullBooleanSelect , self ) . render ( name , value , attrs , choices )
17865	call the function ugettext with STR0 as argument , use the result as the argument for the call to the avoid_wrapping function , return the result .	return avoid_wrapping ( ugettext ( STR0 ) )
6223	convert value , self.sep and return value of the function timestamp , concatenate them , substitute the result for value .	value = str ( STR0 ) % ( value , self . sep , self . timestamp ( ) )
3241	for every d in deps , if d is not contained in models and d is contained in model_list add boolean True to a tuple ,	for candidate in ( ( d not in models or d in model_list ) for d in deps ) :
9504	define the method format_output with 2 arguments : self and rendered_widgets .	def format_output ( self , rendered_widgets ) :
2373	if self.attachments is true ,	if self . attachments :
11316	try ,	try :
17375	raise an value.with_traceback exception with an argument tb .	raise value . with_traceback ( tb )
13822	define function dictvale , with an argument t .	def dictvalue ( t ) :
9068	return an instance of the class Media , called with an unpacked dictionary with an entry : name appended to string STR0 , attribute of the self object for name converted into a string .	return Media ( ** { str ( name ) : getattr ( self , STR0 + name ) } )
8236	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
3652	define the function humanize with an argument dirname .	def humanize ( dirname ) :
14963	match rest string with self.DIGIT_PATTERN regex , if it evaluates to false ,	if not self . DIGIT_PATTERN . match ( idx ) :
6879	self.month_none_value is a tuple containing 2 elements : integer 0 and second element of empty_label .	self . month_none_value = ( 0 , empty_label [ 1 ] )
6969	from django.utils.translation import ugettext_lazy as _ and ungettext_lazy into default name space .	from django . utils . translation import ugettext_lazy as _ , ungettext_lazy
18178	call the function gettext with an argument message , use the result as an argument for the call to the force_text function , return the result .	return force_text ( gettext ( message ) )
1006	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
8058	return form .	return form
18564	call the method imatch.group with an argument integer 1 , if it evaluates to true ,	if imatch . group ( 2 ) :
3718	call the function io.open with 3 arguments : self.dirpath and thefile joined into a file path , string STR0 ,	with io . open ( os . path . join ( self . dirpath , thefile ) , STR0 , encoding = STR1 ) as fp :
12852	do nothing .	pass
4131	call the method parser.add_argument with string STR0 , string STR1 , action contains string STR2 , dest set to string STR3 , default set to False , help containing string STR4 as arguments .	parser . add_argument ( STR0 , STR1 , action = STR2 , dest = STR3 , default = False , help = STR4 )
6793	call the self.compare method with arguments cleaned and self.limit_value , if it evaluates to true ,	if self . compare ( cleaned , self . limit_value ) :
8097	define the method initial_forms with an argument self .	def initial_forms ( self ) :
14701	call the function _findall with 2 arguments : s1 and year converted into a string , substitute the result for sites1 .	sites1 = _findall ( s1 , str ( year ) )
8982	convert elements of error into a list , substitute the first element for message .	message = list ( error ) [ 0 ]
10532	if request.method equals to string STR0 ,	if request . method == STR0 :
168	and MEMCACHE_MAX_KEY_LENGTH , call the function warnings.warn with previous string and CacheKeyWarning as arguments .	for char in key :
3104	call the method parser.add_argument with 6 arguments : string STR0 , string STR1 , action set to STR2 , dest is STR3 , default is boolean False and help is a string STR4 .	parser . add_argument ( STR1 , STR2 , action = STR3 , dest = STR4 , default = False , help = STR0 )
6921	format self.year_field string with name , use it as the key for the data dictionary , substitute the result for y .	y = data . get ( self . year_field % name )
18756	from unittest import import everything .	from unittest import *
11748	decorator function register.filter with 2 arguments is_safe set to boolean True and needs_autoescape set to boolean True .	@ register . filter ( is_safe = True , needs_autoescape = True )
14494	call the function _ with an argument string STR0 , return the result .	return _ ( STR0 )
9247	define the method value_from_datadict with 4 arguments : self , data , files and name .	def value_from_datadict ( self , data , files , name ) :
1360	if exception OSError , renamed to e , occurred ,	except OSError as e :
15851	call the method copy.deepcopy with 2 arguments : self._wrapped and memo , return the result .	return copy . deepcopy ( self . _wrapped , memo )
15336	multiply offset.days , integer 24 and integer 60 , sum the result with floored result of dividing offset.seconds by integer 60 , substitute the result for timezone .	timezone = ( offset . days * 24 * 60 ) + ( offset . seconds // 60 )
9745	call the method filename.rfind with an argument string `` \STR , increment the result by one , slice the filename from the previous result as start index to the end , strip it of white spaces from both ends , if the result is not an empty string and filename is not an empty string , return boolean True , otherwise return boolean False .	return filename and filename [ filename . rfind ( STR0 ) + 1 : ] . strip ( )
4778	call the method self.validate_name with arguments project_name and string STR0 .	self . validate_name ( project_name , STR0 )
17918	substitute self.STDOFFSET for self.DSTOFFSET .	self . DSTOFFSET = self . STDOFFSET
346	call the method self.validate_key with argument key .	self . validate_key ( key )
8818	sum length of self.quertset and integer 1 if self.field.empty_label is not None , or integer 0 if not , return the result .	return ( len ( self . queryset ) + ( 1 if self . field . empty_label is not None else 0 ) )
18609	call the method lineno_comment_map.setdefault with 2 arguments : t.lineno and an empty list , append t.contents to the result .	lineno_comment_map . setdefault ( t . lineno , [ ] ) . append ( t . contents )
2122	call the method threading.RLock , substitute the result for self._lock .	self . _lock = threading . RLock ( )
17259	append string STR0 to __name__ , use it as an key to get the value from the sys.modules dictionary , substitute it for request .	request = sys . modules [ __name__ + STR0 ]
14589	sum day_of_year , result of the subtraction of weekday from integer 7 and subtraction of integer 1 from jan1_weekday .	j = day_of_year + ( 7 - weekday ) + ( jan1_weekday - 1 )
16817	from django.utils import six into default name space .	from django . utils import six
7996	get the value under the STR0 key of the widget.attrs dictionary , if the key exists substitute it for id_ , if not , substitute self.auto_id for id_ .	id_ = widget . attrs . get ( STR0 ) or self . auto_id
16961	increment nesting by one .	nesting += 1
7517	if not ,	else :
2962	join basedir , l and string STR0 into a path separated by STR1 for every l in locales , assign the list to dirs .	dirs = [ os . path . join ( basedir , l , STR0 ) for l in locales ]
15280	if s is not an instance of the object six.string_types ,	if not isinstance ( s , six . string_types ) :
18732	if not ,	else :
6483	raise an Resolver404 exception with an argument dictionary containing 2 entries : new_path for STR0 and tried for STR1 .	raise Resolver404 ( { STR0 : tried , STR1 : new_path } )
16740	call the method apps.get_app_configs , for every app_config in the result ,	for app_config in apps . get_app_configs ( ) :
7178	for every format in self.input_formats ,	for format in self . input_formats :
6295	call the function get_mod_func with an argument mod_name , store the result in parentmod and submod , respectively .	parentmod , submod = get_mod_func ( mod_name )
12500	define the function csrf_token with 2 arguments : parser and token .	def csrf_token ( parser , token ) :
16941	call the function flatten_result with an argument result , unpack the resulting list and zip it in the list of tuples , return the result .	return list ( zip ( * flatten_result ( result ) ) )
9857	call the method self._find_boundary with 2 arguments : chunk and boolean if length of chunks is lesser than self._rollback , or boolean False if not , substitute the result for boundary .	boundary = self . _find_boundary ( chunk , len ( chunk ) < self . _rollback )
7608	call the method from_current_timezone with an argument result , return the result .	return from_current_timezone ( result )
7755	if hidden_fields is true ,	if hidden_fields :
7223	if value is an instance of datetime.datetime ,	if isinstance ( value , datetime . datetime ) :
5192	strip url of surrounding STR0 characters , substitute it for tmp .	tmp = url . rstrip ( STR0 )
12730	define the function do_with with 2 arguments : parser and token .	def do_with ( parser , token ) :
9348	define the method value_from_datadict with 4 arguments : self , data , files and name .	def value_from_datadict ( self , data , files , name ) :
16884	while escaped is true or ch is not equal to a string STR0 ,	while escaped or ch != STR0 :
14040	call the method dig1.update with an argument u .	dig1 . update ( u )
8558	if commit is true ,	if not commit :
6885	substitute self.none_value for self.month_none_value .	self . month_none_value = self . none_value
1807	derive class LimitedStream from the object base class , making it a new-style class .	class LimitedStream ( object ) :
11432	flat is an empty dictionary ,	flat = { }
5285	call the method os.environ.get with 2 arguments : strings STR0 and STR1 , split the result at os.pathsep , substitute it for pathext .	pathext = os . environ . get ( STR0 , STR1 ) . split ( os . pathsep )
2298	define the method __setitem__ with arguments self , name and val .	def __setitem__ ( self , name , val ) :
12064	if TypeError exception is caught ,	except TypeError :
3487	from django.utils import lru_cache into default name space .	from django . utils import lru_cache
17823	convert text to an integer , substitute it for c .	c = int ( text )
15374	item is a dictionary with 15 initial entries : result of the function to_unicode called with an argument title for STR0 ,	ttl = force_text ( ttl )
6180	if compress is true ,	if compress :
16563	define the method emit with 2 arguments : self and record .	def emit ( self , record ) :
17386	substitute _globs_ with an argument _locs_ .	_locs_ = _globs_
8498	parent is a tuple with 1 element , object .	parent = ( object , )
11279	call the method self.tag with 2 arguments : function_name and compile_func .	self . tag ( function_name , compile_func )
16880	otherwise if ch equals a string STR0 ,	elif ch == STR0 :
10311	replace STR1 in string STR0 with settings.DEFAULT_CONTENT_TYPE and self._charset , substitute it for content_type .	content_type = STR0 % ( settings . DEFAULT_CONTENT_TYPE , self . _charset )
14418	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
6193	substitute first element of base64d for base64d .	base64d = base64d [ 1 : ]
16562	substitute email_backend for self.email_backend .	self . email_backend = email_backend
7323	if f has an attribute STR0 and if f.seek is an callable object ,	if hasattr ( f , STR0 ) and callable ( f . seek ) :
13802	call the BaseConverter function with BASE62_ALPHABET as argument , store the result in base62 .	base62 = BaseConverter ( BASE62_ALPHABET )
15915	convert cls to a dictionary , convert the result into a set and convert convert into a set , roots is a set of differences of the two previous sets .	roots = set ( dir ( cls ) ) & set ( convert )
17269	delete name attribute of the _MovedItems object .	delattr ( _MovedItems , name )
15555	from django.utils.encoding import force_str into default name space .	from django . utils . encoding import force_str
11869	split arg by STR0 , for every x in result ,	for x in arg . split ( STR0 ) :
4822	import module os .	import os
11960	format value into printable data representation with formating rules arg , return the result .	return format ( value , arg )
618	return default .	return default
1459	do nothing .	pass
5735	from django.db import models into default name space .	from django . db import models
14303	update self.__dict__ dictionary with obj_dict .	self . __dict__ . update ( obj_dict )
3914	where STR0 is replaced with file_path . create an object TranslatableFile with arguments : dirpath , filename and locale_dir , append it to all_files .	all_files . append ( TranslatableFile ( dirpath , filename , locale_dir ) )
9659	try ,	try :
6908	call the method self.create_select with 6 arguments : name , self.month_field , value , month_val , choices and self.month_none_value , substitute the result for the value under the STR0 key of the html dictionary .	html [ STR0 ] = self . create_select ( name , self . month_field , value , month_val , choices , self . month_none_value )
1695	return response	return response
14424	from django.utils.translation import ugettext as _ into default name space .	from django . utils . translation import ugettext as _
15840	call the method cls.__new__ with 2 arguments : cls and unpacked list args .	return cls . __new__ ( cls , * args )
13394	join base an unpacked list paths into a string , get the absolute path in unicode representation of the result , substitute the result for final_path .	final_path = abspathu ( join ( base , * paths ) )
14604	df is an instance of DateFormat class , created with an argument value .	df = DateFormat ( value )
9264	call the function format_html with 3 arguments : string ( STR0 , return value of the function flatatt , called with an argument final_attrs and return value of the function force_text called with an argument value , return the result .	return format_html ( STR0 , flatatt ( final_attrs ) , force_text ( value ) )
10228	if safe is true ,	if safe :
18374	msgs_with_ctxt is a tuple containing 2 elements : string created by concatenating context , CONTEXT_SEPARATOR and singular , string created by concatenating context , CONTEXT_SEPARATOR and plural and number .	msgs_with_ctxt = ( STR0 % ( context , CONTEXT_SEPARATOR , singular ) , STR1 % ( context , CONTEXT_SEPARATOR , plural ) , number )
9423	call the method self.render , return the result .	return self . render ( )
15459	otherwise if value under the STR0 key of the item dictionary is true ,	elif item [ STR0 ] :
13468	if STR0 is contained in path , and only if STRspecial is contained in path and index of the first occurrence of STR1 in path is lesser than ,	if STR0 in path and ( ( STRspecial in path and path . find ( STR1 ) < path . find ( STRspecial ) ) or STRspecial not in path ) :
11837	if autoescape is true ,	if autoescape :
7873	return media .	return media
17575	LIGHT_PALETTE is a string STR0 .	LIGHT_PALETTE = STR0
1939	call the get_bytes_from_wsgi function with environ , string STR0 and empty strings as arguments , substitute the result for script_url .	script_url = get_bytes_from_wsgi ( environ , STR0 , STR )
2845	raise an NotImplementedError exception with an argument string STR0 .	raise NotImplementedError ( STR0 )
15543	for every cat in value under STR0 key of item dictionary ,	for cat in item [ STR0 ] :
17490	derive the class RWLock from the object base class .	class RWLock ( object ) :
6634	try ,	try :
2577	call the method parser.add_argument with an argument string STR0 .	parser . add_argument ( STR0 )
6689	call the value.split method with STR0 as argument , convert first element of the result to lower case , substitute the result for scheme .	scheme = value . split ( STR0 ) [ 0 ] . lower ( )
15778	call the method other.__cast , substitute the result for other .	other = other . __cast ( )
1916	re raise an exception .	raise
8213	define the method as_table with an argument self .	def as_table ( self ) :
18685	define the method negate with an argument self .	def negate ( self ) :
10411	if value is an instance of six.text_type class ,	if isinstance ( value , six . text_type ) :
11811	call the function remove_tags with 2 arguments value and tags , return the result .	return remove_tags ( value , tags )
8993	define the method __str__ with an argument self .	def __str__ ( self ) :
10145	break the loop execution .	break
8052	if self.is_bound is true ,	if self . is_bound :
13281	id is a string STR0 .	id = STR0
2050	pop the value under the STR0 key of kwargs dictionary , substitute it for self.file_path .	self . file_path = kwargs . pop ( STR0 )
8025	call the method __init__ from the base class of the class ManagementForm , called with 2 arguments : unpacked list args , and unpacked dictionary kwargs .	super ( ManagementForm , self ) . __init__ ( * args , ** kwargs )
13636	EventHandler.modified_code is FILE_MODIFIED .	EventHandler . modified_code = FILE_MODIFIED
12329	call the function self.filepath.resolve with an argument context , substitute the result for filepath .	filepath = self . filepath . resolve ( context )
9947	plist is an empty list .	plist = [ ]
3047	raise an CommandError with an argument string STR0 , replace STR1 with : tablename and return value of the function force_text called with an argument e , respectively .	raise CommandError ( STR0 % ( tablename , force_text ( e ) ) )
12936	define the method render with 2 arguments self and context .	def render ( self , context ) :
9781	get the next element of the self._producer iterable , substitute it for output .	output = next ( self . _producer )
10866	return res .	return res
11619	decorator function register.filter with an argument is_safe set to boolean True .	@ register . filter ( is_safe = True )
4548	output_transaction is boolean True .	output_transaction = True
127	return new_key .	return new_key
18698	substitute offset for self.__offset .	self . __offset = offset
11096	call the function escape with an argument value , return the result .	return escape ( value )
13132	derive the class Loader from the BaseLoader base class .	class Loader ( BaseLoader ) :
6421	substitute the tuple containing 2 elements p_pattern and pattern for value under the pattern.namespace key of the namespaces dictionary .	namespaces [ pattern . namespace ] = ( p_pattern , pattern )
5046	for app_config in return value of the method apps.get_app_configs ,	for app_config in apps . get_app_configs ( ) :
8610	define the method get_unique_error_message with 2 arguments : self and unique_check .	def get_unique_error_message ( self , unique_check ) :
753	define the function _check_middleware_classes with app_config set to None and kwargs dictionary as arguments .	def _check_middleware_classes ( app_configs = None , ** kwargs ) :
355	do nothing .	pass
3139	add app_config to excluded_apps set .	excluded_apps . add ( app_config )
6210	define the method unsign with arguments self and signed_value .	def unsign ( self , signed_value ) :
11805	decorator function register.filter with an argument is_safe set to boolean True .	@ register . filter ( is_safe = True )
10571	FILTER_ARGUMENT_SEPARATOR is a string STR0 .	FILTER_ARGUMENT_SEPARATOR = STR0
12796	raise an ImproperlyConfigured with an argument string STR1 .	raise ImproperlyConfigured ( STR1 )
18287	return .	return
9717	increment i-th element of counters by chunk_length .	counters [ i ] += chunk_length
6258	substitute url_name for self.url_name .	self . url_name = url_name
15416	call the method self.write_items with an argument handler .	self . write_items ( handler )
3517	self.fixture_count is integer 0 .	self . fixture_count = 0
4194	call the function call_command with string STR0 , verbosity set to greater element , self.verbosity decremented by 1 or integer 0 , interactive set to boolean False , database set to db , reset_sequences set to boolean False , inhibit_post_migrate set to boolean True .	call_command ( STR0 , verbosity = max ( self . verbosity - 1 , 0 ) , interactive = False , database = db , reset_sequences = False , inhibit_post_migrate = True , )
3721	append command.xgettext_options to list containing 15 elements : string STR0 , string STR1 , domain , string STR2 , string STR3 , string STR4 , string STR5 , string STR6 , string STR7 , string STR8 , string STR9 , string STR10 , string STR11 , string STR12 and string STR13 , substitute the result for args .	args = [ STR0 , STR1 , domain , STR2 , STR3 , STR4 , STR5 , STR6 , STR7 , STR8 , STR9 , STR10 , STR11 , STR12 , STR13 ] + command . xgettext_options
12035	call the function ugettext with 3 arguments , string STR0 , string STR1 and bytes ,	value = ungettext ( STR0 , STR1 , bytes ) % { STR2 : bytes }
2675	property decorator ,	@ property
9024	import module copy .	import copy
18751	from django.utils.deprecation import RemovedInDjango19Warning into default name space .	from django . utils . deprecation import RemovedInDjango19Warning
1381	call the function locks.unlock with argument fd .	locks . unlock ( fd )
15919	get the value under the root key of the convert dictionary , for every opname and opfunc in the result ,	for opname , opfunc in convert [ root ] :
11386	define the method _reset_dicts with 2 arguments : self and value set to None .	def _reset_dicts ( self , value = None ) :
2576	parser is an instance of CommandParser class , created with 3 arguments , None , usage as a string STR0 and add_help set to boolean False .	parser = CommandParser ( None , usage = STR0 , add_help = False )
11959	try ,	try :
9514	define the method __deepcopy__ with 2 arguments : self and memo .	def __deepcopy__ ( self , memo ) :
16643	call the function user_function with 2 arguments : unpacked list args and unpacked dictionary kwds , substitute the result for result .	result = user_function ( * args , ** kwds )
14178	if data is true , substitute list created from elements of data , substitute it for self.keyOrder , otherwise self.keyOrder is an empty list .	self . keyOrder = list ( data ) if data else [ ]
17985	raise an ValueError with an argument string STR0 , substitute STR1 with timezone .	raise ValueError ( STR0 % timezone )
7595	and errors set to the result of self.default_error_messages.copy .	errors = self . default_error_messages . copy ( )
4271	if custom_sql is empty ,	if custom_sql :
16111	define initialization method __init__ with self instance of the class as an argument .	def __init__ ( self ) :
1256	call the os.rename function with arguments old_file_name and new_file_name .	os . rename ( old_file_name , new_file_name )
8320	substitute model._meta for opts .	opts = model . _meta
2003	from django.core.mail.backends.base import BaseEmailBackend into default name space .	from django . core . mail . backends . base import BaseEmailBackend
12088	from django.utils.encoding import force_text and smart_text into default name space .	from django . utils . encoding import force_text , smart_text
16441	split ip_str into parts by STR0 , if STR1 is contained in the last element of the result ,	if STR0 in ip_str . split ( STR1 ) [ - 1 ] :
17712	call the function m.group , if the result evaluates to true ,	if m . group ( 1 ) :
5423	call the function _load_serializers .	_load_serializers ( )
15947	define the function escape with an argument text .	def escape ( text ) :
10722	try ,	try :
6731	call the method value.rsplit with arguments character STR0 and integer 1 , assign the result to user_part and domain_part , respectively .	user_part , domain_part = value . rsplit ( STR0 , 1 )
13085	substitute TemplateDoesNotExist for self.find_template_cache dictionary value under the key key .	self . template_cache [ key ] = TemplateDoesNotExist
2246	call the encode function on the Header class instance , created with arguments nm and string STR0 , substitute the result for nm .	nm = Header ( nm , STR0 ) . encode ( )
12614	parsed is boolean False .	parsed = False
622	call the method self._cache.set with key , value , self.get_backend_timeout ( timeout ) as arguments .	self . _cache . set ( key , value , self . get_backend_timeout ( timeout ) )
7574	if f equals to string STR0 ,	if f == STR0 :
15353	define the function get_tag_uri with 2 arguments : url and date .	def get_tag_uri ( url , date ) :
15412	call the method handler.startDocument .	handler . startDocument ( )
13698	define the function reloader_thread .	def reloader_thread ( ) :
14175	if data is None or data is an instance of dict type ,	if data is None or isinstance ( data , dict ) :
5665	substitute value for value under the field.name key of the self._current dictionary .	self . _current [ field . name ] = value
18199	from django.conf import settings into default name space .	from django . conf import settings
6228	call the baseconv.base62.decode method with an argument timestamp , substitute the result for timestamp .	timestamp = baseconv . base62 . decode ( timestamp )
13051	self.find_template_cache is an empty dictionary .	self . find_template_cache = { }
9103	sum m and value under the medium key of the base dictionary , substitute it for m .	m = m + base [ medium ]
8051	define the method management_form with an argument self .	def management_form ( self ) :
5322	if number is greater than self.num_pages ,	if number > self . num_pages :
15208	substitute DictConfigurator for dictConfigClass .	dictConfigClass = DictConfigurator
13137	for every template_dir in template_dirs ,	for template_dir in template_dirs :
4852	call the method logging.getLogger with an argument string STR0 , substitute the result for logger .	logger = logging . getLogger ( STR0 )
5774	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
10675	in_tag is boolean False .	in_tag = False
16410	return boolean False .	return False
10278	if pattern equals STR0 or pattern starts with STR1 or pattern equals host , and only if : host ends with STR2 and host ends with pattern or host is equal to all but first elements of pattern , substitute boolean true for match , otherwise substitute boolean False for match .	match = ( pattern == STR0 or pattern . startswith ( STR1 ) and ( host . endswith ( pattern ) or host == pattern [ 1 : ] ) or pattern == host )
5014	substitute model._meta for opts .	opts = model . _meta
16835	if decimal_pos is not None	if decimal_pos is not None :
17629	define the function wrap with 2 arguments text and width .	def wrap ( text , width ) :
7591	substitute SplitDateTimeWidget for widget .	widget = SplitDateTimeWidget
17916	call the function timedelta with an argument seconds set to negative _time.altzone , substitute the result for self.DSTOFFSET .	self . DSTOFFSET = timedelta ( seconds = - _time . altzone )
5571	write a STR0 to the self.stream file stream .	self . stream . write ( STR0 )
18432	if LookupError exception is caught ,	except LookupError :
10167	property decorator ,	@ property
430	return nothing .	return
3932	call the function io.open with 3 arguments : potfile , string STR and encoding set to string STR0 as arguments ,	with io . open ( potfile , STR , encoding = STR0 ) as fp :
1571	define the method handle_raw_input with arguments : self , input_data , META , content_length , boundary and encoding set to None .	def handle_raw_input ( self , input_data , META , content_length , boundary , encoding = None ) :
2013	if six.PY3 is boolean True ,	if six . PY3 :
26	raise and exception InvalidCacheBackendError with string STR0 as argument , replace STR1 with backend and e , respectively .	raise InvalidCacheBackendError ( STR0 % ( backend , e ) )
15193	get value under the STR0 key of the config dictioanry , if it exists substitute it for handlers , if not handlers is None .	handlers = config . get ( STR0 , None )
9216	define the method render with 4 arguments : self , name , value and attrs set to None .	def render ( self , name , value , attrs = None ) :
3924	if six.PY2 is true ,	if six . PY2 :
9159	define the method _format_value with 2 arguments : self and value .	def _format_value ( self , value ) :
4138	for every app_config in return value of the call to the function apps.get_app_configs ,	for app_config in apps . get_app_configs ( ) :
13246	return self.id .	return self . id
11651	call the method d.quantize with 3 arguments : exp , ROUND_HALF_UP and instance of Context class created with prec as prec , call the method as_tuple on the result , substitute the result for sign , digits and exponent , respectively .	sign , digits , exponent = d . quantize ( exp , ROUND_HALF_UP , Context ( prec = prec ) ) . as_tuple ( )
4446	write shutdown_message to self.stdout file stream .	self . stdout . write ( shutdown_message )
11644	exp is an instance of Decimal , created with an argument integer 1 .	exp = Decimal ( 1 )
9211	call the method data.getlist with an argument name , return the result .	return data . getlist ( name )
6839	from django.utils.safestring import mark_safe into default name space .	from django . utils . safestring import mark_safe
10489	define the method __init__ with 3 arguments : self , unpacked list args and unpacked dictionary kwargs .	def __init__ ( self , * args , ** kwargs ) :
12946	if Exception exception is caught ,	except Exception :
10304	reason_phrase is None .	reason_phrase = None
4513	get the value under the STR0 key of the options dictionary , if it evaluates to false ,	if not options [ STR0 ] :
5081	call the method parser.add_argument with 2 arguments : string STR0 and help set to string STR1 .	parser . add_argument ( STR0 , help = STR1 )
1594	define the method file_complete with arguments self and file_size .	def file_complete ( self , file_size ) :
9945	return key and pdict .	return key , pdict
15050	if not ,	else :
9794	join bytes and self._leftover into a bytes string , substitute it for self._leftover .	self . _leftover = STR . join ( [ bytes , self . _leftover ] )
1884	decorator cached_property .	@ cached_property
7128	call the method __init__ from the base class of the class DecimalField , with 4 arguments : max_value , min_value , unpacked list args and unpacked dictionary kwargs .	super ( DecimalField , self ) . __init__ ( max_value , min_value , * args , ** kwargs )
9793	decrement self.position by length of bytes .	self . position -= len ( bytes )
10886	upto is integer 0 .	upto = 0
9588	c is an instance of the class SimpleCookie .	c = SimpleCookie ( )
13025	define the method get_template_sources with 3 arguments : self , template_name , template_dirs set to None .	def get_template_sources ( self , template_name , template_dirs = None ) :
17239	delete attr .	del attr
1199	UnlockFileEx.argtypes is a list containing 5 elements : HANDLE , DWORD , DWORD , DWORD and LPOVERLAPPED .	UnlockFileEx . argtypes = [ HANDLE , DWORD , DWORD , DWORD , LPOVERLAPPED ]
12077	import module os .	import os
11779	return value .	return value
14218	define the method _itervalues with an argument self .	def _itervalues ( self ) :
13093	call the method self.find_template with 2 argumetns : template_name and template_dirs , assign the result to template , origin , respectively .	template , origin = self . find_template ( template_name , template_dirs )
5359	define the method __init__ with 4 arguments : self , object_list , number , and paginator .	def __init__ ( self , object_list , number , paginator ) :
7454	return boolean True .	return True
16195	from django.utils.functional import allow_lazy into default name space .	from django . utils . functional import allow_lazy
18435	call the function parse_accept_lang_header with an argument accept , for every accept_lang and unused in the result ,	for accept_lang , unused in parse_accept_lang_header ( accept ) :
3833	if process_all is true ,	if process_all :
153	define the method decr with arguments self , key , delta defaulting to integer 1 and version defaulting to None .	def decr ( self , key , delta = 1 , version = None ) :
229	convert expires to a string , use it as argument for the call to the function typecast_timestamp , substitute the result for expires .	expires = typecast_timestamp ( str ( expires ) )
812	define initialization method __init__ with self class instance , unpacked list args , unpacked dictionary kwargs as arguments .	def __init__ ( self , * args , ** kwargs ) :
10717	if token.token_type equals integer 0 ,	if token . token_type == 0 :
8475	fail_message is a string STR0 .	fail_message = STR0
12359	derive the class SpacelessNode from Node base class .	class SpacelessNode ( Node ) :
14928	split s into parts by STR0 , substitute the result for name .	name = s . split ( STR0 )
4425	call the method self.check_migrations .	self . check_migrations ( )
18780	from django import VERSION as version into default name space .	from django import VERSION as version
10273	return the first element of bits and an empty string .	return bits [ 0 ] , STR
14062	try ,	try :
15948	call the function force_text with an argument text , replace every occurrence of STR0 in the result with STR1 , every occurrence of STR2 with STR3 , every occurrence of STR4 with STR5 , every occurrence of STR with STR6 , and every occurrence of STR with STR7 , call the function mark_safe with the previous result as an argument , return the result .	return mark_safe ( force_text ( text ) . replace ( STR0 , STR1 ) . replace ( STR2 , STR3 ) . replace ( STR4 , STR5 ) . replace ( STR , STR6 ) . replace ( STR , STR7 ) )
11373	do nothing .	pass
14009	if dklen is false ,	if not dklen :
9795	define the method _update_unget_history with arguments self and num_bytes .	def _update_unget_history ( self , num_bytes ) :
6943	substitute STR0 in string STR1 with name , return it .	id_ = STR0 % name
10357	try ,	try :
4973	if not ,	else :
1304	define the method det_valid_name with arguments self and name .	def get_valid_name ( self , name ) :
9382	self.id_for_label is true ,	if self . id_for_label :
7871	call the method self.fields.values , for every field in result ,	for field in self . fields . values ( ) :
15650	otherwise if value is an instance of datetime.datetime ,	elif isinstance ( value , datetime . datetime ) :
992	if not ,	else :
3336	yield string STR0 as the result .	yield STR0
8631	append obj to self.deleted_objects list .	self . deleted_objects . append ( obj )
2536	slit by whitespace the value under the STR0 key of the os.environ dictionary , substitute the result without the first element for cwords .	cwords = os . environ [ STR0 ] . split ( ) [ 1 : ]
11712	try ,	try :
5957	define the method reset with an argument self .	def reset ( self ) :
5110	append string STR0 to app_or_project , substitute it for base_name .	base_name = STR0 % app_or_project
1379	write the chunk to the file _file .	_file . write ( chunk )
12459	register.tag decorator ,	@ register . tag
4313	append app_name to the invalid_apps .	invalid_apps . append ( app_name )
16204	__Y2 is a raw string STR0 .	__Y2 = STR0
9526	define the method decompress with 2 arguments : self and value .	def decompress ( self , value ) :
5459	from django.utils import six into default name space .	from django . utils import six
15124	call the method logging.Formatter with 2 arguments : fmt and dfmt , substitute the result for result .	result = logging . Formatter ( fmt , dfmt )
3635	if length of parts is greater than integer 1 .	if len ( parts ) > 1 :
2399	call the method Encoders.encode_base64 with an argument attachment .	Encoders . encode_base64 ( attachment )
7582	if f equals to string STR0 ,	if f == STR0 :
2966	for every ldir in dirs ,	for ldir in dirs :
10728	call the method self.extend_nodelist with 3 arguments : nodelist , var_node and token .	self . extend_nodelist ( nodelist , var_node , token )
4902	import module warnings .	import warnings
1681	substitute self._request_middleware for request_middleware .	self . _request_middleware = request_middleware
12592	call the method parser.next_token , substitute the result for token .	token = parser . next_token ( )
5870	data is an empty dictionary .	data = { }
8688	derive the class BaseInlineFormSet from the BaseModelFormSet base class .	class BaseInlineFormSet ( BaseModelFormSet ) :
13043	import module hashlib .	import hashlib
2153	raise an exception .	raise
9869	return last rollback elements of chunk .	return chunk [ : - rollback ]
7650	from django.utils import six into default name space .	from django . utils import six
15672	for every replacement in the resulting set , replace every occurrence of replacement in value for an empty string , substitute the result for value .	value = value . replace ( replacement , STR )
14180	call the method __init__ from the base class of the class SortedDict .	super ( SortedDict , self ) . __init__ ( )
4526	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
13352	define the method transform with 3 arguments : self , node and results .	def transform ( self , node , results ) :
8952	derive the class ErrorDict from the dict base class .	class ErrorDict ( dict ) :
9949	substitute s without the first element for s .	s = s [ 1 : ]
15725	value under the resultclass key of the cls.__dispatch dictionary is an empty dictionary .	cls . __dispatch [ resultclass ] = { }
16915	if terminal_char is not equal to string STR0 ,	if terminal_char != STR0 :
7638	import module copy .	import copy
13701	substitute inotify_code_changed for fn .	fn = inotify_code_changed
8528	if self.is_bound is true and i is smaller than self.initial_form_count ,	if self . is_bound and i < self . initial_form_count ( ) :
9739	for every i and handler in enumerated iterator self._upload_handlers ,	for i , handler in enumerate ( self . _upload_handlers ) :
15712	derive the class __proxy__ from the Promise base class .	class __proxy__ ( Promise ) :
18401	if code is contained in _supported and call to the function check_for_language with an argument code evaluates to true ,	if code in _supported and check_for_language ( code ) :
5540	define the function build_instance with 3 arguments : Model , data and db .	def build_instance ( Model , data , db ) :
18499	if inplural is true ,	if inplural :
14166	join printable representation of d into a string separated with STR0 , for every d in self.dicts , substitute the result for dictreprs .	dictreprs = STR0 . join ( repr ( d ) for d in self . dicts )
8326	if fields is not None and f.name is not contained in fields ,	if fields is not None and f . name not in fields :
13215	if self._is_rendered is false ,	if not self . _is_rendered :
15984	append d to self.fed .	self . fed . append ( d )
17300	define the function advance_iterator with an argument it .	def advance_iterator ( it ) :
5945	define the method __init__ with arguments self , unpacked list args and unpacked dictionary kwargs .	def __init__ ( self , * args , ** kwargs ) :
4907	from django.utils.deprecation import RemovedInDjango19Warning into default name space .	from django . utils . deprecation import RemovedInDjango19Warning
2264	if six.PY2 is boolean True ,	if six . PY2 :
7805	return boolean True .	return True
13998	zip val1 and va2 into list of tuples , for every x and y in the result ,	for x , y in zip ( val1 , val2 ) :
1922	call the logger.warning method with string STR0 , exec_info set to sys.exec_info ( ) and dictionary extra with one entry STR1 is integer 400 , as arguments .	logger . warning ( STR0 , exc_info = sys . exc_info ( ) , extra = { STR1 : 400 , } )
121	timeout is a integer -1 .	timeout = - 1
18559	if first element of g equals a string STR ,	if g [ 0 ] == STR :
3442	if new_name is contained in used_column_names ,	if new_name in used_column_names :
3663	from django.core.management.base import CommandError and BaseCommand into default name space .	from django . core . management . base import CommandError , BaseCommand
12571	define the method eval with 2 arguments : self and context .	def eval ( self , context ) :
14903	if value is not contained in result ,	if value is not result :
13470	otherwise if STRspecial is contained in path ,	elif STRspecial in path :
3765	call the method parser.add_argument with 5 arguments : string STR0 , string STR1 , default as a empty list , dest as a string STR2 , action as a string STR3 and help as a string STR4 .	parser . add_argument ( STR0 , STR1 , default = [ ] , dest = STR2 , action = STR3 , help = STR4 )
3990	call the method parser.add_argument with 5 arguments : string STR1 , action as a string STR2 , dest as a string STR3 , default set to boolean False and help as a string STR0 .	parser . add_argument ( STR1 , action = STR2 , dest = STR3 , default = False , help = STR0 )
7367	define the method to_python with arguments self and value .	def to_python ( self , value ) :
3418	if new_name ends with string STR0 ,	if new_name . endswith ( STR0 ) :
13490	define the method __init__ with 2 arguments self and file .	def __init__ ( self , file ) :
15996	return value .	return value
5967	derive the class DTDForbidden from the DefusedXmlException base class .	class DTDForbidden ( DefusedXmlException ) :
7775	substitute the value under the fieldname key of the self.fields dictionary for field .	field = self . fields [ fieldname ]
8820	return a tuple with 2 elements : result of the method self.field.prepare_value called with an argument obj , and result of the method self.field.label_from_instance , called with an argument obj .	return ( self . field . prepare_value ( obj ) , self . field . label_from_instance ( obj ) )
5907	call the function getInnerText with an argument node , call the strip method on the result , substitute the result for field_value .	field_value = getInnerText ( node ) . strip ( )
17994	if self.timezone is None ,	if self . timezone is None :
11445	substitute use_tz for self.use_tz .	self . use_tz = use_tz
15940	call the function re.compile with 2 arguments : raw string STR0 and re.IGNORECASE , substitute the result for simple_url_re .	simple_url_re = re . compile ( STR0 , re . IGNORECASE )
3226	append rel_model to deps .	deps . append ( rel_model )
14608	call the method tf.format with an argument format_string , return the result .	return tf . format ( format_string )
2121	self.connection is None .	self . connection = None
7378	convert initial into boolean and substitute it for initial .	initial = bool ( initial )
18342	return result .	return result
12289	property decorator ,	@ property
18509	if message_context is true ,	if message_context :
5760	define the function Deserializer with 2 arguments : stream_or_string and unpacked dictionary options .	def Deserializer ( stream_or_string , ** options ) :
813	call the __init__ method with 3 arguments : CRITICAL , unpacked list args and unpacked dictionary kwargs from the base class of Critical .	return super ( Critical , self ) . __init__ ( CRITICAL , * args , ** kwargs )
17578	define the function parse_color_setting with an argument config_string .	def parse_color_setting ( config_string ) :
18294	define the method to_language with an argument self .	def to_language ( self ) :
4812	call the method input with an argument msg and store the result in confirm .	confirm = input ( msg )
15802	break from the loop execution ,	break
9041	substitute media.__dict__ for media_attrs .	media_attrs = media . __dict__
10340	call the method value.decode with an argument charset .	value . decode ( charset )
15658	otherwise if value is an instance of datetime.time ,	elif isinstance ( value , datetime . time ) :
2879	sets the role attribute of the style object to the value of the call to the termcolors.make_style function with dictionary format as an argument .	setattr ( style , role , termcolors . make_style ( ** format ) )
14926	substitute self for self.config.configurator .	self . config . configurator = self
9080	call the method self._css.setdefault with 2 arguments medium and an empty string , append path to the result .	self . _css . setdefault ( medium , [ ] ) . append ( path )
11158	convert param to a string , use it as a key to get the value from kwargs dictionary , assign it value .	kwargs [ str ( param ) ] = value
18243	convert locale to lowercase and return it .	return locale . lower ( )
5734	from io import StringIO into default name space .	from io import StringIO
10355	substitute tuple containing 2 elements : header and value for the value under the header converted to lowercase key of the self._headers dictionary .	self . _headers [ header . lower ( ) ] = ( header , value )
13891	call the function force_text , with the function get_current_timezone_name and errors set to string STR0 as arguments , replace the result for tz_name .	tz_name = force_text ( get_current_timezone_name ( ) , errors = STR0 )
9672	call the function force_text with 3 arguments : field_name , encoding and errors as a string STR0 , substitute the result for field_name .	field_name = force_text ( field_name , encoding , errors = STR0 )
3034	if f.db_index is true ,	if f . db_index :
13375	call the function sys.getfilesystemencoding if it evaluates to true , substitute its result for fs_encoding , otherwise call the function sys.getdefaultencoding and substitute its result for fs_encoding .	fs_encoding = sys . getfilesystemencoding ( ) or sys . getdefaultencoding ( )
15094	for every log in existing ,	for log in existing :
17948	substitute exc for exc_value.__cause__ .	exc_value . __cause__ = exc
4404	otherwise if self.use_ipv6 is true and _fqdn is false ,	elif self . use_ipv6 and not _fqdn :
5109	call the method self.stdout.write , with an argument string STR0 , where STR1 is replaced with app_or_project and extra_files joined into a string , separated by a string STR2 .	self . stdout . write ( STR0 % ( app_or_project , STR1 . join ( extra_files ) ) )
11598	if first element of args is an instance of SafeData , and STR0 attribute of dec._decorated_function object is true ,	if ( isinstance ( args [ 0 ] , SafeData ) and getattr ( _dec . _decorated_function , STR0 , False ) ) :
17901	define the method __init__ with 3 arguments : self , offset set to None , name set to None .	def __init__ ( self , offset = None , name = None ) :
7089	convert value into an string , convert the result into an integer and substitute it for value .	value = int ( str ( value ) )
8955	define the method as_json with 2 argumens self and escape_html set to boolean False .	def as_json ( self , escape_html = False ) :
13641	return nothing .	return
5017	join app_dir and string STR0 into a file path , use the result as an argument for the call to the function os.path.normpath ,	app_dirs . append ( os . path . normpath ( os . path . join ( app_dir , STR0 ) ) )
16061	url is None .	url = None
8400	call the method opts.model , substitute the result for self.instance .	self . instance = opts . model ( )
11582	from django.utils.dateformat import format and time_format into default name space .	from django . utils . dateformat import format , time_format
99	convert timeout into an integer .	timeout = int ( timeout )
9547	try ,	try :
14641	if first element of tzinfo equals STR0 ,	if tzinfo [ 0 ] == STR0 :
14392	substitute complain for __iadd__ .	__iadd__ = complain
7937	property decorator ,	@ property
9854	if chunks is false ,	if not chunks :
2221	return msgid .	return msgid
4365	from django.db.migrations.executor import MigrationExecutor into default name space .	from django . db . migrations . executor import MigrationExecutor
140	call the self.get method with k and version set to version as arguments , substitute the result for val .	val = self . get ( k , version = version )
16471	derive the class Tok from the object base class .	class Tok ( object ) :
16136	match the rawdata from the position k , with attrfind pattern , assign the result to the m .	m = _html_parser . attrfind . match ( rawdata , k )
4626	call the add_arguments method with parser as argument form the base class of the class Command .	super ( Command , self ) . add_arguments ( parser )
8035	substitute error_class for self.error_class .	self . error_class = error_class
16624	create a tuple out of types of v , for every k and v in sorted_items , extend key tuple with the result .	key += tuple ( type ( v ) for k , v in sorted_items )
10418	if Exception exception is caught ,	except Exception :
14645	substitute tzinfo for value under the STR0 key of the kw dictionary .	kw [ STR0 ] = tzinfo
8755	if not ,	else :
1570	self.request is None .	self . request = request
16950	skip this loop iteration .	continue
4027	call the method autodetector.changes with 3 arguments : graph set to loader.graph , trim_to_apps set to app_labels , if it exists or None if not and convert_apps set to app_labels , if it exists or None if not , substitute the result for changes .	changes = autodetector . changes ( graph = loader . graph , trim_to_apps = app_labels or None , convert_apps = app_labels or None , )
11858	try ,	try :
9610	__all__ is an tuple with 3 elements : strings STR0 , STR1 and STR2 .	__all__ = ( STR0 , STR1 , STR2 )
3501	call the method parser.add_argument with 4 arguments : string STR0 , metavar set to string STR1 , nargs set to STR2 , and help set to STR3 .	parser . add_argument ( STR0 , metavar = STR1 , nargs = STR2 , help = STR3 )
1626	define lambda function that returns self.file.newlines field , use it as an argument for property function , put the result in newlines .	newlines = property ( lambda self : self . file . newlines )
6965	from django.utils.ipv6 import clean_ipv6_address into default name space .	from django . utils . ipv6 import clean_ipv6_address
13512	if dirname is true and dirname directory doesnt exists ,	if dirname and not os . path . exists ( dirname ) :
11975	return an empty string .	return STR
10950	if STR0 attribute of func object exists and is true and obj is an instance of SafeData ,	if getattr ( func , STR0 , False ) and isinstance ( obj , SafeData ) :
5324	do nothing .	pass
6937	substitute STR0 in string STR1 with y , m and d , return the result .	return STR0 % ( y , m , d )
18260	translation._catalog is an empty dictionary .	translation . _catalog = { }
15005	for every name and value in items of props dictionary ,	for name , value in props . items ( ) :
10409	if value is an instance of bytes class ,	if isinstance ( value , bytes ) :
9070	define the method __getitem__ with arguments self and name .	def add_js ( self , data ) :
17396	if data is not an instance of basestring ,	if not isinstance ( data , basestring ) :
12591	append a tuple with 2 elements : condition and nodelist to conditions_nodelists .	conditions_nodelists . append ( ( condition , nodelist ) )
3657	import module io .	import io
16323	from django.utils import six into default name space .	from django . utils import six
16957	for every ch and escaped in input_iter ,	for ch , escaped in input_iter :
18572	message_context is None .	message_context = None
15192	call the method logger.removeHandler with an argument h .	logger . removeHandler ( h )
15550	import module datetime .	import datetime
13679	substitute ev.filename for filename .	filename = ev . filename
13219	define the method content with an argument self .	def content ( self ) :
11268	return an empty string .	return STR
9960	import module copy .	import copy
5160	if path_to_remove is file ,	if path . isfile ( path_to_remove ) :
1992	define the method close with argument self .	def close ( self ) :
5690	call the method Model._meta.get_all_field_names , substitute the result for model_fields .	model_fields = Model . _meta . get_all_field_names ( )
14454	call the function _ with an argument string STR0 , return the result .	return _ ( STR0 )
16960	otherwise if ch equals a string STR0 ,	elif ch == STR0 :
13152	if tried is true ,	if tried :
6379	define the method __init__ with 6 arguments : self , regex , urlconf_name , default_kwargs set to None , app_name set to None and namespace set to None .	def __init__ ( self , regex , urlconf_name , default_kwargs = None , app_name = None , namespace = None ) :
12230	substitute node.source for e.django_template_source .	e . django_template_source = node . source
2881	if not ,	else :
5481	call the self.start_object with an argument obj .	self . start_object ( obj )
10420	call the method signals.request_finished.send with an argument sender set to self._handler_class .	signals . request_finished . send ( sender = self . _handler_class )
10831	while i is lesser than length of subject and i-th element of subject is an empty space or tab character ,	while i < len ( subject ) and subject [ i ] in ( STR , STR0 ) :
3409	for meta_line in return value of the method self.get_meta called with an argument table_name .	for meta_line in self . get_meta ( table_name ) :
1491	substitute content_type for self.content_type .	self . content_type = content_type
17888	from django.utils import six into default name space .	from django . utils import six
14042	call the method dig2.digest , substitute the result for u .	u = dig2 . digest ( )
10446	call the self.make_bytes method with an argument chunk , for every chunk in value join the result to a bytes string , substitute the result for value .	value = STR . join ( self . make_bytes ( chunk ) for chunk in value )
10705	define the method __init__ with 2 arguments : self and token .	def __init__ ( self , tokens ) :
17833	define the function unescape_entities with an argument text .	def unescape_entities ( text ) :
14860	if not ,	else :
493	call the method self.validate_key with argument key .	self . validate_key ( key )
1372	_file is None .	_file = None
9301	allow_multiple_selected is boolean False .	allow_multiple_selected = False
3479	import module warnings .	import warnings
1893	substitute post for self._post .	self . _post = post
5992	substitute base for self.base .	self . base = base
10260	if s is an instance of bytes class ,	if isinstance ( s , bytes ) :
8698	call the method queryset.filter with an argument unpacked dictionary containing self.instance for self.fk.name , substitute the result for qs .	qs = queryset . filter ( ** { self . fk . name : self . instance } )
1518	call the self.file.close method , return the result .	return self . file . close ( )
410	define the method delete with self class instance , key and version defaulting to None as arguments .	def delete ( self , key , version = None ) :
8004	from django.utils.encoding import python_2_unicode_compatible into default name space .	from django . utils . encoding import python_2_unicode_compatible
7674	append a tuple with elements key and value to current_fields .	current_fields . append ( ( key , value ) )
10025	substitute value under the key key of the self.COOKIES dictionary , substitute it for cookie_value .	cookie_value = self . COOKIES [ key ]
13445	raise an UnrecognizedArchiveFormat exception with an argument string STR0 .	raise UnrecognizedArchiveFormat ( STR0 )
1961	call the function import_string with backend if exists or settings.EMAIL_BACKEND if not , store the result into klass .	klass = import_string ( backend or settings . EMAIL_BACKEND )
5063	from os import path into default name space .	from os import path
9200	call the method self.build_attrs with 3 arguments : attrs , type set to self.input_type , name set to name , substitute the result for final_attrs .	final_attrs = self . build_attrs ( attrs , type = self . input_type , name = name )
16812	do nothing .	pass
14323	substitute default for value under the key key of self dictionary .	self [ key ] = default
16396	return ip_str .	return ip_str
6538	if the value of the kwargs dictionary under the key k is not equal to v ,	if kwargs . get ( k , v ) != v :
18099	define the function npgettext_lazy with 4 arguments : context , singular , plural and number set to None .	def npgettext_lazy ( context , singular , plural , number = None ) :
17936	call the method _time.localtime with an argument stamp , substitute the result for tt .	tt = _time . localtime ( stamp )
13328	define the method parse with an argument self .	def parse ( self ) :
9674	if transfer_encoding equals a string STR0 ,	if transfer_encoding == STR0 :
18370	if not ,	else :
12899	must_be_first is boolean True .	must_be_first = True
4372	help is a string STR0 .	help = STR0
11882	escaper is an identity lambda function .	escaper = lambda x : x
17503	call the method self.can_read.release .	self . can_read . release ( )
13821	return first element of t converted to lowercase and boolean True , as a tuple .	return ( t [ 0 ] . lower ( ) , True )
4669	output_transaction is boolean True .	output_transaction = True
13376	if six.PY3 is true or os.name equals a string STR0 ,	if six . PY3 or os . name == STR0 :
3222	for every field in model._meta.fields ,	for field in model . _meta . fields :
12487	silent is boolean False .	silent = False
8202	define the method is_multipart with an argument self .	def is_multipart ( self ) :
11338	templatetags_modules_candidates is an list with an argument string STR0 .	templatetags_modules_candidates = [ STR0 ]
9742	call the function force_text with 3 arguments : old_field_name , self._encoding and errors as a string STR0 , use the result and file_obj as arguments for the call to the method self._files.appendlist .	self . _files . appendlist ( force_text ( old_field_name , self . _encoding , errors = STR0 ) , file_obj )
319	call the ops.quote_name method with argument self._table on the object under the db key of connections dictionary , substitute the result for table .	table = connections [ db ] . ops . quote_name ( self . _table )
5379	define the method next_page_number with an argument self .	def next_page_number ( self ) :
11497	derive the class DebugLexer from the Lexer base class .	class DebugLexer ( Lexer ) :
693	from django.utils.http import urlquote into default name space .	from django . utils . http import urlquote
7645	from django.utils.deprecation import RemovedInDjango19Warning into default name space .	from django . utils . deprecation import RemovedInDjango19Warning
14438	join elements of pieces into a string , return it .	return STR . join ( pieces )
15467	if value under the STR0 key of the item dictionary is not None ,	if item [ STR0 ] is not None :
8302	skip this loop iteration .	continue
14379	delete element under STR0 key of kwargs dictionary .	del kwargs [ STR0 ]
12335	try ,	try :
15110	define the method configure_formatter with 2 arguments : self and config .	def configure_formatter ( self , config ) :
3357	relations is an empty dictionary .	relations = { }
11710	decorator stringfilter ,	@ stringfilter
9884	define the function exhaust with an argument stream_or_iterable .	def exhaust ( stream_or_iterable ) :
15825	set name attribute of self._wrapped object to value .	setattr ( self . _wrapped , name , value )
6924	if y , m and d are all equal to string STR0 ,	if y == m == d == STR0 :
13046	from django.utils.encoding import force_bytes into default name space .	from django . utils . encoding import force_bytes
849	define the method register with self ans unpacked list tags as arguments .	def register ( self , * tags ) :
8232	for every formset in formsets ,	for formset in formsets :
3410	yield meta_line as the result .	yield meta_line
12300	match is boolean True .	match = True
13050	self.template_cache is an empty dictionary .	self . template_cache = { }
4740	if not ,	else :
12993	otherwise if options equals STR0 ,	elif option == STR0 :
14097	from django.utils.deprecation import RemovedInDjango19Warning into default name space .	from django . utils . deprecation import RemovedInDjango19Warning
16666	substitute link_prev for value under the PREV key of the link_next dictionary .	link_next [ PREV ] = link_prev
16919	instantiate a class Group with 2 arguments : string STR0 formated with param , and None , append it to result .	result . append ( Group ( ( ( STR0 % param ) , None ) ) )
9678	if _BASE64_DECODE_ERROR exception is caught ,	except _BASE64_DECODE_ERROR :
13203	substitute self for retval .	retval = self
8360	get STR0 attribute from the options object , if it exists substitute it for self.widgets , if not self.widgets is None .	self . widgets = getattr ( options , STR0 , None )
8920	data_set is set created out of return values of the function force_text called with an argument value , for every value in data .	data_set = set ( force_text ( value ) for value in data )
4390	self.addr is an empty string .	self . addr = STR
5799	call the method self.indent with argument integer 1 .	self . indent ( 1 )
9492	if IndexError exception is caught ,	except IndexError :
14044	call the function _long_to_bin with 2 arguments : result and hex_format_string , return the result .	return _long_to_bin ( result , hex_format_string )
15783	if self._delegate_bytes and six.PY2 are both true ,	if self . _delegate_bytes and six . PY2 :
13832	if cc contains item STR0 and kwargs contains item STR1 ,	if STR0 in cc and STR1 in kwargs :
703	from .registry import register , run_checks , tag_exists and Tags into default name space .	from . registry import register , run_checks , tag_exists , Tags
2964	dirs is a list containing basedir .	dirs = [ basedir ]
7883	derive the class Form from the base classes DeclarativeFieldsMetaclass and BaseForm .	class Form ( six . with_metaclass ( DeclarativeFieldsMetaclass , BaseForm ) ) :
14672	define the function new_datetime with an argument d .	def new_datetime ( d ) :
7830	if ValidationError renamed to e , exception is caught ,	except ValidationError as e :
12599	register.tag decorator ,	@ register . tag
12772	if settings.TEMPLATE_DEBUG and display_name are both true ,	if settings . TEMPLATE_DEBUG and display_name :
11362	return lib .	return lib
8041	convert self.forms into an iterable , return it .	return iter ( self . forms )
7577	join root and f in path , substitute the result for f .	f = os . path . join ( root , f )
17905	substitute name for self.__name .	self . __name = name
11479	return _standard_context_processors .	return _standard_context_processors
5330	decrement number by one , multiply it with self.per_page , substitute the result for bottom .	bottom = ( number - 1 ) * self . per_page
18726	call the function timedelta with an argument seconds as negative time.altzone , return the result .	return timedelta ( seconds = - time . altzone )
5296	if fext is a file ,	if os . path . isfile ( fext ) :
12181	parentloop is an empty dictionary .	parentloop = { }
15068	try ,	try :
933	do nothing .	pass
16846	sum sign , int_part and dec_part , return the result .	return sign + int_part + dec_part
3595	join dir_ and return value of the function os.path.dirname called with an argument fixture_name into a valid file path , append it to a list , perform the previous for every dir_ in fixture_dirs , substitute the resulting list for fixture_dirs .	fixture_dirs = [ os . path . join ( dir_ , os . path . dirname ( fixture_name ) ) for dir_ in fixture_dirs ]
1206	call the function msvcrt.get_osfhandle with return value of the _fd ( f ) function as argument , substitute the result for hfile .	hfile = msvcrt . get_osfhandle ( _fd ( f ) )
18752	call the function warnings.warn with 3 arguments : string STR0 , RemovedInDjango19Warning and stacklevel as integer 2 .	warnings . warn ( STR0 , RemovedInDjango19Warning , stacklevel = 2 )
880	from django.utils.functional import lazy into default name space .	from django . utils . functional import lazy
4121	from django.utils.module_loading import module_has_submodule into default name space .	from django . utils . module_loading import module_has_submodule
9950	call the method s.find with an argument bytes string STR0 , substitute the result for end .	end = s . find ( STR0 )
8581	for every form in valid_forms ,	for form in valid_forms :
13213	return self._is_rendered .	return self . _is_rendered
13485	define the method list with an argument self .	def extract ( self ) :
1040	do nothing .	pass
13648	call the method notifier.read_events .	notifier . read_events ( )
1946	call the get_bytes_from_wsgi function with environ , string STR0 and empty strings as arguments , substitute the result for script_name .	script_name = get_bytes_from_wsgi ( environ , STR0 , STR )
15961	map elements from args through the function conditional_escape , substitute the result for args_safe .	args_safe = map ( conditional_escape , args )
10747	call the method self.extend_nodelist with 3 arguments : nodelist , compiled_result and token .	self . extend_nodelist ( nodelist , compiled_result , token )
13274	return boolean False .	return False
12121	derive the class CycleNode from Node base class .	class CycleNode ( Node ) :
16175	return j .	return j
8996	convert elements of self into a list , return the its printable representation .	return repr ( list ( self ) )
12247	nodelist_true_output is None .	nodelist_true_output = None
10257	substitute path_override for path if path_override is not None , otherwise substitute request.path for path	path = path_override if path_override is not None else request . path
18351	convert to strings and concatenate context , CONTEXT_SEPARATOR and message , substitute the result for msg_with_ctxt .	msg_with_ctxt = STR0 % ( context , CONTEXT_SEPARATOR , message )
3508	get the value under the STR0 key of the options dictionary , substitute it for self.app_label .	self . app_label = options . get ( STR0 )
3965	if found is false and , line is false or return value of the function plural_forms_re.search called with an argument line is false ,	if not found and ( not line or plural_forms_re . search ( line ) ) :
2727	call the function vars with an argument options , substitute the result for cmd_options .	cmd_options = vars ( options )
10176	if not self._mutable ,	if not self . _mutable :
4159	try ,	try :
8210	return the media field of the first element of self.forms .	return self . forms [ 0 ] . media
8527	define the method _construct_form with 3 arguments : self , i and unpacked dictionary kwargs .	def _construct_form ( self , i , ** kwargs ) :
8620	self.changed_objects is an empty list .	self . changed_objects = [ ]
12021	decorator function register.filter with an argument is_safe set to boolean True .	@ register . filter ( is_safe = True )
17572	return lambda function with text as argument and return value being result of the function colorize , called with 3 arguments : text , opts and unpacked dictionary kwargs .	return lambda text : colorize ( text , opts , ** kwargs )
6174	call the json.dumps function with 2 arguments : obj and separators set to tuple containing STR0 and STR1 characters , call the encode method on the result with string STR2 as an argument , return the result .	return json . dumps ( obj , separators = ( STR0 , STR1 ) ) . encode ( STR2 )
7796	extend the value under the field key of the self._errors dictionary with error_list .	self . _errors [ field ] . extend ( error_list )
5988	derive the class ExternalReferenceForbidden from the DefusedXmlException base class .	class ExternalReferenceForbidden ( DefusedXmlException ) :
9666	get the value under the STR0 key of the disposition dictionary , strip it of whitespaces , substitute the result for field_name .	field_name = disposition [ STR0 ] . strip ( )
1473	call the file.__exit__ method on self with exc , value and tb as the arguments .	self . file . __exit__ ( exc , value , tb )
4854	call the method logger.addHandler with an argument handler .	logger . addHandler ( handler )
4461	define the method add_arguments with 2 arguments self and parser .	def add_arguments ( self , parser ) :
15504	call the method handler.addQuickElement with 2 arguments : string STR0 and value under the STR1 key of the self.feed dictionary .	handler . addQuickElement ( STR0 , self . feed [ STR1 ] )
3292	for every sql in sql_list ,	for sql in sql_list :
5968	define the method __init__ with arguments self , name , sysid and pubid .	def __init__ ( self , name , sysid , pubid ) :
5494	call the method self.handle_m2m_field with arguments obj and filed .	self . handle_m2m_field ( obj , field )
13852	if response.streaming is boolean False ,	if not response . streaming :
14341	if six.PY3 is true ,	if six . PY3 :
13254	substitute left for self.first .	self . first = left
12353	derive the class NowNode from Node base class .	class NowNode ( Node ) :
10855	while i is lesser than length of subject and i-th element of subject is not equal to p-th element of subject ,	while i < len ( subject ) and subject [ i ] != subject [ p ] :
11077	define the method get_nodes_by_type with 2 arguments : self and nodetype .	def get_nodes_by_type ( self , nodetype ) :
14622	match regex time_re with value , substitute the result for match .	match = time_re . match ( value )
5804	substitute the return value of the smart_text function with an argument obj_pk for the value under the STR0 key of the attrs dictionary .	attrs [ STR0 ] = smart_text ( obj_pk )
12471	substitute second element of args for name .	name = args [ 1 ]
1120	define the method close with argument self .	def close ( self ) :
13879	put every header in newheaders in a list , only if newheader converted to lowercase does not exist in existing_headers , substitute this list for additional_headers .	additional_headers = [ newheader for newheader in newheaders if newheader . lower ( ) not in existing_headers ]
12656	if length of bits is not equal to integer 2 ,	if len ( bits ) != 2 :
10511	status_code is an integer 500 .	status_code = 500
5909	return obj_pk .	return obj_pk
7288	if data is bound to the same object as FILE_INPUT_CONTRADICTION ,	if data is FILE_INPUT_CONTRADICTION :
14249	derive the class OrderedSet from the object base class .	class OrderedSet ( object ) :
6033	define the function address_string with an argument self .	def address_string ( self ) :
13479	return boolean False .	return False
12733	call the function token_kwargs with 3 arguments : remaining_bits , parser and support_legacy set to boolean True , substitute the result for extra_context .	extra_context = token_kwargs ( remaining_bits , parser , support_legacy = True )
8738	if form._meta.fields is an instance of tuple type ,	if isinstance ( form . _meta . fields , tuple ) :
11384	define the method __init__ with 2 arguments : self and dict_ set to None .	def __init__ ( self , dict_ = None ) :
3134	if not ,	else :
17772	define the method read with an argument self .	def read ( self ) :
18632	return result .	return result
9473	derive the class MultiWidget from the Widget base class .	class MultiWidget ( Widget ) :
4925	for every refto and refs in return value of the method references.items ,	for refto , refs in references . items ( ) :
1261	evaluate the binary expression with 4 operands : os.O_WRONLY , binary or os.O_CREATE , binary or STR0 attribute of object os , binary or os.O_EXCL if allow_overwrite is boolean False , use the previous as the mode to open new_file_name file , assign the file descriptor to fd .	fd = os . open ( new_file_name , ( os . O_WRONLY | os . O_CREAT | getattr ( os , STR0 , 0 ) | ( os . O_EXCL if not allow_overwrite else 0 ) ) )
18054	define the function gettext_noop with an argument message .	def gettext_noop ( message ) :
9721	call the method self._close_files .	self . _close_files ( )
12887	substitute context for block.context .	block . context = context
5492	if field.serialize is true ,	if field . serialize :
14682	call the method text.find with 2 arguments : substr and i , substitute the result for j .	j = text . find ( substr , i )
199	substitute table for self.db_table .	self . db_table = table
16374	if doublecolon_start equals integer -1 ,	if doublecolon_start == - 1 :
16376	if doublecolon_len is greater than best_doublecolon_len ,	if doublecolon_len > best_doublecolon_len :
11826	if TypeError or VariableDoesNotExist exceptions are caught ,	except ( TypeError , VariableDoesNotExist ) :
5630	from django.db import models and DEFAULT_DB_ALIAS into default name space .	from django . db import models , DEFAULT_DB_ALIAS
12223	substitute item for value under the first element of self.loopvars key of the context dictionary .	context [ self . loopvars [ 0 ] ] = item
18253	call the method self._add_local_translations .	self . _add_local_translations ( )
8746	substitute model._meta for opts .	opts = model . _meta
18656	define the method __len__ with an argument self .	def __len__ ( self ) :
7145	or value equals return value of the call to Decimal with argument STR0 raise an ValidationError with 2 arguments : value under the STR1 key of the self.error_messages dictionary and code set to STR2 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 )
4910	loader is an instance of MigrationLoader class , created with an argument connection .	loader = MigrationLoader ( connection )
4537	if app_config.models_module is None ,	if app_config . models_module is None :
9060	if prefix is None ,	if prefix is None :
9170	derive the class TextInput from the Input base class .	class TextInput ( Input ) :
5071	call the function re.compile with 2 arguments : string STR0 and re.I , substitute the result for _drive_re .	_drive_re = re . compile ( STR0 , re . I )
1436	call the import_string with argument : import_path if exists or settings.DEFAULT_FILE_STORAGE , if not , return the result .	return import_string ( import_path or settings . DEFAULT_FILE_STORAGE )
3051	replace STR1 in string STR0 with tablename , write it to self.stdout .	self . stdout . write ( STR0 % tablename )
17007	result is a list containing an empty string .	result = [ STR ]
2751	call the method translation.get_language , substitute th result for saved_locale .	saved_locale = translation . get_language ( )
1394	if self.file_permissions_mode is not None ,	if self . file_permissions_mode is not None :
3666	from django.utils.functional import total_ordering into default name space .	from django . utils . functional import total_ordering
12218	do nothing .	pass
6317	return an instance of a class RegexURLResolver created with arguments : raw string STR0 and urlconf .	return RegexURLResolver ( STR0 , urlconf )
14381	warning is a string STR0 .	warning = STR0
792	define private method __repr__ with argument self .	def __repr__ ( self ) :
1767	if any exception is caught ,	except :
5773	call the function six.reraise with 3 arguments : DeserializationError , return value of the DeserializationError called with an argument e ,	six . reraise ( DeserializationError , DeserializationError ( e ) , sys . exc_info ( ) [ 2 ] )
4648	call the MigrationExecutor with the connection as the argument , substitute it for executor .	executor = MigrationExecutor ( connection )
15427	call the method handler.addQuickElement with 2 arguments : string STR0 and value under the STR1 key of the self.feed dictionary .	handler . addQuickElement ( STR0 , self . feed [ STR1 ] )
1969	define the function send_mass_mail with , datatuple , fail_silently set to False , auth_user set to None , auth_password set to None ,	def send_mass_mail ( datatuple , fail_silently = False , auth_user = None , auth_password = None , connection = None ) :
11404	raise an ContextPopException .	raise ContextPopException
14750	_dec.__name__ is a string STR0 formated with decorator.__name__ .	_dec . __name__ = STR0 % decorator . __name__
2584	do nothing .	pass
17327	call the method operator.attrgetter with an argument _func_defaults , substitute the result for get_method_defaults .	get_function_defaults = operator . attrgetter ( _func_defaults )
15540	call the method handler.addQuickElement with 3 arguments : string STR0 , value under the STR1 key of item dictionary , and dictionary with an entry : STR2 for STR3 .	handler . addQuickElement ( STR0 , item [ STR3 ] , { STR1 : STR2 } )
2292	call the function forbid_multi_line_headers with 3 arguments : name , val and self.encoding , substitute the result for name and val , respectively .	name , val = forbid_multi_line_headers ( name , val , self . encoding )
3470	substitute fifth element of row for value under the STR0 key of the field_params .	field_params [ STR0 ] = row [ 4 ]
12115	if not ,	else :
7581	for f in sorted list of the files in the self.path directory ,	for f in sorted ( os . listdir ( self . path ) ) :
8364	get STR0 attribute from the options object , if it exists substitute it for self.error_messages , if not self.error_messages is None .	self . error_messages = getattr ( options , STR0 , None )
17287	_meth_func is a string STR0 .	_meth_func = STR0
13625	gettext._translations is an empty dictionary .	gettext . _translations = { }
789	if self.id exists , convert self.id to a string , surround it with round brackets , substitute id for it , otherwise id is an empty string .	id = STR0 % self . id if self . id else STR
7990	otherwise if auto_id is true ,	elif auto_id :
18144	if character STR0 is not contained in lang_code ,	if STR0 not in lang_code :
1138	from PIL module import ImageFile as PillowImageFile .	from PIL import ImageFile as PillowImageFile
1460	try ,	try :
7817	define the method _clean_fields with an argument self .	def _clean_fields ( self ) :
14939	return found .	return found
5444	evaluate the method s.getvalue , return the result .	return s . getvalue ( )
15434	for every cat in value under the STR0 key of the self.feed dictionary .	for cat in self . feed [ STR0 ] :
12382	url is an empty string .	url = STR
11637	try ,	try :
7173	define the method to_python with arguments self and value .	def to_python ( self , value ) :
14724	return klass .	return klass
8764	raise an ValueError with an argument string STR0 , where STR1 is replaced with , model._meta.app_label , model._meta.object_name , parent_model._meta.app_label , parent_model._meta.object_name , respectively .	raise ValueError ( STR0 % ( model . _meta . app_label , model . _meta . object_name , parent_model . _meta . app_label , parent_model . _meta . object_name ) )
7416	derive the class TypedChoiceField from the base class ChoiceField class .	class TypedChoiceField ( ChoiceField ) :
14031	call the function digest with an argument password , call the method digest on the result , substitute the result or password .	password = digest ( password ) . digest ( )
2888	return an instance of a dummy class .	return dummy ( )
4887	substitute connection.features.test_db_allows_multiple_connections for use_threading .	use_threading = connection . features . test_db_allows_multiple_connections
11210	define the method tag_function with 2 argument : self and func .	def tag_function ( self , func ) :
9337	join elements of output in a string , separated by newlines , return it .	return STR0 . join ( output )
15140	remove config dictionary element under STR0 key , if it exists substitute it for formatter , if not , formatter is None .	formatter = config . pop ( STR0 , None )
11223	call the method self.filter with 3 arguments : name , func and unpacked dictionary flags , return the result .	return self . filter ( name , func , ** flags )
1575	substitute file_name for self.file_name .	self . file_name = file_name
11630	d is an instance of class Decimal , created with result of the function force_text , called with an argument text converted into a floating point number .	d = Decimal ( force_text ( float ( text ) ) )
8505	raise an ImproperlyConfigured with an argument string STR0	raise ImproperlyConfigured ( STR0 )
12760	return source and display_name .	return source , display_name
15215	import module locale .	import locale
1418	try ,	try :
8445	if not ,	else :
13384	if six.PY2 is true and path is not an instance of six.text_type type ,	if six . PY2 and not isinstance ( path , six . text_type ) :
9711	if Exception , renamed to e , exception is caught ,	except Exception as e :
7503	call the method __deepcopy__ with an argument memo , from the base class of the class MultiValueField , substitute the result for result .	result = super ( MultiValueField , self ) . __deepcopy__ ( memo )
13923	call function _generate_cache_header_key with arguments key_prefix and request , substitute the result for cache_key .	cache_key = _generate_cache_header_key ( key_prefix , request )
16627	return instance of _HashedSeq class , created with an argument key .	return _HashedSeq ( key )
15054	get config dictionary element under STR0 key , if it exists substitute it for formatters , if not , formatters is EMPTY_DICT .	formatters = config . get ( STR0 , EMPTY_DICT )
6898	if ValueError exception is caught ,	except ValueError :
2336	substitute self.subject for value under the STR0 key of msg dictionary .	msg [ STR0 ] = self . subject
1547	derive the class UploadFileException from the Exception base class .	class UploadFileException ( Exception ) :
3727	if status is not equal to STATUS_OK ,	if status != STATUS_OK :
5801	if self.use_natural_primary_keys is false and obj doesnt have STR0 argument .	if not self . use_natural_primary_keys or not hasattr ( obj , STR0 ) :
10439	define the method content with an argument self .	def content ( self ) :
6285	if can_fail is true ,	if can_fail :
5850	call the method self.xml.endElement with an argument string STR0 .	self . xml . endElement ( STR0 )
9642	substitute content_length for self._content_length .	self . _content_length = content_length
10528	response.streaming_content is an empty list .	response . streaming_content = [ ]
18771	use fourth element of version as a key to get the value from mapping dictionary , append to it fourth element of version converted to string , substitute it for sub .	sub = mapping [ version [ 3 ] ] + str ( version [ 4 ] )
11766	define the function rjust with 2 arguments value and arg .	def rjust ( value , arg ) :
1803	from django.utils import six into default name space .	from django . utils import six
7994	define the method id_for_label with an argument self .	def id_for_label ( self ) :
2867	define function color_style , without input arguments .	def color_style ( ) :
15378	define the method num_items with an argument self .	def num_items ( self ) :
16463	define the function is_iterable with an argument x .	def is_iterable ( x ) :
13777	if neg is true ,	if neg :
15806	return wrapper .	return wrapper
11381	define the method __exit__ with 3 arguments : self , unpacked list args and unpacked dictionary kwargs .	def __exit__ ( self , * args , ** kwargs ) :
16901	if not ,	else :
1005	__all__ is an list containing a string STR0 .	__all__ = [ STR0 ]
4275	with call to the function transaction.atomic with using set to connection.alias as argument ,	with transaction . atomic ( using = connection . alias ) :
3329	get the value under the STR0 key of the options dictionary , substitute it for table_name_filter .	table_name_filter = options . get ( STR0 )
12984	substitute bits , without the first two elements , substitute the result for remaining_bits .	remaining_bits = bits [ 2 : ]
3767	call the method parser.add_argument with 6 arguments : string STR0 , string STR1 , action as a string STR2 , dest as a string STR3 default as boolean False and help as a string STR4 .	parser . add_argument ( STR0 , STR1 , action = STR2 , dest = STR3 , default = False , help = STR4 )
5189	raise an CommandError with an argument string STR0 , were STR1 is replaced with name , and STR2 is replaced with app_or_project and message , respectively .	raise CommandError ( STR0 % ( name , app_or_project , message ) )
9037	python_2_unicode_compatible decorator ,	@ python_2_unicode_compatible
18076	if not ,	else :
4611	help is a string , containing STR0 .	help = STR0
11861	return an empty string .	return STR
7032	return is empty dictionary .	return { }
560	do nothing .	pass
3462	if field_type equals a string CharField ' and fourth element of row is true ,	if field_type == STR0 and row [ 3 ] :
17535	call the method self.can_write.release .	self . can_write . release ( )
3391	otherwise if field_type equals a string STR0 and connection.features.can_introspect_autofield is false ,	elif field_type == STR0 and not connection . features . can_introspect_autofield :
7107	if self.localize is true ,	if self . localize :
17841	call the function allow_lazy with an argument unescape_string_literal , substitute the result for unescape_string_literal .	unescape_string_literal = allow_lazy ( unescape_string_literal )
8954	return a dictionary generated with an expression , return value of the method e.as_data for f , for every f and e in list of tuples of self dictionary key , pair entries .	return { f : e . as_data ( ) for f , e in self . items ( ) }
1515	return self.file.name .	return self . file . name
14814	call the function f with a arguments : unpacked list args and unpacked dictionary kwargs , return the result .	return f ( * args , ** kwargs )
17878	evaluate the function timesince with d , now and reversed set to boolean true as arguments , return the result .	return timesince ( d , now , reversed = True )
16933	if consume_next is true ,	if consume_next :
15554	from django.utils import dateformat , numberformat and datetime_safe into default name space .	from django . utils import dateformat , numberformat , datetime_safe
807	call the __init__ method with 3 arguments : WARNING , unpacked list args and unpacked dictionary kwargs from the base class of Warning .	return super ( Warning , self ) . __init__ ( WARNING , * args , ** kwargs )
3683	join self.dirpath and self.file in a string , substitute with it STR1 in string STR0 , return the result .	return STR0 % os . sep . join ( [ self . dirpath , self . file ] )
16820	if use_grouping is true substitute it for use_grouping , otherwise substitute force_grouping for use_grouping .	use_grouping = use_grouping or force_grouping
18605	if not ,	else :
2617	import module django .	import django
15773	if other is an instance of Promise class ,	if isinstance ( other , Promise ) :
6393	define the method __repr__ with an argument self .	def __repr__ ( self ) :
7513	if self.required is true ,	if self . required :
1192	_fields_ is a list containing 4 tuples : first tuple contains : string STR0 and ULONG_PTR , second contains : string STR1_offset_union STR2hEvent ' and HANDLE .	_fields_ = [ ( STR0 , ULONG_PTR ) , ( STR1 , ULONG_PTR ) , ( STR2 , _OFFSET_UNION ) , ( STR3 , HANDLE ) ]
16611	get the hash value of the tup , substitute it for self.hashvalue .	self . hashvalue = hash ( tup )
16592	return integer 1 .	return 1
14644	update a dictionary with an entry v converted to an integer for k , for every k and v in result of the function six.iteritems , called with an argument kw , only if v is not None , substitute the result for kw .	kw = dict ( ( k , int ( v ) ) for k , v in six . iteritems ( kw ) if v is not None )
17127	substitute basestring for string_types .	string_types = basestring ,
6069	define the method fastcgi_help with an argument message set to None .	def fastcgi_help ( message = None ) :
5193	split tmp at STR0 character , substitute the last element of the result for filename .	filename = tmp . split ( STR0 ) [ - 1 ]
18195	import module gettext as gettext_module .	import gettext as gettext_module
2154	finally perform ,	finally :
9630	if ValueError or TypeError are caught ,	except ( ValueError , TypeError ) :
15932	from django.utils.six.moves.urllib.parse import quote , unquote , urlsplit and urlunsplit into default name space .	from django . utils . six . moves . urllib . parse import quote , unquote , urlsplit , urlunsplit
15126	define the method configure_filter with 2 arguments : self and config .	def configure_filter ( self , config ) :
16313	return boolean False .	return False
15187	get value under the STR0 key of the config dictioanry , if it exists substitute it for level , if not level is None .	level = config . get ( STR0 , None )
17018	param is None .	param = None
6758	validate_slug is a instance of a RegexValidator class , created with 3 arguments : slug_re , return value of the call to the function , _ with an argument string STR0 , and string STR1 .	validate_slug = RegexValidator ( slug_re , _ ( STR0 ) , STR1 )
8329	skip this loop iteration .	continue
3154	raise CommandError with an argument string STR0 , where STR1 is replaced with exclude .	raise CommandError ( STR0 % app_label )
8545	if self.queryset is not None ,	if self . queryset is not None :
8420	substitute f.name for field .	field = f . name
16971	ch2 is None .	ch2 = None
7502	define the method __deepcopy__ with arguments self and memo .	def __deepcopy__ ( self , memo ) :
16487	for every tok in rules ,	for tok in rules :
18349	call the function do_translate with 2 arguments : message and string STR0 , return the result .	return do_translate ( message , STR0 )
8771	call the function modelformset_factory with 2 arguments : model and unpacked dictionary kwargs , substitute the result for FormSet .	FormSet = modelformset_factory ( model , ** kwargs )
2856	raise an NotImplementedError with an argument string STR0 .	raise NotImplementedError ( STR0 )
12588	call the method token.split_contents , substitute results without the first element for bits .	bits = token . split_contents ( ) [ 1 : ]
7114	define the method validate with arguments self and value .	def validate ( self , value ) :
15964	define the function format_html_join with 3 arguments : sep , format_string and args_generator .	def format_html_join ( sep , format_string , args_generator ) :
4578	derive class Command from the base class AppCommand .	class Command ( AppCommand ) :
10657	call the function smart_split with an argument self.contents , substitute the result converted to an iterable for bits .	bits = iter ( smart_split ( self . contents ) )
1717	break from the smallest enclosing loop execution .	break
12523	define the function do_for with 2 arguments : parser and token .	def do_for ( parser , token ) :
1068	if data is false ,	if not data :
16875	skip this loop iteration .	break
15604	if cached is not None ,	if cached is not None :
2988	msg is a string STR0 , with STR1 replaced by self.program .	msg = STR0 % self . program
17514	contextlib.contextmanager decorator ,	@ contextlib . contextmanager
1329	define the method modified_time with arguments self and name .	def modified_time ( self , name ) :
10601	derive the class InvalidTemplateLibrary form the base class Exception .	class InvalidTemplateLibrary ( Exception ) :
7607	call the method datetime.datetime.combine with unpacked list data_list , substitute the result for result .	result = datetime . datetime . combine ( * data_list )
602	if timeout is None ,	if timeout is None :
5846	define the function handle_m2m with an argument value ,	def handle_m2m ( value ) :
9458	call the method self.build_attrs with an argument attrs , substitute the result for final_attrs .	final_attrs = self . build_attrs ( attrs )
14380	if not ,	else :
16607	derive class _HashedSeq from list base class .	class _HashedSeq ( list ) :
6420	if pattern.namespace is true ,	if pattern . namespace :
16849	from django.utils.six.moves import zip into default name space .	from django . utils . six . moves import zip
10013	return host .	return host
1248	return boolean False .	return False
16707	return decorating_function .	return decorating_function
3309	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
3225	if rel_model has an attribute STR0 and rel_model is not equal to model ,	if hasattr ( rel_model , STR0 ) and rel_model != model :
387	with return value of the function io.open with fname and string STR0 as arguments , named as f ,	with io . open ( fname , STR0 ) as f :
6316	substitute settings.ROOT_URLCONF for urlconf .	urlconf = settings . ROOT_URLCONF
14049	from . import six into default name space .	from . import six
14664	call the function strftime with 2 arguments : self and fmt , return the result .	return strftime ( self , fmt )
14032	decrement by length of password , create bytes string with previous result number of characters STR0 , append the result to password .	password += STR0 * ( inner . block_size - len ( password ) )
16364	call the function _unpack_ipv4 with an argument ip_str , substitute the result for ipv4_unpacked .	ipv4_unpacked = _unpack_ipv4 ( ip_str )
3537	if self.verbosity is grater than , or equal to integer 2 ,	if self . verbosity >= 2 :
3238	while model_dependencies is true ,	while model_dependencies :
13358	decorator is an instance of class Node , created with 2 arguments : instance of Leaf class created with 2 arguments : token.AT and `` @ STR0python_2_unicode_compatible ' .	decorator = Node ( syms . decorator , [ Leaf ( token . AT , STR0 ) , Name ( STR1 ) ] )
9417	substitute attrs for self.attrs .	self . attrs = attrs
17224	set attr.name attribute of the Module_six_moves_urllib_parse object to attr .	setattr ( Module_six_moves_urllib_parse , attr . name , attr )
7700	substitute empty_permitted for self.empty_permitted .	self . empty_permitted = empty_permitted
3822	self.invoked_for_django is boolean True .	self . invoked_for_django = True
3758	leave_locale_alone is boolean True	leave_locale_alone = True
10744	if TemplateSyntaxError , renamed to e , exception is caught ,	except TemplateSyntaxError as e :
14070	open err_log flie in append mode with buffering size of input buffer , substitute the result for se .	se = open ( err_log , STR0 , buffering )
6616	append STR0 to prefix .	prefix += STR0
9895	call the method stream.read with an argument max_header_size , substitute the result for chunk .	chunk = stream . read ( max_header_size )
1088	yield one element from the buffer_ iterable .	yield buffer_
11212	return func .	return func
15844	if not ,	else :
11486	convert processors into a tuple and substitute it for processors .	processors = tuple ( processors )
3291	with the result , call the method connection.cursor , with the result as cursor ,	with connection . cursor ( ) as cursor :
18382	decorator function lru_cache.lru_cache with an argument maxsize set to integer 1000 .	@ lru_cache . lru_cache ( maxsize = 1000 )
5950	raise an DTDForbidden exception with arguments name , sysid and pubid .	raise DTDForbidden ( name , sysid , pubid )
10466	map elements of self._iterator through self.make_bytes function , return the result .	return map ( self . make_bytes , self . _iterator )
4565	define the method add_arguments with 2 arguments self and parser .	def add_arguments ( self , parser ) :
12881	call the method self.nodelist.render with an argument context , substitute the result for result .	result = self . nodelist . render ( context )
6386	substitute namespace for self.namespace .	self . namespace = namespace
9599	import module base64 .	import base64
13432	call the method archive.extract with an argument to_path .	archive . extract ( to_path )
8477	fail_message is a string changed ' .	fail_message = STR0
10431	substitute content for self.content .	self . content = content
12894	substitute self.context.render_context for render_context .	render_context = self . context . render_context
11991	call the function timeuntil with 2 arguments value and arg , return the result .	return timeuntil ( value , arg )
18093	call the function lazy with 2 arguments : lambda function with unpacked dictionary kwargs as an argument and return value an instance of NumberAwareString class and NumberAwareString , call the result with an argument unpacked dictionary kwargs , substitute the result for proxy .	proxy = lazy ( lambda ** kwargs : NumberAwareString ( ) , NumberAwareString ) ( ** kwargs )
942	derive the class FieldError from the Exception base class .	class FieldError ( Exception ) :
7000	update messages dictionary with error_messages , if it exists , if not donot update it .	messages . update ( error_messages or { } )
2322	substitute subject for self.subject .	self . subject = subject
8186	if ValidationError , renamed to e , exception is caught ,	except ValidationError as e :
17294	_iterkeys is a string STR0 .	_itervalues = STR0
15131	call the method logging.Filter with an argument name , substitute the result for result .	result = logging . Filter ( name )
1308	call the os.path.splitext with argument file_name , assign the result to the file_root and file_ext respectively .	file_root , file_ext = os . path . splitext ( file_name )
16591	call the method self.callback with an argument record , if the result evaluates to true ,	if self . callback ( record ) :
16063	call the method simple_url_re.match with an argument middle , if it evaluates to true ,	if simple_url_re . match ( middle ) :
6102	if value under the STR0 key of options dictionary is not None , substitute it for value under the STR1 key of wsgi_opts dictionary .	wsgi_opts [ STR0 ] = options [ STR1 ] is not None
14299	define the method __setstate__ with 2 arguments : self and obj_dict .	def __setstate__ ( self , obj_dict ) :
2234	call the encode function on the Header class instance , created with arguments val and encoding , substitute the result for val .	val = Header ( val , encoding ) . encode ( )
629	if ret is true .	if ret :
10688	if token_string starts with VARIABLE_TAG_START ,	if token_string . startswith ( VARIABLE_TAG_START ) :
2883	return style .	return style
11441	define the method __init__ with 6 arguments : self , dict_ set to None , autoescape set to True , current_app set to None , use_l10n set to None and use_tz set to None .	def __init__ ( self , dict_ = None , autoescape = True , current_app = None , use_l10n = None , use_tz = None ) :
16676	if key is contained in cache ,	if key in cache :
2753	try ,	try :
1089	define the method __enter__ with argument self .	def __enter__ ( self ) :
4824	from django.core.management.base import BaseCommand into default name space .	from django . core . management . base import BaseCommand
16965	decrement nesting by one .	nesting -= 1
1059	define the method chunks with arguments self and chunk_size defaulting to None .	def chunks ( self , chunk_size = None ) :
1733	get the name of the type of the callback , append the string STR0 to it , substitute it for view_name .	view_name = callback . __class__ . __name__ + STR0
568	call the self._lock.writer method , with the result perform the following ,	with self . _lock . writer ( ) :
14130	if k is contained in seen ,	if k in seen :
1380	finally perform ,	finally :
12316	value under the self.var_name key of the context dictionary is an list with dictionary elements with 2 entries : key for STR0 and val converted into a list for STR1 , for every key and val in result of the function groupby , called with 2 arguments : obj_list and lambda function with an argument obj and return value as a result of the function , self.resolve_expression called with 2 arguments obj and context .	context [ self . var_name ] = [ { STR0 : key , STR1 : list ( val ) } for key , val in groupby ( obj_list , lambda obj : self . resolve_expression ( obj , context ) ) ]
14025	raise an OverflowError exception with an argument string STR0 .	raise OverflowError ( STR0 )
3732	call the method command.stdout.write with an argument errors .	command . stdout . write ( errors )
4621	from django.db import connections and DEFAULT_DB_ALIAS into default name space .	from django . db import connections , DEFAULT_DB_ALIAS
2257	call the formataddr function with argument tuple containing 2 elements nm and addr .	return formataddr ( ( nm , addr ) )
5978	call the method __init__ from the base class of the EntitiesForbidden class .	super ( EntitiesForbidden , self ) . __init__ ( )
4859	from django.conf import settings into default namespace .	from django . conf import settings
11132	substitute third and first element of bits for key and value , respectively .	key , value = bits [ 2 ] , bits [ 0 ]
17998	define the method __exit__ with 4 arguments self , exc_type , exc_value and traceback .	def __exit__ ( self , exc_type , exc_value , traceback ) :
7422	if value equals self.empty_value or value is contained in self.empty_values ,	if value == self . empty_value or value in self . empty_values :
11901	substitute new_second_item with second_item .	second_item = new_second_item
15737	substitute cls.__text_cast for cls.__str__ .	cls . __str__ = cls . __text_cast
16590	define the method filter with 2 arguments : self and record .	def filter ( self , record ) :
1928	convert to k and v to strings for every k and v in return value of the response.item method , response_headers is a list containing all the above iteration elements .	response_headers = [ ( str ( k ) , str ( v ) ) for k , v in response . items ( ) ]
14897	substitute self for result.parent .	result . parent = self
15468	guid_attrs is an empty dictionary .	guid_attrs = { }
1470	call the file.__enter__ method on self .	self . file . __enter__ ( )
18742	try ,	try :
10730	try ,	try :
8612	call the function ugettext with an argument string STR0 , where STR1 is replaced with first element of unique_check , return the result .	return ugettext ( STR0 ) % { STR1 : unique_check [ 0 ] , }
11122	while bits is true ,	while bits :
8316	return data .	return data
11295	from django.template.loader import get_template , select_template .	from django . template . loader import get_template , select_template
16083	if safe_input is true ,	if safe_input :
1333	define the method __init__ with 5 arguments : self , location set to None , base_url set to None , file_permissions_mode set to None , and directory_permissions_mode set to None .	def __init__ ( self , location = None , base_url = None , file_permissions_mode = None , directory_permissions_mode = None ) :
10441	content.setter decorator ,	@ content . setter
236	call the function force_bytes with argument value , use the result as an argument for the call to the method base64.b64decode , use the result as the argument for the function call to the pickle.loads , return the result .	return pickle . loads ( base64 . b64decode ( force_bytes ( value ) ) )
7350	derive the class BooleanField from the base class Field class .	class BooleanField ( Field ) :
4702	try ,	try :
4833	option is a string STR0 .	option = STR0
6914	join output into a string , separated by newline characters , use it as an argument for the call to the mark_safe , return the result .	return mark_safe ( STR0 . join ( output ) )
8176	return nothing .	return
5105	for every file in value under the STR0 key of the options dictionary .	for file in options [ STR0 ] :
11409	for every d in reversed list self.dicts ,	for d in reversed ( self . dicts ) :
9621	get the value from META dictionary , under the STR0 key , if the key doesnt exist , return the value under the STR1 of the META dictionary , if it doesnt exist return an empty string , substitute the result for content_type .	content_type = META . get ( STR0 , META . get ( STR1 , STR ) )
1565	self.file_name is None .	self . file_name = None
14917	compile a regex from raw string STR0 , substitute it for CONVERT_PATTERN .	CONVERT_PATTERN = re . compile ( STR0 )
1196	LockFileEx.argtypes is a list containing 6 elements : HANDLE , DWORD , DWORD , DWORD , DWORD and LPOVERLAPPED .	LockFileEx . argtypes = [ HANDLE , DWORD , DWORD , DWORD , DWORD , LPOVERLAPPED ]
261	if num is greater than self._max_entries ,	if num > self . _max_entries :
13228	append list with 2 strings : STR0 and STR1 to SimpleTemplateResponse.rendering_attrs , substitute the result for rendering_attrs .	rendering_attrs = SimpleTemplateResponse . rendering_attrs + [ STR0 , STR1 ]
12282	substitute conditions_nodelists for self.conditions_nodelists .	self . conditions_nodelists = conditions_nodelists
5244	define the method is_url with arguments self and template .	def is_url ( self , template ) :
845	signal is a string STR0	signals = STR0
1642	import module sys .	import sys
1494	define the method __repr__ with argument self .	def __repr__ ( self ) :
16665	substitute link_next for value under the NEXT key of the link_prev dictionary .	link_prev [ NEXT ] = link_next
1317	define the method exists with arguments self and name .	def exists ( self , name ) :
18373	define the function npgettext with 4 arguments : context , singular , plural and number .	def npgettext ( context , singular , plural , number ) :
4298	if exception of the class Exception , as e , is caught ,	except Exception as e :
1345	define the method _open with arguments self , name and mode defaulting to string STR0 .	def _open ( self , name , mode = STR0 ) :
8440	call the function errors.error_dict.items , for every field and messages in the result ,	for field , messages in errors . error_dict . items ( ) :
18639	substitute negated for self.negated .	self . negated = negated
14851	from logging import _checkLevel .	from logging import _checkLevel
18275	if AppRegistryNotReady exception is caught ,	except AppRegistryNotReady :
14653	MONTHS_3_REV is an dictionary with 12 entries : 1 for STR0 , 2 for STR1 , 3 for STR2 , 4 for STR3 , 5 for STR4 , 6 for STR5 , 7 for STR6 , 8 for STR7 , 9 for STR8 , 10 for STR9 , 11 for STR10 and 12 for STR11 .	MONTHS_3_REV = { STR0 : 1 , STR1 : 2 , STR2 : 3 , STR3 : 4 , STR4 : 5 , STR5 : 6 , STR6 : 7 , STR7 : 8 , STR8 : 9 , STR9 : 10 , STR10 : 11 , STR11 : 12 }
15565	_format_cache is an empty dictionary .	_format_cache = { }
2673	raise an ImproperlyConfigured exception wiht an argument string STR1	raise ImproperlyConfigured ( STR3 % self . __class__ . __name__ )
13428	derive the class ArchiveException from the Exception base class .	class ArchiveException ( Exception ) :
2792	if msg is true ,	if msg :
11257	raise an TemplateSyntaxError exception with an argument string STR0 .	raise TemplateSyntaxError ( STR0 )
5280	if path is None ,	if path is None :
12085	from django.template.smartif import IfParser and Literal into default name space .	from django . template . smartif import IfParser , Literal
14774	call the method middleware.process_view with 4 arguments : request , view_func , args and kwargs , substitute the result for result .	result = middleware . process_view ( request , view_func , args , kwargs )
10849	return i .	return i
15011	return value .	return value
18556	call the function constant_re.findall with an argument t.contents , substitute the result for cmatches .	cmatches = constant_re . findall ( t . contents )
4514	for every pythonrc in tuple containing 2 elements : return value of the function os.environ.get called with a string STR0 , and string STR1 as tuples second element .	for pythonrc in ( os . environ . get ( STR0 ) , STR1 ) :
7848	if self._changed_data is None ,	if self . _changed_data is None :
18062	call the method _trans.gettext_noop with an argument message .	return _trans . ugettext ( message )
5391	import module importlib .	import importlib
5102	raise an CommandError exception with an argument string STR0 ,	raise CommandError ( STR0 % top_dir )
715	call the function _check_boolean_field_default_value with dictionary kwargs as argument , use the result as an argument for the call to the function errors.extend .	errors . extend ( _check_boolean_field_default_value ( ** kwargs ) )
14921	compile a regex from raw string STR0 , substitute it for DIGIT_PATTERN .	DIGIT_PATTERN = re . compile ( STR0 )
2984	if status is True ,	if status :
1140	if file_or_path has an attribute STR0 ,	if hasattr ( file_or_path , STR0 ) :
11323	call the function import_module with an argument taglib_module , substitute the result for mod .	mod = import_module ( taglib_module )
9100	if not ,	else :
4641	def method add_arguments with self class instance and parser as the arguments .	def add_arguments ( self , parser ) :
17293	_iterkeys is a string STR0 .	_iterkeys = STR0
11425	return value under the key key of d dictionary .	return d [ key ]
11964	define the function time with 2 arguments value and arg set to None .	def time ( value , arg = None ) :
10162	call the method appendlist with 2 arguments : key and value .	self . appendlist ( key , value )
16972	if ch2 equals string STR0 ,	if ch2 == STR0 :
5995	define the method __str__ with an argument self .	def __str__ ( self ) :
14408	define the method __getitem__ with 2 arguments : self and key .	def __getitem__ ( self , key ) :
11840	call the function conditional_escape with an argument arg , call the method join on the result with an argument value , substitute the result for data .	data = conditional_escape ( arg ) . join ( value )
17804	replace every occurrence of STR in s with STR0 .	s = s . replace ( STR , STR0 )
313	if num is greater than self._max_entries ,	if num > self . _max_entries :
12209	if item is not an instance of list or tuple class ,	if not isinstance ( item , ( list , tuple ) ) :
10870	take subject elements from p-th to i-th index , substitute it for s .	s = subject [ p : i ]
2410	if UnicodeEncodeError exception is caught ,	except UnicodeEncodeError :
15365	call the function force_text with an argument ttl , substitute the result for ttl .	ttl = force_text ( ttl )
18209	from django.utils.translation import TranslatorCommentWarning , trim_whitespace and LANGUAGE_SESSION_KEY into default name space .	from django . utils . translation import TranslatorCommentWarning , trim_whitespace , LANGUAGE_SESSION_KEY
14464	if NotImplementedError exception is caught ,	except NotImplementedError :
8289	call the method instance.save .	instance . save ( )
7924	if not ,	else :
6774	if protocol is not equal to string STR0 and unpack_ipv4 is true ,	if protocol != STR0 and unpack_ipv4 :
5422	if _serializers is false ,	if not _serializers :
796	define the method is_silence with argument self .	def is_silenced ( self ) :
16705	substitute cache_clear for wrapper.cache_clear .	wrapper . cache_clear = cache_clear
7938	define the method data with an argument self .	def data ( self ) :
14944	raise an v exception .	raise v
10404	define the method delete_cookie with 4 arguments : self , key , path set to character STR0 and domain set to None .	def delete_cookie ( self , key , path = STR0 , domain = None ) :
10643	if not ,	else :
18459	from django.template import Lexer , TOKEN_TEXT , TOKEN_VAR , TOKEN_BLOCK , TOKEN_COMMENT and TRANSLATOR_COMMENT_MARK .	from django . template import ( Lexer , TOKEN_TEXT , TOKEN_VAR , TOKEN_BLOCK , TOKEN_COMMENT , TRANSLATOR_COMMENT_MARK )
5101	if file path top_dir doesnt exists ,	if not os . path . exists ( top_dir ) :
8592	for every date_check in all_date_checks ,	for date_check in all_date_checks :
16599	return settings.DEBUG .	return settings . DEBUG
17581	convert config_string to lowercase and split it by STR0 character , substitute the result for parts .	parts = config_string . lower ( ) . split ( STR0 )
6929	try ,	try :
3840	call the function check_programs with an argument string STR0 .	check_programs ( STR0 )
2062	raise an ImproperlyConfigured exception with argument string STR0 , replace STR1 with self.file_path and err , respectively .	raise ImproperlyConfigured ( STR0 % ( self . file_path , err ) )
13036	call the method self.get_template_sources with 2 arguments template_name and template_dirs , for every filepath in the result ,	for filepath in self . get_template_sources ( template_name , template_dirs ) :
841	derive the class Tags with base class object .	class Tags ( object ) :
16863	return a list with an element tuple with 2 elements : an empty string and an empty list .	return [ ( STR , [ ] ) ]
4577	from django.db import connections and DEFAULT_DB_ALIAS into default name space .	from django . db import connections , DEFAULT_DB_ALIAS
2135	call the method self.connection.ehlo .	self . connection . ehlo ( )
241	define the method add with 5 arguments , self class instance , key , value , timeout set to DEFAULT_TIMEOUT and version set to None .	def add ( self , key , value , timeout = DEFAULT_TIMEOUT , version = None ) :
7394	define the method _set_choices with arguments self and value .	def _set_choices ( self , value ) :
8157	for every form_errors in self.errors sum length of return value of the method self.non_form_errors and length of form_errors , return the result .	return len ( self . non_form_errors ( ) ) + sum ( len ( form_errors ) for form_errors in self . errors )
8981	call the method self.as_data , for every error in the result .	for error in self . as_data ( ) :
10646	call the method lexer.tokenize , use it as an argument for the call to the parser_class function , substitute the result for parser .	parser = parser_class ( lexer . tokenize ( ) )
4807	if LookupError exception is caught .	except LookupError :
4497	define the method handle with 3 arguments : self and unpacked dictionary options .	def handle ( self , ** options ) :
23	try ,	try :
10667	return split .	return split
11208	if not ,	else :
6169	call the import_string function with an argument settings.SIGNING_BACKEND , substitute the result for Signer .	Signer = import_string ( settings . SIGNING_BACKEND )
9595	for every key in return value of the method c.keys call ,	for key in c . keys ( ) :
17819	try ,	try :
4597	define the method add_arguments with 2 arguments : self and parser .	def add_arguments ( self , parser ) :
3827	if self.locale_paths is true ,	if self . locale_paths :
9209	define the method value_from_datadict with 4 arguments : self , data , files and name .	def value_from_datadict ( self , data , files , name ) :
17147	define the function _import_module with an argument name .	def _import_module ( name ) :
1152	break from the endless loop .	break
14666	define the method combine with 3 arguments : cls , date and time .	def combine ( cls , date , time ) :
8150	return self._non_form_errors .	return self . _non_form_errors
14548	call the method self.data.isocalendar , return the first element of the result .	return self . data . isocalendar ( ) [ 0 ]
7433	substitute MultipleHiddenInput for hidden_widget .	hidden_widget = MultipleHiddenInput
16116	set field interesting for this class instance to interesting_cdata from module _html_parser .	self . interesting = _html_parser . interesting_cdata
8433	append f.name to exclude .	exclude . append ( f . name )
6954	import module re .	import re
2092	call the method __init__ from the base class of EmailBackend class , with arguments : unpacked list args and unpacked dictionary kwargs .	super ( EmailBackend , self ) . __init__ ( * args , ** kwargs )
2104	import module threading .	import threading
11868	bits is an empty list .	bits = [ ]
5861	return the instance of DefusedExpatParser class .	return DefusedExpatParser ( )
3647	call the method zipfile.ZipFile.__init___ with the arguments self , unpacked list args and unpacked dictionary kwargs .	zipfile . ZipFile . __init__ ( self , * args , ** kwargs )
13574	if ImportError exception is caught ,	except ImportError :
17325	call the method operator.attrgetter with an argument _func_closure , substitute the result for get_method_closure .	get_function_closure = operator . attrgetter ( _func_closure )
12653	register.tag decorator ,	@ register . tag
16937	if StopIteration exception ,	except StopIteration :
6484	raise an Resolver404 exception with an argument dictionary containing 1 entry : path for STR0 .	raise Resolver404 ( { STR0 : path } )
18787	return get_git_changeset.cache .	return get_git_changeset . cache
18645	define the method __str__ with an argument self .	def __str__ ( self ) :
2106	from django.core.mail.backends.base import BaseEmailBackend into default name space .	from django . core . mail . backends . base import BaseEmailBackend
5666	define the method handle_m2m_field with self , obj and field arguments .	def handle_m2m_field ( self , obj , field ) :
11485	if not ,	else :
4191	if not ,	else :
17426	convert whitespace character to unicode and substitute the result for space .	space = unicode ( STR )
4269	if model is contained in created_models ,	if model in created_models :
7448	define the method _has_changed with arguments self , initial and data .	def _has_changed ( self , initial , data ) :
12686	return an instance of a TemplateTagNode class , created with an argument tag .	return TemplateTagNode ( tag )
14685	append j to sites .	sites . append ( j )
2486	all the method command.create_parser with arguments : empty and name , substitute the result for parser .	parser = command . create_parser ( STR , name )
7907	define the method __len__ with an argument self .	def __len__ ( self ) :
11388	self.dicts is an list with element builtins .	self . dicts = [ builtins ]
3297	if inhibit_post_migrate is false ,	if not inhibit_post_migrate :
11562	call the function force_text with an argument output , substitute the result for output .	output = force_text ( output )
9997	define the method __repr__ with an argument self .	def __repr__ ( self ) :
18161	substitute ngettext for ngettext_lazy .	ngettext_lazy = ngettext
204	self.object_name is a string STR0 .	self . object_name = STR0
16575	substitute record.exc_info for exc_info .	exc_info = record . exc_info
6009	__all__ is a tuple containing 2 initial elements : strigs STR0 and STR1 .	__all__ = ( STR0 , STR1 )
1347	define the method _save with arguments self , name and content .	def _save ( self , name , content ) :
18040	LANGUAGE_SESSION_KEY is an string STR0 .	LANGUAGE_SESSION_KEY = STR0
6976	default_error_messages is an dictionary containing entry : return value of the function _ called with an string STR0 for STR1 .	default_error_messages = { STR0 : _ ( STR1 ) , }
732	call the function settings.is_overridden with argument string STR0 , if it evaluates to boolean True ,	if settings . is_overridden ( STR0 ) :
12873	substitute name , nodelist and parent for self.name , self.nodelist and self.parent .	self . name , self . nodelist , self . parent = name , nodelist , parent
13872	define function patch_vary_headers , with response and newheaders as arguments .	def patch_vary_headers ( response , newheaders ) :
13775	define the decode method with self class instance and s as arguments .	def decode ( self , s ) :
6500	return patterns .	return patterns
15576	for every path in format_module_path ,	for path in format_module_path :
8703	if self.save_as_new is true ,	if self . save_as_new :
12029	move integer 1 left for 10 bits , substitute the result for KB .	KB = 1 << 10
8040	define the method __iter__ with an argument self .	def __iter__ ( self ) :
9902	raise an ValueError with an argument string STR0 , where STR1 is replaced with line .	raise ValueError ( STR0 % line )
1153	try ,	try :
2201	from django.utils import six into default name space .	from django . utils import six
13840	call the function dictvalue with el as argument for every el in values of dictionary cc , join the resulting sequence in a string with comma as separator , assign the string to cc .	cc = STR0 . join ( dictvalue ( el ) for el in cc . items ( ) )
8391	substitute new_class.declared_fields for fields .	fields = new_class . declared_fields
8330	kwargs is an empty dictionary ,	kwargs = { }
7419	if not , self.coerce is an identity lambda function with an argument val . if STR0 key of the kwargs dictionary exists remove it and substitute its value for self.empty_value , if not , sself.empty_value is an empty string .	self . empty_value = kwargs . pop ( STR0 , STR )
9575	get the value under the key of the dictionary self , if key does not exists return evaluated result of the function Morsel , substitute it for M .	M = self . get ( key , Morsel ( ) )
13643	for every path in return value of the call to the function gen_filenames with argument only_new set to boolean True ,	for path in gen_filenames ( only_new = True ) :
12509	for every func and unused in filter_expr.filters ,	for func , unused in filter_expr . filters :
10301	do nothing .	pass
402	call the method self.get_backend_timeout with argument timeout , substitute it for expiry .	expiry = self . get_backend_timeout ( timeout )
18638	if connector is true , substitute it for self.connector , otherwise substitute self.default for self.connector .	self . connector = connector or self . default
7731	substitute value under the name key for bf .	bf = self [ name ]
5875	for every field_node in return value of the method node.getElementsByTagName with an argument string STR0 .	for field_node in node . getElementsByTagName ( STR0 ) :
10307	substitute settings.DEFAULT_CHARSET for self._charset .	self . _charset = settings . DEFAULT_CHARSET
11927	call the function _helper with an argument value , use it as an argument for the call to the function mark_safe , return the result .	return mark_safe ( _helper ( value ) )
9050	define the method render with an argument self .	def render ( self ) :
7077	call the method __init__ from the base class of the class IntegerField , with arguments unpacked list args and unpacked dictionary kwargs .	super ( IntegerField , self ) . __init__ ( * args , ** kwargs )
14370	raise an ValueError with an argument string STR0 .	raise ValueError ( STR0 )
18405	append STR0 to generic_lang_code , if supported_code starts with it ,	if supported_code . startswith ( generic_lang_code + STR0 ) :
6925	return None .	return None
5980	substitute value for self.value .	self . value = value
16361	call the function _explode_shorthand_ip_string with an argument ip_str , substitute the result for ip_str .	ip_str = _explode_shorthand_ip_string ( ip_str )
16045	if text is an instance of SafeData , safe_input is boolean True , otherwise is boolean False .	safe_input = isinstance ( text , SafeData )
10771	append node to nodelist .	nodelist . append ( node )
2040	import module datetime .	import datetime
15147	remove config dictionary element under STR0 key , if it exists substitute it for filters , if not , filters is None .	filters = config . pop ( STR0 , None )
8108	define the method cleaned_data with an argument self .	def cleaned_data ( self ) :
5902	call the method field.rel.to._default_manager.db_manager with an argument self.db , on the result call the method get_by_natural_key , with unpacked list field_value as an argument , substitute the result for obj .	obj = field . rel . to . _default_manager . db_manager ( self . db ) . get_by_natural_key ( * field_value )
5731	import module decimal .	import decimal
16421	split ip_str into parts by STR0 , for every hextet in the result ,	for hextet in ip_str . split ( STR0 ) :
9842	substitute self._rollback for rollback .	rollback = self . _rollback
15263	return s .	return s
14907	derive the class ConvertingTuple from tuple base class .	class ConvertingTuple ( tuple ) :
15818	call the function new_method_proxy with an argument getattr , substitute the result for __getattr__ .	__getattr__ = new_method_proxy ( getattr )
11207	return compile_function .	return compile_function
8071	if self.is_bound is true ,	if self . is_bound :
14899	return result .	return result
4226	define the method sync_apps with self class instance , connection and app_labels as arguments .	def sync_apps ( self , connection , app_labels ) :
7564	compile self.match regular expression , substitute it for self.match_re .	self . match_re = re . compile ( self . match )
15052	call the method logging._handler.clear .	logging . _handlers . clear ( )
15882	return a string STR0 , format it with __name__ field of the self class and repr_attr .	return STR0 % ( type ( self ) . __name__ , repr_attr )
1210	if not ,	else :
17171	call the function _import_module with an argument self.mod , return the result .	return _import_module ( self . mod )
16070	call the method domain.encode with an argument string STR0 , call the method decode on the result with an argument string STR1 , substitute the result for domain .	domain = domain . encode ( STR0 ) . decode ( STR1 )
18257	define the method _new_gnu_trans with 3 arguments : self , localedir and use_null_fallback set to boolean True .	def _new_gnu_trans ( self , localedir , use_null_fallback = True ) :
8716	instantiate RelatedObject class with 3 arguments : cls.fk.rel.to , cls.model and cls.fk , call the method get_accessor_name on the result , substitute all occurrences of STR0 in the result with an empty string , return it .	return RelatedObject ( cls . fk . rel . to , cls . model , cls . fk ) . get_accessor_name ( ) . replace ( STR0 , STR )
1370	evaluate binary expression with 4 operands : os.O_WRONLY , binary or os.O_CREAT , binary or os.O_EXCL , binary or STR0 attribute of the os object , or integer 0 if it doesnt exists .	flags = ( os . O_WRONLY | os . O_CREAT | os . O_EXCL | getattr ( os , STR0 , 0 ) )
6469	try ,	try :
9862	return first end elements of list chunk .	return chunk [ : end ]
1634	define lambda function that returns self.file.truncate field , use it as an argument for property function , put the result in truncate .	truncate = property ( lambda self : self . file . truncate )
12630	call the function get_library with an argument taglib , substitute the result for lib .	lib = get_library ( taglib )
7150	substitute decimals for digits .	digits = decimals
1580	define the method receive_data_chunk with arguments : self , raw_data and start .	def receive_data_chunk ( self , raw_data , start ) :
17903	call the function timedelta with an argument minutes set to offset , substitute the result for self.__offset .	self . __offset = timedelta ( minutes = offset )
10360	do nothing .	pass
10219	define the method setdefault with 3 arguments : self , key and default set to None .	def setdefault ( self , key , default = None ) :
914	import module operator .	import operator
4582	call the function add_arguments with parser as an argument , from the base class of the Command class .	super ( Command , self ) . add_arguments ( parser )
16183	call the method self.clear_cdata_mode .	self . clear_cdata_mode ( )
13944	return tuple , consisting of first element of t converted to lowercase and True .	return t [ 0 ] . lower ( ) , True
18746	call the method time.mktime with an argument tt , substitute the result for stamp .	stamp = time . mktime ( tt )
10638	remove the first element from context.render_context .	context . render_context . pop ( )
998	define the method __str__ with an argument self .	def __str__ ( self ) :
16229	return a string STR0 , formated with : first 7 elements of rfcdate , elements of rfcdate from 8-th to the 11-th index , and elements of rfcdate from 12-th to the 25-th index .	return STR0 % ( rfcdate [ : 7 ] , rfcdate [ 8 : 11 ] , rfcdate [ 12 : 25 ] )
11053	define the method render with 2 arguments : self and context .	def render ( self , context ) :
5144	template is an instance of Template class , created with an argument content .	template = Template ( content )
4899	import module codecs .	import codecs
6555	raise an NoReverseMatch exception with an argument string STR0 , STR1 , replace STR2 with lookup_view_s , args , kwargs , length of patterns , patterns , and respectively .	raise NoReverseMatch ( STR0 % ( lookup_view_s , args , kwargs , len ( patterns ) , patterns ) )
10697	take elements of token_string from second to second last element and strip the whitespaces surrounding the result , substitute the result for content .	content = token_string [ 2 : - 2 ] . strip ( )
9154	get the value under the name key of the data dictionary , return it , if the previous doesnt exists , return None .	return data . get ( name , None )
14192	append key to self.keyOrder .	self . keyOrder . append ( key )
5020	call the function warnings.warn with 2 arguments : string STR0 and RemovedInDjango19Warning .	warnings . warn ( STR0 , RemovedInDjango19Warning )
17014	if elt is an instance of Group class ,	if isinstance ( elt , Group ) :
2771	app_configs is not None .	app_configs = None
18456	call the function re.compile with an argument raw string STR0.* ? STR1 , substitute the result for constant_re .	constant_re = re . compile ( STR0 )
13686	substitute sys.stdin for fd .	fd = sys . stdin
1178	LOCK_NB is a hexadecimal 1 .	LOCK_NB = 1
7105	if value is contained in self.empty_values ,	if value in self . empty_values :
8901	call the method self.queryset.filter with an argument , unpacked dictionary with an entry : value for string STR0 appended to key , substitute the result for qs .	qs = self . queryset . filter ( ** { STR0 % key : value } )
15797	define the function allow_lazy with 2 arguments : func and unpacked list resultclasses .	def allow_lazy ( func , * resultclasses ) :
8489	substitute widgets for value under the STR0 key of attrs dictionary .	attrs [ STR0 ] = widgets
8530	substitute the value under the pk_key key of the self.data dictionary for pk .	pk = self . data [ pk_key ]
17691	call the function allow_lazy with an argument words , substitute the result for words .	words = allow_lazy ( words )
11853	return length of value ,	return len ( value )
11118	return an empty dictionary .	return { }
12863	return None .	return None
3746	if is_templatized is true ,	if is_templatized :
3223	if field.rel has an STR0 attribute ,	if hasattr ( field . rel , STR0 ) :
10226	define the method urlencode with 3 arguments : self and safe set to None .	def urlencode ( self , safe = None ) :
3463	convert fourth element of row to an integer , substitute it for value under the STR0 key of the field_params .	field_params [ STR0 ] = int ( row [ 3 ] )
6639	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
546	if exp is None or exp is greater than the return value of the call to the function time.time ,	if exp is None or exp > time . time ( ) :
7095	if widget is an instance of the NumberInput ,	if isinstance ( widget , NumberInput ) :
18554	call the function inline_re.match with an argument t.contents , substitute the result for imatch .	imatch = inline_re . match ( t . contents )
18230	if to_lower is true ,	if to_lower :
191	from django.conf import settings into default name space .	from django . conf import settings
18715	define the method __init__ with 2 arguments self and dt .	def __init__ ( self , dt ) :
11600	call the function func with 2 arguments : unpacked list args and unpacked dictionary kwargs , return the result .	return func ( * args , ** kwargs )
582	derive the class BaseMemcachedCacheMethods from RenameMethodsBase the base class .	class BaseMemcachedCacheMethods ( RenameMethodsBase ) :
1246	call the os.path.samefile with arguments src and dst , return the result .	return os . path . samefile ( src , dst )
2018	write a newline into a self.stream file stream .	self . stream . write ( STR0 )
17598	substitute last element of colors for value under the STR0 key of definition dictionary .	definition [ STR0 ] = colors [ - 1 ]
7786	if not ,	else :
7668	return an instance of OrderedDict class , created with an argument fields .	return OrderedDict ( fields )
5694	if field_value is an instance of the str type ,	if isinstance ( field_value , str ) :
5874	call the method Model._meta.get_all_field_names , substitute the result for model_fields .	model_fields = Model . _meta . get_all_field_names ( )
1986	call the mail.send method with fail_silently set to fail_silently as argument .	mail . send ( fail_silently = fail_silently )
7229	call the function warnings.warn with 3 arguments : string STR0 , RemovedInDjango19Warning and stacklevel set to integer 2 .	warnings . warn ( STR0 , RemovedInDjango19Warning , stacklevel = 2 )
3808	if the result is true or self.domain is not None , raise an CommandError exception with an argument string STR0 , where STR1 are replaced by : return value of the function os.path.basename called with first element of sys.argv as an argument , and second element of sys.argv .	raise CommandError ( STR0 % ( os . path . basename ( sys . argv [ 0 ] ) , sys . argv [ 1 ] ) )
7057	if min_length is not None ,	if min_length is not None :
8957	define the method as_ul with an argument self .	def as_ul ( self ) :
10233	for every k and list_ in return value of the method self.lists ,	for k , list_ in self . lists ( ) :
12248	try ,	try :
3045	join full_statement into a string , separated by newlines , use it as an argument for the call to the method curs.execute .	curs . execute ( STR0 . join ( full_statement ) )
6626	if urlconf_name is true ,	if urlconf_name :
566	call the method self.make_key with key and version set to version as arguments , substitute the result for key .	key = self . make_key ( key , version = version )
16743	call the method copy.copy with an argument register_to._registry , substitute the result for before_import_registry .	before_import_registry = copy . copy ( register_to . _registry )
9806	call the method self.flo.read with an argument self.chunk_size , substitute the result for data .	data = self . flo . read ( self . chunk_size )
16222	if query is an instance of MultiValueDict class ,	if isinstance ( query , MultiValueDict ) :
8525	call the method field.rel.get_related_field , substitute the result for field .	field = field . rel . get_related_field ( )
18627	return an empty list .	return [ ]
6487	try ,	try :
13391	define the function safe_join with 2 arguments base and unpacked dictionary paths .	def safe_join ( base , * paths ) :
9084	append name to STR0 use it as the name of the attribute to get from combined object , call the result with an argument : name appended to string STR1 , as the name of the attribute to get from self object , or if the previous doesnt exist , None .	getattr ( combined , STR0 + name ) ( getattr ( self , STR1 + name , None ) )
164	raise an exception NotImplementedError with string STR0 as argument .	raise NotImplementedError ( STR0 )
2721	substitute options.args for args .	args = options . args
9397	derive the class RadioChoiceInput from the ChoiceInput base class .	class RadioChoiceInput ( ChoiceInput ) :
5764	call the function StringIO with an argument stream_or_string , substitute the result for stream .	stream = StringIO ( stream_or_string )
14994	get converter attribute from self object , substitute it for converter .	converter = getattr ( self , converter )
1677	if mw_instance has an attribute named STR0 .	if hasattr ( mw_instance , STR0 ) :
3353	call the function table2model with an argument table_name , append the result to known_models .	known_models . append ( table2model ( table_name ) )
1530	read the whole self file and yield it as a generator return value .	yield self . read ( )
17915	if _time.daylight is true ,	if _time . daylight :
4139	if call to the function module_has_submodule with app_config.module and STR0 evaluates to True .	if module_has_submodule ( app_config . module , STR0 ) :
2653	if ending is None substitute self.ending for ending .	ending = self . ending if ending is None else ending
467	try ,	try :
13771	call the self.convert method with i , self.decimal_digits , self.digits and STR0 as arguments , assign the result to the neg and value , respectively .	neg , value = self . convert ( i , self . decimal_digits , self . digits , STR0 )
17236	_urllib_request_moved_attributes is an list with 33 elements , all of them are the results of the call to the function MovedAttribute with 3 different string arguments .	_urllib_request_moved_attributes = [ MovedAttribute ( STR0 , STR1 , STR2 ) , MovedAttribute ( STR3 , STR4 , STR5 ) , MovedAttribute ( STR6 , STR7 , STR8 ) , MovedAttribute ( STR9 , STR10 , STR11 ) , MovedAttribute ( STR12 , STR13 , STR14 ) , MovedAttribute ( STR15 , STR16 , STR17 ) , MovedAttribute ( STR18 , STR19 , STR20 ) , MovedAttribute ( STR21 , STR22 , STR23 ) , MovedAttribute ( STR24 , STR25 , STR26 ) , MovedAttribute ( STR27 , STR28 , STR29 ) , MovedAttribute ( STR30 , STR31 , STR32 ) , MovedAttribute ( STR33 , STR34 , STR35 ) , MovedAttribute ( STR36 , STR37 , STR38 ) , MovedAttribute ( STR39 , STR40 , STR41 ) , MovedAttribute ( STR42 , STR43 , STR44 ) , MovedAttribute ( STR45 , STR46 , STR47 ) , MovedAttribute ( STR48 , STR49 , STR50 ) , MovedAttribute ( STR51 , STR52 , STR53 ) , MovedAttribute ( STR54 , STR55 , STR56 ) , MovedAttribute ( STR57 , STR58 , STR59 ) , MovedAttribute ( STR60 , STR61 , STR62 ) , MovedAttribute ( STR63 , STR64 , STR65 ) , MovedAttribute ( STR66 , STR67 , STR68 ) , MovedAttribute ( STR69 , STR70 , STR71 ) , MovedAttribute ( STR72 , STR73 , STR74 ) , MovedAttribute ( STR75 , STR76 , STR77 ) , MovedAttribute ( STR78 , STR79 , STR80 ) , MovedAttribute ( STR81 , STR82 , STR83 ) , MovedAttribute ( STR84 , STR85 , STR86 ) , MovedAttribute ( STR87 , STR88 , STR89 ) , MovedAttribute ( STR90 , STR91 , STR92 ) , MovedAttribute ( STR93 , STR94 , STR95 ) , MovedAttribute ( STR96 , STR97 , STR98 ) , ]
212	derive CacheEntry class from the object base class .	class CacheEntry ( object ) :
4599	call the method parser.add_argument with 3 arguments : string STR1 , default set to DEFAULT_DB_ALIAS , and help set to string STR2 .	parser . add_argument ( STR1 , default = DEFAULT_DB_ALIAS , help = STR2 )
16015	call the function re.compile with an argument string STR0 formated with tags_re , substitute the result for endtag_re .	endtag_re = re . compile ( STR0 % tags_re )
6749	call the function validate_ipv46_address with an argument ip_address .	validate_ipv46_address ( ip_address )
16805	if entry is a directory ,	if os . path . isdir ( entry ) :
9267	supports_microseconds is boolean False .	supports_microseconds = False
1847	return line .	return line
2043	from django.core.exceptions import ImproperlyConfigured into default name space .	from django . core . exceptions import ImproperlyConfigured
7096	if self.min_value is not None ,	if self . min_value is not None :
17188	append attr.name to attrs for every attr in self._moved_attributes .	attrs += [ attr . name for attr in self . _moved_attributes ]
18621	if first is true ,	if first :
16603	from collections import namedtuple .	from collections import namedtuple
8914	initial is an empty list .	initial = [ ]
13730	call the function restart_with_reloader , substitute the return value for exit_code .	exit_code = restart_with_reloader ( )
17839	substitute first element of s for quote .	quote = s [ 0 ]
8351	field_dict is an instance of OrderedDict class , created with an argument field_list .	field_dict = OrderedDict ( field_list )
2592	if settings.configured is true ,	if settings . configured :
16842	if cnt is true and remained of dividing cnt with grouping is zero ,	if cnt and not cnt % grouping :
15605	return cached .	return cached
422	if fname file path exists ,	if os . path . exists ( fname ) :
2091	define the method __init__ with arguments : self , unpacked list args and unpacked dictionary kwargs .	def __init__ ( self , * args , ** kwargs ) :
18128	define the function get_language_from_request with 2 arguments : request and check_path set to boolean False .	def get_language_from_request ( request , check_path = False ) :
13964	try ,	try :
7654	return an empty string .	return STR
18266	use_null_fallback is boolean True .	use_null_fallback = True
3385	add field_params to extra_params dictionary .	extra_params . update ( field_params )
14541	define the method M with an argument self .	def M ( self ) :
14448	define the method a with an argument self .	def a ( self ) :
8089	do nothing .	pass
9091	substitute sup_cls.media for base .	base = sup_cls . media
10586	builtins is an empty list .	builtins = [ ]
15804	call the function func with 2 arguments : unpacked list args and unpacked dictionary kwargs .	return func ( * args , ** kwargs )
4636	from django.db import connections and DEFAULT_DB_ALIAS into default name space .	from django . db import connections , DEFAULT_DB_ALIAS
14450	call the function _ with an argument string STR0 , return the result .	return _ ( STR0 )
17677	for every i and char in enumerated text ,	for i , char in enumerate ( text ) :
8148	if self._non_form_errors is None ,	if self . _non_form_errors is None :
12604	if token.contents equals string STR0 ,	if token . contents == STR0 :
4850	define the method execute with 3 arguments self , unpacked list args and unpacked dictionary options .	def execute ( self , * args , ** options ) :
9038	derive the class Media from the object base class .	class Media ( object ) :
11972	try ,	try :
2957	extend all_locales list with the elements of locale_dirs list on which os.path.basename function was applied .	all_locales . extend ( map ( os . path . basename , locale_dirs ) )
7440	raise an ValidationError with 2 arguments : value under the STR0 key of the self.error_messages dictionary and code set to STR1 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 )
3734	if six.PY2 is true ,	if six . PY2 :
3502	call the method parser.add_argument with 5 arguments : string STR1 , action set to string STR2 , dest as a string STR3 , default set to DEFAULT_DB_ALIAS and help as a string STR4	parser . add_argument ( STR1 , action = STR2 , dest = STR3 , default = DEFAULT_DB_ALIAS , help = STR4 )
11047	if not ,	else :
10295	from django.utils.encoding import force_bytes , force_text and iri_to_uri into default name space .	from django . utils . encoding import force_bytes , force_text , iri_to_uri
15123	get config dictionary element under STR0 key , if it exists substitute it for dfmt , if not , dfmt is None .	dfmt = config . get ( STR0 , None )
17859	call the function datetime.datetime with 3 arguments , now.year , now.month and now.day , substitute the result for now .	now = datetime . datetime ( now . year , now . month , now . day )
7718	call the method self.full_clean .	self . full_clean ( )
3196	try ,	try :
9625	get the value under the STR0 key of the opts dictionary , substitute it for boundary .	boundary = opts . get ( STR0 )
3265	define the add_arguments with arguments self and parser .	def add_arguments ( self , parser ) :
4282	if not ,	else :
3076	call the function module_to_dict with an argument global_settings , substitute it for default_settings .	default_settings = module_to_dict ( global_settings )
8516	if self.data and self.files are both False ,	if not ( self . data or self . files ) :
10283	import module datetime .	import datetime
13346	from lib2to3.fixer_util import find_indentation , Name , syms and touch_import into default name space .	from lib2to3 . fixer_util import find_indentation , Name , syms , touch_import
15567	define the function iter_format_modules with 2 arguments : lang and format_module_path set to None .	def iter_format_modules ( lang , format_module_path = None ) :
14689	if dt.year is greater than or equal to integer 1900 ,	if dt . year >= 1900 :
12112	if csrf_token is true ,	if csrf_token :
786	convert app and model._meta.object_name to strings , join them with separating STR0 character , substitute it for obj .	obj = STR0 % ( app , model . _meta . object_name )
7366	substitute NullBooleanSelect for widget .	widget = NullBooleanSelect
216	define the method get with 4 arguments , self class instance , key , default set to None and version set to None .	def get ( self , key , default = None , version = None ) :
887	call the smart_text function with an argument token , return the result .	return smart_text ( token )
17142	if not ,	else :
9294	return boolean False .	return False
3883	define the function is_ignored with arguments path and ignore_patterns .	def is_ignored ( path , ignore_patterns ) :
3376	value under the STR0 key of the extra_params dictionary is boolean True ,	extra_params [ STR0 ] = True
2683	join usage and self.help into a string , separated by 2 new line characters , return it .	return STR0 % ( usage , self . help )
18741	tt is an tuple with 9 elements : dt.year , dt.month , dt.day , dt.hour , dt.minute , dt.second , result of the function dt.weekday , integer 0 and integer 0 .	tt = ( dt . year , dt . month , dt . day , dt . hour , dt . minute , dt . second , dt . weekday ( ) , 0 , 0 )
10417	call the method closable.close .	closable . close ( )
4420	get the value under the STR0 key of the options dictionary , if it exists substitute it for shutdown_message , if not , shutdown_message is an empty string .	shutdown_message = options . get ( STR0 , STR )
16871	raise an NotImplementedError exception with an argument string STR0 .	raise NotImplementedError ( STR0 )
2708	return parser	return parser
6387	substitute app_name for self.app_name .	self . app_name = app_name
18189	return None .	return None
14546	return the value under the self.data.month key of the MONTHS_AP dictionary .	return MONTHS_AP [ self . data . month ]
10827	substitute i for p .	p = i
785	substitute model._meta.app_label for app .	app = model . _meta . app_label
461	return an empty list .	return [ ]
8606	delete entry from form.cleaned_data dictionary under the field key .	del form . cleaned_data [ field ]
4879	call the parser.add_argument with string STR0 , default set to an empty string and help as string STR1 .	parser . add_argument ( STR0 , default = STR , help = STR1 )
6700	raise an exception e .	raise e
4689	help is a string STR0 .	help = STR0
5260	from django.utils.encoding import force_text and DEFAULT_LOCALE_ENCODING into default name space .	from django . utils . encoding import force_text , DEFAULT_LOCALE_ENCODING
2591	call the method settings.configure .	settings . configure ( )
5397	derive the class BadSerializer from the object base class .	class BadSerializer ( object ) :
4143	get the value under the STR0 key of options dictionary , if key doesnt exist return False , if the return value is True ,	if options . get ( STR0 , False ) :
4416	define the method inner_run with 3 arguments : self , unpacked list args and unpacked dictionary options .	def inner_run ( self , * args , ** options ) :
5545	call the method Model._default_manager.db_manager with an argument db , on the result call the get_by_natural_key with , an unpacked list natural_key as argument , substitute the pk filed of the resulting object for obj.pk .	obj . pk = Model . _default_manager . db_manager ( db ) . get_by_natural_key ( * natural_key ) . pk
18032	call the method timezone.normalize with an argument value , substitute the result for value .	value = timezone . normalize ( value )
2589	substitute exc for self.settings_exception ,	self . settings_exception = exc
11290	derive the class InclusionNode form the base class TagHelperNode .	class InclusionNode ( TagHelperNode ) :
14148	define the method items with an argument self .	def items ( self ) :
1341	append character STR0 to the base_url .	base_url += STR0
1241	call the function os.chmod with arguments dst and mode .	os . chmod ( dst , mode )
12379	for every arg in self.args call the method arg.resolve with an argument context , substitute the results in a list for args .	args = [ arg . resolve ( context ) for arg in self . args ]
7169	define the method __init__ with arguments self , input_formats set to None , unpacked list args and unpacked dictionary kwargs .	def __init__ ( self , input_formats = None , * args , ** kwargs ) :
11071	if node is an instance of Node ,	if isinstance ( node , Node ) :
10398	get the value under the key key of the self.cookies dictionary , substitute boolean True for STR0 key of the returned dictionary .	self . cookies [ key ] [ STR0 ] = True
2342	if STR0 is not in header_names ,	if STR0 not in header_names :
11815	call the function strip_tags with an argument value , return the result .	return strip_tags ( value )
4011	if conflicts is true and self.merge is false ,	if conflicts and not self . merge :
15157	get value under STR0 key of config dictionary , use it as a key to get the value from the dictionary , under the STR1 key of self.config dictionary , substitute the result for value under STR2 key of config dictioanry .	config [ STR0 ] = self . config [ STR1 ] [ config [ STR2 ] ]
9798	if number_equal is greater than integer 40 ,	if number_equal > 40 :
17573	NOCOLOR_PALETTE is a string STR0 .	NOCOLOR_PALETTE = STR0
11939	try ,	try :
1979	call the mail.send method with fail_silently=fail_silently as argument .	mail . send ( fail_silently = fail_silently )
12838	if TemplateDoesNotExist , renamed to e , exception is caught ,	except TemplateDoesNotExist as e :
2223	define the function forbid_multi_line_headers with arguments : name , val and encoding .	def forbid_multi_line_headers ( name , val , encoding ) :
15408	derive the class RssFeed from the SyndicationFeed base class .	class RssFeed ( SyndicationFeed ) :
8784	if not ,	else :
9838	define the method __next__ with an argument self .	def __next__ ( self ) :
7069	return attrs .	return attrs
8397	if opts.model is None .	if opts . model is None :
14045	call the function F with an argument x , for every x in sequence of integers from 1 to l , not included , substitute the results in a list for T .	T = [ F ( x ) for x in range ( 1 , l ) ]
13015	skip this loop iteration .	continue
11760	decorator function register.filter with an argument is_safe set to boolean True .	@ register . filter ( is_safe = True )
5828	if not ,	else :
12445	values is an dictionary created with result of the method val.resolve called with an argument context , for every key and val in return value of the function six.iteritems called with an arguments self.extra_context .	values = dict ( ( key , val . resolve ( context ) ) for key , val in six . iteritems ( self . extra_context ) )
11671	if autoescape is false , if value is an instance of SafeData ,	if not autoescape or isinstance ( value , SafeData ) :
9897	define the method _parse_header with an argument line .	def _parse_header ( line ) :
9812	raise an StopIteration exception .	raise StopIteration ( )
5181	define validate_name with 3 arguments : self , name and app_or_project .	def validate_name ( self , name , app_or_project ) :
13844	return from the function	return
3643	join elements of parts into a string , separated with STR0 , substitute it for name .	name = STR0 . join ( parts )
9865	self._done is boolean True .	self . _done = True
11076	call the function mark_safe with an argument , elements of bits joined into a string , return the result .	return mark_safe ( STR . join ( bits ) )
277	call the method cursor.execute with string STR0 as argument , substitute the STR1 with table and 3 elements of a list : b64encoded , exp and key , respectively .	cursor . execute ( STR0 % table , [ b64encoded , exp , key ] )
14811	define the method __call__ with 2 arguments : self and f .	def __call__ ( self , f ) :
3298	call the method self.emit_post_migrate with arguments verbosity , interactive and database .	self . emit_post_migrate ( verbosity , interactive , database )
2480	if KeyError exception is caught ,	except KeyError :
11353	for every module in templatetags_modules ,	for module in templatetags_modules :
9699	try ,	try :
14258	remove item from self dictionary .	self . remove ( item )
7773	return the result of the method self.errors.get called with 2 arguments : NON_FIELD_ERRORS and return value of the method , self.error_class called with an argument error_class set to string STR0 .	return self . errors . get ( NON_FIELD_ERRORS , self . error_class ( error_class = STR0 ) )
17667	decrement truncate_len by integer 1 .	truncate_len -= 1
7230	if length of value is not equal to integer 2 ,	if len ( value ) != 2 :
18441	call the function get_supported_language_variant with an argument accept_lang , return the result .	return get_supported_language_variant ( accept_lang )
7895	if not ,	else :
5942	do nothing .	pass
1479	import module os .	import os
11862	decorator function register.filter with an argument is_safe set to boolean True .	@ register . filter ( is_safe = True )
2951	create a list out of basedir elements for which function os.path.isdir returns true , apply the os.path.abspath function on every element , and put the results in a list , basedir is set of previous list elements .	basedirs = set ( map ( os . path . abspath , filter ( os . path . isdir , basedirs ) ) )
1410	directories , files are empty lists .	directories , files = [ ] , [ ]
16686	delete entry under the oldkey key of the cache dictionary .	del cache [ oldkey ]
8523	define the method _get_to_python with 2 arguments : self and field .	def _get_to_python ( self , field ) :
242	call the method self.make_key with key and version set to version as arguments , substitute the result for key .	key = self . make_key ( key , version = version )
10486	status_code is an integer 301 .	status_code = 301
11642	call the method formats.number_format with 2 arguments , d converted to a integer and then to string , and integer 0 , use the result as an argument for the call to the function mark_safe , return the result .	return mark_safe ( formats . number_format ( STR0 % ( int ( d ) ) , 0 ) )
17049	derive the class EscapeBytes from bytes and EscapeData base classes .	class EscapeBytes ( bytes , EscapeData ) :
1232	from shutil import copystat into default name space .	from shutil import copystat
8561	for every form in self.saved_forms ,	for form in self . saved_forms :
18016	if not ,	else :
9262	value is an empty string .	value = STR
14960	match rest string with self.INDEX_PATTERN regex , substitute the result for m .	m = self . INDEX_PATTERN . match ( rest )
14273	return a string STR0 formated with self.__class__.__name__ , and a result of the method __repr__ called from instance of base class of the MultiValueDict class .	return STR0 % ( self . __class__ . __name__ , super ( MultiValueDict , self ) . __repr__ ( ) )
7146	call the method value.as_tuple , assign the result to sign , digittuple and exponent , respectively .	sign , digittuple , exponent = value . as_tuple ( )
10686	self.verbatim is boolean False .	self . verbatim = False
17064	if rhs is an instance of SafeText ,	if isinstance ( rhs , SafeText ) :
14135	call the method self._iteritems , for every k and v in the result ,	for k , v in self . _iteritems ( ) :
5308	derive the class Paginator from the object base class .	class Paginator ( object ) :
6312	method lru_cache.lru_cache with an argument maxsize set to None , as a decorator ,	@ lru_cache . lru_cache ( maxsize = None )
5966	convert self into a string and return it .	return str ( self )
14030	if length of password is greater than inner.block_size ,	if len ( password ) > inner . block_size :
12159	derive the class ForNode from Node base class .	class ForNode ( Node ) :
5134	if filename ends with STR0 , STR1 or STR2 ,	if filename . endswith ( ( STR0 , STR1 , STR2 ) ) :
10104	define the method _load_post_and_files with an argument self .	def _load_post_and_files ( self ) :
12514	call the method parser.delete_first_token .	parser . delete_first_token ( )
16248	call the method m.group with an argument string STR0 , convert the result into a string , substitute it for hour .	hour = int ( m . group ( STR0 ) )
1	from threading import local into default name space .	from threading import local
15980	call the method HTMLParser.__init__ with an argument self .	HTMLParser . __init__ ( self )
11593	define the method stringfilter with an argument func .	def stringfilter ( func ) :
18534	if inplural is true ,	if inplural :
4062	call the method writer.as_string , append newline to the result , write it to self.stdout .	self . stdout . write ( STR0 % writer . as_string ( ) )
13542	write data bytes to outfile .	outfile . write ( data )
14428	compile regex from a string STR0 , substitute it for re_formatchars .	re_formatchars = re . compile ( STR0 )
6063	import module importlib .	import importlib
4491	for every shell in available_shells ,	for shell in available_shells :
3993	get the value under the STR0 key of the options dictionary , substitute it for self.verbosity .	self . verbosity = options . get ( STR0 )
8218	join return value of the function six.text_type called with an argument self.management_form and forms into a string , separated by newline , use it as an argument for the call to the function mark_safe , return the result .	return mark_safe ( STR0 . join ( [ six . text_type ( self . management_form ) , forms ] ) )
2504	call the method collections.defaultdict with a argument : lambda function without arguments that returns an empty list , substitute the result for commands_dict .	commands_dict = collections . defaultdict ( lambda : [ ] )
8246	from django.utils.deprecation import RemovedInDjango19Warning into default name space .	from django . utils . deprecation import RemovedInDjango19Warning
1858	assign path_info to the value under the STR0 key of the self.META dictionary .	self . META [ STR0 ] = path_info
7953	if self.field.label_suffix is not None , substitute self.field.label_suffix for label_suffix , otherwise substitute self.form.label_suffix for label_suffix .	label_suffix = ( self . field . label_suffix if self . field . label_suffix is not None else self . form . label_suffix )
13004	from django.conf import settings into default name space .	from django . conf import settings
6678	decorator deconstructible ,	@ deconstructible
4344	from django.conf import settings into default namespace .	from django . conf import settings
11275	substitute bits without last two elements for bits .	bits = bits [ : - 2 ]
11532	return an instance of DebugNodeList class .	return DebugNodeList ( )
9909	substitute RAW for TYPE .	TYPE = RAW
17684	call the method self.add_truncation_text with 2 arguments : if end_index is greater than zero , first end_index elements of text , if not an empty string , and truncate , return the result .	return self . add_truncation_text ( text [ : end_index or 0 ] , truncate )
3966	append newline to plural_form_line , substitute the result for line .	line = STR0 % plural_form_line
4084	migration.merged_operations is an empty list .	migration . merged_operations = [ ]
17645	if line is true ,	if line :
17546	try ,	try :
18000	call the method deactivate .	deactivate ( )
6362	define the method resolve with arguments self and path .	def resolve ( self , path ) :
11359	break loop execution .	break
12068	define the function phone2numeric_filter with an argument value .	def phone2numeric_filter ( value ) :
6533	if not ,	else :
15141	if formatter is true ,	if formatter :
12298	match is None .	match = None
9395	define the method id_for_label with an argument self .	def id_for_label ( self ) :
8535	if i is smaller than result of the method self.initial_form_count and key STR0 is not contained in kwargs ,	if i < self . initial_form_count ( ) and STR0 not in kwargs :
17822	if nor ,	else :
3884	call the function os.path.basename with an arguments path , substitute the result for filename .	filename = os . path . basename ( path )
9290	call the function force_text with an argument value , substitute the result for value under the STR0 key of the final_attrs .	final_attrs [ STR0 ] = force_text ( value )
6647	from django.utils.six.moves.urllib.parse import urlsplit and urlunsplit into default name space .	from django . utils . six . moves . urllib . parse import urlsplit , urlunsplit
13866	call the function http_date with no arguments , and substitute its return value for value of dictionary response under the key STR0 .	response [ STR0 ] = http_date ( )
14890	derive the class ConvertingList from list base class .	class ConvertingList ( list ) :
5499	call the method self.getvalue , return the result .	return self . getvalue ( )
12506	define the function do_filter with 2 arguments : parser and token .	def do_filter ( parser , token ) :
2796	append newline character to msg .	msg += STR0
15159	raise an ValueError exception with an argument string STR0 , formated with value under STR1 key of config dictionary and e .	raise ValueError ( STR0 % ( config [ STR1 ] , e ) )
18796	call the timestamp.strftime with string STR0 as an argument , substitute the result for changeset .	changeset = timestamp . strftime ( STR0 )
4398	raise an CommandError exception with an argument string STR0 , where STR1 is repaced with self.port .	raise CommandError ( STR0 % self . port )
10833	append self.pointer to self.backout .	self . backout . append ( self . pointer )
8481	do nothing .	pass
4728	call the method self.style.MIGRATE_HEADING with an argument string STR0 , write it to self.stdout .	self . stdout . write ( self . style . MIGRATE_HEADING ( STR0 ) )
16360	raise an ValidationError exception with 2 arguments : error_message and code as a string STR0 .	raise ValidationError ( error_message , code = STR0 )
3977	from django.db.migrations import Migration into default name space .	from django . db . migrations import Migration
13343	return an instance of Literal class , created with an argumen value .	return Literal ( value )
10826	raise an TemplateSyntaxError exception with an argument string STR0 , where STR1 is replaced with subject .	raise TemplateSyntaxError ( STR0 % subject )
4299	call the self.stderr.write method with string STR0 as argument , with all occurrences of STR1 replaced with app_name and model._meta.object_name and e , respectively .	self . stderr . write ( STR0 % ( app_name , model . _meta . object_name , e ) )
14634	left justify value under the STR0 key of the kw dictionary , in the field of width 6 , fill the rest with STR1 , substitute the result for value under the STR2 key of the kw dictionary .	kw [ STR0 ] = kw [ STR1 ] . ljust ( 6 , STR2 )
17360	substitute chr for int2byte .	int2byte = chr
14037	result is an integer 0 .	result = 0
9391	call the method self.is_checked , if it evaluates to true ,	if self . is_checked ( ) :
5421	define the function get_serializer with an argument format .	def get_serializer ( format ) :
1739	replace STR1 in the string STR0 ,	raise ValueError ( STR0 % ( middleware_method . __self__ . __class__ . __name__ ) )
4906	from django.db import models and router into default name space .	from django . db import models , router
12287	for every node in nodelist ,	for node in nodelist :
15421	define the method write_items with 2 arguments : self and handler .	def write_items ( self , handler ) :
660	define the method set_many with self , data , timeout set to DEFAULT_TIMEOUT and version set to None as arguments .	def set_many ( self , data , timeout = DEFAULT_TIMEOUT , version = None ) :
10623	origin is an instance of StringOrigin class created with an argument template_string .	origin = StringOrigin ( template_string )
8396	substitute self._meta for opts .	opts = self . _meta
17428	substitute newline character for newline .	newline = STR0
18192	import module os .	import os
18680	if not ,	else :
6099	wsgi_opts is a dictionary with 4 initial entries : value under the key STR0 of options dictionary converted to an integer , for STR1 , value under the key STR2 of options dictionary converted to an integer for STR3 , and value under the key STR4 of options dictionary converted to an integer , for STR5 .	wsgi_opts = { STR3 : int ( options [ STR0 ] ) , STR4 : int ( options [ STR1 ] ) , STR5 : int ( options [ STR2 ] ) , }
8557	define the method save with 2 arguments : self and commit set to boolean True .	def save ( self , commit = True ) :
109	call the options.get method with string STR0 and integer 3 as arguments , use the string STR1 and previous result as the arguments for the call to the params.get method , substitute the result for cull_frequency .	cull_frequency = params . get ( STR0 , options . get ( STR1 , 3 ) )
5886	if not ,	else :
15252	otherwise , if s has an attribute STR0 ,	elif hasattr ( s , STR0 ) :
5339	try ,	try :
13128	from django.conf import settings into default name space .	from django . conf import settings
12615	if length of bits is not integer 2 or 3 ,	if len ( bits ) not in ( 2 , 3 ) :
7878	return boolean False .	return False
14261	define the method __iter__ with an argument self .	def __iter__ ( self ) :
18486	if translators_comment_start is not None and lineno is greater than or equal to translators_comment_start ,	if translators_comment_start is not None and lineno >= translators_comment_start :
7191	if value is contained in self.empty_values ,	if value in self . empty_values :
6309	if view_function is not a callable function ,	if not callable ( view_func ) :
5994	substitute pubid for self.pubid .	self . pubid = pubid
11662	decorator function register.filter with an argument is_safe set to boolean True .	@ register . filter ( is_safe = True )
7477	if value is not equal self.empty_value ,	if value != self . empty_value :
17510	if self.active_readers equals integer 0 and self.waiting_writers is not equal to integer 0 ,	if self . active_readers == 0 and self . waiting_writers != 0 :
14055	close the process with an argument 0 .	sys . exit ( 0 )
397	call the method self._cull .	self . _cull ( )
8363	get STR0 attribute from the options object , if it exists substitute it for self.help_texts , if not self.help_texts is None .	self . help_texts = getattr ( options , STR0 , None )
4250	add model to created_models set .	created_models . add ( model )
12003	define the function divisibleby with 2 arguments value and arg .	def divisibleby ( value , arg ) :
5569	get the value under the STR0 key of self.options dictionary , if it is true ,	if self . options . get ( STR0 ) :
3102	call the method parser.add_argument with 5 arguments : string STR0 , action set to string STR1 , dest is string STR2 , default is boolean False and help is a string STR3 .	parser . add_argument ( STR0 , action = STR1 , dest = STR2 , default = False , help = STR3 )
14840	import module re .	import re
1780	call the resolver.resolve_error_handler with integer 500 as the argument , assign the resulting tuple elements to the callback , and param_dict , respectively .	callback , param_dict = resolver . resolve_error_handler ( 500 )
2759	from django.db import connections and DEFAULT_DB_ALIAS into default namespace .	from django . db import connections , DEFAULT_DB_ALIAS
2924	evaluate the boolean expression , if first three characters of sample equals to string of bytes '\xef\xbb\xbfSTR , of if sample starts with codecs.BOM_UTF16_LE or sample starts with codecs.BOM_UTF16_BE , return the evaluated boolean expression .	return sample [ : 3 ] == STR0 or sample . startswith ( codecs . BOM_UTF16_LE ) or sample . startswith ( codecs . BOM_UTF16_BE )
7969	call the function format_html with 3 arguments string STR0 , attrs and contents , substitute the result for contents .	contents = format_html ( STR0 , attrs , contents )
2860	define the function supports_color , without arguments .	def supports_color ( ) :
16856	non_capturing_groups is an empty list .	non_capturing_groups = [ ]
2184	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
11814	define the function striptags with an argument value .	def striptags ( value ) :
3789	append list containing string STR0 to self.msgmerge_options	self . msgmerge_options = self . msgmerge_options [ : ] + [ STR0 ]
5398	internal_use_only is boolean False .	internal_use_only = False
14716	define the method __new__ with 3 arguments : cls , unpacked list args and unpacked dictionary kwargs .	def __new__ ( cls , * args , ** kwargs ) :
18785	define the function get_git_changeset .	def get_git_changeset ( ) :
17755	call the method re_newlines.sub with 2 arguments : STR0 and text , return the result .	return re_newlines . sub ( STR0 , text )
1775	substitute STR0 in STR1 with request.path , exc_info set to exc_info , extra is an dictionary with two pairs of elements STR2 with value 500 , and 'request with value request , respectively use the previous as the arguments for the call to the logger.error function .	logger . error ( STR0 , request . path , exc_info = exc_info , extra = { STR1 : 500 , STR2 : request } )
7258	derive the class EmailField from the base class CharField class .	class EmailField ( CharField ) :
8395	define the method __init__ with 10 arguments : self , data set to None , files set to None , auto_id set to string STR0 , prefix set to None , initial set to None , error_class set to ErrorList , label_suffix set to None , empty_permitted set to boolean False , instance set to None .	def __init__ ( self , data = None , files = None , auto_id = STR0 , prefix = None , initial = None , error_class = ErrorList , label_suffix = None , empty_permitted = False , instance = None ) :
726	try ,	try :
14713	define the function deconstructible with 2 arguments : unpacked list args and unpacked dictionary kwargs .	def deconstructible ( * args , ** kwargs ) :
15338	format string STR0 with hour and minute , append it to time_str , return the result .	return time_str + STR0 % ( hour , minute )
1590	call the method new_file from the base class of the TemporaryFileUploadHandler class with arguments : file_name , unpacked list args and unpacked dictionary kwargs .	super ( TemporaryFileUploadHandler , self ) . new_file ( file_name , * args , ** kwargs )
12444	define the method render with 2 arguments : self and context .	def render ( self , context ) :
13869	call the function patch_cache_control , with response and max_age set to cache_timeout as arguments .	patch_cache_control ( response , max_age = cache_timeout )
15248	if s is an instance of object bytes ,	if isinstance ( s , bytes ) :
3163	if mode is not contained in app_list_value ,	if model not in app_list_value :
16085	otherwise if autoescape is true ,	elif autoescape :
736	if string STR0 is not contained in settings.MIDDLEWARE_CLASSES set ,	if STR0 not in set ( settings . MIDDLEWARE_CLASSES ) :
15689	call the function warnings.warn with 3 arguments : string STR0 , RemovedInDjango19Warning and stacklevel set to integer 2 .	warnings . warn ( STR0 , RemovedInDjango19Warning , stacklevel = 2 )
5610	cut the last 6 elemetns from r , append character STR0 to it , substitute the result for r .	r = r [ : - 6 ] + STR0
7192	return None .	return None
6518	if lookup_view is contained in self._callback_strs ,	if lookup_view in self . _callback_strs :
5515	get STR0 attribute of the self.stream object , if it exists and is callable ,	if callable ( getattr ( self . stream , STR0 , None ) ) :
9935	pdict is an empty dictionary .	pdict = { }
4257	call the self.stdout.write method with string STR0 as argument , with all occurrences of STR1 replaced with model._meta.db_table .	self . stdout . write ( STR0 % model . _meta . db_table )
14598	define the method z with an argument self .	def z ( self ) :
18538	if not ,	else :
4212	flush the output buffer of the self.stdout object .	self . stdout . flush ( )
3263	derive the class Command from the BaseCommand base class .	class Command ( BaseCommand ) :
11125	if match is false or call to the method match.group with an argument integer 1 evaluates to boolean false ,	if not match or not match . group ( 1 ) :
2329	if self.connection is false ,	if not self . connection :
8344	raise an TypeError with an string STR0 .	raise TypeError ( STR0 )
8164	call self.errors .	self . errors
17393	if fp is None ,	if fp is None :
18112	call the function activate with an argument self.language .	activate ( self . language )
1647	from django.core import signals into default name space .	from django . core import signals
1364	raise an IOError exception with argument string STR0 , where STR1 is replaced by directory .	raise IOError ( STR0 % directory )
8780	remove element from kwargs dictionary under the key STR0 , substitute it for self.to_field if it exists , if not self.to_field is None .	self . to_field = kwargs . pop ( STR0 , None )
2934	requires_system_checks is boolean False .	requires_system_checks = False
5267	call the force_text function with 3 arguments : e.strerror , DEFAULT_LOCALE_ENCODING and strings_only set to boolean True .	strerror = force_text ( e . strerror , DEFAULT_LOCALE_ENCODING , strings_only = True )
14896	if type of result is ConvertingDict , ConvertingList or ConvertingTuple ,	if type ( result ) in ( ConvertingDict , ConvertingList , ConvertingTuple ) :
3764	call the method parser.add_argument with 6 arguments : string STR0 , string STR1 , default as an empty list , dest as a string STR2 , action as a string STR3 and help as a string , STR4 .	parser . add_argument ( STR0 , STR1 , default = [ ] , dest = STR2 , action = STR3 , help = STR4 )
11902	return list with 2 elements : first_item and second_item , and old_style_list .	return [ first_item , second_item ] , old_style_list
4888	call the function call_command with 6 arguments , string STR0 , addrport as the value under the STR1 key of options dictionary ,	call_command ( STR0 , addrport = options [ STR1 ] , shutdown_message = shutdown_message , use_reloader = False , use_ipv6 = options [ STR2 ] , use_threading = use_threading )
16737	define the function autodiscover_modules with 2 arguments unpacked list args and unpacked dictionary kwargs .	def autodiscover_modules ( * args , ** kwargs ) :
15729	if cls has an attribute k ,	if hasattr ( cls , k ) :
17519	finally perform ,	finally :
14271	call the method __init__ from the base class of the class MultiValueDict , with an argument key_to_list_mapping .	super ( MultiValueDict , self ) . __init__ ( key_to_list_mapping )
925	derive the class SuspiciousOperation from the Exception base class .	class SuspiciousOperation ( Exception ) :
17827	if not ,	else :
13198	if self._is_rendered is true ,	if self . _is_rendered :
495	call the self._lock.reader method , with the result perform the following ,	with self . _lock . reader ( ) :
11524	remove first element from self.command_stack .	self . command_stack . pop ( )
5437	call the function _load_serializers .	_load_serializers ( )
16502	substitute value under the name key of the toks dictionary for tok .	tok = toks [ name ]
4291	if index_sql is not empty ,	if index_sql :
5974	tpl is an string STR0 .	tpl = STR0
14395	substitute complain for __setslice__ .	__setslice__ = complain
3448	if col_name is not equal to new_name and field_notes is true ,	if col_name != new_name and field_notes :
12684	if tag is not contained in TemplateTagNode.mapping ,	if tag not in TemplateTagNode . mapping :
8508	model is None .	model = None
817	from django.apps import apps into default name space .	from django . apps import apps
7200	derive the class TimeField from the base class BaseTemporalField class .	class TimeField ( BaseTemporalField ) :
12617	if length of bits equals integer 3 ,	if len ( bits ) == 3 :
9879	decrement end by one .	end -= 1
6350	substitute callback for self._callback .	self . _callback = callback
15524	if value under the STR0 key of the item dictionary is not None ,	if item [ STR0 ] is not None :
11755	split value into words , return the length of the result .	return len ( value . split ( ) )
12688	define the function url with 2 arguments : parser and token .	def url ( parser , token ) :
9321	if self.allow_multiple_selected is false ,	if not self . allow_multiple_selected :
15315	evaluate the function get_system_encoding ( ) , substitute the return vale for DEFAULT_LOCALE_ENCODING .	DEFAULT_LOCALE_ENCODING = get_system_encoding ( )
5206	call the function urlretrieve with arguments url and tempdir and filename joined into a file path , assign the result to the_path , and info , respectively .	the_path , info = urlretrieve ( url , path . join ( tempdir , filename ) )
903	return context_extras .	return context_extras
5818	call the method self._start_relational_field with an argument field .	self . _start_relational_field ( field )
1480	from io import BytesIO into default name space .	from io import BytesIO
10046	call the function iri_to_uri with an argument location , return the result .	return iri_to_uri ( location )
16449	append string STR0 to new_ip .	new_ip . append ( STR0 )
11314	define the function is_library_missing with an argument name .	def is_library_missing ( name ) :
4515	if pythonrc is true ,	if not pythonrc :
6324	call the method callback.rindex with an argument character STR0 , substitute the result for dot .	dot = callback . rindex ( STR0 )
1115	return boolean True .	return True
7538	call the method self.compress with an argument clean_data , substitute the result for out .	out = self . compress ( clean_data )
7977	if self.errors is true and self.form has an attribute STR0 ,	if self . errors and hasattr ( self . form , STR0 ) :
6725	if whitelist is not None	if whitelist is not None :
8870	return value .	return value
8356	define the method __init__ with arguments : self and options set to None .	def __init__ ( self , options = None ) :
7236	call the function from_current_timezone with an argument , return the result .	return from_current_timezone ( result )
14266	convert self.dict into boolean , return the result .	return bool ( self . dict )
1475	if not ,	else :
17365	define the function iterbytes with an argument buf .	def iterbytes ( buf ) :
9722	call the function exhaust with an argument field_stream .	exhaust ( field_stream )
12638	if name is contained in lib.filters .	if name in lib . filters :
5287	if cmd ends with ext ,	if cmd . endswith ( ext ) :
1550	derive the class StopUpload from the UploadFileException base class .	class StopUpload ( UploadFileException ) :
5871	call the method node.hasAttribute with string STR0 as an argument , if it evaluates to true ,	if node . hasAttribute ( STR0 ) :
2657	call the function style_func with an argument msg , use the result as an argument for the call to the function force_str , use the result as an argument for the call to the function self._out.write .	self . _out . write ( force_str ( style_func ( msg ) ) )
513	substitute value for the value under the key key of self._cache dictionary .	self . _cache [ key ] = value
1259	do nothing .	pass
2936	program is string STR0	program = STR0
1818	read size number of bytes from self.stream stream , store the result in the result .	result = self . stream . read ( size )
12186	values is an empty list .	values = [ ]
1743	and 'request with value request , respectively use the previous as the arguments for the call to the logger.warning function . if settings.DEBUG is True ,	if settings . DEBUG :
1727	if response is None ,	if response is None :
7082	define the method to_python with arguments self and value .	def to_python ( self , value ) :
688	substitute self._options for client.behaviors .	client . behaviors = self . _options
1408	define the method listdir with arguments self and path .	def listdir ( self , path ) :
13769	replace STR1 in the string STR0 with length of self.digits and self.digits , respectively , return the string .	return STR0 % ( len ( self . digits ) , self . digits )
1311	substitute STR1 in string STR0 with : file_root , next ( count ) and file_ext , join the dir_name and previous string into a valid file path , substitute it for name .	name = os . path . join ( dir_name , STR0 % ( file_root , next ( count ) , file_ext ) )
16663	substitute nonlocal_root for a tuple with an element root .	root , = nonlocal_root
8423	otherwise if self._meta.fields is true and field is not contained in self._meta.fields ,	elif self . _meta . fields and field not in self . _meta . fields :
6303	if AttributeError exception is caught .	except AttributeError :
5028	sql_files is an empty list .	sql_files = [ ]
13127	raise an TemplateDoesNotExist exception with an argument template_name .	raise TemplateDoesNotExist ( template_name )
17371	if PY3 is true ,	if PY3 :
13239	value is None .	value = None
12056	convert value to an floating point number if it is not equal to integer 1 ,	if float ( value ) != 1 :
4357	import module errno .	import errno
18274	call the method apps.get_app_configs , convert the result in a list , reverse the order of elements , substitute the result for app_configs .	app_configs = reversed ( list ( apps . get_app_configs ( ) ) )
6876	if length of empty_label is not equal to integer 3 .	if not len ( empty_label ) == 3 :
15447	call the method handler.addQuickElement with 2 arguments : string STR0 and value under the STR1 key of the item dictionary .	handler . addQuickElement ( STR0 , item [ STR1 ] )
18600	if cmatch is true ,	if cmatch :
1834	if size is not zero ,	if size :
7116	if value is Nan , or value is contained in return value of the Decimal called twice with string STR0 and with string STR1 ,	if value != value or value in ( Decimal ( STR0 ) , Decimal ( STR1 ) ) :
10188	for key and value in return value of the six.iterlists function called with an argument self ,	for key , value in six . iterlists ( self ) :
12692	call the method parser.compile_filter with second element of bits as an argument , substitute the result for viewname .	viewname = parser . compile_filter ( bits [ 1 ] )
13230	substitute request for self._request .	self . _request = request
6858	yield string STR0 as an return value of the generator .	yield STR0
14875	call the method self.configurator.convert with an argument value , substitute the result for result .	result = self . configurator . convert ( value )
11318	call the function module_has_submodule with 2 arguments : package and module , return inverted boolean result .	return not module_has_submodule ( package , module )
4776	define the method handle with arguments self and unpacked dictionary options .	def handle ( self , ** options ) :
14483	define the method i with an argument self .	def i ( self ) :
12278	call the method self.nodelist_true.render with an argument context , return the result .	return self . nodelist_true . render ( context )
1102	decorator python_2_unicode_compatible ,	@ python_2_unicode_compatible
2383	call the method self._create_attachment with an unpacked list attachment as an argument , use the result as an argument for the call to the msg.attach method .	msg . attach ( self . _create_attachment ( * attachment ) )
16465	create an iterator out of x .	iter ( x )
13146	call the method self.get_template_sources with 2 arguments template_name and template_dirs , for every filepath in the result ,	for filepath in self . get_template_sources ( template_name , template_dirs ) :
520	call the method self._set with key , pickled and timeout as arguments .	self . _set ( key , pickled , timeout )
18316	if AttributeError exception is caught ,	except AttributeError :
7726	define the method _html_output with 6 arguments : self , normal_row , error_row , row_ender , help_text_html and errors_on_separate_row .	def _html_output ( self , normal_row , error_row , row_ender , help_text_html , errors_on_separate_row ) :
8837	substitute to_field_name for self.to_field_name	self . to_field_name = to_field_name
14992	if converter is true ,	if converter :
1816	if size equals to integer zero .	if size == 0 :
11280	return func .	return func
6353	substitute callback for self._callback_str .	self . _callback_str = callback
4590	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
2445	DNS_NAME is a instance of CachedDnsName class .	DNS_NAME = CachedDnsName ( )
15652	call the function force_str with an argument : default if it is true , or if not , first element of the result of the function , get_format called with an argument string STR0 , substitute the result for format .	format = force_str ( default or get_format ( STR0 ) [ 0 ] )
15287	if s is an instance of the subclass Exception ,	if isinstance ( s , Exception ) :
9744	define the method IE_sanitize with arguments self and filename .	def IE_sanitize ( self , filename ) :
10406	define the method make_bytes with 2 arguments : self and value .	def make_bytes ( self , value ) :
8182	raise an ValidationError with 2 arguments : return value of the function ungettext with 3 arguments : strings STR0 , STR1 and self.max_num , where STR2 is replaced with self.max_num , and code as a string STR3 .	raise ValidationError ( ungettext ( STR0 , STR1 , self . max_num ) % self . max_num , code = STR2 , )
10042	call the function urlsplit with an argument location , substitute the result for bits .	bits = urlsplit ( location )
10462	define the method content with an argument self .	def content ( self ) :
18400	for every code in tuple with 2 elements : lang_code and generic_lang_code ,	for code in ( lang_code , generic_lang_code ) :
13378	if not ,	else :
7510	errors is an empty list .	errors = [ ]
4634	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
12498	return node .	return node
2755	call the method self.check ,	self . check ( )
18091	do nothing .	pass
6010	define the funtion get_internal_wsgi_application .	def get_internal_wsgi_application ( ) :
1719	call the method self.make_view_atomic with callback as the argument , substitute the result for the wrapped_callback .	wrapped_callback = self . make_view_atomic ( callback )
13803	call the BaseConverter function with BASE64_ALPHABET and sign set to STR0 as arguments , store the result in base64 .	base64 = BaseConverter ( BASE64_ALPHABET , sign = STR0 )
3507	get the value under the STR0 key of the options dictionary , substitute it for self.database .	self . using = options . get ( STR0 )
1915	self._request_middleware is None .	self . _request_middleware = None
1162	double the chunk size .	chunk_size *= 2
8540	if IndexError exception is caught ,	except IndexError :
4325	if replaces filed of graph.nodes element at the plan_node index is true ,	if graph . nodes [ plan_node ] . replaces :
11705	substitute arg converted into a integer for length .	length = int ( arg )
17725	try ,	try :
13024	is_usable is boolean True .	is_usable = True
12740	return an instance of a class WithNode , created with 4 arguments : None , None , nodelist and extra_context as extra_context .	return WithNode ( None , None , nodelist , extra_context = extra_context )
8216	define the method as_p with an argument self .	def as_p ( self ) :
3974	import module operator .	import operator
15203	if propagate is not None ,	if propagate is not None :
17485	import module contextlib .	import contextlib
7041	if self has an attribute STR0 ,	if hasattr ( self , STR0 ) :
18198	from django.apps import apps into default name space .	from django . apps import apps
14133	yield item .	yield item
12635	for every name in bits from the start index 1 to the end index negative 2 ,	for name in bits [ 1 : - 2 ] :
5241	return tempdir .	return tempdir
1911	try ,	try :
11429	call the method new_context._reset_dicts values .	new_context . _reset_dicts ( values )
1086	substitute line for buffer_ .	buffer_ = line
6617	substitute prefix for _prefixes.values .	_prefixes . value = prefix
6250	from django.utils.translation import get_language into default name space .	from django . utils . translation import get_language
18320	call the function get_language , split the result by STR0 , substitute the first element of the result for base_lang .	base_lang = get_language ( ) . split ( STR0 ) [ 0 ]
9829	substitute boundary for self._boundary .	self . _boundary = boundary
3001	call the method parser.add_argument with 4 arguments : string STR0 , metavar set to string STR1 , nargs set to STR2 character , and help set to a string 'Optional table names .	parser . add_argument ( STR0 , metavar = STR1 , nargs = STR2 , help = STR3 )
13593	create the list of paths from which filename module was included for every filename in new_modules , only is filename has STR0 attribute , substitute the resulting list for new_filenames .	new_filenames = [ filename . __file__ for filename in new_modules if hasattr ( filename , STR0 ) ]
8064	get the element with maximal value between initial_forms and self.min_num , add self.extra to it , substitute the result for total_forms .	total_forms = max ( initial_forms , self . min_num ) + self . extra
17493	call the method threading.Semaphore with an argument integer 0 , substitute the result for self.can_read .	self . can_read = threading . Semaphore ( 0 )
6221	define the method sign with arguments self and value .	def sign ( self , value ) :
18019	if value.tzinfo is not None and call to the method value.tzinfo.utcoffset called with an argument value evaluates to not None , return boolean True , otherwise return boolean False .	return value . tzinfo is not None and value . tzinfo . utcoffset ( value ) is not None
11581	from django.utils import formats into default name space .	from django . utils import formats
17781	buf is an instance of StreamingBuffer class .	buf = StreamingBuffer ( )
12330	call the function include_is_allowed with an argument filepath , if it evaluates to false ,	if not include_is_allowed ( filepath ) :
5952	raise an EntitiesForbidden exception with arguments name , value , base , sysid , pubid and notation_name .	raise EntitiesForbidden ( name , value , base , sysid , pubid , notation_name )
14864	define the method __getitem__ with 2 arguments : self and key .	def __getitem__ ( self , key ) :
8065	if initial_forms is grater than self.max_num is grater or equal to integer 0 ,	if initial_forms > self . max_num >= 0 :
7476	define the method validate with arguments self and value .	def validate ( self , value ) :
14547	define the method o with an argument self .	def o ( self ) :
18381	append settings.LOCALE_PATHS converted into a list to a list containing an element globalpath , return it .	return [ globalpath ] + list ( settings . LOCALE_PATHS )
15823	if self._wrapped is empty ,	if self . _wrapped is empty :
5695	call the smart_text function with 3 arguments : field_value , value under the STR0 key of the options dictionary or , settings.DEFAULT_CHARSET if the key doesnt exists and strings_only set to boolean True .	field_value = smart_text ( field_value , options . get ( STR0 , settings . DEFAULT_CHARSET ) , strings_only = True )
5615	call the function is_aware with an argument o , if it evaluates to true ,	if is_aware ( o ) :
8336	substitute value under the f.name key of the labels dictionary for value under the STR0 key of kwargs dictionary .	kwargs [ STR0 ] = labels [ f . name ]
2713	call the method parser.print_help .	parser . print_help ( )
16634	substitute cache.get for cache_get .	cache_get = cache . get
6156	from django.utils.module_loading import import_string into default name space .	from django . utils . module_loading import import_string
3588	call the method self.stdout.write with an argument string STR0 , where STR1 is replaced with fixture_name .	self . stdout . write ( STR0 % fixture_name )
11771	call the method value.center with an argument , arg converted into a integer , return the result .	return value . center ( int ( arg ) )
4719	break from the loop execution ,	break
14197	define the method __iter__ with an argument self .	def __iter__ ( self ) :
6185	call the b64_encode function with an argument data , substitute the result for base64d .	base64d = b64_encode ( data )
18089	format translated with rhs , substitute the result for translated .	translated = translated % rhs
89	if key_function is callable object ,	if callable ( key_func ) :
18124	define the function check_for_language with an argument lang_code .	def check_for_language ( lang_code ) :
14492	define the method P with an argument self .	def P ( self ) :
16955	if not ,	else :
1037	try ,	try :
8758	substitute first element of fks_to_parent for fk .	fk = fks_to_parent [ 0 ]
5991	substitute context for self.context .	self . context = context
1868	get the value under the STR0 key of content_params dictionary , substitute it for self.encoding .	self . encoding = content_params [ STR0 ]
5858	substitute the result for self.event_stream . remove the STR0 key from the options dictionary , substitute the return value for self.db , if the key doesnt exists substitute	self . db = options . pop ( STR0 , DEFAULT_DB_ALIAS )
12560	define the function ifequal with 2 arguments : parser and token .	def ifequal ( parser , token ) :
11396	return printable representation of self.dicts .	return repr ( self . dicts )
13175	for every attr in self.rendering_attrs ,	for attr in self . rendering_attrs :
5373	define the method has_next with an argument self .	def has_next ( self ) :
2997	derive the class Command from the BaseCommand base class .	class Command ( BaseCommand ) :
9311	if options is true ,	if options :
14446	if not ,	else :
10704	derive the class Parser form the base class object .	class Parser ( object ) :
14207	return result .	return result
14088	if not ,	else :
1956	from django.utils.module_loading import import_string into default name space .	from django . utils . module_loading import import_string
6541	if matches is false ,	if not matches :
1901	return self._files .	return self . _files
4679	call the method connection.ops.sequence_reset_sql with 2 arguments self.style and models , substitute the result for statements .	statements = connection . ops . sequence_reset_sql ( self . style , models )
6632	get the STR0 attribute of the _urlconfs , if it exists return it , otherwise return defaults .	return getattr ( _urlconfs , STR0 , default )
15201	call the method self.common_logger_config with 3 arguments : logger , config and incremental .	self . common_logger_config ( logger , config , incremental )
2628	call the method __init__ from the base class of the CommandParser class , with unpacked dictionary kwargs as argument .	super ( CommandParser , self ) . __init__ ( ** kwargs )
211	substitute table for self._table .	self . _table = table
13464	derive the class BaseArchive from the object base class .	class BaseArchive ( object ) :
4632	call the function sql_indexes with app_config , self.style and connection as arguments , store the result in statements .	statements = sql_indexes ( app_config , self . style , connection )
12858	get the value under the name key of self.blocks dictionary , insert to it block at the beginning .	self . blocks [ name ] . insert ( 0 , block )
7415	return boolean False .	return False
14580	week_number is integer 52 .	week_number = 52
10720	if token.contents is false ,	if not token . contents :
468	from django.utils.six.moves import cPickle as pickle into default name space .	from django . utils . six . moves import cPickle as pickle
17817	if first element of text equals STR0 ,	if text [ 0 ] == STR0 :
9113	if STR0 is not contained in attrs ,	if STR0 not in attrs :
4042	for every migration in app_migrations ,	for migration in app_migrations :
9088	define the method _media with an argument self .	def _media ( self ) :
3959	call the method m.group with an argument string STR0 , use the result as an argument for the call to the force_str , substitute the result for plural_form_line .	plural_form_line = force_str ( m . group ( STR0 ) )
10316	substitute reason for self.reason_phrase .	self . reason_phrase = reason
10689	token is an instance of Token class , created with 2 arguments : TOKEN_VAR , and elements of token_string from second to second last element wiht the whitespaces striped from the both sides .	token = Token ( TOKEN_VAR , token_string [ 2 : - 2 ] . strip ( ) )
10330	if value is not an instance of bytes or six.text_type classes ,	if not isinstance ( value , ( bytes , six . text_type ) ) :
5543	call the method obj.natural_key , substitute the result for natural_key .	natural_key = obj . natural_key ( )
9936	for every p in plist ,	for p in plist :
14383	substitute warning for self.warning .	self . warning = warning
13983	if using_sysrandom is false ,	if not using_sysrandom :
2611	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
10007	if return value of the self.is_secure method is true and server_port is not equal to string STR0 ,	if server_port != ( STR0 if self . is_secure ( ) else STR1 ) :
6121	convert the value under the STR0 key of options dictionary to lowercase , if it equals to string STR1 , STR2 or STR3 ,	if options [ STR0 ] . lower ( ) in ( STR1 , STR2 , STR3 ) :
12872	define the method __init__ with 4 arguments : self , name , nodelist , parent set to None .	def __init__ ( self , name , nodelist , parent = None ) :
1056	define the method _get_closed with argument self .	def _get_closed ( self ) :
8714	define the method get_default_prefix with an argument cls .	def get_default_prefix ( cls ) :
9912	try ,	try :
7316	file is an instance of BytesIO class created with an argument : return value of the method data.read .	file = BytesIO ( data . read ( ) )
18020	define the function is_naive with an argument value .	def is_naive ( value ) :
1091	define the method __exit__ with self , exc_type , exc_value and tb as arguments .	def __exit__ ( self , exc_type , exc_value , tb ) :
1412	join path and entry into a file path , if it exists ,	if os . path . isdir ( os . path . join ( path , entry ) ) :
6392	self._populated is boolean False .	self . _populated = False
2819	if app_output is true ,	if app_output :
15279	return six.text_type ( s ) .encode ( encoding , errors ) .	return six . text_type ( s ) . encode ( encoding , errors )
6322	define the function get_mod_func with an argument callback .	def get_mod_func ( callback ) :
11167	remove first element of unhandled_params .	unhandled_params . pop ( 0 )
6012	get STR0 attribute from the settings , substitute it for app_path .	app_path = getattr ( settings , STR0 )
7857	if not ,	else :
11721	substitute arg converted into an integer for length .	length = int ( arg )
10478	if parsed.scheme is true and parsed.scheme is not contained in self.allowed_schemes ,	if parsed . scheme and parsed . scheme not in self . allowed_schemes :
15525	call the method handler.addQuickElement with 2 arguments : string STR0 and result of the function rfc3339_date , called with an argument value under the STR1 key of the item dictionary .	handler . addQuickElement ( STR0 , rfc3339_date ( item [ STR1 ] ) )
15137	if StandardError , renamed to e , exception is caught ,	except StandardError as e :
17637	find first index of whitespace occurrence in line , add integer 1 to it , substitute the result for space .	space = line . find ( STR ) + 1
14337	call the function six.iteritems with an argument : instance of base class of the MultiValueDict class , return the result .	return six . iteritems ( super ( MultiValueDict , self ) )
6082	substitute v for value under the k converted to lower case key of options dictionary .	options [ k . lower ( ) ] = v
11825	sort value with key set to filed resolve of instance of a class Variable , created with an argument arg , reverse the sort and return the result .	return sorted ( value , key = Variable ( arg ) . resolve , reverse = True )
5195	append STR0 to tmp , substitute it for display_url .	display_url = tmp + STR0
3198	open the output file in writing mode if output is true , assign the file descriptor to stream , otherwise stream is None .	stream = open ( output , STR0 ) if output else None
15602	try ,	try :
15161	call the method self.as_tuple with an argument value under STR0 key of config dictionary , substitute the result for value under STR1 key of config dictionary .	config [ STR0 ] = self . as_tuple ( config [ STR1 ] )
13290	return self.value .	return self . value
9161	call the method formats.localize_input with an argument value , return the result .	return formats . localize_input ( value )
11393	hard copy list self.dicts to duplicate.dicts .	duplicate . dicts = self . dicts [ : ]
15303	call the function quote with return value of the evaluated function force_bytes ( iri ) , and with safe set to bytes string STR0 , return the result .	return quote ( force_bytes ( iri ) , safe = STR0 )
18065	define the function pgettext with 2 arguments : context and message .	def pgettext ( context , message ) :
340	call the method self.make_key with key and version set to version as arguments , substitute it for key .	key = self . make_key ( key , version = version )
15012	derive the class DictConfigurator from the BaseConfigurator base class .	class DictConfigurator ( BaseConfigurator ) :
9656	instantiate class ChunkIter with 2 arguments : self._input_data and self._chunk_size , use it to instantiate LazyStream class , assign the handle to stream .	stream = LazyStream ( ChunkIter ( self . _input_data , self . _chunk_size ) )
2136	if self.username and self.password are true ,	if self . username and self . password :
14437	call the method re_escaped.sub with 2 arguments : raw string STR0 and piece , append the result to pieces .	pieces . append ( re_escaped . sub ( STR0 , piece ) )
4694	call the method parser.add_argument with 5 arguments : string STR0 , action set to string STR1 , dest as a string STR2 , default as boolean True help as a string STR3 .	parser . add_argument ( STR0 , action = STR1 , dest = STR2 , default = True , help = STR3 )
17022	if param is true ,	if param :
12664	raise an TemplateSyntaxError exception with an argument string STR0 .	raise TemplateSyntaxError ( STR0 )
14065	if OSError , renamed to e , exception is caught ,	except OSError as e :
5604	define the method defalt with arguments self and o .	def default ( self , o ) :
7672	for every key and value in list created out of the elements of the result of the call to the method attrs.items ,	for key , value in list ( attrs . items ( ) ) :
7597	get the value under the STR0 key of the kwargs dictionary , update errors dictionary with it .	errors . update ( kwargs [ STR0 ] )
2815	raise an CommandError with an argument string STR0 , with STR1 replaced by e .	raise CommandError ( STR0 % e )
10249	try ,	try :
6090	call the method sys.stderr.write with an argument string STR0 .	sys . stderr . write ( STR0 )
4524	do nothing .	pass
18479	if t.token_type equals TOKEN_BLOCK and t.contents equals STR0 ,	if t . token_type == TOKEN_BLOCK and t . contents == STR0 :
16595	define the method filter with 2 arguments : self and record .	def filter ( self , record ) :
14024	bring intger 2 to integer 32 , decrement the result by 1 , multiply it with hlen , if dklen is greater than the previous result ,	if dklen > ( 2 ** 32 - 1 ) * hlen :
17810	call the function re.compile with 2 arguments : raw string STR0 ] * ( ? : ( ? : STR1\\ ] |\\ . ) * STR2 ] * ) + ) | \+ ) '' , and re.VERBOSE , substitute the result for smart_split_re .	smart_split_re = re . compile ( STR0 , re . VERBOSE )
4874	args is a string STR0 .	args = STR0
17484	call the function MovedModule with 2 arguments : strings STR0 and STR1 ,	add_move ( MovedModule ( STR0 , STR1 ) )
8786	value under the STR0 key of the kwargs dictionary is boolean False .	kwargs [ STR0 ] = False
4637	from django.db.migrations.executor import MigrationExecutor into default name space .	from django . db . migrations . executor import MigrationExecutor
16836	subtract length of dec_part from decimal_pos , multiply the number of character STR0 by the result , append the resulting string to dec_part , substitute it for dec_part .	dec_part = dec_part + ( STR0 * ( decimal_pos - len ( dec_part ) ) )
9027	from django.forms.utils import flatatt and to_current_timezone into default name space .	from django . forms . utils import flatatt , to_current_timezone
12587	while token.contents starts with a string STR0 ,	while token . contents . startswith ( STR0 ) :
6430	for every namespace and tuple containing : prefix and sub_pattern , in return value of the method pattern.namespace_dict.items ,	for namespace , ( prefix , sub_pattern ) in pattern . namespace_dict . items ( ) :
8971	define the method __init__ with 3 arguments : self , initlist set to None and error_class set to None .	def __init__ ( self , initlist = None , error_class = None ) :
9377	if string STR0 is contained in self.attrs ,	if STR0 in self . attrs :
2147	call the method self.connection.quit .	self . connection . quit ( )
5641	self.current is an empty dictionary .	self . _current = { }
6038	call the self.style.HTTP_SUCCESS with an argument msg , substitute it for msg .	msg = self . style . HTTP_SUCCESS ( msg )
14112	rise an KeyError exception with an argument key .	raise KeyError ( key )
5262	from .base import CommandError into default name space .	from . base import CommandError
10265	convert host to lowercase .	host = host . lower ( )
7137	if DecimalException exception is caught ,	except DecimalException :
1190	derive the class OVERLAPPED from the Structure base class .	class OVERLAPPED ( Structure ) :
8577	all_date_checks is union of all_date_checks set and date_checks set .	all_date_checks = all_date_checks . union ( set ( date_checks ) )
10	DEFAULT_CACHE_ALIAS is a string STR0 .	DEFAULT_CACHE_ALIAS = STR0
8452	substitute self._meta for opts .	opts = self . _meta
6403	call the function get_language , substitute the result for language_code .	language_code = get_language ( )
12228	if Exception , renamed to e , exception is caught ,	except Exception as e :
6002	from wsgiref.util import FileWrapper	from wsgiref . util import FileWrapper
765	CRITICAL is integer 50 .	CRITICAL = 50
9309	output is a list containing an element : result of the function format_html called with 2 arguments : string STR0 , and return value of the function flatatt called with an argument final_attrs , substitute the result for output .	output = [ format_html ( STR0 , flatatt ( final_attrs ) ) ]
18522	if not ,	else :
9612	do nothing .	pass
9571	delete self entry under the key key .	del self [ key ]
1932	return response .	return response
18729	define the method dst with 2 arguments self and dt .	def dst ( self , dt ) :
5053	import module cgi .	import cgi
4152	if values under the STR0 and STR1 keys of the options dictionary are True ,	if options [ STR0 ] and options [ STR1 ] :
3016	call the method router.allow_migrate with 2 arguments : database and cache.cache_model_class , if it evaluates to false ,	if not router . allow_migrate ( database , cache . cache_model_class ) :
13632	define the method process_default with self class instance and event as arguments .	def process_default ( self , event ) :
3422	cal the method re.subn with 3 arguments : raw string STR0 , string STR1 and new_name .	new_name , num_repl = re . subn ( STR0 , STR1 , new_name )
18252	call the method self._add_installed_apps_translations .	self . _add_installed_apps_translations ( )
9689	get the value under the STR0 of the meta_data dictionary , if it exists assign it to content_type , content_type_extra , if not , content_type is an empty string and content_type_extra is an empty dictionary .	content_type , content_type_extra = meta_data . get ( STR0 , ( STR , { } ) )
17651	call the method __init__ from the base class of the class Truncator , called with with an argument lambda function which returns result of the force_text function called with an argument text .	super ( Truncator , self ) . __init__ ( lambda : force_text ( text ) )
12193	call the method self.nodelist_empty.render with an argument context , return the result .	return self . nodelist_empty . render ( context )
4530	derive the class Command from the AppCommand base class .	class Command ( AppCommand ) :
9051	call the function chain with an argument unpacked list , append name to string STR0 , and use it as the name of the attribute to get from the self object , call the result and append it to a list for every name in MEDIA_TYPES , join all the results into a string with newline separator , use the result as an argument for the call to the function mark_safe , return the result .	return mark_safe ( STR0 . join ( chain ( * [ getattr ( self , STR1 + name ) ( ) for name in MEDIA_TYPES ] ) ) )
9787	define the method _iter with an argument self .	def __iter__ ( self ) :
3185	skip this loop iteration .	continue
17100	return an instance of SafeBytes , created with an argument s .	return SafeBytes ( s )
13655	call the os.stat function with argument filename , store the return value in stat .	stat = os . stat ( filename )
17714	if current_len equals truncate_len ,	if current_len == truncate_len :
6918	if not ,	else :
3088	from django.apps import apps into default name space .	from django . apps import apps
7784	if not ,	else :
8226	substitute DEFAULT_MAX_NUM for max_num ,	max_num = DEFAULT_MAX_NUM
12806	for every loader in template_source_loaders ,	for loader in template_source_loaders :
13778	append value to the STR0 , substitute it for value .	value = STR0 + value
9911	split header string at string STR0 , for every line in result ,	for line in header . split ( STR0 ) :
9830	self._done is boolean False .	self . _done = False
5065	from django.template import Template and Context into default name space .	from django . template import Template , Context
6050	call the self.style.HTTP_SERVER_ERROR with an argument msg , substitute it for msg .	msg = self . style . HTTP_SERVER_ERROR ( msg )
5073	derive the class TemplateCommand from the BaseCommand base class .	class TemplateCommand ( BaseCommand ) :
10234	call the function force_bytes with arguments k and self.encoding , substitute the result for k .	k = force_bytes ( k , self . encoding )
6056	if not ,	else :
17238	set attr.name attribute of the Module_six_moves_urllib_request object to attr .	setattr ( Module_six_moves_urllib_request , attr . name , attr )
5781	from xml.dom import pulldom into default name space .	from xml . dom import pulldom
11350	if lib is false ,	if not lib :
15607	get format_type attribute of the settings object , return it .	return getattr ( settings , format_type )
10341	if not ,	else :
13033	if ValueError exception is caught ,	except ValueError :
15057	call the method self.configure_filter with an argument value under name key of formatters dictionary , substitute the result for formatters dictionary value under name key .	formatters [ name ] = self . configure_formatter ( formatters [ name ] )
14301	call the method data.items , for every k and v in the result ,	for k , v in data . items ( ) :
18329	return _default .	return _default
10313	if status is not None .	if status is not None :
12670	substitute sixth element of bits for var_name .	var_name = bits [ 5 ]
5519	substitute options for self.options .	self . options = options
9693	convert to an integer first element of the value under the STR0 key of the meta_data dictionary , substitute it for content_length .	content_length = int ( meta_data . get ( STR0 ) [ 0 ] )
11614	call the function escapejs with an argument value , return the result .	return escapejs ( value )
3539	call the method connection.cursor , with the result renamed to cursor , perform the following ,	with connection . cursor ( ) as cursor :
4504	imported_objects is an empty dictionary .	imported_objects = { }
6717	call the re.compile function with 2 arguments : raw string STR0 , and re.IGNORECASE , substitute the result for domain_regex .	domain_regex = re . compile ( STR0 , re . IGNORECASE )
130	raise an exception of class NotImplementedError with string STR0 as argument .	raise NotImplementedError ( STR0 )
7452	data is an empty list .	data = [ ]
15584	for every loc in locales ,	for loc in locales :
967	if not ,	else :
11483	if processors is None ,	if processors is None :
4958	for every f in opts.local_fields ,	for f in opts . local_fields :
11655	insert STR0 to digits at negative exponent index .	digits . insert ( - exponent , STR0 )
18077	derive the class NumberAwareString from the resultclass base class .	class NumberAwareString ( resultclass ) :
4875	requires_system_checks is boolean False .	requires_system_checks = False
16589	substitute callback for self.callback .	self . callback = callback
3245	append model to model_list .	model_list . append ( model )
18301	define the function activate with an argument language .	def activate ( language ) :
18121	call the function _trans.get_language , return the result .	return _trans . get_language ( )
17625	call the function re.compile with 2 arguments : raw string STR0 and bitwise OR performed with 2 operands , re.U and re.S , substitute the result for re_chars .	re_chars = re . compile ( STR0 , re . U | re . S )
12263	return value under the STR0 key of the context dictionary .	return context [ STR0 ]
2265	substitute as_string for as_bytes .	as_bytes = as_string
3436	call the method keyword.iskeyword with an argument new_name , if it evaluates to true ,	if keyword . iskeyword ( new_name ) :
16508	break from the loop execution .	break
5299	import module collections .	import collections
7449	if initial is None ,	if initial is None :
2269	g is an instance of a class generator.BytesGenerator called with fp and mangle_from_ set to False .	g = generator . BytesGenerator ( fp , mangle_from_ = False )
3358	try ,	try :
17140	if OverflowError exception is caught ,	except OverflowError :
13439	if file is an instance of six.string_types .	if isinstance ( file , six . string_types ) :
18318	return settings.LANGUAGE_CODE .	return settings . LANGUAGE_CODE
10107	self._files is an instance of class MultiValueDict . return nothing .	return
2140	if self.fail_silently is boolean False ,	if not self . fail_silently :
1208	call the LockFileEx function with 5 arguments : hfile , integer 0 , integer 0 , hexadecimal value FFFF0000 , return value of the byref function called with argument overlapped , substitute the result for ret .	ret = UnlockFileEx ( hfile , 0 , 0 , FFFF0000 , byref ( overlapped ) )
2607	call the method self.fetch_command with an argument command , call the method run_from_argv on the result with an argument self.argv .	self . fetch_command ( subcommand ) . run_from_argv ( self . argv )
3015	cache is an instance of BaseDatabaseCache class , created with arguments : tablename and an empty dictionary .	cache = BaseDatabaseCache ( tablename , { } )
13657	if _win is true ,	if _win :
5002	statements is an empty list .	statements = [ ]
18380	get the value under the settings.__module__ key of the sys.modules dictionary , use its __file__ field as an argument , for the call to the function upath , get the directory name of the resulting system path , join the result and string STR0 , into a valid file path , substitute it for globalpath .	globalpath = os . path . join ( os . path . dirname ( upath ( sys . modules [ settings . __module__ ] . __file__ ) ) , STR0 )
5228	call the method posixpath.splitext with an argument the_path .	base , ext = posixpath . splitext ( the_path )
11272	if length of bits is smaller than integer 2 or second last element of bits is not equal to STR0 ,	if len ( bits ) < 2 or bits [ - 2 ] != STR0 :
16314	replace every occurrence of STRspecial in url with STR0 .	url = url . replace ( STRspecial , STR0 )
2423	if mimetype is None , raise an error .	assert mimetype is not None
12645	if not ,	else :
8638	append form to self.saved_forms .	self . saved_forms . append ( form )
8032	if data is true , substitute it for self.data , otherwise self.data is an empty dictionary .	self . data = data or { }
15450	derive the class Rss201rev2Feed from the RssFeed base class .	class Rss201rev2Feed ( RssFeed ) :
13772	if neg is true ,	if neg :
728	if AttributeError exception is caught ,	except AttributeError :
4052	make a directory migrations_directory .	os . mkdir ( migrations_directory )
16790	otherwise if call to the method finder.find_module with an argument name evaluates to true ,	elif finder . find_module ( name ) :
8959	return an empty string .	return STR
14077	call the method os.chdir with an argument our_home_dir .	os . chdir ( our_home_dir )
18689	import module time .	import time
8743	call the method get_unique_error_message from the base class of the class BaseInlineFormSet , with an argument unique_check , return the result .	return super ( BaseInlineFormSet , self ) . get_unique_error_message ( unique_check )
1504	subtract length of the ext from the integer 255 , take first elements of the name list up to the previous result index , append ext to the end of it , substitute the resulting list for name .	name = name [ : 255 - len ( ext ) ] + ext
13492	define the method __init__ with 3 arguments self and unpacked list args and unpacked dictionary kwargs .	def list ( self , * args , ** kwargs ) :
10746	raise an exception ,	raise
11123	if kwarg_format is true ,	if kwarg_format :
6982	substitute help_text for self.help_text .	self . help_text = help_text
4209	if self.verbosity is greater or equal to integer 1 ,	if self . verbosity >= 1 :
13731	if exit_code is lesser than integer 0 ,	if exit_code < 0 :
3855	try ,	try :
55	call the CacheHandler function , substitute the result for caches .	caches = CacheHandler ( )
10224	define the method copy with an argument self .	def copy ( self ) :
7495	if STR0 key of the kwargs dictionary exists remove it and substitute its value for self.require_all_fields , if not , self.require_all_fields is boolean True .	self . require_all_fields = kwargs . pop ( STR0 , True )
14280	return last element of list_ .	return list_ [ - 1 ]
9308	call the method self.build_attrs with arguments attrs , name as name , substitute the result for final_attrs .	final_attrs = self . build_attrs ( attrs , name = name )
2518	call the method style.NOTICE with an argument string STR0 , where STR1 is replaced by self.settings_exception , append the result to usage .	usage . append ( style . NOTICE ( STR0 % self . settings_exception ) )
7445	for every val in value ,	for val in value :
10936	substitute self.var for obj .	obj = self . var
4816	skip this loop iteration .	continue
18226	call the method get_supported_language_variant.cache_clear .	get_supported_language_variant . cache_clear ( )
2671	call the function warnings.warn with 2 arguments : string STR2 and RemovedInDjango19Warning .	warnings . warn ( STR2 , RemovedInDjango19Warning )
12497	node is an instance of CycleNode class , created wiht an argument values .	node = CycleNode ( values )
15711	decorator total_ordering ,	@ total_ordering
986	call the method extend with an argument error_list on the return value of the method error_dict.setdefault called with 2 arguments : NON_FIELD_ERRORS and an empty list .	error_dict . setdefault ( NON_FIELD_ERRORS , [ ] ) . extend ( self . error_list )
17630	call the function force_text with an argument text , substitute the result for text .	text = force_text ( text )
8050	property decorator ,	@ property
15548	from __future__ import absolute_ into default name space .	from __future__ import absolute_import
1654	call the function logging.getLogger with string STR0 as the argument , assign the return object handle to logger .	logger = logging . getLogger ( STR0 )
15763	call the method self.__bytes_cast , return the result .	return self . __bytes_cast ( )
2920	from django.utils._os import npath and upath into default name space .	from django . utils . _os import npath , upath
3266	call the method parser.add_argument with 5 arguments : string STR0 , action set to string STR1 , dest set to string STR2 , default set to boolean True , help as a string STR3 .	parser . add_argument ( STR0 , action = STR1 , dest = STR2 , default = True , help = STR3 )
17933	define the method _isdst with 2 arguments : self and dt .	def _isdst ( self , dt ) :
4489	define the method run_shell with an arguments self and shell set to None .	def run_shell ( self , shell = None ) :
13412	try ,	try :
6438	if pattern.name is not None ,	if pattern . name is not None :
2077	define the method open with argument self .	def open ( self ) :
4281	call the traceback.print_exc method .	traceback . print_exc ( )
4575	from django.core.management.base import AppCommand into default name space .	from django . core . management . base import AppCommand
2847	args is an empty string .	args = STR
2427	define the method _create_alternatives with arguments self and msg .	def _create_alternatives ( self , msg ) :
12605	call the method parser.parse with an argument tuple with an element string STR0 , substitute the result for nodelist_false .	nodelist_false = parser . parse ( ( STR0 , ) )
16010	call the function allow_lazy with an argument strip_tags , substitute the result for strip_tags .	strip_tags = allow_lazy ( strip_tags )
1315	define the method delete with arguments self and name .	def delete ( self , name ) :
4356	from datetime import datetime into default name space .	from datetime import datetime
18424	return lang_code .	return lang_code
4230	call the connection.introspection.table_names with tables as argument , store the result in seen_models .	seen_models = connection . introspection . installed_models ( tables )
5058	import module re .	import re
3496	has_bz2 is boolean False .	has_bz2 = False
3075	call the function module_to_dict with an argument settings._wrapped , substitute it for user_settings .	user_settings = module_to_dict ( settings . _wrapped )
6120	if not ,	else :
1402	call the os.remove function with argument name .	os . remove ( name )
138	d is an empty dictionary .	d = { }
2218	append idstring to the STR0 character , substitute it for idstring .	idstring = STR0 + idstring
4378	call the method parser.add_argument with 5 arguments : string STR0 , action set to string STR1 , dest set to string STR2 , default set to boolean True and help is a string STR3 .	parser . add_argument ( STR0 , action = STR1 , dest = STR2 , default = True , help = STR3 )
8613	if not ,	else :
5682	if ignore is true ,	if ignore :
5264	try ,	try :
5438	if format is not contained in _serializers ,	if format not in _serializers :
10469	convert value into a iterator , substitute the result for self._iterator .	self . _iterator = iter ( value )
16887	get the next element of the iterable pattern_iter , assign the result for ch and escaped , respectively .	ch , escaped = next ( pattern_iter )
9836	define the method __iter__ with an argument self .	def __iter__ ( self ) :
14511	return an empty string .	return STR
4454	substitute Command for BaseRunserverCommand .	BaseRunserverCommand = Command
16485	call the method states.items , for every state and rules in the result ,	for state , rules in states . items ( ) :
3578	call the method fixture.close .	fixture . close ( )
10258	call the function force_str with an argument string STR0 , where STR1 is replaced with request.__class__.__name__ , path , return value of the function six.text_type called with an argument get , return value of the function six.text_type called with an argument post , return value of the function six.text_type , called with an argument cookies and return value of the function six.text_type called with an argument meta .	return force_str ( STR0 % ( request . __class__ . __name__ , path , six . text_type ( get ) , six . text_type ( post ) , six . text_type ( cookies ) , six . text_type ( meta ) ) )
2767	if saved_locale is not None ,	if saved_locale is not None :
15069	call the method self.configure_handler with an argument value under name key of handlers dictionary , substitute the result for handler .	handler = self . configure_handler ( handlers [ name ] )
3686	define the mehod __lt__ with self and other .	def __lt__ ( self , other ) :
17836	define the function unescape_string_literal with an argument s .	def unescape_string_literal ( s ) :
12515	return a class instance FilterNode , called with an arguments filter_expr and nodelist .	return FilterNode ( filter_expr , nodelist )
13392	call the function force_text with an argument base , substitute the result for base .	base = force_text ( base )
15941	call the function re.compile with 2 arguments : raw string STR0 , and re.IGNORECASE , substitute the result for simple_url_re .	simple_url_2_re = re . compile ( STR0 , re . IGNORECASE )
907	define the function static with an argument request .	def static ( request ) :
1544	from django.utils.encoding import python_2_unicode_compatible into default name space .	from django . utils . encoding import python_2_unicode_compatible
16120	define method clear_cdata_mode , with self class instance as an argument .	def clear_cdata_mode ( self ) :
6320	ns_resolver is class instance of a class RegexURLResolver , created with 2 arguments : ns_pattern and resolver.url_patterns .	ns_resolver = RegexURLResolver ( ns_pattern , resolver . url_patterns )
2081	return boolean True .	return False
17989	derive the class override from the object base class .	class override ( object ) :
3441	append string STR0 to field_notes .	field_notes . append ( STR0 )
13491	call the method tarfile.open with an argument file , substitute the result for self._archive .	self . _archive = tarfile . open ( file )
10670	substitute template_string for self.template_string .	self . template_string = template_string
80	do nothing .	pass
4150	run_syncdb is boolean False .	run_syncdb = False
12752	call the method self.load_template with 2 arguments : template_name and template_dirs , return the result .	return self . load_template ( template_name , template_dirs )
17139	instantiate class X , get its length .	len ( X ( ) )
6685	if schemes is not None ,	if schemes is not None :
12556	call the method parser.compile_filter with an argument , second element of bits , substitute the result for val1 .	val1 = parser . compile_filter ( bits [ 1 ] )
15630	call the function get_language , substitute the result for lang .	lang = get_language ( )
13216	raise an ContentNotRenderedError exception with an string STR0 .	raise ContentNotRenderedError ( STR0 )
12240	define the method __init__ with 4 arguments : self , nodelist_true , nodelist_false and unpacked list varlist .	def __init__ ( self , nodelist_true , nodelist_false , * varlist ) :
9953	if end is lesser than integer 0 ,	if end < 0 :
11105	try ,	try :
2041	import module os .	import os
16859	num_args is an integer 0 .	num_args = 0
12399	return an empty string .	return STR
15185	raise an ValueError exception with an argument string STR0 formated with h and e .	raise ValueError ( STR0 % ( h , e ) )
1142	get the position in bytes from the start of the file , store it in file_pos .	file_pos = file . tell ( )
13922	substitute settings.CACHE_MIDDLEWARE_SECONDS for cache_timeout .	cache_timeout = settings . CACHE_MIDDLEWARE_SECONDS
9496	call the method widget.render with 3 arguments : string created by concatenation from : name , string STR0 and i , widget_value , and final_attrs , append the result to output .	output . append ( widget . render ( name + STR0 % i , widget_value , final_attrs ) )
9438	call the function format_html with 3 arguments : self.inner_html , choice_value set to result of the function force_text , called with an argument w , and sub_widgets as an empty string , append the result to output .	output . append ( format_html ( self . inner_html , choice_value = force_text ( w ) , sub_widgets = STR ) )
4998	call the function check_for_migrations with arguments app_config and connection .	check_for_migrations ( app_config , connection )
16443	if not ,	else :
4849	call the method test_runner_class.add_arguments with an argument parser .	test_runner_class . add_arguments ( parser )
18309	define the function deactivate_all .	def deactivate_all ( ) :
3985	help is a string STR0 .	help = STR0
9729	if e.connection_reset is false ,	if not e . connection_reset :
9465	append string STR0 to id_ .	id_ += STR0
6974	substitute HiddenInput for hidden_widget .	hidden_widget = HiddenInput
11860	if TypeError or ValueError exceptions are caught ,	except ( ValueError , TypeError ) :
16012	tags is a list containing results of the function re.escape with an argument tag , for every tag in tags split into words .	tags = [ re . escape ( tag ) for tag in tags . split ( ) ]
18620	substitute 3 successive elements starting from the i-th index of pieces for first , lang and priority , respectively .	first , lang , priority = pieces [ i : i + 3 ]
16574	if record.exc_info is true ,	if record . exc_info :
4077	substitute first element of level for common_ancestor .	common_ancestor = level [ 0 ]
12294	if condition is not None ,	if condition is not None :
17979	define the function activate with an argument timezone .	def activate ( timezone ) :
10520	call the __init__ method from the base class of the JsonResponse class , called with arguments : content set to data ,	super ( JsonResponse , self ) . __init__ ( content = data , ** kwargs )
15997	try ,	try :
12731	call the method token.split_contents , substitute the result for bits .	bits = token . split_contents ( )
4584	define method handle_app_config with self class instance , app_config and dictionary options as arguments .	def handle_app_config ( self , app_config , ** options ) :
4080	if common_ancestor is None ,	if common_ancestor is None :
14093	import module copy .	import copy
14125	define the method _iteritems with an argument self .	def _iteritems ( self ) :
6000	import module sys .	import sys
18504	for every part in singular ,	for part in singular :
8295	from django.db.models.fields.related import ManyToManyField .	from django . db . models . fields . related import ManyToManyField
6125	if not ,	else :
3028	field_output is an list containing 2 elements : return value of the function qn called with an argument f.name , and return value of the function f.db_type called with an argument connection set to connection .	field_output = [ qn ( f . name ) , f . db_type ( connection = connection ) ]
16310	return boolean False .	return False
8789	if value is contained in self.empty_values ,	if value in self . empty_values :
8173	self._errors is an empty list .	self . _errors = [ ]
18431	call the function get_supported_language_variant with an argument lang_code , return the result .	return get_supported_language_variant ( lang_code )
13746	args is a empty tuple .	args = ( )
11402	define the method pop with an argument self .	def pop ( self ) :
9022	return value .	return value
15535	substitute value under STR0 key of item dictionary for unique_id .	unique_id = item [ STR0 ]
14859	substitute value under level key of logging._levelNames dictionary for rv .	rv = logging . _levelNames [ level ]
1218	define the function lock with arguments f and flags .	def lock ( f , flags ) :
3067	return dictionary created out of tuple elements k and printable representation of v , for every k and v in return value of the method module.__dict__.items , only if result of the method omittable called with an argument k is false .	return dict ( ( k , repr ( v ) ) for k , v in module . __dict__ . items ( ) if not omittable ( k ) )
17976	return timezone.zone .	return timezone . zone
7480	raise an ValidationError with 2 arguments : value under the STR0 key of the self.error_messages dictionary and code set to STR1 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 )
10155	if encoding is false .	if not encoding :
11874	slice the list value with unpacked list bits as an argument , return the result .	return value [ slice ( * bits ) ]
7808	self._errors is an instance of ErrorDict .	self . _errors = ErrorDict ( )
9403	input_type is a string STR0 .	input_type = STR0
7694	if files is true , substitute it for self.files , if not self.files is an empty dictionary .	self . files = files or { }
16090	call the function escape with an argument word , substitute the result for i-th element of words .	words [ i ] = escape ( word )
1712	assign the values to the callback , callback_args , callback_kwargs , respectively , from the resolver_match tuple .	callback , callback_args , callback_kwargs = resolver_match
11832	if IndexError exception is caught ,	except IndexError :
10115	substitute self for data .	data = self
1693	call the method signals.got_request_exception.send with the sender set to the type of this class , and request set to request as the arguments .	signals . got_request_exception . send ( sender = self . __class__ , request = request )
12007	if arg is None	if arg is None :
5251	return nothing .	return
17864	if since is lesser or equal to integer 0 ,	if since <= 0 :
11591	from django.utils.text import normalize_newlines and slugify as _slugify into default name space .	from django . utils . text import normalize_newlines , slugify as _slugify
9969	from django.core.exceptions import DisallowedHost and ImproperlyConfigured into default name space .	from django . core . exceptions import DisallowedHost , ImproperlyConfigured
16458	if count of occurrence of STR0 in ip_str equals integer 1 ,	if ip_str . count ( STR0 ) == 1 :
5493	if self.selected_fields is None or field.attname is contained in self.selected_fields ,	if self . selected_fields is None or field . attname in self . selected_fields :
14015	define the function pbkdf2 with 5 arguments : password , salt , iterations , dklen set to integer 0 and digest set to None .	def pbkdf2 ( password , salt , iterations , dklen = 0 , digest = None ) :
10789	do nothing .	pass
14486	if self.timezone is false ,	if not self . timezone :
984	call the method extend with an argument error_list on the return value of the method error_dict.setdefault called with 2 arguments : field and an empty list .	error_dict . setdefault ( field , [ ] ) . extend ( error_list )
10654	return a string STR1 with STR2 , replace STR3 with token_name and 20 self.contents elements with every newline deleted .	return ( STR1 % ( token_name , self . contents [ : 20 ] . replace ( STR2 , STR ) ) )
18772	sum major and sub , return the result converted to string .	return str ( major + sub )
4608	from django.core.management.sql import sql_flush into default name space .	from django . core . management . sql import sql_flush
13447	get the value under the tail_ext key of the extension_map dictionary , substitute it for cls .	cls = extension_map . get ( tail_ext )
2557	call the method subcommand_cls.create_parser with 2 argument an empty string an first element of cwords , substitute it for parser .	parser = subcommand_cls . create_parser ( STR , cwords [ 0 ] )
8898	call the method self.queryset.filter with an argument , unpacked dictionary with an entry : pk for key .	self . queryset . filter ( ** { key : pk } )
14572	week_number is None .	week_number = None
590	substitute server for self._servers .	self . _servers = server
6466	if match is true ,	if match :
11198	otherwise if name is not None and compile_function is None ,	elif name is not None and compile_function is None :
5516	evaluate self.stream.getvalue method , return the result .	return self . stream . getvalue ( )
1533	derive the SimpleUploadedFile class from the InMemoryUploadedFile base class .	class SimpleUploadedFile ( InMemoryUploadedFile ) :
10663	call the method next with an argument bits , substitute the result for bit .	bit = next ( bits )
7168	derive the class BaseTemporalField from the base class Field class .	class BaseTemporalField ( Field ) :
3325	if NotImplementedError exception is caught ,	except NotImplementedError :
4253	if refto is contained in seen_models ,	if refto in seen_models :
8829	call the function warnings.warn with 3 arguments : string STR0 , RemovedInDjango19Warning and stacklevel set to integer 2 .	warnings . warn ( STR0 , RemovedInDjango19Warning , stacklevel = 2 )
11154	raise an TemplateSyntaxError exception with an argument STR0 , where STR1 are replaced with name and param .	raise TemplateSyntaxError ( STR0 % ( name , param ) )
13091	raise an TemplateDoesNotExist exception .	raise TemplateDoesNotExist
13094	if template doesnt have a STR0 attribute ,	if not hasattr ( template , STR0 ) :
4287	for every app_name and model_list in return value of manifest.items method ,	for app_name , model_list in manifest . items ( ) :
149	raise an exception of class ValueError , with string STR0 as argument , where STR1 is substituted for key .	raise ValueError ( STR0 % key )
13061	return self._cached_loaders .	return self . _cached_loaders
11219	if name is callable object ,	if callable ( name ) :
8101	call the self.initial_form_count method , return the sublist of self.forms , using previous result as start index to the end .	return self . forms [ self . initial_form_count ( ) : ]
12463	register.tag decorator ,	@ register . tag
7481	derive the class ComboField from the base class Field class .	class ComboField ( Field ) :
2507	app is a string STR0	app = STR0
4757	help is a tuple containing a string STR0 .	help = ( STR0 )
5531	substitute m2m_data for self.m2m_data .	self . m2m_data = m2m_data
1966	if html_message is True ,	if html_message :
13829	cc is a dictionary populated with items by calling function dictitem with el as argument , for every el in cc .	cc = dict ( dictitem ( el ) for el in cc )
14913	substitute self for result.parent .	result . parent = self
12834	not_found is an empty list .	not_found = [ ]
10850	if i is greater than or equal to length of subject ,	if i >= len ( subject ) :
1711	call to the resolver.resolve method with request.path_info as an argument .	resolver_match = resolver . resolve ( request . path_info )
13987	define the function constant_time_compare with 2 arguments : val1 and val2 .	def constant_time_compare ( val1 , val2 ) :
13700	if USE_INOTIFY is true ,	if USE_INOTIFY :
7001	substitute messages for self.error_messages .	self . error_messages = messages
18569	otherwise if , first element of message_context is equal to STR ,	elif message_context [ 0 ] == STR :
11809	decorator stringfilter ,	@ stringfilter
9652	if result is not None ,	if result is not None :
3275	get the value STR0 key of the options dictionary , if it exists substitute it for allow_cascade , otherwise allow_cascade is boolean False .	allow_cascade = options . get ( STR0 , False )
7085	return None .	return None
6896	call the method datetime.datetime.strptime with 2 arguments : return value of the function force_str called with an argument value , and input_format , substitute the result for v .	v = datetime . datetime . strptime ( force_str ( value ) , input_format )
5025	for every f in post_sql_fields ,	for f in post_sql_fields :
14478	return self.data.hour .	return self . data . hour
3193	call the method queryset.filter with an argument pk__in set to primary_keys , substitute the result for queryset .	queryset = queryset . filter ( pk__in = primary_keys )
10700	token is an instance of Token class , created with 2 arguments : TOKEN_TEXT and token_string .	token = Token ( TOKEN_TEXT , token_string )
18473	join tokens elements into a string , substitute it for message .	message = STR . join ( tokens )
3563	call the method router.allow_migrate with 2 arguments : self.using and obj.object.__class__ , if it evaluates to true ,	if router . allow_migrate ( self . using , obj . object . __class__ ) :
5727	try ,	try :
15465	if value under the STR0 key of the item dictionary is not None ,	if item [ STR0 ] is not None :
17500	with self.mutex perform ,	with self . mutex :
11863	define the function random with an argument value .	def random ( value ) :
936	derive the class ViewDoesNotExist from the Exception base class .	class ViewDoesNotExist ( Exception ) :
12212	substitute length of item for len_item .	len_item = len ( item )
5502	define the method end_serialization with an argument self .	def end_serialization ( self ) :
3618	for ever app_config in return value of the method apps.get_app_configs ,	for app_config in apps . get_app_configs ( ) :
17723	do nothing .	pass
12643	raise an TemplateSyntaxError exception with an argument string STR0 , where STR1 is replaced with name and taglib .	raise TemplateSyntaxError ( STR0 % ( name , taglib ) )
18169	deactivate and deactivate_all are lambda functions returning None .	deactivate = deactivate_all = lambda : None
17715	substitute pos for end_text_pos .	end_text_pos = pos
1821	define the method read with self class instance and size set to None as arguments .	def read ( self , size = None ) :
187	try ,	try :
11121	kwargs is an empty dictionary ,	kwargs = { }
12172	define the method __iter__ with an argument self .	def __iter__ ( self ) :
3512	call the method self.loaddata with an argument fixture_labels .	self . loaddata ( fixture_labels )
5647	if self.use_natural_primary_keys is false or obj doesnt have a STR0 attribute .	if not self . use_natural_primary_keys or not hasattr ( obj , STR0 ) :
1070	yield one element of data iterable .	yield data
16939	if NotImplementedError exception ,	except NotImplementedError :
1511	if not ,	else :
9930	for every sub_stream in boundarystream ,	for sub_stream in boundarystream :
13188	return context .	return context
12280	derive the class IfNode from Node base class .	class IfNode ( Node ) :
9118	define the method __init__ with 6 arguments self , parent_widget , name , value , attrs and choices .	def __init__ ( self , parent_widget , name , value , attrs , choices ) :
5087	substitute value under the STR0 key of the options dictionary for self.verbosity .	self . verbosity = options [ STR0 ]
6742	define the method validate_domain_part with arguments self and domain_part .	def validate_domain_part ( self , domain_part ) :
11801	decorator function register.filter with an argument is_safe set to boolean True .	@ register . filter ( is_safe = True )
8547	if not ,	else :
8466	call the method self.validate_unique .	self . validate_unique ( )
11177	call the function token.split_contents , substitute the result without the first element for bits .	bits = token . split_contents ( ) [ 1 : ]
8247	from django.utils.encoding import smart_text and force_text into default name space .	from django . utils . encoding import smart_text , force_text
17056	substitute EscapeBytes for EscapeString .	EscapeString = EscapeBytes
9237	substitute self.template_with_initial for template .	template = self . template_with_initial
15095	get the value under log key of root.manager.loggerDict dictionary , substitute it for logger .	logger = root . manager . loggerDict [ log ]
11100	define the method __init__ with 2 arguments : self and filter_expression .	def __init__ ( self , filter_expression ) :
5535	call the models.Model.save_base method with arguments self.object , using as using and raw set to boolean True .	models . Model . save_base ( self . object , using = using , raw = True )
13984	format string STR0 with 3 elements : result of the function random.getstate , result of the call the the function time.time , and settings.SECRET_KEY , call on it method encode with an argument string STR1 , use the result as an argument for the call to the method hashlib.sha256 , call the method digest on the result , use the result as an argument for the call to the function random.seed .	random . seed ( hashlib . sha256 ( ( STR0 % ( random . getstate ( ) , time . time ( ) , settings . SECRET_KEY ) ) . encode ( STR1 ) ) . digest ( ) )
4437	ERRORS is a dictionary with 3 initial entries : string STR0 for errno.EACCES , STR1 for errno.EADDRINUSE and STR2 for errno.EADDRNOTAVAIL .	ERRORS = { errno . EACCES : STR0 , errno . EADDRINUSE : STR1 , errno . EADDRNOTAVAIL : STR2 , }
3306	for every app_config in return value of the method apps.get_app_configs ,	for app_config in apps . get_app_configs ( ) :
4692	call the method parser.add_argument with 2 arguments : string STR0 , and help is a string STR1 .	parser . add_argument ( STR0 , help = STR1 )
9994	self.method is None .	self . method = None
5407	call the function importlib.import_module with an argument serializer_module , substitute it for module .	module = importlib . import_module ( serializer_module )
5614	otherwise if o is an instance of datetime.time object ,	elif isinstance ( o , datetime . time ) :
13297	EndToken is an instance of EndToken class .	EndToken = EndToken ( )
6844	compile regex from the raw string STR0 , substitute it for RE_DATE .	RE_DATE = re . compile ( STR0 )
17208	substitute old_attr for self.attr .	self . attr = old_attr
9194	define the method __init__ with 3 arguments : self , attrs set to None and choices set to an empty tuple .	def __init__ ( self , attrs = None , choices = ( ) ) :
10907	take a tuple with 2 elements : boolean False and method resolve called with an empty dictionary on the instance of Variable class , created with an argument constant_arg , append it to args .	args . append ( ( False , Variable ( constant_arg ) . resolve ( { } ) ) )
13099	substitute a tuple with 2 elements : template and None , for self.find_template_cache dictionary value under the key key .	self . template_cache [ key ] = ( template , None )
10923	if ignore_failures is true ,	if ignore_failures :
18628	if priority is false ,	if not priority :
256	otherwise is settings.USE_TI is true ,	elif settings . USE_TZ :
13824	return first element of t .	return t [ 0 ]
1168	set the file position pointer at file_pos .	file . seek ( file_pos )
11701	decorator function register.filter with an argument is_safe set to boolean True .	@ register . filter ( is_safe = True )
6869	call the function datetime.date.today , substitute the year field of the result for this_year .	this_year = datetime . date . today ( ) . year
3637	substitute the last element of parts for ser_fmt .	ser_fmt = parts [ - 1 ]
13759	BASE62_ALPHABET is string STR0 .	BASE62_ALPHABET = STR0
12149	call the function self.filter_expr.resolve with an argument context , return the result .	return self . filter_expr . resolve ( context )
15189	call the function _checkLevel with an argument level , use the result as an argument for the call to the method logger.setLevel .	logger . setLevel ( _checkLevel ( level ) )
15491	if not ,	else :
8985	define the method as_json with 2 arguments self and escape_html set to boolean False .	def as_json ( self , escape_html = False ) :
15861	cal the method operator.attrgetter with an argument string STR0 , use the result as an argument for the call to the function , new_method_proxy , __class__ is an property object created with previous result as an argument .	__class__ = property ( new_method_proxy ( operator . attrgetter ( STR0 ) ) )
15969	if autoescape is true ,	if autoescape :
4280	if self.show_traceback is true ,	if self . show_traceback :
17486	try ,	try :
18095	define the function ngettext_lazy with 3 arguments : singular , plural and number set to None .	def ngettext_lazy ( singular , plural , number = None ) :
14153	call the method self.itervalues , return the list of results .	return list ( self . itervalues ( ) )
17050	do nothing .	pass
14943	substitute e and tb for v.__cause__ and v.__traceback__ .	v . __cause__ , v . __traceback__ = e , tb
15059	raise an ValueError exception with an argument string STR0 formated with name and e .	raise ValueError ( STR0 % ( name , e ) )
1895	define COOKIES method with self as the argument .	def COOKIES ( self ) :
10955	substitute new_obj for obj .	obj = new_obj
5457	import module warnings .	import warnings
7064	evaluate the function smart_text with an argument value , return the result .	return smart_text ( value )
2748	if self.can_import_settings is false ,	if not self . can_import_settings :
10711	define the emethod parse with 2 arguments : self and parse_until set to None .	def parse ( self , parse_until = None ) :
25	if ImportError , renamed to e , exception is caught ,	except ImportError as e :
6418	remove the first element from p_pattern .	p_pattern = p_pattern [ 1 : ]
2295	define the method __init__ with 6 arguments : self , _subtype set to string STR0 , boundary set to None , _subparts set to None , encoding set to None and unpacked dictionary _params .	def __init__ ( self , _subtype = STR0 , boundary = None , _subparts = None , encoding = None , ** _params ) :
13430	define the function extract with 2 arguments path and to_path set to empty string .	def extract ( path , to_path = STR ) :
13326	increment self.pos by integer 1 .	self . pos += 1
9188	if self.render_value is false ,	if not self . render_value :
1731	get the name of the callback , substitute it for view_name .	view_name = callback . __name__
5268	call the method six.reraise 3 with arguments : os_err_exc_type , return value of the function os_err_exc_type , called with string as an argument STR0 , where STR1 is replaced by : first element of args and strerror , respective , and third element of the result of the function sys.exc_info .	six . reraise ( os_err_exc_type , os_err_exc_type ( STR0 % ( args [ 0 ] , strerror ) ) , sys . exc_info ( ) [ 2 ] )
7766	define the method as_table with an argument self .	def as_table ( self ) :
15811	call the method self._setup .	self . _setup ( )
8706	define the method _construct_form with 3 arguments : self , i and unpacked dictionary kwargs .	def _construct_form ( self , i , ** kwargs ) :
3250	raise an CommandError with argument : string STR0 , where STR1 is replaced with : model._meta.app_label and model._meta.object_name joined into a string , with separator STR2 , result joined into a string , separated by string STR3 for every model and deps in sorted list of elements skipped sorted by key : return value of the lambda function with an argument obj , and result the __name__ field of the first element of obj .	raise CommandError ( STR0 % STR1 . join ( STR2 % ( model . _meta . app_label , model . _meta . object_name ) for model , deps in sorted ( skipped , key = lambda obj : obj [ 0 ] . __name__ ) ) )
7011	define the method run_validators with arguments self and value .	def run_validators ( self , value ) :
18583	otherwise if first element of message_context equals to character STR ,	elif message_context [ 0 ] == STR :
322	derive the class CacheClass from the DatabaseCache base class .	class CacheClass ( DatabaseCache ) :
5015	app_dirs is an empty list .	app_dirs = [ ]
5976	derive the class EntitiesForbidden from the DefusedXmlException base class .	class EntitiesForbidden ( DefusedXmlException ) :
2704	call the method parser.add_option with 5 arguments : string STR1 , action is string STR2 , dest is string STR3 , default is boolean False , and help is a string STR0 .	parser . add_argument ( STR1 , action = STR2 , dest = STR3 , default = False , help = STR0 )
14000	if result is equal to integer 0 , return boolean True , otherwise return boolean False .	return result == 0
3155	if app_config.models_module is None or app_config is contained in excluded_apps ,	if app_config . models_module is None or app_config in excluded_apps :
5216	call the method self.splitext with an argument guessed_filename , substitute the second element of the result for ext .	ext = self . splitext ( guessed_filename ) [ 1 ]
18052	_trans is an instance of Trans class .	_trans = Trans ( )
7403	if value is true and method self.valid_value called with an argument value evaluates to false ,	if value and not self . valid_value ( value ) :
3417	if is_relation ,	if is_relation :
14179	if not ,	else :
9376	substitute index for self.index .	self . index = index
5558	from django.utils import six into default name space .	from django . utils import six
9951	while end is greater than integer 0 and return value of the s.count called with 3 arguments : an empty string , integer 0 and end ,	while end > 0 and s . count ( STR , 0 , end ) % 2 :
9506	define the method decompress with 2 arguments : self and value .	def decompress ( self , value ) :
17372	get STR0 attribute from the moves.builtins object , substitute it for exec_ .	exec_ = getattr ( moves . builtins , STR0 )
9791	return nothing .	return
3184	if model is contained in excluded_models ,	if model in excluded_models :
12357	if settings.USE_TZ is true substitute result of the function timezone.get_current_timezone for tzinfo , if not tzinfo is None .	tzinfo = timezone . get_current_timezone ( ) if settings . USE_TZ else None
506	delete the value under key key of self._expire_info .	del self . _expire_info [ key ]
6642	from django.utils.deconstruct import deconstructible into default name space .	from django . utils . deconstruct import deconstructible
9455	define the method get_renderer with 5 arguments : self , name , value , attrs set to None and choices set to an empty tuple .	def get_renderer ( self , name , value , attrs = None , choices = ( ) ) :
14825	substitute second element of renamed_method for new_method_name .	new_method_name = renamed_method [ 1 ]
7866	append name to self._changed_data list .	self . _changed_data . append ( name )
4765	do nothing .	pass
15933	from django.utils.text import normalize_newlines into default name space .	from django . utils . text import normalize_newlines
12778	substitute first element of loader for loader and loader without the first element for args .	loader , args = loader [ 0 ] , loader [ 1 : ]
13315	try ,	try :
7791	raise an ValueError with an argument string STR0 , with STR1 replaced with self.__class__.__name__ and field , respectively .	raise ValueError ( STR0 % ( self . __class__ . __name__ , field ) )
11606	replace all occurrences of STRspecial with STR1 in value , replace all occurrences of STR with STR2 in the previous result , replace all occurrences of STR with STR0 in the previous result , return the result .	return value . replace ( STRspecial , STR1 ) . replace ( STR , STR2 ) . replace ( STR , STR0 )
16833	if not ,	else :
16991	if source is an instance of inst class ,	if isinstance ( source , inst ) :
7033	define the method get_limit_choices_to with arguments self .	def get_limit_choices_to ( self ) :
16513	states is a dictionary with 2 arguments : appended list with an element instance of a class Tok , created with 3 arguments : STR0 , result of the function literals called with an argument string STR1 and next as a string STR3 , to the both_before , appended both_after to the previous result , for STR4 and appended list with an element instance of a class Tok , created with 3 arguments : string STR2 , raw string STR5 , and next as a string STR6 , to the both_before , appended both_after to the previous result for STR7 .	states = { STR4 : both_before + [ Tok ( STR1 , literals ( STR2 ) , next = STR5 ) , ] + both_after , STR6 : both_before + [ Tok ( STR3 , STR0 , next = STR7 ) , ] + both_after , }
3164	append model to app_list_value .	app_list_value . append ( model )
3111	get the value under the STR0 key of the options dictionary , substitute the result for exclude .	excludes = options . get ( STR0 )
10012	if domain is true and return value of the function validate_host called with 2 arguments : domain and settings.ALLOWED_HOSTS , evaluates to true ,	if domain and validate_host ( domain , settings . ALLOWED_HOSTS ) :
15441	define the method endChannelElement with 2 arguments : self and handler .	def endChannelElement ( self , handler ) :
7893	if self.field.label is None ,	if self . field . label is None :
16978	while ch is not equal to a string STR0 ,	while ch != STR0 :
3348	call the function table_name_filter with an argument table_name , if it evaluates to true ,	if not table_name_filter ( table_name ) :
6509	define the method _reverse_with_prefix with arguments self , lookup_view , _prefix , unpacked list args and unpacked dictionary kwargs .	def _reverse_with_prefix ( self , lookup_view , _prefix , * args , ** kwargs ) :
782	obj is a string STR0 .	obj = STR0
9779	self._leftover is an empty string .	self . _leftover = STR
8491	substitute localized_fields for value under the STR0 key of attrs dictionary .	attrs [ STR0 ] = localized_fields
11437	if other is an instance of BaseContext class ,	if isinstance ( other , BaseContext ) :
4053	join migrations_directory and string STR0 into a file path , substitute it for init_path .	init_path = os . path . join ( migrations_directory , STR0 )
13614	truncate the last element of filename .	filename = filename [ : - 1 ]
2735	replace STR0 in string STR1 with e.__class__.__name__ and e , respectively , write it to the stderr stream .	stderr . write ( STR0 % ( e . __class__ . __name__ , e ) )
12609	for every bit in elements of bits without the first element , call the method parser.compile_filter , with an argument bit , substitute the list of results for values .	values = [ parser . compile_filter ( bit ) for bit in bits [ 1 : ] ]
11228	if attr is contained in flags ,	if attr in flags :
4205	if not ,	else :
6134	if daemonize is true ,	if daemonize :
5199	replace STR0 in string STR1 with self.app_or_project .	prefix = STR0 % self . app_or_project
360	import module os .	import os
14046	join elements of T in a bytes string , append first r elements of result of the call to the function F with an argument l to it ,	return STR . join ( T ) + F ( l ) [ : r ]
14586	subtract day_of_year from i , if the result is smaller than the result of subtraction of weekday from integer 4 ,	if ( i - day_of_year ) < ( 4 - weekday ) :
1495	substitute STR1 from string STR0 with self.__class__.__name__ , self.name and self.content_type , respectively , use it as an argument for the call to the function force_str , return the result .	return force_str ( STR0 % ( self . __class__ . __name__ , self . name , self . content_type ) )
4747	if self.verbosity is greater than integer 0 ,	if self . verbosity > 0 :
11297	substitute file_name for t .	t = file_name
9987	self.GET is an instance of QueryDict class created with an argument mutable set to boolean True .	self . GET = QueryDict ( mutable = True )
15251	call the function six.text_type with s as an argument , substitute the result for s .	s = six . text_type ( s )
1030	call the __bool__ method with argument self , on the return value of the type function with argument self , return the result .	return type ( self ) . __bool__ ( self )
4924	call the method final_output.extend with an argument output .	final_output . extend ( output )
17162	define the method __init__ with 4 arguments : self , name , old and new set to None .	def __init__ ( self , name , old , new = None ) :
8044	define the method __len__ with an argument self .	def __len__ ( self ) :
13142	if ValueError exception is caught ,	except ValueError :
235	call the method ops.process_clob with second element of row as argument , on the object under the db key of connections dictionary , substitute the result for value .	value = connections [ db ] . ops . process_clob ( row [ 1 ] )
4821	import module sys .	import sys
5389	return self.paginator.count .	return self . paginator . count
13953	for every c in candidate without the last element and in reversed order , convert c into an integer , use the result as an key to get the value from the LUHN_ODD_LOOKUP dictionary , sum all the results and substitute the result for odds .	odds = sum ( LUHN_ODD_LOOKUP [ int ( c ) ] for c in candidate [ - 2 : : - 2 ] )
10389	if max_age is not None ,	if max_age is not None :
6224	call the sign method from the base class of the TimestampSigner class with an argument value , return the result	return super ( TimestampSigner , self ) . sign ( value )
7772	define the method non_field_errors with an argument self .	def non_field_errors ( self ) :
11718	decorator stringfilter ,	@ stringfilter
10911	call the method self.args_check with 3 arguments : filter_name , filter_func and args .	self . args_check ( filter_name , filter_func , args )
2807	missing_args_message is an string STR0 .	missing_args_message = STR0
1945	if not ,	else :
15028	raise an ValueError exception with an argument string STR0 formated with name .	raise ValueError ( STR0 % name )
12668	if fift element of bits is not equal to a string STR0 ,	if bits [ 4 ] != STR0 :
1881	if self does not have an STR0 attribute ,	if not hasattr ( self , STR0 ) :
11222	define the function dec with an argument func ,	def dec ( func ) :
3829	if self.default_locale_path directory doesnt exists ,	if not os . path . exists ( self . default_locale_path ) :
7641	from django.core.exceptions import ValidationError and NON_FIELD_ERRORS into default name space .	from django . core . exceptions import ValidationError , NON_FIELD_ERRORS
2133	call the method self.connection.ehlo .	self . connection . ehlo ( )
12217	if TypeError exception is caught ,	except TypeError :
17919	subtract self.STDOFFSET with self.DSTOFFSET , substitute the result for self.DSTDIFF .	self . DSTDIFF = self . DSTOFFSET - self . STDOFFSET
2641	if options.pythonpath is true ,	if options . pythonpath :
8056	if not ,	else :
12738	all the method parser.parse with an argument tuple , with an element string STR0 , substitute the result for nodelist .	nodelist = parser . parse ( ( STR0 , ) )
3247	if not ,	else :
4449	executor is an instance of the class MigrationExecutor created with an argument : value under the DEFAULT_DB_ALIAS key of the connections dictionary .	executor = MigrationExecutor ( connections [ DEFAULT_DB_ALIAS ] )
125	substitute self.version for version .	version = self . version
15321	from django.utils import six into default name space .	from django . utils import six
6587	while path is true ,	while path :
11446	self.render_context is a instance of RenderContext class .	self . render_context = RenderContext ( )
16601	from functools import lru_cache .	from functools import lru_cache
4699	executor is an instance of MigrationExecutor , created with value under the DEFAULT_DB_ALIAS key of the connections dictionary .	executor = MigrationExecutor ( connections [ DEFAULT_DB_ALIAS ] )
10710	call the method self.add_library with an argument lib .	self . add_library ( lib )
16518	call the method m.group with an argument integer 0 , substitute the result for s .	s = m . group ( 0 )
17767	derive the class StreamingBuffer from the object base class .	class StreamingBuffer ( object ) :
17376	raise an exception value .	raise value
9832	call the method self._stream.read with an argument integer 1 , substitute the result for unused_char .	unused_char = self . _stream . read ( 1 )
5439	raise a SerializerDoesNotExist exception with an argument format .	raise SerializerDoesNotExist ( format )
3733	if msgs is true ,	if msgs :
2344	if message-id ' is not in header_names ,	if STR0 not in header_names :
14376	define the method __new__ with 3 arguments : cls , unpacked list args and unpacked dictionary kwargs .	def __new__ ( cls , * args , ** kwargs ) :
18635	default is a string STR0 .	default = STR0
1125	define method _get_width with self class instance as the argument .	def _get_width ( self ) :
12503	define the function debug with 2 arguments : parser and token .	def debug ( parser , token ) :
7486	substitute fields for self.fields .	self . fields = fields
18086	substitute number_value for kwargs dictionary value under the STR0 key .	kwargs [ STR0 ] = number_value
5012	return statements .	return statements
15894	get name attribute from the instance object , call it and return the result .	return getattr ( instance , name ) ( )
4216	if not ,	else :
5648	call the smart_text function with 2 arguments : return value of the obj._get_pk_val function and string_only set to boolean True , substitute it for value under the STR0 key of data dictionary .	data [ STR0 ] = smart_text ( obj . _get_pk_val ( ) , strings_only = True )
5375	define the method has_previous with an argument self .	def has_previous ( self ) :
6173	define the method dumps with arguments self and obj .	def dumps ( self , obj ) :
2679	call the function django.get_version , return the result .	return django . get_version ( )
2738	self.stdout is an instance of OutputWrapper class created with an argument : value under the STR0 key of the options dictionary , if the key doesnt exists use sys.stdout as an argument .	self . stdout = OutputWrapper ( options . get ( STR0 , sys . stdout ) )
9967	from django.conf import settings into default name space .	from django . conf import settings
3380	append rel_to to string 'ForeignKey ( , substitute the result for field_type .	field_type = STR0 % rel_to
11735	define the function upper with an argument value .	def upper ( value ) :
7741	if errors_on_separate_row and bf_errors are both true ,	if errors_on_separate_row and bf_errors :
16426	call the function validate_ipv4_address with an argument hextet .	validate_ipv4_address ( hextet )
6527	for every possibility , pattern and defaults in possibilities ,	for possibility , pattern , defaults in possibilities :
15377	append item to self.items .	self . items . append ( item )
12486	as_form is boolean True .	as_form = True
8311	for every item in qu append item.pk to a list , substitute resulting list for value under f.name key of the data dictionary .	data [ f . name ] = [ item . pk for item in qs ]
4256	if self.verbosity is greater or equal than integer 1 and sql is true ,	if self . verbosity >= 1 and sql :
15643	otherwise if value is an instance of datetime.time ,	elif isinstance ( value , datetime . time ) :
12066	return singular_suffix .	return singular_suffix
2161	if self.connection is false ,	if not self . connection :
9340	choices is a tuple with 3 elements : tuple with 2 elements : string STR0 and return value of the function ugettext_lazy , called with an argument string STR1 , tuple with 2 elements : string STR2 and return value of the function ugettext_lazy , called with an argument string STR3 and tuple with 2 elements : string STR4 and return value of the function ugettext_lazy , called with an argument string STR5 .	choices = ( ( STR0 , ugettext_lazy ( STR1 ) ) , ( STR2 , ugettext_lazy ( STR3 ) ) , ( STR4 , ugettext_lazy ( STR5 ) ) )
3179	if serializers.SerializerDoesNotExist exception is caught ,	except serializers . SerializerDoesNotExist :
12865	append block to the value under the name key of self.blocks dictionary .	self . blocks [ name ] . append ( block )
15788	define the method __deepcopy__ with 2 arguments : self and memo .	def __deepcopy__ ( self , memo ) :
1675	if mw_instance has an attribute named STR0 .	if hasattr ( mw_instance , STR0 ) :
4804	call the function call_command with 2 arguments : string migrate and unpacked dictionary options .	call_command ( STR0 , ** options )
2029	increment msg_count by one .	msg_count += 1
1310	as long as self.exists function with argument name evaluates to boolean True ,	while self . exists ( name ) :
7368	if value is boolean True , string STR0 or string STR1 ,	if value in ( True , STR0 , STR1 ) :
6655	flags is a integer 0 .	flags = 0
17635	get fist max_width incremented by 1 elements from line , find index of the first occurrenece of whitespace from the right side , add integer 1 to it , substitute the result for space .	space = line [ : max_width + 1 ] . rfind ( STR ) + 1
18074	substitute number for value under the STR0 key of the kwargs dictionary .	kwargs [ STR0 ] = number
12233	for every node in self.nodelist_loop ,	for node in self . nodelist_loop :
16969	get the next element of the iterable pattern_iter , assign the result for ch2 and escaped , respectively .	ch2 , escaped = next ( input_iter )
3346	for every table_name in return value of the method connection.introspection.table_names called with an argument cursor ,	for table_name in connection . introspection . table_names ( cursor ) :
11067	contains_nontext is boolean False .	contains_nontext = False
267	try ,	try :
5542	if obj.pk is None , and Model has an STR0 attribute , and Model._default_manager has and STR1 ,	if ( obj . pk is None and hasattr ( Model , STR0 ) and hasattr ( Model . _default_manager , STR1 ) ) :
3662	import module django .	import django
18510	substitute STR0 in string STR1 with message_context and result of the function join_tokens , called with 2 arguments : singular and trimmed , write the result to out .	out . write ( STR0 % ( message_context , join_tokens ( singular , trimmed ) ) )
16391	define the function _sanitize_ipv4_mapping with an argument ip_str .	def _sanitize_ipv4_mapping ( ip_str ) :
731	increment weight by integer 2 .	weight += 2
884	if token is None ,	if token is None :
7692	if data is not None or files is not None , self.is_bound is boolean True , otherwise it is boolean False .	self . is_bound = data is not None or files is not None
16257	call the function parse_http_date with an argument date , return the result .	return parse_http_date ( date )
540	delete the value under the key key of self._expire_info dictionary .	del self . _expire_info [ key ]
7912	define the method errors with an argument self .	def errors ( self ) :
18059	define the function ngettext with 3 arguments : singular , plural and number .	def ngettext ( singular , plural , number ) :
544	define the method _has_expired with self and key as arguments .	def _has_expired ( self , key ) :
617	if val is None ,	if val is None :
17181	return value .	return value
6787	code is a string STR0	code = STR0
11552	if Exception , renamed to e , exception is caught ,	except Exception as e :
2568	append STR0 to opt_label .	opt_label += STR0
16291	define the function urlsafe_base64_decode with an argument s .	def urlsafe_base64_decode ( s ) :
16910	get the next element of the iterable pattern_iter , assign the result for ch and escaped , respectively .	ch , escaped = next ( pattern_iter )
7627	strip whitespaces from both sides of the value , substitute it for value .	value = value . strip ( )
14421	import module calendar .	import calendar
154	call the self.incr method with key , negative delta and version set to version as arguments .	return self . incr ( key , - delta , version = version )
14038	for every j in range of integers from 0 to iterations converted to an integer ,	for j in xrange ( int ( iterations ) ) :
10829	increment i by integer 1 .	i += 1
7188	call the method formats.get_format_lazy with an argument string STR0 , substitute the result for input_formats .	input_formats = formats . get_format_lazy ( STR0 )
16692	increment stats dictionary value under the MISSES key by integer 1 .	stats [ MISSES ] += 1
6990	substitute self.required for widget.is_required .	widget . is_required = self . required
8637	if commit is false ,	if not commit :
1954	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
12040	otherwise if bytes is smaller than TB ,	elif bytes < TB :
15156	try ,	try :
2624	do nothing .	pass
3406	if comment_notes is true ,	if comment_notes :
14457	raise an NotImplementedError exception with an argument string STR0 .	raise NotImplementedError ( STR0 )
8903	for every val in value ,	for val in value :
1665	for every middleware_path in settings.MIDDLEWARE_CLASSES :	for middleware_path in settings . MIDDLEWARE_CLASSES :
3098	call the method parser.add_argument with 5 arguments : string STR0 , default set to None , dest set to STR1 , type set to int and help is a string STR2 .	parser . add_argument ( STR0 , default = None , dest = STR1 , type = int , help = STR2 )
10239	get is a tuple containing elements generated by the call to the function pformat with an argument GET_override , if GET_override is not None , or otherwise generated with the call to the function pformat with an argument request.GET .	get = ( pformat ( GET_override ) if GET_override is not None else pformat ( request . GET ) )
17346	if not ,	else :
93	return default_key_func .	return default_key_func
9386	call the function format_html with 4 arguments : string STR0 , label_for , result of the method self.tag , and self.choice_label , return the result .	return format_html ( STR0 , label_for , self . tag ( ) , self . choice_label )
10473	return self.streaming_content	return self . streaming_content
15579	call the function to_locale with an argument lang , substitute the result for locale .	locale = to_locale ( lang )
7158	return value .	return value
16837	if dec_part is true ,	if dec_part :
14678	define the function _findall with 2 arguments text and substr .	def _findall ( text , substr ) :
2431	msg is an instance of a class SafeMIMEMultipart , created with the arguments : _subtype set to self.alternative_subtype and encoding set to encoding .	msg = SafeMIMEMultipart ( _subtype = self . alternative_subtype , encoding = encoding )
14539	define the method m with an argument self .	def m ( self ) :
7070	derive the class IntegerField from the base class Field class .	class IntegerField ( Field ) :
1949	convert key and default to strings , get the value under the key string key of the environ dictionary , if it does not exists use the , default string value , substitute it for value .	value = environ . get ( str ( key ) , str ( default ) )
3389	if field_type equals a string STR0 ,	if field_type == STR0 :
9224	call the function ugettext_lazy with an argument string STR0 , substitute the result for clear_checkbox_label .	clear_checkbox_label = ugettext_lazy ( STR0 )
8462	call the method self.instance.full_clean with 2 arguments : exclude set to exclude and validate_unique set to boolean False .	self . instance . full_clean ( exclude = exclude , validate_unique = False )
5203	if self.verbosity is greater or equal to integer 2 ,	if self . verbosity >= 2 :
8639	return saved_instances .	return saved_instances
2626	define the method __init__ with arguments : self , cmd and unpacked dictionary kwargs .	def __init__ ( self , cmd , ** kwargs ) :
6376	call the function get_callable with an argument self._callback_str , substitute the result for self._callback .	self . _callback = get_callable ( self . _callback_str )
3039	for every i and line in enumerated iterable table_output ,	for i , line in enumerate ( table_output ) :
1426	if self.base_url is None ,	if self . base_url is None :
3327	define the method handle_inspection with 2 argument : self and options .	def handle_inspection ( self , options ) :
910	return an dictionary containing 1 entry : settings.MEDIA_URL for STR0 .	return { STR0 : settings . MEDIA_URL }
16247	call the method m.group with an argument string STR0 , convert the result into a string , substitute it for day .	day = int ( m . group ( STR0 ) )
1217	LOCK_EX , LOCK_SH and LOCK_NB are all equal to integer 0 .	LOCK_EX = LOCK_SH = LOCK_NB = 0
9527	if value is true ,	if value :
15781	call the method self.__cast , return the hash value of the result .	return hash ( self . __cast ( ) )
17837	if first element of s is not contained in `` STR '' or last element of s is not equal to first element of s ,	if s [ 0 ] not in "STR" or s [ - 1 ] != s [ 0 ] :
2425	define the method _create_message with arguments self and msg .	def _create_message ( self , msg ) :
16234	call the method regex.match with an argument date , substitute the result for m .	m = regex . match ( date )
5174	call the method self.is_url with an argument template , if it evaluates to true ,	if self . is_url ( template ) :
15623	call the function lazy with 4 arguments : get_format , six.text_type , list and tuple , substitute the result for get_format_lazy .	get_format_lazy = lazy ( get_format , six . text_type , list , tuple )
15411	handler is an instance of SimplerXMLGenerator class , created with 2 arguments : outfile and encoding .	handler = SimplerXMLGenerator ( outfile , encoding )
532	call the method self.make_key with key and version set to version as arguments , substitute the result for key .	key = self . make_key ( key , version = version )
4433	try ,	try :
6910	call the method self.create_select with 6 arguments : name , self.year_field , value , day_val , choices and self.day_none_value , substitute the result for the value under the STR0 key of the html dictionary .	html [ STR0 ] = self . create_select ( name , self . day_field , value , day_val , choices , self . day_none_value )
7250	if regex is an instance of six.string_types class ,	if isinstance ( regex , six . string_types ) :
11236	raise an InvalidTemplateLibrary exception with an argument string ( STR0 , where STR1 is replaced with name and filter_func , respectively .	raise InvalidTemplateLibrary ( STR0 , ( name , filter_func ) )
11488	call the function get_standard_processors , append processors to the result , for every processor is the result ,	for processor in get_standard_processors ( ) + processors :
8027	derive the class BaseFormSet from the object base class .	class BaseFormSet ( object ) :
14571	define the method W with an argument self .	def W ( self ) :
17719	skip this loop iteration .	continue
7859	call the method field.hidden_widget , substitute the result for field.hidden_widget .	hidden_widget = field . hidden_widget ( )
17126	if not ,	else :
4574	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
15837	return self._wrapped.__dict__ .	return self . _wrapped . __dict__
8349	if not ,	else :
10553	from django.utils.deprecation import RemovedInDjango20Warning into default name space .	from django . utils . deprecation import RemovedInDjango20Warning
18523	filemsg is an empty string .	filemsg = STR
18490	incomment is boolean False .	incomment = False
16845	invert the ordering of elements of int_part_gd , substitute it for int_part .	int_part = int_part_gd [ : : - 1 ]
10775	do nothing .	pass
18427	if lang_code is contained in _supported and lang_code is not None and result of the function check_for_language ,	if lang_code in _supported and lang_code is not None and check_for_language ( lang_code ) :
8305	if f is an instance of ManyToManyField ,	if isinstance ( f , ManyToManyField ) :
3365	extra_params is an instance of the class OrderedDict .	extra_params = OrderedDict ( )
3605	call the method os.path.basename with an argument candidate , is result is contained in targets ,	if os . path . basename ( candidate ) in targets :
4076	apply operator.eq function to elements of level iterable , until level is reduced to a single value , if the result is true ,	if reduce ( operator . eq , level ) :
5815	call the method self.xml.addQuickElement with an argument string STR0 .	self . xml . addQuickElement ( STR0 )
12325	define the method __init__ with 3 arguments : self , filepath and parsed .	def __init__ ( self , filepath , parsed ) :
11543	if e doesnt have an STR0 attribute ,	if not hasattr ( e , STR0 ) :
7402	call the method validate with an argument value from the base class of the class ChoiceField .	super ( ChoiceField , self ) . validate ( value )
14824	get the value under the old_method_name key of the base.__dict__ dictionary , substitute it for old_method .	old_method = base . __dict__ . get ( old_method_name )
11263	call the method __init__ from the base class of the class AssignmentNode , with 3 arguments : takes_context , args and kwargs .	super ( AssignmentNode , self ) . __init__ ( takes_context , args , kwargs )
4001	try ,	try :
9753	self._empty is boolean False .	self . _empty = False
6693	call the __call__ method from the base class of the class URLValidator , with an argument value .	super ( URLValidator , self ) . __call__ ( value )
4510	import rlcompleter .	import rlcompleter
403	call the function pickle.dumps with expiry and integer -1 as arguments , use the result as the argument for the call to f.write function .	f . write ( pickle . dumps ( expiry , - 1 ) )
13477	call the method self.split_leading_dir with an argument path , assign the result to prefix and rest , respectively .	prefix , rest = self . split_leading_dir ( path )
13969	call the function warnings.warn with an argument , string STR0 .	warnings . warn ( STR0 )
2959	locales is relative complement of set exclude in set locales .	locales = set ( locales ) - set ( exclude )
14656	from datetime import date as real_date and datetime as real_datetime into default name space .	from datetime import date as real_date , datetime as real_datetime
4717	if answer is false ,	if not answer :
3094	help is a tuple containing a string STR0 .	help = ( STR0 )
6804	compare is a lambda function with arguments self , a and b , return value is boolean true if a is lesser than b , otherwise is false .	compare = lambda self , a , b : a < b
7693	if data is true , substitute it for self.data , if not self.data is an empty dictionary .	self . data = data or { }
3983	from django.utils.six.moves import reduce into default name space .	from django . utils . six . moves import reduce
7870	media is an instance of Media class .	media = Media ( )
2999	requires_system_checks is boolean False .	requires_system_checks = False
16909	name is an empty list .	name = [ ]
12370	call the method self.mapping.get with 2 arguments : self.tagtype and an empty list , return the result .	return self . mapping . get ( self . tagtype , STR )
10615	return self.source .	return self . source
10980	if var is not an instance of six.string_types ,	if not isinstance ( var , six . string_types ) :
15366	self.feed is an dictionary with 13 initial entries , result of the function to_unicode called with an argument title for STR0 , result of the function iri_to_uri called with an argument link for STR1 , result of the function to_unicode called with an argument description for STR2 , result of the function to_unicode called with an argument language for STR3 , result of the function to_unicode called with an author_email description for STR4 , result of the function to_unicode called with an argument author_name for STR5 , result of the function iri_to_uri called with an argument author_link for STR6 , result of the function to_unicode called with an argument subtitle for STR7 , if true , categories is value for STR8 key , if not , empty tuple is value for STR9 key , result of the function iri_to_uri called with an argument feed_url for STR10 , result of the function to_unicode called with an argument feed_copyright for STR11 , if true , feed_guid is value for STR12 key , if not , lik is value for STR13 key and ttl for STR14 . update self.feed dictionary with kwargs .	self . feed = { STR0 : to_unicode ( title ) , STR1 : iri_to_uri ( link ) , STR2 : to_unicode ( description ) , STR3 : to_unicode ( language ) , STR4 : to_unicode ( author_email ) , STR5 : to_unicode ( author_name ) , STR6 : iri_to_uri ( author_link ) , STR7 : to_unicode ( subtitle ) , STR8 : categories or ( ) , STR9 : iri_to_uri ( feed_url ) , STR10 : to_unicode ( feed_copyright ) , STR11 : feed_guid or link , STR12 : ttl , }
15764	otherwise if self._delegate_text is true ,	elif self . _delegate_text :
8154	call the method self.full_clean .	self . full_clean ( )
4385	substitute value under the STR0 key of the options dictionary for self.use_ipv6 .	self . use_ipv6 = options . get ( STR0 )
392	do nothing .	pass
5089	if target is None ,	if target is None :
17887	from django.conf import settings into default name space .	from django . conf import settings
4993	output is an empty list .	output = [ ]
1472	define method __exit__ with self , exc , value and tb as the arguments .	def __exit__ ( self , exc , value , tb ) :
16347	increment level by one .	level += 1
9039	define the method __init__ with 3 arguments : self , media set to None and unpacked dictionary kwargs .	def __init__ ( self , media = None , ** kwargs ) :
15762	if self._delegate_bytes is true ,	if self . _delegate_bytes :
16388	prepend an empty string to hextets list .	hextets = [ STR ] + hextets
2207	define the function make_msgid with argument idstring set to None .	def make_msgid ( idstring = None ) :
17028	for every item in elt ,	for item in elt :
744	append field to problem_fields list for every model in apps.get_models with argument kwargs dictionary , only if app_configs is None ,	problem_fields = [ field for model in apps . get_models ( ** kwargs ) if app_configs is None or model . _meta . app_config in app_configs for field in model . _meta . local_fields if isinstance ( field , models . BooleanField ) and not field . has_default ( ) ]
14004	format string hex_format_string with x , call the method encode on the result with an argument string STR0 , use the result as an argument for the call to the function binascii.unhexlify , return the result .	return binascii . unhexlify ( ( hex_format_string % x ) . encode ( STR0 ) )
6226	call the unsign method from the base class of the TimestampSigner class with an argument value , substitute the result for result .	result = super ( TimestampSigner , self ) . unsign ( value )
3777	get the value under the STR0 key of the options dictionary , substitute it for locale .	locale = options . get ( STR0 )
341	call the method self.validate_key with argument key .	self . validate_key ( key )
10874	substitute i for self.pointer .	self . pointer = i
11490	update self dictionary with updates .	self . update ( updates )
16370	get the value under the index key of the hextets dictionary , if it is false ,	if not hextets [ index ] :
15680	import module warnings .	import warnings
3967	found is boolean True .	found = True
18167	call the function ungettext with 3 arguments : singular , plural and number , return the result .	return ungettext ( singular , plural , number )
17913	define the method __init__ with an argument self .	def __init__ ( self ) :
13341	return left .	return left
16402	convert ip_str to lowercase , if it doesnt start with a string STR0 ,	if not ip_str . lower ( ) . startswith ( STR0 ) :
13780	define convert method with self class instance , number , from_digits , to_digits and sign as arguments .	def convert ( self , number , from_digits , to_digits , sign ) :
2882	substitute return value of function no_style for style .	style = no_style ( )
3455	call the method connection.introspection.get_field_type with 2 arguments : second element of row and row , substitute the result for field_type .	field_type = connection . introspection . get_field_type ( row [ 1 ] , row )
1585	do nothing .	pass
1280	from datetime import datetime into default name space .	from datetime import datetime
5123	for every root , dirs and files in subdirectory tree starting from the base dir template_dir ,	for root , dirs , files in os . walk ( template_dir ) :
2848	define the method __init__ with an argument self .	def __init__ ( self ) :
15320	from django.utils import datetime_safe into default name space .	from django . utils import datetime_safe
7240	define the method __init__ with 7 arguments : self , regex , max_length set to None , min_length set to None , error_message set to None ,	def __init__ ( self , regex , max_length = None , min_length = None , error_message = None , * args , ** kwargs ) :
8267	call the method f.save_form_data with 2 arguments : instance and value under the f.name key of cleaned_data dictionary .	f . save_form_data ( instance , cleaned_data [ f . name ] )
12682	raise an TemplateSyntaxError exception with an argument string STR0 .	raise TemplateSyntaxError ( STR0 )
13631	modified_code is None .	modified_code = None
17040	if pos is greater than or equal to last ,	if pos >= last :
15511	call the method handler.addQuickElement with 3 arguments : string STR0 , an empty string and a dictionary with an entry : cat for STR1 .	handler . addQuickElement ( STR0 , STR , { STR1 : cat } )
15514	define the method write_items with 2 arguments : self and handler .	def write_items ( self , handler ) :
15939	call the function re.compile with raw string STR0 , substitute the result for word_split_re .	word_split_re = re . compile ( STR0 )
14210	remove first element of result from self.keyOrder dictionary .	self . keyOrder . remove ( result [ 0 ] )
17749	if length of list_ equals integer 1 ,	if len ( list_ ) == 1 :
9840	raise an StopIteration exception ,	raise StopIteration ( )
1864	get the value under the STR0 key of content_params dictionary , use it to call the codec.lookup method .	codecs . lookup ( content_params [ STR0 ] )
5477	if the key doesnt exists substitute self.use_natural_keys for self.use_natural_foreign_keys . remove the STR0 key from the options dictionary and substitute it for self.use_natural_primary_keys ,	self . use_natural_primary_keys = options . pop ( STR0 , False )
4956	if cursor is true and return value of the function connection.introspection.table_name_converter called with an arugment : model._meta.db_table is contained in table_names ,	if cursor and connection . introspection . table_name_converter ( model . _meta . db_table ) in table_names :
10279	if match is true ,	if match :
1284	from django.core.files.move import file_move_safe into default name space .	from django . core . files . move import file_move_safe
15488	define the method root_attributes with an argument self .	def root_attributes ( self ) :
11737	decorator function register.filter with an argument is_safe set to boolean False .	@ register . filter ( is_safe = False )
15429	call the method handler.addQuickElement with 2 arguments : string STR0 and value under the STR1 key of the self.feed dictionary .	handler . addQuickElement ( STR0 , self . feed [ STR1 ] )
18562	strip g of STR from both ends ,	g = g . strip ( STR )
14328	default_list is an empty list .	default_list = [ ]
16424	return boolean False .	return False
16224	otherwise if query has an attribute STR0 ,	elif hasattr ( query , STR0 ) :
5985	define the method __str__ with an argument self .	def __str__ ( self ) :
3881	call the method os.unlink with an argument pot_path .	os . unlink ( pot_path )
13975	define the function salted_hmac with 3 arguments : key_salt , value and secret set to None .	def salted_hmac ( key_salt , value , secret = None ) :
7813	return nothing .	return
13112	from django.template.loader import BaseLoader into default name space .	from django . template . loader import BaseLoader
5922	return obj_pk .	return obj_pk
8403	substitute instance for self.instance .	self . instance = instance
1538	define the method from_dict with argument cls and file_dict .	def from_dict ( cls , file_dict ) :
3009	if not ,	else :
601	substitute self.default_timeout for timeout .	timeout = self . default_timeout
9155	define the method id_for_label with 2 arguments : self and id .	def id_for_label ( self , id_ ) :
11632	return an empty string .	return STR
4085	for every node_app and node_name in migration.branch ,	for node_app , node_name in migration . branch :
7049	substitute result for the value of the memo dictionary , with identity of the self object as an key .	memo [ id ( self ) ] = result
4133	get the value from the options dictionary under the key STR0 , substitute it for self.verbosity .	self . verbosity = options . get ( STR0 )
1850	call the get_script_name function with environ as argument , substitute the result for script_name .	script_name = get_script_name ( environ )
5405	call the function _load_serializers .	_load_serializers ( )
13558	from django.utils.six.moves import _dummy_thread as thread into default name space .	from django . utils . six . moves import _dummy_thread as thread
5151	try ,	try :
13217	call the method __init__ from the base class of the class SimpleTemplateResponse , return the result .	return super ( SimpleTemplateResponse , self ) . __iter__ ( )
11368	from copy import copy into default name space .	from copy import copy
305	if self._cull_frequency equals to integer 0 .	if self . _cull_frequency == 0 :
14667	call the function cls with 8 arguments : date.year , date.month , date.day , time.hour , time.minute , time.second , time.microsecond , and time.tzinfo , return the result .	return cls ( date . year , date . month , date . day , time . hour , time . minute , time . second , time . microsecond , time . tzinfo )
4171	for every key in return vale of the method executor.loader.graph.leaf_nodes , check if the first element of key equals to app_label , if it does append it to targets list .	targets = [ key for key in executor . loader . graph . leaf_nodes ( ) if key [ 0 ] == app_label ]
5408	if ImportError , renamed to exc , exception is caught ,	except ImportError as exc :
14335	yield key and value under the key key of self dictionary .	yield key , self [ key ]
15870	substitute super for _super .	_super = super
10642	substitute DebugLexer and DebugParser for lexer_class and parser_class .	lexer_class , parser_class = DebugLexer , DebugParser
9984	_encoding is None .	_encoding = None
5291	join p and cmd into a file path , substitute it for f .	f = os . path . join ( p , cmd )
14659	derive the class date from the real_date base class .	class date ( real_date ) :
6992	if extra_attrs is true ,	if extra_attrs :
18355	return result .	return result
14338	define the method _itervalues with an argument self .	def _itervalues ( self ) :
8925	from django.utils.deprecation import RemovedInDjango19Warning into default name space .	from django . utils . deprecation import RemovedInDjango19Warning
14869	if type of result is ConvertingDict , ConvertingList or ConvertingTuple ,	if type ( result ) in ( ConvertingDict , ConvertingList , ConvertingTuple ) :
6573	call the function get_resolver with an argument urlconf , substitute the result for resolver .	resolver = get_resolver ( urlconf )
13921	if cache_timeout is None ,	if cache_timeout is None :
10135	define the method readline with 3 arguments : self , unpacked list args and unpacked list kwargs .	def readline ( self , * args , ** kwargs ) :
5936	for every child in node.childNodes ,	for child in node . childNodes :
7281	raise an ValidationError with 2 arguments : value under the STR0 key of the self.error_messages dictionary and code set to STR1 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 , params = params )
2537	convert to an integer value under the STR0 key of the os.environ dictionary , substitute it for cword .	cword = int ( os . environ [ STR0 ] )
3008	call the method self.create_table with arguments : db and tablename .	self . create_table ( db , tablename )
13978	call the function force_bytes with an argument key_salt , substitute the result for key_salt .	key_salt = force_bytes ( key_salt )
10136	self._read_started is boolean True .	self . _read_started = True
9786	self._producer is an empty list .	self . _producer = [ ]
15577	concatenate path and string STR0 , append the result to format_module_path .	format_locations . append ( path + STR0 )
462	for every fname in return value of the glob.glob1 function called with 2 arguments : self._dir and , self.cache_suffix converted to a string , appended to the character STR0 , call os.path.join with self._dir and fname as arguments , filelist is a list containing all the previous results .	filelist = [ os . path . join ( self . _dir , fname ) for fname in glob . glob1 ( self . _dir , STR0 % self . cache_suffix ) ]
10481	call the function iri_to_uri with an argument redirect_to , substitute the result for the value under the STR0 key of the self dictionary .	self [ STR0 ] = iri_to_uri ( redirect_to )
1022	substitute file.mode for self.mode .	self . mode = file . mode
3130	call the method apps.get_model with exclude as an argument , substitute it for model .	model = apps . get_model ( exclude )
13293	derive the class EndToken from the TokenBase base class .	class EndToken ( TokenBase ) :
9972	from django.utils import six into default name space .	from django . utils import six
14551	define the method S with an argument self .	def S ( self ) :
4122	derive the class Command from the base class BaseCommand .	class Command ( BaseCommand ) :
16953	if ch equal a string STR0 ,	if ch == STR0 :
465	do nothing .	pass
8847	queryset is an property object of this class , with _get_queryset getter and _set_queryset setter functions .	queryset = property ( _get_queryset , _set_queryset )
10098	self._stream is an instance of BytesIO class created with an argument self._body .	self . _stream = BytesIO ( self . _body )
11573	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
16936	consume_next is boolean True .	consume_next = True
670	call the method self._cache_flush_all .	self . _cache . flush_all ( )
16924	if count is equal to integer 0 .	if count == 0 :
17187	attrs is a list with 2 elements : strings STR0 and STR1 .	attrs = [ STR0 , STR1 ]
11539	remove the first element from self.command_stack , assign the result to command and source , respectively .	command , source = self . command_stack . pop ( )
18337	if _default is None ,	if _default is None :
17689	call the method self._truncate_html with 5 arguments : length , truncate , self._wrapped , length and boolean True , return the result .	return self . _truncate_html ( length , truncate , self . _wrapped , length , True )
8387	join missing_fields into a string separated by string STR0 , use it and opts.model.__name__ to format message , substitute the result for message .	message = message % ( STR0 . join ( missing_fields ) , opts . model . __name__ )
9187	define the method render with 4 arguments : self , name , value and attrs set to None .	def render ( self , name , value , attrs = None ) :
7742	call the function force_text with an argument bf_errors , format the error_row string with the result , append it to the output .	output . append ( error_row % force_text ( bf_errors ) )
11022	raise an AttributeError exception .	raise AttributeError
9789	define the method unget with arguments self and bytes .	def unget ( self , bytes ) :
10588	derive the class TemplateSyntaxError form the base class Exception .	class TemplateSyntaxError ( Exception ) :
5776	from django.conf import settings into default name space .	from django . conf import settings
17954	if offset is smaller than integer 0 , sign is STR0 , otherwise sign is STR1 .	sign = STR0 if offset < 0 else STR1
7087	call the method formats.sanitize_separators with an argument value , substitute the result for value .	value = formats . sanitize_separators ( value )
6155	from django.utils.encoding import force_bytes , force_str and force_text into default name space .	from django . utils . encoding import force_bytes , force_str , force_text
3402	if field_desc doesnt end with STR0 ,	if not field_desc . endswith ( STR0 ) :
7306	default_error_messages is an dictionary with an entry : return value of the function _ called with an argument string , STR1 for STR2 .	default_error_messages = { STR1 : _ ( STR0 ) , }
7314	if not ,	else :
10314	substitute status for self.status_code .	self . status_code = status
10024	try ,	try :
16566	subject is an string STR0 , formated with record.levelname , string STR1 if value under the STR2 key , of the request.META dictionary is contained in settings.INTERNAL_IPS , otherwise use string STR3 , and result of the method record.getMessage .	subject = STR0 % ( record . levelname , ( STR1 if request . META . get ( STR2 ) in settings . INTERNAL_IPS else STR3 ) , record . getMessage ( ) )
481	call the _lock.setdefault method with name and RWLock ( ) as arguments , substitute the result for self_lock .	self . _lock = _locks . setdefault ( name , RWLock ( ) )
14084	if not ,	else :
6991	call the method self.widget_attrs with an argument widget , substitute the result for extra_attrs .	extra_attrs = self . widget_attrs ( widget )
3285	request user input from the standard input , assign it o confirm , with the query string : STR0Type STR1 to continue , or STR2 to cancel : `` , where STR3 is replaced with value under the STR4 key of the connection.settings_dict dictionary .	confirm = input ( STR0 % connection . settings_dict [ STR1 ] )
14832	set old_method_name attribute of the base object to the result of the function wrapper called with an argument old_method .	setattr ( base , old_method_name , wrapper ( old_method ) )
8417	define the method _get_validation_exclusions with an argument self .	def _get_validation_exclusions ( self ) :
6690	if scheme is not contained in self.schemes ,	if scheme not in self . schemes :
15664	parts is an empty list .	parts = [ ]
12585	conditions_nodelists is a list containing tuple with 2 elements condition and nodelist .	conditions_nodelists = [ ( condition , nodelist ) ]
12998	get the value under the key STR0 of the options dictionary , if it exists substitute the result for isolated_context , if not , isolated_context is boolean False .	isolated_context = options . get ( STR0 , False )
8871	define the method validate with 2 arguments : self and value .	def validate ( self , value ) :
8317	define the function fields_for_model with 9 arguments : model , fields set to None , exclude set to None , widgets set to None ,	def fields_for_model ( model , fields = None , exclude = None , widgets = None , formfield_callback = None , localized_fields = None , labels = None , help_texts = None , error_messages = None ) :
6341	call the function re.compile with arguments regex and re.UNICODE , substitute the result for compiled_regex .	compiled_regex = re . compile ( regex , re . UNICODE )
14336	define the method _iterlists with an argument self .	def _iterlists ( self ) :
7138	raise an ValidationError with 2 arguments : value under the STR0 key of the self.error_messages dictionary and code set to STR1 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 )
621	call the method self.make_key with key and version set to version as arguments , substitute the result for key .	key = self . make_key ( key , version = version )
7970	if not ,	else :
14812	define the function wrapped with 2 arguments : unpacked list args and unpacked dictionary kwargs .	def wrapped ( * args , ** kwargs ) :
18236	if not ,	else :
12136	derive the class DebugNode from Node base class .	class DebugNode ( Node ) :
11317	call the function import_module with an argument path , substitute it for package .	package = import_module ( path )
17576	PALETTES is a dictionary containing 3 elements , a dictionary with 18 pairs of dictionary value and string keys for NOCOLOR_PALETTE ,	PALETTES = { NOCOLOR_PALETTE : { STR0 : { } , STR1 : { } , STR2 : { } , STR3 : { } , STR4 : { } , STR5 : { } , STR6 : { } , STR7 : { } , STR8 : { } , STR9 : { } , STR10 : { } , STR11 : { } , STR12 : { } , STR13 : { } , STR14 : { } , STR15 : { } , STR16 : { } , STR17 : { } , } , DARK_PALETTE : { STR18 : { STR19 : STR20 , STR21 : ( STR22 , ) } , STR23 : { STR24 : STR25 , STR26 : ( STR27 , ) } , STR28 : { STR29 : STR30 } , STR31 : { STR32 : STR33 , STR34 : ( STR35 , ) } , STR36 : { STR37 : STR38 } , STR39 : { STR40 : STR41 } , STR42 : { STR43 : ( STR44 , ) } , STR45 : { STR46 : ( STR47 , ) } , STR48 : { } , STR49 : { STR50 : STR51 } , STR52 : { STR53 : STR54 } , STR55 : { STR56 : STR57 , STR58 : ( STR59 , ) } , STR60 : { STR61 : STR62 } , STR63 : { STR64 : STR65 , STR66 : ( STR67 , ) } , STR68 : { STR69 : STR70 , STR71 : ( STR72 , ) } , STR73 : { STR74 : ( STR75 , ) } , STR76 : { STR77 : STR78 , STR79 : ( STR80 , ) } , STR81 : { STR82 : STR83 , STR84 : ( STR85 , ) } , } , LIGHT_PALETTE : { STR86 : { STR87 : STR88 , STR89 : ( STR90 , ) } , STR91 : { STR92 : STR93 , STR94 : ( STR95 , ) } , STR96 : { STR97 : STR98 } , STR99 : { STR100 : STR101 , STR102 : ( STR103 , ) } , STR104 : { STR105 : STR106 } , STR107 : { STR108 : STR109 } , STR110 : { STR111 : ( STR112 , ) } , STR113 : { STR114 : ( STR115 , ) } , STR116 : { } , STR117 : { STR118 : STR119 , STR120 : ( STR121 , ) } , STR122 : { STR123 : STR124 } , STR125 : { STR126 : STR127 , STR128 : ( STR129 , ) } , STR130 : { STR131 : STR132 } , STR133 : { STR134 : STR135 , STR136 : ( STR137 , ) } , STR138 : { STR139 : STR140 , STR141 : ( STR142 , ) } , STR143 : { STR144 : ( STR145 , ) } , STR146 : { STR147 : STR148 , STR149 : ( STR150 , ) } , STR151 : { STR152 : STR153 , STR154 : ( STR155 , ) } , } }
10164	for every key and value in parse_gsl with query_string is it exists or an empty string if not and keep_blank_values set to boolean True .	for key , value in parse_qsl ( query_string or STR , keep_blank_values = True ) :
7241	if error_message is not None ,	if error_message is not None :
7315	if data has an attribute STR0 ,	if hasattr ( data , STR0 ) :
13292	return string STR0 , replace STR1 with self.if and STR2 with self.value .	return STR0 % ( self . id , self . value )
5097	substitute e for message .	message = e
7290	if data is boolean False ,	if data is False :
2649	substitute ending for self.ending .	self . ending = ending
9316	if option_value is None ,	if option_value is None :
10772	define the method enter_command with 3 arguments : self , command and token .	def enter_command ( self , command , token ) :
1516	define the method close with argument self .	def close ( self ) :
18724	define the method utcoffset with 2 arguments self and dt .	def utcoffset ( self , dt ) :
6648	EMPTY_VALUES is a tuple containing 5 initial elements : None , empty string , empty list , empty tuple and an empty dictionary .	EMPTY_VALUES = ( None , STR , [ ] , ( ) , { } )
11475	for every path in collect ,	for path in collect :
9094	get the attribute STR0 of the cls object , if it exists substitute it for definition , if not definition is None .	definition = getattr ( cls , STR0 , None )
16110	derive the class HTMLParser from the base class HTMLParser located in the module _html_parser .	class HTMLParser ( _html_parser . HTMLParser ) :
2720	if STR0 is contained in options ,	if STR0 in options :
5162	if not ,	else :
12386	call the function sys.exc_info with an argument exc_info .	exc_info = sys . exc_info ( )
2406	call the method self._create_mime_attachment with the arguments content and mimetype , substitute the result for attachment .	attachment = self . _create_mime_attachment ( content , mimetype )
9185	call the method __init__ from the base class of the class PasswordInput , called with an argument attrs .	super ( PasswordInput , self ) . __init__ ( attrs )
15448	if value under the STR0 key of the item dictionary is not None ,	if item [ STR0 ] is not None :
10254	get is a tuple containing elements generated by the call to the function pformat with an argument META_override , if META_override is not None , or otherwise generated with the call to the function pformat with an argument request.META .	meta = ( pformat ( META_override ) if META_override is not None else pformat ( request . META ) )
4434	call the method self.get_handler with 2 arguments unpacked list args and unpacked dictionary options , substitute the result for handler .	handler = self . get_handler ( * args , ** options )
5794	call the method self.xml.endElement with an argument string STR0 .	self . xml . endElement ( STR0 )
16605	from threading import RLock .	from threading import RLock
12107	define the method render with 2 arguments : self and context .	def render ( self , context ) :
10415	for every closable in self._closable_objects ,	for closable in self . _closable_objects :
3137	if LookupError exception is caught ,	except LookupError :
11757	decorator stringfilter ,	@ stringfilter
7558	call the __init__ method of the base class of the class FilePathField , with arguments : choices set to an empty tuple,4 required set to required , widget set to widget , label set to label , initial st to initial , help_text set to help_text , unpacked list args , unpacked dictionary kwargs .	super ( FilePathField , self ) . __init__ ( choices = ( ) , required = required , widget = widget , label = label , initial = initial , help_text = help_text , * args , ** kwargs )
12833	raise an TemplateDoesNotExist exception with an argument string STR0 .	raise TemplateDoesNotExist ( STR0 )
17545	call the method self.writer_enters .	self . writer_enters ( )
12843	from collections import defaultdict into default name space .	from collections import defaultdict
3839	call the function check_programs with 3 arguments : strings STR0 , STR1 and STR2 .	check_programs ( STR0 , STR1 , STR2 )
878	from django.utils import six into default name space .	from django . utils import six
3300	call the function call_command with 3 arguments : string STR0 , string STR1 and unpacked dictionary options .	call_command ( STR0 , STR1 , ** options )
2086	finally perform ,	finally :
10256	meta is a string STR0 .	meta = STR0
14557	if las equals integer 2 ,	if last == 2 :
18056	substitute gettext_noop for ugettext_noop .	ugettext_noop = gettext_noop
1298	substitute content.name for name .	name = content . name
17289	_func_closure is a string STR0 .	_func_closure = STR0
14423	from django.utils.dates import MONTHS , MONTHS_3 , MONTHS_ALT , MONTHS_AP , WEEKDAYS and WEEKDAYS_ABBR into default name space .	from django . utils . dates import MONTHS , MONTHS_3 , MONTHS_ALT , MONTHS_AP , WEEKDAYS , WEEKDAYS_ABBR
2950	call function update with path as the argument , for every path in settings.LOCALE_PATHS , extend basedirs list with previous items .	basedirs . extend ( [ upath ( path ) for path in settings . LOCALE_PATHS ] )
4763	call the function import_module with an argument app_name .	import_module ( app_name )
8757	if length of fks_to_parent is integer 1 ,	if len ( fks_to_parent ) == 1 :
7633	define the method clean with arguments self and value .	def clean ( self , value ) :
6240	from django.http import Http404 into default name space .	from django . http import Http404
18205	from django.utils._os import upath into default name space .	from django . utils . _os import upath
17944	call the method _isdst with an argument dt from the base class of the class LocalTimezone , return the result .	return super ( LocalTimezone , self ) . _isdst ( dt )
1167	if not ,	else :
18360	get STR0 attribute of the _active object , if it exists substitute it for t , if not t is None .	t = getattr ( _active , STR0 , None )
4929	call the method connection.creation.sql_for_pending_references with 3 arguments : refo , style and pending_references , use the result as an argument for the call to the method final_output.extend .	final_output . extend ( connection . creation . sql_for_pending_references ( model , style , pending_references ) )
18617	if last element of pieces is true ,	if pieces [ - 1 ] :
15731	set k attribute of cls object to meth .	setattr ( cls , k , meth )
18018	define the function is_aware with an argument value .	def is_aware ( value ) :
9470	derive the class CheckboxSelectMultiple from the RendererMixin and SelectMultiple base classes .	class CheckboxSelectMultiple ( RendererMixin , SelectMultiple ) :
8424	append f.name to exclude .	exclude . append ( f . name )
17769	self.vals is an empty list .	self . vals = [ ]
13487	define the method list with an argument self .	def list ( self ) :
6949	return select_html .	return select_html
5905	substitute obj_pk.pk for obj_pk .	obj_pk = obj_pk . pk
18254	call the method self._add_fallback .	self . _add_fallback ( )
11090	return self.s .	return self . s
4241	if self.verbosity is greater or equal than integer 1 ,	if self . verbosity >= 1 :
17210	call the function _import_module with an argument self.mod , substitute the result for module .	module = _import_module ( self . mod )
15298	substitute smart_text for smart_unicode .	smart_unicode = smart_text
4009	loader is an instance of MigrationLoader class , created with 2 arguments : None and ignore_no_migrations set to boolean True .	loader = MigrationLoader ( None , ignore_no_migrations = True )
2356	call the method self.get_connection with argument fail_silently , on the result call the method send_messages with one argument : list containing self , return the result .	return self . get_connection ( fail_silently ) . send_messages ( [ self ] )
11574	import module re .	import re
10893	if constant is true ,	if constant :
14515	year_days is a list with 13 elements : None , integer 0 , integer 31 , integer 59 , integer 90 , integer 120 , integer 151 , integer 181 , integer 212 , integer 243 , integer 273 , integer 304 and integer 334 .	year_days = [ None , 0 , 31 , 59 , 90 , 120 , 151 , 181 , 212 , 243 , 273 , 304 , 334 ]
15048	if StandardError , renamed to e , exception is caught ,	except StandardError as e :
2052	get STR0 from the settings , if it exists , substitute it for self.file_path , if not substitute None for self.file_path .	self . file_path = getattr ( settings , STR0 , None )
6405	if pattern has an attribute STR0 ,	if hasattr ( pattern , STR0 ) :
10318	get the value under the self.status_code key of the REASON_PHRASES dictionary , if it exists substitute it for the self.reason_phrase , if not , self.reason_phrase is a string STR0 .	self . reason_phrase = REASON_PHRASES . get ( self . status_code , STR0 )
2110	define the method __init__ with arguments : self , host set to None , port set to None , username set to None , password set to None , use_tls set to None , fail_silently set to False , use_ssl set to None , timeout set to None and unpacked dictionary kwargs .	def __init__ ( self , host = None , port = None , username = None , password = None , use_tls = None , fail_silently = False , use_ssl = None , timeout = None , ** kwargs ) :
11173	if unhandled_params is true ,	if unhandled_params :
9453	call the method self.get_renderer with 4 arguments : name , value , attrs and choices , for every widget in result ,	for widget in self . get_renderer ( name , value , attrs , choices ) :
3468	if sixth element of row is not None , substitute it for value under the STR0 key of the field_params , otherwise , value under the STR1 key of the field_params is integer 5 .	field_params [ STR0 ] = row [ 5 ] if row [ 5 ] is not None else 5
12850	BLOCK_CONTEXT_KEY is a strign STR0 .	BLOCK_CONTEXT_KEY = STR0
15620	do nothing .	pass
6782	decorator deconstructible ,	@ deconstructible
6412	join callback.__module__ , character STR0 and callback.__class__.__name__ together , substitute the result for lookup_str .	lookup_str = callback . __module__ + STR0 + callback . __class__ . __name__
11196	if name is None and compile_function is None ,	if name is None and compile_function is None :
10041	call the method self.get_full_path , append the result to string STR0 , substitute it for location .	location = STR0 % self . get_full_path ( )
12099	substitute self.setting for context.autoescape .	context . autoescape = self . setting
1588	call the __init__ method from the base class of the TemporaryFileUploadHandler class with arguments : unpacked list args , and unpacked dictionary kwargs .	super ( TemporaryFileUploadHandler , self ) . __init__ ( * args , ** kwargs )
5315	define the method validate_number with self class instance and number as arguments .	def validate_number ( self , number ) :
11785	decorator stringfilter ,	@ stringfilter
858	if tags is not None .	if tags is not None :
593	call the params.get function with string STR0 and None as arguments , substitute the result for self._options .	self . _options = params . get ( STR0 , None )
6161	define the function b64_encode with an argument s .	def b64_encode ( s ) :
9289	if value is boolean False or boolean True or value is None or value is an empty string , do not perform the following ,	if not ( value is True or value is False or value is None or value == STR ) :
18546	filemsg is a string STR0 , where STR1 is replaced with origin .	filemsg = STR0 % origin
13031	if UnicodeDecodeError exception is caught ,	except UnicodeDecodeError :
4583	call the parser.add_argument method with the string STR1 , default set to DEFAULT_DB_ALIAS and help containig string , STR2 as the arguments .	parser . add_argument ( STR1 , default = DEFAULT_DB_ALIAS , help = STR2 )
18723	return a tuple with an element self.__dt .	return self . __dt ,
16757	try ,	try :
10227	output is an empty list .	output = [ ]
16560	call the method logging.Handler.__init__ with an argument self .	logging . Handler . __init__ ( self )
14886	if type of result is ConvertingDict , ConvertingList or ConvertingTuple ,	if type ( result ) in ( ConvertingDict , ConvertingList , ConvertingTuple ) :
350	define the method delete_many with 3 arguments : self , keys , and version set to None .	def delete_many ( self , keys , version = None ) :
4662	call method self.stdout.write with statement as an argument .	self . stdout . write ( statement )
16	call the function signals.request_finished.connect with argument cache.close .	signals . request_finished . connect ( cache . close )
2579	call the method parser.add_argument with arguments : string STR0 and nargs set to STR1 .	parser . add_argument ( STR0 , nargs = STR1 )
2036	from django.core.mail.backends.base import BaseEmailBackend into default name space .	from django . core . mail . backends . base import BaseEmailBackend
12446	call the method context.push with an argument unpacked dictionary values , with the result as an argument ,	with context . push ( ** values ) :
4536	define the method handle_app_config with 3 arguments : self , app_config and unpacked dictionary options .	def handle_app_config ( self , app_config , ** options ) :
8542	call the method _construct_form from the base class of the class BaseModelFormSet , with 2 arguments : i and unpacked dictionary kwargs .	return super ( BaseModelFormSet , self ) . _construct_form ( i , ** kwargs )
8362	get STR0 attribute from the options object , if it exists substitute it for self.labels , if not self.labels is None .	self . labels = getattr ( options , STR0 , None )
13937	if not ,	else :
7207	if value is an instance of datetime.time ,	if isinstance ( value , datetime . time ) :
1887	evaluate the http.QueryDict method with raw_query_string and encoding set to self._encoding as arguments , return the result .	return http . QueryDict ( raw_query_string , encoding = self . _encoding )
96	call the params.get method with string STR0 and integer 300 as arguments , use the string STR1 and previous result as the arguments for the call to the params.get method , substitute the result for timeout .	timeout = params . get ( STR0 , params . get ( STR1 , 300 ) )
9464	if id_ is true ,	if id_ :
1910	with self.initLock ,	with self . initLock :
17608	import module re .	import re
17558	if text is an empty string and length of opts equals integer 1 and first element of opts equals string STR0 ,	if text == STR and len ( opts ) == 1 and opts [ 0 ] == STR0 :
16385	append an empty string to list hextets .	hextets += [ STR ]
16114	define method set_cdata_mode , with self class instance and tag as the arguments .	def set_cdata_mode ( self , tag ) :
2334	msg is a instance of a SafeMIMEText class created with arguments : self.body , self.content_subtype and encoding .	msg = SafeMIMEText ( self . body , self . content_subtype , encoding )
10519	serialize data to JSON format with cls set to encoder , substitute it for data .	data = json . dumps ( data , cls = encoder )
6270	append list containing view_path to self.namespaces list , join all the elements into a string separated by character STR0 , substitute it for self.view_name .	self . view_name = STR0 . join ( self . namespaces + [ view_path ] )
17716	skip this loop iteration .	continue
14342	substitute _iteritems for items .	items = _iteritems
2085	call the self.stream.close function .	self . stream . close ( )
783	otherwise if self.object is an instance of the models.base.ModelBase class ,	elif isinstance ( self . obj , models . base . ModelBase ) :
6512	call the function force_text with an argument v , for every v in args , put the results in a text_args list .	text_args = [ force_text ( v ) for v in args ]
11726	decorator stringfilter ,	@ stringfilter
11456	return other_dict .	return other_dict
11620	define the function floatformat with 2 arguments text and arg set to integer -1 .	def floatformat ( text , arg = - 1 ) :
10919	if self.var is an instance of Variable class ,	if isinstance ( self . var , Variable ) :
9102	for every medium in extend ,	for medium in extend :
8142	call the method self._ordering.sort with an argument key as compare_ordering_key .	self . _ordering . sort ( key = compare_ordering_key )
4028	if changes is false and self.verbosity is greater than , or equal to iteger 1 ,	if not changes and self . verbosity >= 1 :
11058	nodes is an empty list .	nodes = [ ]
10232	encode is an lambda function with 2 arguments k and v , return value is the result of the function urlencode , called with an argument : dictionary containing element v for k .	encode = lambda k , v : urlencode ( { k : v } )
18118	if not ,	else :
2111	call the __init__ method from the base class of the EmailBackend class with argument fail_silently set to fail_silently .	super ( EmailBackend , self ) . __init__ ( fail_silently = fail_silently )
13170	self._is_rendered is boolean False .	self . _is_rendered = False
5826	call the function smart_text with argument key_value , use the result as an argument for the call to the self.xml.characters method .	self . xml . characters ( smart_text ( key_value ) )
2798	if any element in the return value of the e.is_serious method is true , and if return value of the method e.is_silenced is false , for every e in all_issues .	if any ( e . is_serious ( ) and not e . is_silenced ( ) for e in all_issues ) :
3972	import module sys .	import sys
15389	raise an NotImplementedError with an argument string STR0 .	raise NotImplementedError ( STR0 )
10628	for every node in self.nodelist ,	for node in self . nodelist :
7918	widget.is_localized is boolean True .	widget . is_localized = True
16308	if p2.scheme , p2.hostname and p2.port equals p1.scheme , p1.hostname and p1.port , respectively , return boolean True , otherwise return boolean False .	return ( p1 . scheme , p1 . hostname , p1 . port ) == ( p2 . scheme , p2 . hostname , p2 . port )
6372	property decorator ,	@ property
6519	call the function get_callable with arguments lookup_view and boolean True , substitute the result for lookup_view .	lookup_view = get_callable ( lookup_view , True )
2762	call the method connection.ops.start_transaction_sql , use the result as an argument for the call to the method self.style.SQL_KEYWORD , write the result to the self.stdout stream .	self . stdout . write ( self . style . SQL_KEYWORD ( connection . ops . start_transaction_sql ( ) ) )
7080	if min_value is not None ,	if min_value is not None :
18085	substitute rhs for number_value .	number_value = rhs
15153	if not ,	else :
3205	if show_traceback is true ,	if show_traceback :
7981	join elements of extra_classes into a string separated by whitespaces , return it .	return STR . join ( extra_classes )
8548	call the method self.model._default_manager.get_queryset with an argument qs .	qs = self . model . _default_manager . get_queryset ( )
6851	otherwise if cahr equals a string '\STR ,	elif char == STRspecial :
14525	return the value under the self.data.month key of the MONTHS_ALT dictionary .	return MONTHS_ALT [ self . data . month ]
7966	if not ,	else :
2571	define the method execute with an argument self ,	def execute ( self ) :
13850	do nothing .	pass
12222	if not ,	else :
10138	call the method self._stream.readline with 2 arguments : unpacked list args , unpacked dictionary kwargs .	return self . _stream . readline ( * args , ** kwargs )
16986	ch is None .	ch = None
16315	if url starts with STR0 ,	if url . startswith ( STR0 ) :
6401	namespaces is an empty dictionary .	namespaces = { }
7319	try ,	try :
18147	try ,	try :
2474	join app_config.path and string STR0 into a file path , substitute it for path .	path = os . path . join ( app_config . path , STR0 )
12737	raise an TemplateSyntaxError exception with an argument string STR0 , where STR1 is replaced with , first element of bits and first element of remaining_bits .	raise TemplateSyntaxError ( STR0 % ( bits [ 0 ] , remaining_bits [ 0 ] ) )
17441	derive the class metaclass form the meta base class .	class metaclass ( meta ) :
1863	try ,	try :
12793	if not ,	else :
17155	call the method self._resolve , substitute the result for result .	result = self . _resolve ( )
11664	define the function iriencode with an argument value .	def iriencode ( value ) :
10834	substitute i for self.pointer .	self . pointer = i
7923	substitute auto_id for value under the STR0 key of the attrs dictionary .	attrs [ STR0 ] = auto_id
11066	derive the class NodeList form the base class list .	class NodeList ( list ) :
2772	if not ,	else :
15904	define the function partition with 2 arguments : predicate and values .	def partition ( predicate , values ) :
3378	if second element of the i-th row of relations equals table_name , rel_to is string STR0 , otherwise call the method table2model with second element of the i-th row of relations and substitute it for rel_to .	rel_to = STR0 if relations [ i ] [ 1 ] == table_name else table2model ( relations [ i ] [ 1 ] )
18170	get_language is a lambda function returning settings.LANGUAGE_CODE .	get_language = lambda : settings . LANGUAGE_CODE
12647	try ,	try :
3452	field_params is an instance of a class OrderedDict .	field_params = OrderedDict ( )
3560	call the method serializers.deserialize with 4 arguments : ser_fmt , fixture , using set to self.using , and ignorenonexistent set to self.ignore , substitute the result for objects .	objects = serializers . deserialize ( ser_fmt , fixture , using = self . using , ignorenonexistent = self . ignore )
5947	call the method self.setFeature with 2 arguments : handler.feature_external_ges and boolean False .	self . setFeature ( handler . feature_external_ges , False )
18512	substitute STR0 in string STR1 with result of the function join_tokens , called with 2 arguments : singular , and trimmed , write the result to out .	out . write ( STR0 % join_tokens ( singular , trimmed ) )
2376	msg is an instance of a class SafeMIMEMultipart , created with arguments : _subtype set to self.mixed_subtype and encoding set to encoding .	msg = SafeMIMEMultipart ( _subtype = self . mixed_subtype , encoding = encoding )
2637	raise an CommandError exception with an argument string STR0 , with STR1 replaced by message .	raise CommandError ( STR0 % message )
5230	take last four elements of base and append ext to it , substitute result for ext .	ext = base [ - 4 : ] + ext
15663	if settings.USE_L10N is true and value is an instance of six.string_types ,	if settings . USE_L10N and isinstance ( value , six . string_types ) :
14406	substitute func for self.func .	self . func = func
5004	split content by newline character , for every line in result ,	for line in content . split ( STR0 ) :
15480	ns is a string STR0 .	ns = STR0
1523	define the method __init__ with 8 arguments : self , file , field_name , name , content_type , size , charset and content_type_extra set to None .	def __init__ ( self , file , field_name , name , content_type , size , charset , content_type_extra = None ) :
16174	slice the rawdata to obtain substring from i-th to j-th element , use it as the argument for the method call to the self.handle_data .	self . handle_data ( rawdata [ i : j ] )
7785	substitute error.error_dict for error .	error = error . error_dict
3119	get the value under the STR0 key of the options dictionary , substitute the result for use_base_manager .	use_base_manager = options . get ( STR0 )
3186	if model._meta.proxy is false and return value of the function router.allow_migrate called with arguments using and model is true ,	if not model . _meta . proxy and router . allow_migrate ( using , model ) :
4607	from django.core.management.base import BaseCommand into default name space .	from django . core . management . base import BaseCommand
5209	split the_path at the STR0 character , substitute last element of the result for used_name .	used_name = the_path . split ( STR0 ) [ - 1 ]
9141	property decorator ,	@ property
4881	define the method handle with self class instance , list of arguments fixture_labels and dictionary options as arguments .	def handle ( self , * fixture_labels , ** options ) :
8772	substitute fk for FormSet.fk .	FormSet . fk = fk
12070	decorator function register.filter with an argument is_safe set to boolean True .	@ register . filter ( is_safe = True )
1469	define __enter__ method with self as the argument .	def __enter__ ( self ) :
2925	define the function is_writable with path as argument ,	def is_writable ( path ) :
6553	substitute lookup_view for lookup_view_s .	lookup_view_s = lookup_view
4453	call the method self.style.NOTICE with an argument string STR0 , write it to self.stdout .	self . stdout . write ( self . style . NOTICE ( STR0 ) )
16999	if source is None ,	if source is None :
6951	import module copy .	import copy
2242	nm and addr are addr .	nm , addr = addr
13839	replace all occurrences of symbol STR0 in string k with symbol STR1 , use new string as key to find a value in dictionary cc , replace this value with v .	cc [ k . replace ( STR0 , STR1 ) ] = v
14052	define the function become_daemon with 4 arguments : our_home_dir set to STR0 , out_log set to a string STR1 ,	def become_daemon ( our_home_dir = STR0 , out_log = STR1 , err_log = STR2 , umask = 022 ) :
9117	derive the class SubWidget from the object base class .	class SubWidget ( object ) :
1290	from django.utils._os import safe_join and abspathu into default name space .	from django . utils . _os import safe_join , abspathu
16713	import module warnings .	import warnings
10132	call the method self._stream.read with 2 arguments : unpacked list args and unpacked dictionary kwargs .	return self . _stream . read ( * args , ** kwargs )
7532	try ,	try :
7273	return None .	return None
14364	call the method self.setlistdefault with an argument key , extend the result with value_list .	self . setlistdefault ( key ) . extend ( value_list )
17193	call the method __init__ with an argument name form the base class of the class MovedAttribute .	super ( MovedAttribute , self ) . __init__ ( name )
11883	define the function convert_old_style_list with an argument list_ .	def convert_old_style_list ( list_ ) :
2696	call the method parser.add_option with an argument opt .	parser . add_option ( opt )
4024	call the method autodetector.arrange_for_graph with 2 arguments : changes , loader.graph , substitute the result for changes .	changes = autodetector . arrange_for_graph ( changes , loader . graph )
3714	call the function io.open with 3 arguments : work_file , string STR0 and encoding set to settings.FILE_CHARSET as arguments ,	with io . open ( orig_file , STR0 , encoding = settings . FILE_CHARSET ) as fp :
2777	msg is an empty string .	msg = STR
4656	if KeyError exception is raised ,	except KeyError :
6601	if KeyError , renamed to key , exception is caught ,	except KeyError as key :
1750	if exception SuspiciousOperation as e is caught ,	except SuspiciousOperation as e :
4184	convert the first element of the first row of targets to string , append it to the string STR0 , use the it as an argument for the call to the self.style.MIGRATE_LABEL method , use the result to cal the self.stdout.write method .	self . stdout . write ( self . style . MIGRATE_LABEL ( STR0 ) + STR1 % ( targets [ 0 ] [ 0 ] , ) )
14588	if not ,	else :
8036	self._errors is None .	self . _errors = None
14213	for every key in self.keyOrder ,	for key in self . keyOrder :
1941	call the get_bytes_from_wsgi function with environ , string STR0 and empty strings as arguments , substitute the result for script_url .	script_url = get_bytes_from_wsgi ( environ , STR0 , STR )
15260	raise an exception DjingoUnicodeDecodeError , with s and list of arguments *args from object e , as the arguments .	raise DjangoUnicodeDecodeError ( s , * e . args )
11682	decorator function register.filter with an argument is_safe set to boolean False .	@ register . filter ( is_safe = False )
65	define the method __eq__ with self and other as arguments .	def __eq__ ( self , other ) :
6695	if value is true ,	if value :
3807	evaluate the boolean expression : locale is None and exclude is false and process_all is false ,	if ( locale is None and not exclude and not process_all ) or self . domain is None :
7572	if self.allow_folders is true ,	if self . allow_folders :
2870	if not ,	else :
107	if ValueError or TypeError exceptions occurred ,	except ( ValueError , TypeError ) :
12362	define the method render with 2 arguments : self and context .	def render ( self , context ) :
10083	raise an AttributeError exception with an argument string STR0 .	raise AttributeError ( STR0 )
3305	all_models is an empty list .	all_models = [ ]
816	import module types .	import types
3194	for every obj in result of the method queryset.iterator ,	for obj in queryset . iterator ( ) :
2083	try ,	try :
12443	return a string STR0	return STR0
1358	if not ,	else :
10036	if not ,	else :
531	define the method has_key with self class instance , key and version defaulting to None as arguments .	def has_key ( self , key , version = None ) :
14636	if tzinfo equals a string STR0 ,	if tzinfo == STR0 :
3287	confirm is a string STR0 .	confirm = STR0
6198	call the serializer function , call the loads method on the return value with an argument data , return the result .	return serializer ( ) . loads ( data )
172	if version is None ,	if version is None :
17870	use the remainder of the division of name by count as the argument for the call to the avoid_wrapping function , store the result in result .	result = avoid_wrapping ( name % count )
15305	if path is not initialized ,	if path is None :
6528	for every result and params in possibility ,	for result , params in possibility :
8125	property decorator ,	@ property
12683	substitute second element of bits for tag .	tag = bits [ 1 ]
17872	get the element of chunks at the ( i+1 ) -the index , assign it to the seconds2 and name2 , respectively .	seconds2 , name2 = chunks [ i + 1 ]
580	from django.utils.encoding import force_str into default name space .	from django . utils . encoding import force_str
1186	_fields_ is a list containing 2 tuples : first tuple contains : string STR0 and DWORD , second contains : string STR1 and DWORD .	_fields_ = [ ( STR0 , DWORD ) , ( STR1 , DWORD ) ]
2912	raise an CommandError exception with an argument string STR1 , where STR2 is replaced with invalid_tag .	raise CommandError ( STR1 % invalid_tag )
1930	convert STR0 to a string and convert the return value of method c.output ( header= STR ) call to a string , format the previous in a tuple , append the tuple to the response_headers .	response_headers . append ( ( str ( STR0 ) , str ( c . output ( header = STR ) ) ) )
581	from django.utils.functional import cached_property into default name space .	from django . utils . functional import cached_property
12640	otherwise if name is contained in lib.filters ,	elif name in lib . filters :
1977	if html_message is true ,	if html_message :
9191	derive the class HiddenInput from the Input base class .	class HiddenInput ( Input ) :
17673	call the function allow_lazy with an argument chars , substitute the result for chars .	chars = allow_lazy ( chars )
38	derive the class CacheHandler from the object base class .	class CacheHandler ( object ) :
14818	define the method __new__ with 4 arguments : cls , name , bases and attrs .	def __new__ ( cls , name , bases , attrs ) :
9284	substitute boolean_check for self.check_test if check_test is None , otherwise substitute check_test for self.check_test .	self . check_test = boolean_check if check_test is None else check_test
5411	if serializers is None ,	if serializers is None :
15794	return __wrapper__ .	return __wrapper__
1705	breaks from the smallest enclosing loop execution .	break
14402	substitute complain for reverse .	reverse = complain
12661	define the function regroup with 2 arguments : parser and token .	def regroup ( parser , token ) :
9426	output is an empty list .	output = [ ]
10597	substitute msg for self.msg .	self . msg = msg
69	call the DefaultCacheProxy function , substitute it for cache .	cache = DefaultCacheProxy ( )
11487	updates is an empty dictionary .	updates = dict ( )
17744	call the function re.sub with 3 arguments : raw string STR0 , an empty string and s , return the result .	return re . sub ( STR0 , STR , s )
856	define the method run_checks with self class instance , app_configs defaulting to None , tags defaulting to None as argument .	def run_checks ( self , app_configs = None , tags = None ) :
11306	substitute csrf_token for value under the STR0 key of new_context dictionary .	new_context [ STR0 ] = csrf_token
12363	from django.utils.html import strip_spaces_between_tags .	from django . utils . html import strip_spaces_between_tags
10500	status_code is an integer 404 .	status_code = 404
2525	call settings.INSTALLED_APPS .	settings . INSTALLED_APPS
1923	call the http.HttpResponseBadRequest function , assign the result to the response .	response = http . HttpResponseBadRequest ( )
10803	define the function find_filter with 2 arguments : self and filter_name .	def find_filter ( self , filter_name ) :
1715	call the middleware_method with request , callback , callback_args and callback_kwargs as the arguments , substitute the result for response .	response = middleware_method ( request , callback , callback_args , callback_kwargs )
7684	if value is None and attr is contained in declared_fields ,	if value is None and attr in declared_fields :
13555	try ,	try :
5528	derive the class DeserializedObject from the object base class .	class DeserializedObject ( object ) :
13140	if UnicodeDecodeError exception is caught ,	except UnicodeDecodeError :
16447	split first element of hextet into parts by STR0 , append them to new_ip .	new_ip = hextet [ 0 ] . split ( STR0 )
405	call the function file_move_safe with tmp_path , fname , allow_overwrite set to boolean True as arguments .	file_move_safe ( tmp_path , fname , allow_overwrite = True )
9561	if encoded contains string STR0 and if encoded doesnt start with the double quote symbol ,	if STR0 in encoded and not encoded . startswith ( STR ) :
17620	if six.PY2 is true ,	if six . PY2 :
13409	join tmpdir and sting STR0 into a file path name , substitute it for original_path .	original_path = os . path . join ( tmpdir , STR0 )
14619	call the method match.groupdict , use the result as an argument for the call to the function six.iteritems , for every k and v in the previous result , add a key into a dictionary : v converted to an integer for k , substitute the resulting dictionary for kw .	kw = dict ( ( k , int ( v ) ) for k , v in six . iteritems ( match . groupdict ( ) ) )
4635	from django.core.management.base import BaseCommand and CommandError into default name space .	from django . core . management . base import BaseCommand , CommandError
9961	import module os .	import os
3515	define the method loaddata with 2 arguments self and fixture_labels .	def loaddata ( self , fixture_labels ) :
588	split server with STR0 as delimiter , substitute the result for self._servers .	self . _servers = server . split ( STR0 )
17563	otherwise if k equals a string STR0 ,	elif k == STR0 :
1987	derive the class BaseEmailBackend from the object base class .	class BaseEmailBackend ( object ) :
13396	if return value of the function normcase called with an argument final_path doesnt starts with result of the function normcase , called with sep appended to base_path as an argument and results of the function normcase called twice with final_path , and base_pah are not equal and directory name of the result of the function normcase called with an argument base_path , if not equal to the result of the function normcase called with an argument base_path .	if ( not normcase ( final_path ) . startswith ( normcase ( base_path + sep ) ) and normcase ( final_path ) != normcase ( base_path ) and dirname ( normcase ( base_path ) ) != normcase ( base_path ) ) :
13723	call the function thread.start_new_thread with main_func , args and kwargs as arguments .	thread . start_new_thread ( main_func , args , kwargs )
1995	call the method self.open .	self . open ( )
3419	substitute new_name , without the last 3 elements for new_name .	new_name = new_name [ : - 3 ]
17252	set attr.name attribute of Module_six_moves_urllib_robotparser object to attr .	setattr ( Module_six_moves_urllib_robotparser , attr . name , attr )
6916	for every first_select in return value of the function _parse_date_fmt .	for first_select in _parse_date_fmt ( ) :
6464	tried is an empty list .	tried = [ ]
16860	try ,	try :
10359	if KeyError exception is caught ,	except KeyError :
9670	if transfer_encoding is not None ,	if transfer_encoding is not None :
16903	if ch is not equal to string STR0 or string STR1 ,	if ch not in ( STR0 , STR1 ) :
3770	call the method parser.add_argument with 7 arguments : string STR0 , string STR1 , action as a string STR2 , dest as a string STR3 , default as an empty list , metavar as a string STR4 , and help as a string STR5 .	parser . add_argument ( STR0 , STR1 , action = STR2 , dest = STR3 , default = [ ] , metavar = STR4 , help = STR5 )
17057	substitute EscapeText for EscapeUnicode .	EscapeUnicode = EscapeText
17532	if self.waiting_writers is not equal to integer 0 ,	if self . waiting_writers != 0 :
13255	call the method parser.expression with an argument bp , substitute it for self.seconds .	self . second = parser . expression ( bp )
8017	DEFAULT_MIN_NUM is an integer 0 .	DEFAULT_MIN_NUM = 0
17880	from threading import local into default name space .	from threading import local
8158	define the method _should_delete_form with an argument self .	def _should_delete_form ( self , form ) :
7560	self.choices is an empty list .	self . choices = [ ]
7313	substitute the result of the function data.temporary_file_path for file .	file = data . temporary_file_path ( )
6333	define the method regex with an argument self .	def regex ( self ) :
11829	define the function first with an argument value .	def first ( value ) :
8686	substitute model for FormSet.model .	FormSet . model = model
15813	self._wrapped .	return inner
17579	if config_string is false ,	if not config_string :
1069	break from the smallest enclosing loop .	break
15990	join elements of self.fed into a string , return the result .	return STR . join ( self . fed )
7144	if value is not equal to value or value equals return value of the call to Decimal with argument STR0 ,	if value != value or value == Decimal ( STR0 ) or value == Decimal ( STR1 ) :
10280	return boolean True .	return True
2656	if f is not None append it to a list for every f in tuple containing 3 elements : style_func , self.style_func , and lambda function returning x for x , substitute the firs element of resulting list for style_func .	style_func = [ f for f in ( style_func , self . style_func , lambda x : x ) if f is not None ] [ 0 ]
4700	if app_label is not contained in executor.loader.migrated_apps ,	if app_label not in executor . loader . migrated_apps :
3923	call the function popen_wrapper with an argument args , assign the result to msgs , errors and status .	msgs , errors , status = popen_wrapper ( args )
7401	define the method validate with arguments self and value .	def validate ( self , value ) :
823	decorator register with Tags.models and Tags.signals as arguments .	@ register ( Tags . models , Tags . signals )
10259	define the function bytes_to_text with 2 arguments s and encoding .	def bytes_to_text ( s , encoding ) :
16019	call the function allow_lazy with 2 arguments : remove_tags , six.text_type , substitute the result for remove_tags .	remove_tags = allow_lazy ( remove_tags , six . text_type )
17784	for every item in sequence ,	for item in sequence :
14865	call the method dict.__getitem__ with 2 arguments self and key , substitute the result for value .	value = dict . __getitem__ ( self , key )
9427	for every i and choice in enumerated iterable self.choices ,	for i , choice in enumerate ( self . choices ) :
8625	substitute self.deleted_forms for forms_to_delete .	forms_to_delete = self . deleted_forms
12777	if loader is an instance of tuple or list ,	if isinstance ( loader , ( tuple , list ) ) :
12537	call the method parser.next_token , substitute the result for token .	token = parser . next_token ( )
17023	append param to i-th element of result_args .	result_args [ i ] . append ( param )
6957	from decimal import Decimal and DecimalException into default name space .	from decimal import Decimal , DecimalException
7396	choices is an property object of this class where _get_choices is a getter and _set_choices is a setter function .	choices = property ( _get_choices , _set_choices )
6595	if KeyError exception is caught ,	except KeyError :
14146	substitute _iterkeys for iterkeys .	iterkeys = _iterkeys
2686	define the method create_parser with 3 arguments : self , prog_name and subcommand .	def create_parser ( self , prog_name , subcommand ) :
7664	if not ,	else :
7498	if STR0 key of the f.error_messages doesnt exists , assign it the value under the STR1 key of the self.error_messages dictionary .	f . error_messages . setdefault ( STR0 , self . error_messages [ STR1 ] )
6901	call the method RE_DATE.match with an argument value , substitute the result for match .	match = RE_DATE . match ( value )
3404	in string STR0 replace STR1 with k and return value of the function strip_prefix with an argument printable representation of v , for every k and v in return value of the extra_params.items method , join all results into a string separated by a string STR2 , substitute it for field_desc .	field_desc += STR0 . join ( [ STR1 % ( k , strip_prefix ( repr ( v ) ) ) for k , v in extra_params . items ( ) ] )
14718	obj._constructor_args is a tuple with 2 elements : args and kwargs .	obj . _constructor_args = ( args , kwargs )
4002	call the method apps.get_app_config with an argument app_label .	apps . get_app_config ( app_label )
4703	call the method executor.loader.get_migration_by_prefix with arguments app_label , migration_name , substitute the result for migration .	migration = executor . loader . get_migration_by_prefix ( app_label , migration_name )
5653	substitute value for field.name key of self._current dictionary .	self . _current [ field . name ] = value
7047	define the method __deepcopy__ with arguments self and memo .	def __deepcopy__ ( self , memo ) :
17697	return elements of words joined in a string , separated with whitespaces .	return STR . join ( words )
3520	self.models is an empty set .	self . models = set ( )
2282	if integers 3 and 2 in a tuple are smaller than the sys.version_info and sys.version_info is smaller than integers 3,4 and 4 in a tuple , respectively ,	if ( 3 , 2 ) < sys . version_info < ( 3 , 3 , 4 ) :
10085	define the method parse_file_upload with 3 arguments : self , META and post_data .	def parse_file_upload ( self , META , post_data ) :
6536	matches is boolean True ,	matches = True
7725	return string STR0 where STR1 is replaced with return value of the self.add_prefix method called with an argument field_name .	return STR0 % self . add_prefix ( field_name )
6152	from django.conf import settings into default name space .	from django . conf import settings
11992	if TypeError or ValueError exceptions are caught ,	except ( ValueError , TypeError ) :
18353	if CONTEXT_SEPARATOR is contained in result ,	if CONTEXT_SEPARATOR in result :
7935	define the method as_hidden with 3 arguments : self , attrs set to None and unpacked dictionary kwargs .	def as_hidden ( self , attrs = None , ** kwargs ) :
11669	split value by newline characters , substitute the result for lines .	lines = value . split ( STR0 )
11073	if not ,	else :
9225	template_with_initial is a string STR0 .	template_with_initial = STR0
18702	if offset is lesser than integer 0 , sign is set to STR0 , otherwise sign is STR1 ,	sign = STR0 if offset < 0 else STR1
10815	raise an NotImplementedError with an argument string STR0 .	raise NotImplementedError ( STR0 )
14988	if m is true ,	if m :
4738	if migration.replaces is true ,	if migration . replaces :
10813	call the method self.tag , substitute the result for self.tagname .	self . tagname = self . tag ( )
13071	if KeyError exception is caught ,	except KeyError :
5042	replace STR1 in string STR0 with app_config.label , print it to the standard output .	print ( STR0 % app_config . label )
18297	use global variable _translations .	global _translations
11790	define the function linebreaks_filter with 2 arguments value and autoescape set to None .	def linebreaks_filter ( value , autoescape = None ) :
6880	self.day_none_value is a tuple containing 2 elements : integer 0 and third element of empty_label .	self . day_none_value = ( 0 , empty_label [ 2 ] )
1981	if settings.MANAGERS does not exist ,	if not settings . MANAGERS :
2080	return boolean True .	return True
10885	filters is an empty list .	filters = [ ]
2075	join self.file_path and fname into a valid file path , substitute it for self._fname .	self . _fname = os . path . join ( self . file_path , fname )
17395	define the function write with an argument data .	def write ( data ) :
3693	from django.utils.translation import templatize into default namespace .	from django . utils . translation import templatize
18007	if timezone is None ,	if timezone is None :
10342	call the method value.encode with an argument charset , substitute the result for value .	value = value . encode ( charset )
15431	call the method handler.addQuickElement with 3 arguments : string STR0 , None and dictionary with 2 entries : STR1 for STR2 , value under the STR3 key of the self.feed dictionary for STR4 .	handler . addQuickElement ( STR0 , None , { STR1 : STR2 , STR3 : self . feed [ STR4 ] } )
11221	if not ,	else :
3751	if not ,	else :
9881	element of data at the index last equals to carriage return bytes character .	if data [ last : last + 1 ] == STR0 :
18341	call the function mark_safe with an argument result , return it .	return mark_safe ( result )
7309	if f is None ,	if f is None :
7333	call the urlsplit with an argument url , convert the result into a list and return it .	return list ( urlsplit ( url ) )
3172	raise CommandError with an argument string STR0 , where STR1 is replaced with app_label .	raise CommandError ( STR0 % app_label )
6706	substitute value for url .	url = value
13206	for every post_callback in self._post_render_callbacks ,	for post_callback in self . _post_render_callbacks :
7540	call the method self.run_validators with an argument out .	self . run_validators ( out )
4966	if both cursor and close_connection are true ,	if cursor and close_connection :
240	call the method self._base_set with string STR0 , key , value and timeout as arguments .	self . _base_set ( STR0 , key , value , timeout )
18683	self.children is an list with 2 elements : obj and data .	self . children = [ obj , data ]
10153	define the method __init__ with 4 arguments : self , query_string is None , mutable is boolean False and encoding set to None .	def __init__ ( self , query_string = None , mutable = False , encoding = None ) :
7185	raise an NotImplementedError with an argument string STR0 .	raise NotImplementedError ( STR0 )
12567	substitute value for self.value .	self . value = value
137	define the get_many method with self class instance , keys and version set to None as arguments .	def get_many ( self , keys , version = None ) :
13617	if file filename exists ,	if os . path . exists ( filename ) :
9457	substitute self._empty_value for value .	value = self . _empty_value
17770	define the method write with 2 arguments : self and val .	def write ( self , val ) :
7152	if self.max_digits is not None and digits is grater than self.max_digits ,	if self . max_digits is not None and digits > self . max_digits :
132	raise an exception of class NotImplementedError , with string STR0 as argument .	raise NotImplementedError ( STR0 )
12215	try ,	try :
4151	target_app_labels_only is boolean True .	target_app_labels_only = True
16197	from django.utils.six.moves.urllib.parse import quote , quote_plus , unquote , unquote_plus , urlparse , urlencode as original_urlencode .	from django . utils . six . moves . urllib . parse import ( quote , quote_plus , unquote , unquote_plus , urlparse , urlencode as original_urlencode )
15692	mem_args is a list containing of first num_args elements of args list .	mem_args = args [ : num_args ]
7400	call the function smart_text with an argument value , return the result .	return smart_text ( value )
5521	call the function six.StringIO with an argument stream_or_string , substitute the result for self.stream .	self . stream = six . StringIO ( stream_or_string )
12529	if in_index-th element of bits equals to string STR0 ,	if bits [ in_index ] != STR0 :
4360	import module sys .	import sys
10607	raise an NotImplementedError exception with an argument string STR0 .	raise NotImplementedError ( STR0 )
18769	otherwise if fourth element of version does not equals to STR0 ,	elif version [ 3 ] != STR0 :
14502	return an empty string .	return STR
5772	if Exception , renamed to e , exception is caught ,	except Exception as e :
9175	call the method __init__ from the base class of the class TextInput , called with an argument attrs .	super ( TextInput , self ) . __init__ ( attrs )
13202	define the method render with an argument self .	def render ( self ) :
10538	from django.template.base import ALLOWED_VARIABLE_CHARS , BLOCK_TAG_END , BLOCK_TAG_START , COMMENT_TAG_END , COMMENT_TAG_START , FILTER_ARGUMENT_SEPARATOR , FILTER_SEPARATOR , SINGLE_BRACE_END , SINGLE_BRACE_START , TOKEN_BLOCK , TOKEN_COMMENT , TOKEN_TEXT , TOKEN_VAR , TRANSLATOR_COMMENT_MARK , UNKNOWN_SOURCE , VARIABLE_ATTRIBUTE_SEPARATOR , VARIABLE_TAG_END , VARIABLE_TAG_START , filter_re and tag_re .	from django . template . base import ( ALLOWED_VARIABLE_CHARS , BLOCK_TAG_END , BLOCK_TAG_START , COMMENT_TAG_END , COMMENT_TAG_START , FILTER_ARGUMENT_SEPARATOR , FILTER_SEPARATOR , SINGLE_BRACE_END , SINGLE_BRACE_START , TOKEN_BLOCK , TOKEN_COMMENT , TOKEN_TEXT , TOKEN_VAR , TRANSLATOR_COMMENT_MARK , UNKNOWN_SOURCE , VARIABLE_ATTRIBUTE_SEPARATOR , VARIABLE_TAG_END , VARIABLE_TAG_START , filter_re , tag_re )
14398	substitute complain for insert .	insert = complain
18669	call the method self._prepare_data with an argument data , substitute the result for data .	data = self . _prepare_data ( data )
11328	raise an InvalidTemplateLibrary exception with an argument string STR0 , where STR1 is replaced with taglib_module and e .	raise InvalidTemplateLibrary ( STR0 % ( taglib_module , e ) )
10531	substitute char STR0 for the value under the STR1 key of the response dictionary .	response [ STR0 ] = STR1
17747	is length of list_ equals integer 0 ,	if len ( list_ ) == 0 :
1760	call to the self.handle_uncaught_exception method with request , resolver and value of the evaluated function sys.exec_info , as the arguments , substitute the result for response .	response = self . handle_uncaught_exception ( request , resolver , sys . exc_info ( ) )
3400	field_desc is a string STR0 , where STR1 is replaced with : att_name , an empty string if STR2 is contained in field_type , or with string STR3 if it is not and field_type .	field_desc = STR0 % ( att_name , STR if STR1 in field_type else STR2 , field_type , )
7575	skip this loop execution .	continue
4473	call the method app.start .	app . start ( )
10109	call the method self._mark_post_parse_error .	self . _mark_post_parse_error ( )
8897	try ,	try :
4300	finally perform ,	finally :
5198	return filename and display_url .	return filename , display_url
9472	_empty_value is an empty list .	_empty_value = [ ]
6535	dictionary keys converted into sets , skip this loop iteration ,	continue
4231	created_models is a set .	created_models = set ( )
17556	define the method colorize with 3 arguments : text set to an empty string , opts set to an empty tuple and unpacked dictionary kwargs .	def colorize ( text = STR , opts = ( ) , ** kwargs ) :
13448	if cls is false ,	if not cls :
17942	define the method _isdst with 2 arguments : self and dt .	def _isdst ( self , dt ) :
4444	if KeyboardInterrupt exception is caught ,	except KeyboardInterrupt :
800	define initialization method __init__ with self class instance , unpacked list args , unpacked dictionary kwargs as arguments .	def __init__ ( self , * args , ** kwargs ) :
11364	call the function import_library with an argument module , append the result to builtins .	builtins . append ( import_library ( module ) )
8783	get self.to_field attribute of self.parent_instance object , substitute it for value under the STR0 key of the kwargs dictionary .	kwargs [ STR0 ] = getattr ( self . parent_instance , self . to_field )
15386	define the method add_item_elements with 2 arguments , handler self and item .	def add_item_elements ( self , handler , item ) :
15621	value under the cache_key key of the _format_cache dictionary is None .	_format_cache [ cache_key ] = None
3927	if statue is not equal to STATUS_OK .	if status != STATUS_OK :
4104	if self.verbosity is greater than integer 0 ,	if self . verbosity > 0 :
10665	join trans_bit into a string separated with whitespaces , substitute the result for bit .	bit = STR . join ( trans_bit )
18517	inplural is boolean False .	inplural = False
219	call the method router.db_for_read with self.cache_model_class as argument , substitute the result for db .	db = router . db_for_read ( self . cache_model_class )
3856	call the function f.process with 2 arguments : self and self.domain .	f . process ( self , self . domain )
4701	raise an CommandError with an argument string STR0 , where STR1 is replaced with app_label .	raise CommandError ( STR0 % app_label )
12462	return an instance of CommentNode class .	return CommentNode ( )
10271	if length of bits equals integer 2 ,	if len ( bits ) == 2 :
6566	define the function resolve with arguments path and urlconf set to None .	def resolve ( path , urlconf = None ) :
3367	if i is contained in relations , is_relation is boolean True , otherwise is_relation is boolean False .	is_relation = i in relations
3790	append list containing string STR0 to self.msguniq_options .	self . msguniq_options = self . msguniq_options [ : ] + [ STR0 ]
18218	_BROWSERS_DEPRECATED_LOCALES is an dictionary with 2 initial entries : STR0 for STR1 and STR2 for STR3 .	_BROWSERS_DEPRECATED_LOCALES = { STR0 : STR1 , STR2 : STR3 , }
2441	define the method get_fqdn with argument self .	def get_fqdn ( self ) :
14262	convert keys of dictionary self.dict into a iterable , return it .	return iter ( self . dict . keys ( ) )
5983	substitute pubid for self.pubid .	self . pubid = pubid
16652	return result .	return result
2917	import module os .	import os
8183	if self.validate_min is true , and length of self.deleted_forms subtracted from the return value of the method self.total_form_count , is smaller than self.min_num ,	if ( self . validate_min and self . total_form_count ( ) - len ( self . deleted_forms ) < self . min_num ) :
17030	extend list inner_result with res .	inner_result . extend ( res )
9442	derive the class CheckboxFieldRenderer from the ChoiceFieldRenderer base class .	class CheckboxFieldRenderer ( ChoiceFieldRenderer ) :
14160	substitute _iterkeys for __iter__ .	__iter__ = _iterkeys
16822	if number is an integer and use_grouping is false and decimal_pos is false ,	if isinstance ( number , int ) and not use_grouping and not decimal_pos :
17754	call the function force_text with an argument text , substitute the result for text .	text = force_text ( text )
2969	if locations is not empty ,	if locations :
13761	derive class BaseCOnverter from object base class .	class BaseConverter ( object ) :
10976	self.literal is None ,	self . literal = None
13424	import module shutil .	import shutil
9650	for every handler in handlers ,	for handler in handlers :
4878	call parser.add_argument method with STR0 , action set to string STR1 , dest set to string STR2 , default set to boolean True and help set to string STR3 .	parser . add_argument ( STR0 , action = STR1 , dest = STR2 , default = True , help = STR3 )
14458	define the method e with an argument self .	def e ( self ) :
104	call the options.get method with string STR0 and integer 300 as arguments , use the string STR1 and previous result as the arguments for the call to the params.get method , substitute the result for max_entries .	max_entries = params . get ( STR0 , options . get ( STR1 , 300 ) )
9196	substitute choices for self.choices .	self . choices = choices
7247	define the method _get_regex an argument self .	def _get_regex ( self ) :
5372	return self.object_list element at index .	return self . object_list [ index ]
4169	if app_label is not contained in executor.loader.migrated_apps ,	if app_label not in executor . loader . migrated_apps :
17278	_func_closure is a string STR0 .	_func_closure = STR0
2424	append a tuple containing 2 elements : content and mimetype , to the self.alternatives list .	self . alternatives . append ( ( content , mimetype ) )
5495	call the method self.end_object with an argument obj .	self . end_object ( obj )
2315	self.cc is an empty list .	self . cc = [ ]
15165	kwargs is a dictionary created with tuples with 2 elements : k and value under k key of config dictionary , for every k in config , only if result of the function valid_ident called with an argument k evaluates to true .	kwargs = dict ( ( k , config [ k ] ) for k in config if valid_ident ( k ) )
12049	if STR0 is not contained in arg ,	if STR0 not in arg :
8979	define the method get_json_data with 2 arguments self and escape_html set to boolean False .	def get_json_data ( self , escape_html = False ) :
8930	import module sys .	import sys
3268	call the method parser.add_argument with 5 arguments : string STR0 , action set to string STR1 , dest set to string STR2 , default=True and help as a string STR3 .	parser . add_argument ( STR0 , action = STR1 , dest = STR2 , default = True , help = STR3 )
3929	otherwise if self.verbosity is greater than integer 0 ,	elif self . verbosity > 0 :
17999	if self.old_timezone is None ,	if self . old_timezone is None :
3786	append list containing 4 elements : STR0 , STR1 , STR2 and STR3 , to ignore_patterns .	ignore_patterns += [ STR0 , STR1 , STR2 , STR3 ]
13482	otherwise if prefix is not equal to common_prefix ,	elif prefix != common_prefix :
9703	for every chunk in field_stream ,	for chunk in field_stream :
18793	if ValueError exception is caught ,	except ValueError :
3018	substitute value under the database key of the connections dictionary for connection .	connection = connections [ database ]
17789	read data from buf , yield the result .	yield buf . read ( )
3181	raise CommandError with an argument string STR0 , where STR1 is replaced with format .	raise CommandError ( STR0 % format )
16261	if length of s is greater than integer 13 ,	if len ( s ) > 13 :
2814	if LookupError or ImportError , renamed to e , exceptions are caught ,	except ( LookupError , ImportError ) as e :
12027	call the function avoid_wrapping with an argument value , return the result .	return avoid_wrapping ( value )
2073	call the strftime function with argument string STR0 on the return value of the function datetime.datetime.now , substitute the result for timestamp .	timestamp = datetime . datetime . now ( ) . strftime ( STR0 )
661	safe_data is an empty dictionary .	safe_data = { }
7484	for every f in fields ,	for f in fields :
2458	from django.utils import six into default name space .	from django . utils import six
8019	derive the class ManagementForm from the Form base class .	class ManagementForm ( Form ) :
10769	if nodelist is an instance of NodeList and node is not an instance of TextNode class .	if isinstance ( nodelist , NodeList ) and not isinstance ( node , TextNode ) :
685	define the method _cache with argument self .	def _cache ( self ) :
13640	if sender is true and sender attribute STR0 is also True ,	if sender and getattr ( sender , STR0 , False ) :
5554	import module sys .	import sys
7682	update declared_fields dictionary with entry base.declared_fields .	declared_fields . update ( base . declared_fields )
2412	call the method filename.encode with an argument string STR0 , substitute the result for filename .	filename = filename . encode ( STR0 )
8249	from django.utils.translation import ugettext_lazy as _ and ugettext into default name space .	from django . utils . translation import ugettext_lazy as _ , ugettext
9221	derive the class ClearableFileInput from the FileInput base class .	class ClearableFileInput ( FileInput ) :
12489	substitute the last element of args for name .	name = args [ - 1 ]
15597	call the function force_str with an argument format_type , substitute the result for format_type .	format_type = force_str ( format_type )
14072	call the method os.dup2 with 2 arguments : result of the method so.fileno and result of the method sys.stdout.fileno .	os . dup2 ( so . fileno ( ) , sys . stdout . fileno ( ) )
14979	substitute self for value.configurator .	value . configurator = self
4376	call the method parser.add_argument with 6 arguments : string STR0 , string STR1 , action set to string STR2 , dest set to string STR3 , default set to boolean False and help set to string STR4 .	parser . add_argument ( STR0 , STR1 , action = STR2 , dest = STR3 , default = False , help = STR4 )
8650	return self.new_objects .	return self . new_objects
16413	if ip_str starts with STR0 : : STR1 : , but it doesnt ends with STR2 ,	if ( ( ip_str . startswith ( STR0 ) and not ip_str . startswith ( STR1 ) ) or ( ip_str . endswith ( STR2 ) and not ip_str . endswith ( STR3 ) ) ) :
5862	define the method __next__ with an argument self .	def __next__ ( self ) :
5742	yaml import CSafeDumper as SafeDumper into default name space .	from yaml import CSafeDumper as SafeDumper
16959	skip this loop iteration .	continue
16888	if ch is not equal to a sring STR0 or escaped is true ,	if ch != STR0 or escaped :
18120	define the function get_language .	def get_language ( ) :
16878	inner is an instance of NonCapture , created with elements of result from start index to the end .	inner = NonCapture ( result [ start : ] )
13502	if member is a directory ,	if member . isdir ( ) :
8135	if self.can_delete is true and call to the method self._should_delete_form with an argument form , evaluates to true ,	if self . can_delete and self . _should_delete_form ( form ) :
7960	if id_for_label is true ,	if id_for_label :
18537	append contents to singular .	singular . append ( contents )
11929	define the function add with 2 arguments value and arg .	def add ( value , arg ) :
4100	call the method subsclass with 2 arguments : string STR0 , replace STR1 with biggest_number incremented by one , that occupies minimum 4 places within a string , and app_label , substitute the result for new_migration .	new_migration = subclass ( STR0 % ( biggest_number + 1 ) , app_label )
640	if delta is smaller than integer 0 ,	if delta < 0 :
15220	define the private method __init__ , with self instance of this class , obj and list of arbitrary length *args as arguments .	def __init__ ( self , obj , * args ) :
3607	if self.verbosity is greater or equals integer 2 and fixture_files_in_dir is false ,	if self . verbosity >= 2 and not fixture_files_in_dir :
11541	raise an self.source_error exception with 2 arguments : source and msg .	raise self . source_error ( source , msg )
6289	try ,	try :
9999	define the method get_host with an argument self .	def get_host ( self ) :
9360	append options to output .	output . append ( options )
3044	try ,	try :
7920	substitute self.auto_id for auto_id .	auto_id = self . auto_id
15709	do nothing .	pass
17438	call the function write with an argument end .	write ( end )
1520	if e.errno is not equal to errno.ENOENT ,	if e . errno != errno . ENOENT :
18615	result is an empty list .	result = [ ]
7952	if label_suffix is None ,	if label_suffix is None :
4030	substitute STR1 in string STR0 with the result of the method app_labels.pop , write it to self.stdout .	self . stdout . write ( STR0 % app_labels . pop ( ) )
7636	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
3232	append a tuple containing 2 elements : model and deps to model_dependencies .	model_dependencies . append ( ( model , deps ) )
36	raise and exception InvalidCacheBackendError with string STR0 as argument , replace STR1 with backend and e , respectively .	raise InvalidCacheBackendError ( STR0 % ( backend , e ) )
11285	if not ,	else :
2732	if options.traceback is true or e is not CommandError instance ,	if options . traceback or not isinstance ( e , CommandError ) :
1988	define the method __init__ with arguments : self , fail_silently set to boolean False and unpacked dictionary kwargs .	def __init__ ( self , fail_silently = False , ** kwargs ) :
13471	split path in two parts by STRspecial string , return the result .	return path . split ( STRspecial , 1 )
5767	try ,	try :
16893	if not ,	else :
6206	call the function force_str with an argument signature , return the result .	return force_str ( signature )
14522	define the method D with an argument self .	def D ( self ) :
17527	increment self.waiting_writers by integer 1 ,	self . waiting_writers += 1
6531	skip this loop iteration .	continue
7950	define the method label_tag with 4 arguments : self , contents set to None , attrs set to None and label_suffix set to None .	def label_tag ( self , contents = None , attrs = None , label_suffix = None ) :
9831	increment length of boundary by integer 6 , substitute the result for self._rollback .	self . _rollback = len ( boundary ) + 6
16897	otherwise if ch equals a string STR0 ,	elif ch == STR0 :
3212	if model_list is None ,	if model_list is None :
4435	call the function run with 5 arguments : self.addr , self.port converted to an integer , handler , ipv6 set to self.use_ipv6 , and threading set to threading .	run ( self . addr , int ( self . port ) , handler , ipv6 = self . use_ipv6 , threading = threading )
3675	raise an CommandError exception with an argument STR0 , where STR1 is replaced with program .	raise CommandError ( STR0 % program )
13452	raise an UnrecognizedArchiveFormat exception with an argument string STR0 , where STR1 is replaced with filename .	raise UnrecognizedArchiveFormat ( STR0 % filename )
6419	if pattern is an instance of RegexURLResolver class ,	if isinstance ( pattern , RegexURLResolver ) :
13575	do nothing .	pass
16448	for every __ in range of integers from 0 up to sep subtracted from fill_to ,	for __ in xrange ( fill_to - sep ) :
10724	if TemplateSyntaxError , replaced with e , exception is caught ,	except TemplateSyntaxError as e :
1554	if self.connection_reset is true ,	if self . connection_reset :
9336	call the method self.render_option with 3 arguments : selected_choices , option_value and option_label , append the result to output .	output . append ( self . render_option ( selected_choices , option_value , option_label ) )
3267	call the method parser.add_argument with 5 arguments : string STR1 , action set to string STR2 , dest as a string STR3 , default set to DEFAULT_DB_ALIAS and help as a string STR4 .	parser . add_argument ( STR1 , action = STR2 , dest = STR3 , default = DEFAULT_DB_ALIAS , help = STR4 )
13826	return string first element of t , STR0 , second element of t .	return STR0 % ( t [ 0 ] , t [ 1 ] )
9552	if _cookie_encodes_correctly and _cookie_allows_colon_in_names are boolean True ,	if _cookie_encodes_correctly and _cookie_allows_colon_in_names :
7295	return initial .	return initial
14397	substitute complain for extend .	extend = complain
5475	call the function warnings.warn with 2 arguments : string STR0 and RemovedInDjango19Warning .	warnings . warn ( STR0 , RemovedInDjango19Warning )
9636	substitute boundary for self._boundary .	self . _boundary = boundary
15863	call the function new_method_proxy with an argument operator.ne , substitute the result for __ne__ .	__ne__ = new_method_proxy ( operator . ne )
16522	return s .	return s
892	if settings.DEBUG is true and value of the request.META dictionary under the STR0 key is contained in settings.INTERNAL_IPS ,	if settings . DEBUG and request . META . get ( STR0 ) in settings . INTERNAL_IPS :
7180	call the method self.strptime with arguments value and format , return the result .	return self . strptime ( value , format )
14990	substitute value under the STR0 key of dictionary d , substitute it for prefix .	prefix = d [ STR0 ]
1701	set response to None .	response = None
14560	return string STR0 .	return STR0
13763	define the initialization function with self class instance , digits and sign defaulting to STR0 as arguments .	def __init__ ( self , digits , sign = STR0 ) :
12275	call the method self.var1.resolve with 2 arguments : context and boolean True , substitute the result for val2 .	val1 = self . var1 . resolve ( context , True )
6806	code is a string STR0	code = STR0
11019	if TypeError , AttributeError , KeyError or ValueError exceptions are caught ,	except ( TypeError , AttributeError , KeyError , ValueError ) :
3558	if self.verbosity is greater or equal to integer 2 ,	if self . verbosity >= 2 :
7008	define the method to_python with arguments self and value .	def validate ( self , value ) :
9004	substitute i-th element of self.data for error .	error = self . data [ i ]
11782	define the function escape_filter with an argument value .	def escape_filter ( value ) :
1583	raise an NotImplementedError with argument string STR0 .	raise NotImplementedError ( STR0 )
18229	if p is greater or equal to integer 0 ,	if p >= 0 :
3865	call the function popen_wrapper with an argument args , assign the result to msgs , errors and status , respectively .	msgs , errors , status = popen_wrapper ( args )
889	return an dictionary containing 1 entry : return value of the function _get_val for STR0 .	return { STR0 : _get_val ( ) }
17695	substitute first length elements of words for words .	words = words [ : length ]
14968	substitute value under n key of dictionary d for d .	d = d [ n ]
13644	call the method wm.add_watch with path and mask as arguments .	wm . add_watch ( path , mask )
11491	from django.template.base import Lexer , Parser , tag_re , NodeList , VariableNode and TemplateSyntaxError into default name space .	from django . template . base import Lexer , Parser , tag_re , NodeList , VariableNode , TemplateSyntaxError
11401	instantiate class ContextDict with 3 arguments : self , unpacked list args and unpacked dictionary kwargs , return it .	return ContextDict ( self , * args , ** kwargs )
5309	def the method __init__ with 5 arguments : self , object_list , per_page , orphans set to integer 0 and allow_empty_first_page set to boolean True .	def __init__ ( self , object_list , per_page , orphans = 0 , allow_empty_first_page = True ) :
13456	define the method __exit__ with 4 arguments : self , exc_type , exc_value and traceback .	def __exit__ ( self , exc_type , exc_value , traceback ) :
10858	raise an TemplateSyntaxError exception with an argument string STR0 , where STR1 is replaced with i and STR2 is replaced with subject .	raise TemplateSyntaxError ( STR0 % ( i , subject ) )
6131	substitute the value under the STR0 key of options dictionary for value under the STR1 key of daemon_kwargs dictionary .	daemon_kwargs [ STR0 ] = options [ STR1 ]
10867	if not ,	else :
3587	if self.verbosity is greater or equal to integer 2 ,	if self . verbosity >= 2 :
6371	return an instance of a ResolverMatch class , crated with arguments self.callback , args , kwargs and self.name .	return ResolverMatch ( self . callback , args , kwargs , self . name )
8690	if instance is None ,	if instance is None :
3754	call the method fp.write with an argument msgs .	fp . write ( msgs )
14013	call the function hashlib.pbkdf2_hmac with 5 arguments : field name of the result of the function digest , password , salt , iterations and dklen , return the result .	return hashlib . pbkdf2_hmac ( digest ( ) . name , password , salt , iterations , dklen )
2059	try ,	try :
5553	import module json .	import json
18516	intrans is boolean False .	intrans = False
1976	call the function EmailMultiAlternatives with settings.EMAIL_SUBJECT_PREFIX and subject converted to strings and concatenated , message , settings.SERVER_EMAIL , list of second elements of a for every a in settings.Managers and connection set to connection , as arguments , assign the result to mail .	mail = EmailMultiAlternatives ( STR0 % ( settings . EMAIL_SUBJECT_PREFIX , subject ) , message , settings . SERVER_EMAIL , [ a [ 1 ] for a in settings . ADMINS ] , connection = connection )
14470	return a string STR0 formated with the results of the functions self.g and self.i , respectivley .	return STR0 % ( self . g ( ) , self . i ( ) )
15299	substitute force_text for force_unicode .	force_unicode = force_text
18165	call the function ugettext with an argument message .	return ugettext ( message )
2198	from django.conf import settings into default name space .	from django . conf import settings
13130	from django.template.loader import BaseLoader into default name space .	from django . template . loader import BaseLoader
11387	builtins is an dictionary with 3 initial entries : boolean True for STR0 , boolean False for STR1 and None for STR2 .	builtins = { STR0 : True , STR1 : False , STR2 : None }
13294	lbp is an integer 0 .	lbp = 0
8974	self.error_class is a string STR0 .	self . error_class = STR0
9374	call the function force_text with first element of choice as an argument , substitute the result for self.choice_value .	self . choice_value = force_text ( choice [ 0 ] )
5537	for every accessor_name and object_list is return value of the method self.m2m_data.items .	for accessor_name , object_list in self . m2m_data . items ( ) :
3481	from django.apps import apps into default name space .	from django . apps import apps
4520	try ,	try :
3514	get the value under the self.using key of the connections dictionary , call the method close on it .	connections [ self . using ] . close ( )
10367	define the method __setstate__ with 2 arguments : self and state .	def __setstate__ ( self , state ) :
16594	derive the class RequireDebugFalse from logging.Filter base class .	class RequireDebugFalse ( logging . Filter ) :
14211	return result .	return result
7474	call the method clean with an argument value from the base class of the class TypedMultipleChoiceField , substitute the result for value .	value = super ( TypedMultipleChoiceField , self ) . clean ( value )
1764	if response is None , substitute STR0 is `` % s.process_response didnot return an HttpResponse object .	if response is None :
2285	call the method self.set_charset with utf8_charset as an argument .	self . set_charset ( utf8_charset )
2490	if not ,	else :
5034	call the function codecs.open with 3 arguments : sql_file , string STR0 and encoding set to settings.FILE_CHARSET , with the result renamed to fp ,	with codecs . open ( sql_file , STR0 , encoding = settings . FILE_CHARSET ) as fp :
6319	define the function get_ns_resolver with arguments ns_pattern and resolver .	def get_ns_resolver ( ns_pattern , resolver ) :
2804	define the method handle with 3 arguments : self , unpacked args and unpacked dictionary options .	def handle ( self , * args , ** options ) :
3461	call the method field_params.update with an argument new_params.1	field_params . update ( new_params )
6704	raise an exception .	raise
634	substitute _ for ret .	ret = _
4061	substitute STR1 in a string STR0 with writer.filename , append newline to it , use it as an argument for the call to the method self.style.MIGRATE_HEADING , write the result to self.stdout .	self . stdout . write ( self . style . MIGRATE_HEADING ( STR0 % writer . filename ) + STR1 )
13919	if key_prefix is None ,	if key_prefix is None :
4409	call the self.run method with unpacked dictionary options as an argument .	self . run ( ** options )
11033	substitute settings.TEMPLATE_STRING_IF_INVALID for current .	current = settings . TEMPLATE_STRING_IF_INVALID
2494	derive the class ManagementUtility from object base class .	class ManagementUtility ( object ) :
6133	convert the value under the STR0 key of options dictionary into an integer of base 8 , substitute it for value under the STR1 key of daemon_kwargs dictionary .	daemon_kwargs [ STR0 ] = int ( options [ STR1 ] , 8 )
10930	if invalid_var_format_string is true ,	if invalid_var_format_string :
11675	for every i and line in enumerated iterable lines ,	for i , line in enumerate ( lines ) :
18718	substitute dt for self.__dt .	self . __dt = dt
1855	substitute path_info for self.path_info .	self . path_info = path_info
12691	raise an TemplateSyntaxError exception with an argument string STR0 , where STR1 is replaced with first element of bits .	raise TemplateSyntaxError ( STR0 % bits [ 0 ] )
17388	call the function exec_ with an argument string STR0 .	exec_ ( STR0 )
3995	get the value under the STR0 key of the options dictionary , if the key exists substitute it for self.dry_run , if not , self.dry_run is boolean False .	self . dry_run = options . get ( STR0 , False )
12597	if token.contents doesn not equals a string STR0 , raise an AssertionError exception ,	assert token . contents == STR0
17135	derive class X from the object base class .	class X ( object ) :
1746	call the method self.get_exception_response with request , resolver and integer 404 as the arguments , assign the result to response .	response = self . get_exception_response ( request , resolver , 404 )
13261	return boolean False .	return False
3471	substitute sixth element of row for value under the STR0 key of the field_params .	field_params [ STR0 ] = row [ 5 ]
14277	if KeyError exception is caught ,	except KeyError :
7919	if attrs is false , make it an empty dictionary .	attrs = attrs or { }
9507	raise NotImplementedError exception with an argument string STR0 .	raise NotImplementedError ( STR0 )
9532	define the method render with 4 arguments : self , attrs set to None , date_format set to None and time_format set to None .	def __init__ ( self , attrs = None , date_format = None , time_format = None ) :
2138	return boolean True .	return True
9053	return a list containing results of the function format_html called with 2 arguments : string STR2 and absolute file path of the path , for every path is self._js .	return [ format_html ( STR2 , self . absolute_path ( path ) ) for path in self . _js ]
3019	if tablename is contained in return value of the method connection.introspection.table_names ,	if tablename in connection . introspection . table_names ( ) :
10561	from django.utils.module_loading import module_has_submodule into default name space .	from django . utils . module_loading import module_has_submodule
7658	for field_name every obj in list created from the elements of the return value of the function six.iteritems with an argument attrs . if obj is an instance of Field , append to a list a tuple with 2 elements : field_name , and poped value under the field_name key of the attrs dictionary , substitute the resulting list for fields .	fields = [ ( field_name , attrs . pop ( field_name ) ) for field_name , obj in list ( six . iteritems ( attrs ) ) if isinstance ( obj , Field ) ]
2288	call the method self.replace_header with argument string STR1 , STR2 , where STR3 symbols are replaced by : subtype and charset , respectively .	self . replace_header ( STR1 , STR2 % ( subtype , charset ) )
7864	skip this loop iteration .	continue
7099	substitute self.max_value for the value under the STR0 key of the attrs dictionary .	attrs [ STR0 ] = self . max_value
14635	remove entry under the STR0 key of the kw dictionary , substitute it for tzinfo .	tzinfo = kw . pop ( STR0 )
12573	derive the class TemplateIfParser from IfParser base class .	class TemplateIfParser ( IfParser ) :
759	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
17736	call the method self.add_truncation_text with 2 arguments : an empty string and truncate , substitute it for truncate_text .	truncate_text = self . add_truncation_text ( STR , truncate )
11514	call the method create_token from the base class of the class DebugLexer , with 2 arguments : template_string and in_tag , substitute the result for token .	token = super ( DebugLexer , self ) . create_token ( token_string , in_tag )
6439	call the method lookups.appendlist with 2 arguments : pattern.name and a tuple containing 3 elements : bits , p_pattern , and pattern.default_args .	lookups . appendlist ( pattern . name , ( bits , p_pattern , pattern . default_args ) )
18012	return value .	return value
17099	if s is an instance of bytes or Promise and s._delegate_bytes is true ,	if isinstance ( s , bytes ) or ( isinstance ( s , Promise ) and s . _delegate_bytes ) :
18539	if comment_lineno_cache is not None ,	if comment_lineno_cache is not None :
7233	return None .	return None
5696	call the Model._meta.get_field method with an argument field_name , substitute the result for field .	field = Model . _meta . get_field ( field_name )
16640	substitute integers 0 , 1 , 2 and 3 for PREV , NEXT , KEY and RESULT , respectivley .	PREV , NEXT , KEY , RESULT = 0 , 1 , 2 , 3
5237	if self.verbosity is greater or equal to integer 2 .	if self . verbosity >= 2 :
115	call the params.get method wit string STR0 and integer 1 as arguments , substitute the result for self.version .	self . version = params . get ( STR0 , 1 )
2119	if self.use_ssl and self.use_tls are boolean True ,	if self . use_ssl and self . use_tls :
13115	if resource_string is not None , is_usable is boolean True , otherwise is_usable is boolean False .	is_usable = resource_string is not None
1136	return self._dimensions_cache .	return self . _dimensions_cache
16290	call the method base64.urlsafe_b64encode with an argument s , strip the result of the bytes string STR0 from the right , return it .	return base64 . urlsafe_b64encode ( s ) . rstrip ( STR0 )
4681	from django.core.management.base import BaseCommand and CommandError into default name space .	from django . core . management . base import BaseCommand , CommandError
17885	if ImportError exception is caught ,	except ImportError :
7380	convert data into boolean and substitute it for data .	data = bool ( data )
12245	if self is not contained in state_frame ,	if self not in state_frame :
4799	call the method parser.add_argument with 5 arguments : string STR0 , action set to string STR1 ,	parser . add_argument ( STR0 , action = STR1 , dest = STR2 , default = True , help = STR3 )
16545	from logging import NullHandler .	from logging import NullHandler
4335	import module warnings .	import warnings
14702	call the function time.strftime with 2 arguments : fmt and and timetuple without the first element , added to a tuple with an element sum of year an integer 28 , substitute the result for s2 .	s2 = time . strftime ( fmt , ( year + 28 , ) + timetuple [ 1 : ] )
4309	if app_names is not empty ,	if app_names :
5482	substitute obj._meta.concrete_model for concrete_model .	concrete_model = obj . _meta . concrete_model
18359	use global variable _default .	global _default
12326	substitute filepath for self.filepath .	self . filepath = filepath
3747	call the function os.unlink with an argument work_file .	os . unlink ( work_file )
8877	derive the class ModelMultipleChoiceField from the ModelChoiceField base class .	class ModelMultipleChoiceField ( ModelChoiceField ) :
7065	define the method widget_attrs with arguments self and widget .	def widget_attrs ( self , widget ) :
7203	default_error_messages is an dictionary with an entry : return value of the function _ called with an argument string STR0 for STR1 .	default_error_messages = { STR0 : _ ( STR1 ) }
3937	call the function io.open with 3 arguments : pofile , string STR0 and encoding set to string STR1 as arguments ,	with io . open ( pofile , STR0 , encoding = STR1 ) as fp :
11465	define the method __getitem__ with 2 arguments : self and key .	def __getitem__ ( self , key ) :
3431	convert new_name to a string and append it to string STR0 , substitute the result for new_name .	new_name = STR0 % new_name
17209	define the method _resolve with an argument self .	def _resolve ( self ) :
2769	define the method with 3 arguments : self , app_config set to None and display_num_errors set to boolean False .	def validate ( self , app_config = None , display_num_errors = False ) :
14681	endless loop ,	while 1 :
18280	call the method self.merge with an argument translation .	self . merge ( translation )
8601	date_data is a tuple with an entry : attribute lookup from the value under the unique_for key of the form.cleaned_data dictionary .	date_data = ( getattr ( form . cleaned_data [ unique_for ] , lookup ) , )
10152	_encoding is None .	_encoding = None
4746	call the method writer.as_string , write the result to file fh .	fh . write ( writer . as_string ( ) )
894	from django.db import connection into default name space .	from django . db import connection
6067	__all__ is a list containing a string STR0 .	__all__ = [ STR0 ]
7886	define the method __init__ with 4 arguments : self , form , field and name .	def __init__ ( self , form , field , name ) :
4263	call the connection.cursor method , substitute it for cursor .	cursor = connection . cursor ( )
15752	raise an TypeError exception with an argument sting STR0 .	raise TypeError ( STR0 )
16048	if STR0 is contained in words or STR1 is contained in word or STR2 is contained in word ,	if STR0 in word or STR1 in word or STR2 in word :
8436	self._validate_unique is boolean True .	self . _validate_unique = True
5766	substitute stream_or_string for stream .	stream = stream_or_string
11527	define the method source_error with 3 arguments : self , source and msg .	def source_error ( self , source , msg ) :
101	timeout is integer 300 .	timeout = 300
8936	from django.utils.encoding import force_text and python_2_unicode_compatible into default name space .	from django . utils . encoding import force_text , python_2_unicode_compatible
11433	for every d in self.dicts ,	for d in self . dicts :
14655	MONTHS_ALT is an dictionary with 12 entries : result of the function pgettext_lazy with 2 arguments : STR0 and STR1 for 1 ,	MONTHS_ALT = { 1 : pgettext_lazy ( STR0 , STR1 ) , 2 : pgettext_lazy ( STR2 , STR3 ) , 3 : pgettext_lazy ( STR4 , STR5 ) , 4 : pgettext_lazy ( STR6 , STR7 ) , 5 : pgettext_lazy ( STR8 , STR9 ) , 6 : pgettext_lazy ( STR10 , STR11 ) , 7 : pgettext_lazy ( STR12 , STR13 ) , 8 : pgettext_lazy ( STR14 , STR15 ) , 9 : pgettext_lazy ( STR16 , STR17 ) , 10 : pgettext_lazy ( STR18 , STR19 ) , 11 : pgettext_lazy ( STR20 , STR21 ) , 12 : pgettext_lazy ( STR22 , STR23 ) }
6400	lookups is an instance of the MultiValueDict class .	lookups = MultiValueDict ( )
5090	join the current working directory and name into a file path , substitute it for top_dir .	top_dir = path . join ( os . getcwd ( ) , name )
237	define the method set with 5 arguments , self class instance , key , value , timeout set to DEFAULT_TIMEOUT and version set to None .	def set ( self , key , value , timeout = DEFAULT_TIMEOUT , version = None ) :
6506	call the function get_callable with an argument callback , return the result and an empty dictionary .	return get_callable ( callback ) , { }
13289	define the method eval with 2 arguments : self and context .	def eval ( self , context ) :
18259	if translation has an attribute STR0 ,	if not hasattr ( translation , STR0 ) :
11626	if InvalidOperation exception is caught ,	except InvalidOperation :
13543	define the method close with an argument self .	def close ( self ) :
11496	from django.utils.timezone import template_localtime into default name space .	from django . utils . timezone import template_localtime
5732	import module yaml .	import yaml
17106	return s .	return s
14246	define the method clear with an argument self .	def clear ( self ) :
12442	define the method __repr__ with an argument self .	def __repr__ ( self ) :
5349	if not ,	else :
2505	for every name and app in return value of the function six.iteritems calle with return argument of function get_commands as an arugment ,	for name , app in six . iteritems ( get_commands ( ) ) :
1722	if Exception , renamed to e , exception is caught ,	except Exception as e :
5872	call the method node.getAttribute with an argument string STR0 , use the result as the argument for the call to the method , Model._meta.pk.to_python with , substitute the result for value under the Model._meta.pk.attname key of the data dictionary .	data [ Model . _meta . pk . attname ] = Model . _meta . pk . to_python ( node . getAttribute ( STR0 ) )
4044	if self.verbosity is greater or equal to integer 1 ,	if self . verbosity >= 1 :
6126	call the fastcgi_help function with an argument string STR0 , return it .	return fastcgi_help ( STR0 )
5723	call the field.to_python method with field_value , substitute the result for field.name key of the data dictionary .	data [ field . name ] = field . to_python ( field_value )
8727	call the method add_fields from the base class of the class BaseInlineFormSet , with 2 arguments : form and index .	super ( BaseInlineFormSet , self ) . add_fields ( form , index )
4059	write migration_string to file fh .	fh . write ( migration_string )
12199	loop_dict and value under the STR0 key of the context dictionary are dictionaries with an entry : parentloop for STR1 .	loop_dict = context [ STR0 ] = { STR1 : parentloop }
8229	create a class class which name is generated by converting STR0 into a string and appending it to form.__name__ , is derived from the formset base class and with fields contained in attrs , return an instance of the obtained class .	return type ( form . __name__ + str ( STR0 ) , ( formset , ) , attrs )
1496	define the method _get_name with argument self .	def _get_name ( self ) :
13011	call the function sys.getfilesystemencoding , if it evaluates to true , substitute the result for fs_encoding , if not , call the function sys.getdefaultencoding and substitute the result for fs_encoding .	fs_encoding = sys . getfilesystemencoding ( ) or sys . getdefaultencoding ( )
86	convert key_prefix , version and key into strings , concatenate them respectively , with character STR0 as delimiter , return the result .	return STR0 % ( key_prefix , version , key )
14405	call the method __init__ with an argument data , from the base class of the class DictWrapper .	super ( DictWrapper , self ) . __init__ ( data )
10369	self.cookies is an instance of SimpleCookie class created with self.cookies as an argument .	self . cookies = SimpleCookie ( self . cookies )
7237	define the method strptime with arguments self , value and format .	def strptime ( self , value , format ) :
15392	call the method self.write with 2 arguments : s and encoding .	self . write ( s , encoding )
15972	replace every occurrence of STR0 in p for STR1 , format the string STR2 with the result , for every p in paras , substitute list of results for paras .	paras = [ STR0 % p . replace ( STR1 , STR2 ) for p in paras ]
14506	call the function six.text_type with an argument name , return the result .	return six . text_type ( name )
5298	return None .	return None
18690	import module warnings .	import warnings
9943	replace all the occurrences of STR0 in string value with STRspecial and all occurrences of STR1 for STR , substitute the result for value .	value = value . replace ( STR0 , STRspecial ) . replace ( STR1 , STR )
17413	if end is an instance of unicode ,	if isinstance ( end , unicode ) :
496	evaluate the method self._has_expired with argument key , if it as False ,	if not self . _has_expired ( key ) :
2666	define the method __init__ with an argument self .	def __init__ ( self ) :
8600	if not ,	else :
14400	substitute complain for remove .	remove = complain
13193	call the method self.resolve_template with an argument self.template_name , substitute the result for template .	template = self . resolve_template ( self . template_name )
12502	register.tag decorator ,	@ register . tag
10127	for every f in return value of the return value of the method chain.from_iterable called with argument :	for f in chain . from_iterable ( l [ 1 ] for l in self . _files . lists ( ) ) :
18365	get translation_function attribute of the _default object , call the result with 3 arguments : singular , plural and number , return the result .	return getattr ( _default , translation_function ) ( singular , plural , number )
16105	call the initialization method for the base class , _html_parser.HTMLParser.__init__ with self , convert_charrefs set to convert_charrefs and dictionary **kwargs as the arguments .	_html_parser . HTMLParser . __init__ ( self , convert_charrefs = convert_charrefs , ** kwargs )
6280	define the function get_callable with arguments lookup_view and can_fail set to boolean False .	def get_callable ( lookup_view , can_fail = False ) :
7075	get the value under the STR0 key of the kwargs dictionary , if it is true and self.widget equals to NumberInput ,	if kwargs . get ( STR0 ) and self . widget == NumberInput :
12808	call the function loader with 2 arguments name and dirs , substitute the result for source and display_name , respectively .	source , display_name = loader ( name , dirs )
518	call the function pickle.dumps with value and pickle.HIGHEST_PROTOCOL as the arguments , substitute the result for pickled .	pickled = pickle . dumps ( value , pickle . HIGHEST_PROTOCOL )
13516	finally ,	finally :
15537	call the function get_tag_uri with 2 arguments : values under STR0 and STR1 keys of item dictionary , substitute the result for unique_id .	unique_id = get_tag_uri ( item [ STR0 ] , item [ STR1 ] )
2830	raise an CommandError with an argument string STR0 , where STR1 is replaced by app_config.label .	raise CommandError ( STR0 % app_config . label )
4846	if test_runner_class has an STR0 attribute ,	if hasattr ( test_runner_class , STR0 ) :
12892	return result .	return result
2279	if charset equals to string STR0 ,	if charset == STR0 :
11922	sublist is an string STR0 , where every STR1 is replaced with indent , sublist , indent and indent , respectively .	sublist = STR0 % ( indent , sublist , indent , indent )
8291	if not ,	else :
6490	call the function import_module with argument self.urlconf_name , substitute the result for self._urlconf_module .	self . _urlconf_module = import_module ( self . urlconf_name )
14373	define the method dict with an argument self .	def dict ( self ) :
6276	do nothing .	pass
14318	return default .	return default
5831	call the method self.xml.addQuickElement with an argument string STR0 .	self . xml . addQuickElement ( STR0 )
2903	call the method registry.tags_available , sort the result and join it into a string , separate by newlines , write it to self.stdout .	self . stdout . write ( STR0 . join ( sorted ( registry . tags_available ( ) ) ) )
17525	call the method self.can_write.release .	self . can_write . release ( )
3814	if self.verbosity is integer 1 ,	if self . verbosity > 1 :
3413	field_notes is an empty list .	field_notes = [ ]
4012	for every app and names in result of the method conflicts.items , join names into a string , separated by STR0 , join it with app into a string , separated with string STR1 , substitute it for name_str .	name_str = STR0 . join ( STR1 % ( STR2 . join ( names ) , app ) for app , names in conflicts . items ( ) )
10364	call the method self.__dict__.copy , substitute the result for state .	state = self . __dict__ . copy ( )
1507	derive the TemporaryUploadedFile class from the UploadedFile base class .	class TemporaryUploadedFile ( UploadedFile ) :
9338	derive the class NullBooleanSelect from the Select base class .	class NullBooleanSelect ( Select ) :
16550	if sys.warnoptions is false ,	if not sys . warnoptions :
18624	try ,	try :
9478	define the method is_hidden with an argument self .	def is_hidden ( self ) :
3907	call the function os.path.abspath with an argument dirpath , if it starts with return value of the method os.path.dirname ,	if os . path . abspath ( dirpath ) . startswith ( os . path . dirname ( path ) ) :
15213	import module datetime .	import datetime
9033	from django.utils import formats and six into default name space .	from django . utils import formats , six
14482	return a string STR0 formated with the result of the function self.G .	return STR0 % self . G ( )
10161	for every key and value in return value of the parse_qsl with 3 arguments : query_string is it exists or an empty string if not , keep_blank_values set to boolean True , encoding set to encoding .	for key , value in parse_qsl ( query_string or STR , keep_blank_values = True , encoding = encoding ) :
2433	call the msg.attach with an argument body_msg .	msg . attach ( body_msg )
14861	raise an TypeError exception with an argument string STR0 formated with level .	raise TypeError ( STR0 % level )
10058	call the method self._get_scheme , return the result .	return self . _get_scheme ( )
2790	sort elements formatted , join them in the list separated with newline character , substitute the result for formatted .	formatted = STR0 . join ( sorted ( formatted ) )
17538	self.waiting_readers is integer 0 .	self . waiting_readers = 0
9101	m is an instance of Media class .	m = Media ( )
4363	from django.core.servers.basehttp import run and get_internal_wsgi_application into default name space .	from django . core . servers . basehttp import run , get_internal_wsgi_application
13901	substitute the STR0 in string STR1 with key_prefix , method , return value of method url.hexdigest ( ) , return value of method ctx.hexdigest , respectively , substitute it for cache_key .	cache_key = STR0 % ( key_prefix , method , url . hexdigest ( ) , ctx . hexdigest ( ) )
14368	call the method self.setlistdefault with an argument key , append value to the result .	self . setlistdefault ( key ) . append ( value )
17762	zbuf is an instance of BytesIO class .	zbuf = BytesIO ( )
10495	raise an AttributeError exception with an argument string STR0 .	raise AttributeError ( STR0 )
6475	if not ,	else :
7623	call the __init__ method with unpacked list args and unpacked dictionary kwargs from the base class of the GenericIPAddressField class .	super ( GenericIPAddressField , self ) . __init__ ( * args , ** kwargs )
15332	if six.PY2 is true ,	if six . PY2 :
18270	call the method translation._info.copy , substitute the result for self._info .	self . _info = translation . _info . copy ( )
16491	call the function re.compile with 2 arguments : elements of parts joined into a string , separated with STR0 , and result of bitwise OR performed on 2 operands : re.MULTILINE and re.VERBOSE , substitute the result for value under the state key of the self.regexes dictionary .	self . regexes [ state ] = re . compile ( STR0 . join ( parts ) , re . MULTILINE | re . VERBOSE )
17793	call the function warnings.warn with 3 arguments : msg , RemovedInDjango19Warning and stacklevel as integer 2 .	warnings . warn ( msg , RemovedInDjango19Warning , stacklevel = 2 )
18779	if version is None ,	if version is None :
14050	convert six.PY3 to an integer , substitute it for buffering .	buffering = int ( six . PY3 )
13646	call the method update_watch .	update_watch ( )
17896	define the method tzname with 2 arguments self and dt .	def tzname ( self , dt ) :
11494	from django.utils.safestring import SafeData and EscapeData into default name space .	from django . utils . safestring import SafeData , EscapeData
1002	define the method __repr__ with an argument self .	def __repr__ ( self ) :
206	self.managed is boolean True .	self . managed = True
13059	call the function find_template_loader with an argument loader , append the result to cached_loaders .	cached_loaders . append ( find_template_loader ( loader ) )
12829	call the method context_instance.push with an argument dictionary , with the result perform ,	with context_instance . push ( dictionary ) :
16336	if six.PY3 is true ,	if six . PY3 :
2022	msg_count is an integer 0 .	msg_count = 0
3294	if Exception , renamed to e , exception is caught , new_msg is a tuple containing a string : `` Database % s couldnot be flushed .	except Exception as e :
11003	if self.translate is true ,	if self . translate :
7122	if STR0 attribute of attrs dictionary does not exists , set it to to string STR1 .	attrs . setdefault ( STR0 , STR1 )
11888	return list with an element first_item , and boolean True .	return [ first_item ] , True
14353	define the method values with an argument self .	def values ( self ) :
6524	call the function warnings.warn with 3 arguments : string STR0 , with STR1 replaced with original_lookup , RemovedInDjango20Warning and stacklevel set to integer 3 .	warnings . warn ( STR0 % original_lookup , RemovedInDjango20Warning , stacklevel = 3 )
12953	if length of bits is not equal to integer 2 ,	if len ( bits ) != 2 :
3638	substitute the last element of parts for parts .	parts = parts [ : - 1 ]
13539	create directories from the elements in filename .	os . makedirs ( filename )
11455	append other_dict to self.dicts .	self . dicts . append ( other_dict )
2038	define the method send_messages with arguments self and email_messages .	def send_messages ( self , email_messages ) :
3538	write a string STR0 to self.stdout stream .	self . stdout . write ( STR0 )
11032	otherwise , get the STR0 attribute of current object , if it exists and is true ,	elif getattr ( current , STR0 , False ) :
4752	write string STR0 to self.stdout .	self . stdout . write ( STR0 )
8484	if fields is not None ,	if fields is not None :
15920	if opname is not contained in roots ,	if opname not in roots :
1506	name is a property object with _get_name as a getter method and _set_name as a setter method .	name = property ( _get_name , _set_name )
4951	output is an empty list .	output = [ ]
12857	call the function six.iteritems with an argument blocks , for every name and block in result ,	for name , block in six . iteritems ( blocks ) :
11390	append value to self.dicts list .	self . dicts . append ( value )
14205	if ValueError exception is caught ,	except ValueError :
14228	substitute _itervalues for itervalues .	itervalues = _itervalues
7546	for every x in sequence of integer from integer 0 to length of data , append an empty string to a list , substitute the resulting list for initial .	initial = [ STR for x in range ( 0 , len ( data ) ) ]
678	call the method self._lib.Client with self._servers and pickleProtocol set to pickle.HIGHEST_PROTOCOL as arguments , substitute the result for self._client .	self . _client = self . _lib . Client ( self . _servers , pickleProtocol = pickle . HIGHEST_PROTOCOL )
7275	substitute data.name for file_name .	file_name = data . name
3943	if status is not equal to STATUS_OK ,	if status != STATUS_OK :
11046	substitute settings.TEMPLATE_STRING_IF_INVALID for current .	current = settings . TEMPLATE_STRING_IF_INVALID
6348	call the method LocaleRegexProvider.__init__ with arguments self and regex .	LocaleRegexProvider . __init__ ( self , regex )
16724	try ,	try :
11444	substitute use_l10n for self.use_l10n .	self . use_l10n = use_l10n
16331	try ,	try :
3511	call the method transaction.atomic with an argument using set to self.using , with the result ,	with transaction . atomic ( using = self . using ) :
4311	for every app_name is app_names ,	for app_name in app_names :
8328	if exclude is true and f.name is contained in exclude ,	if exclude and f . name in exclude :
4391	substitute DEFAULT_PORT for self.port .	self . port = DEFAULT_PORT
7945	if data is an instance of datetime.datetime or datetime.time classes , and supports_microseconds field of self.field.widget is false ,	if ( isinstance ( data , ( datetime . datetime , datetime . time ) ) and not getattr ( self . field . widget , STR0 , True ) ) :
10547	from importlib import import_module into default name space .	from importlib import import_module
17591	reverse the order of elements of styles .	styles . reverse ( )
12092	from django.utils import timezone into default name space .	from django . utils import timezone
18239	find first index of occurrence of character STR0 in locale , substitute it for p .	p = locale . find ( STR0 )
11160	call the method unhandled_params.remove with an argument param .	unhandled_params . remove ( param )
12676	call the method parser.delete_first_token .	parser . delete_first_token ( )
14708	substitute s1 for s .	s = s1
1636	define lambda function that returns self.file.writelines field , use it as an argument for property function , put the result in writelines .	writelines = property ( lambda self : self . file . writelines )
4196	call the self.style.MIGRATE_HEADING method with string STR0 as an argument , use the result as an argument for the call to the self.stdout.write method .	self . stdout . write ( self . style . MIGRATE_HEADING ( STR0 ) )
7125	default_error_messages is a dictionary with 4 initial entries : return value of the function _ called with string as an argument , STR0 for STR1 , return value of the function ungettext_lazy called with 3 string arguments : STR2 , STR3 , and STR4 for STR5 , return value of the function ungettext_lazy called with 3 string arguments : STR6 , STR7 and STR8 , for STR9 and return value of the function ungettext_lazy called with 3 string arguments : STR10 , STR11 and STR12 for STR13 .	default_error_messages = { STR0 : _ ( STR1 ) , STR2 : ungettext_lazy ( STR3 , STR4 , STR5 ) , STR6 : ungettext_lazy ( STR7 , STR8 , STR9 ) , STR10 : ungettext_lazy ( STR11 , STR12 , STR13 ) , }
17263	return a list with 5 elements : strings STR0 , STR1 , STR2 , STR3 and STR4 .	return [ STR0 , STR1 , STR2 , STR3 , STR4 ]
13103	call the method self.find_template_cache.clear .	self . find_template_cache . clear ( )
12971	if length of bits is not equalt to integer 2 ,	if len ( bits ) != 2 :
11556	derive the class DebugVariableNode from the VariableNode base class .	class DebugVariableNode ( VariableNode ) :
11967	if arg is None	if arg is None :
12467	raise an TemplateSyntaxError exception with an argument string STR0 .	raise TemplateSyntaxError ( STR0 )
14731	define the method __get__ with 3 arguments : self , instance and owner .	def __get__ ( self , instance , owner ) :
16304	return a string STR1 formated with etag , in which every occurrence of STRspecial is replaced with STR2 and every occurrence of STR , is replaced with STR3 .	return STR1 % etag . replace ( STRspecial , STR2 ) . replace ( STR , STR3 )
2381	call the method msg.attach with an argument attachment .	msg . attach ( attachment )
1454	if self.close_called is False ,	if not self . close_called :
15910	from functools import total_ordering .	from functools import total_ordering
9626	if boundary is false or return value of the method cgi.valid_boundary called with an argument boundary evaluates to false ,	if not boundary or not cgi . valid_boundary ( boundary ) :
16036	do nothing .	pass
378	define the method add with 5 arguments , self class instance , key , value , timeout set to DEFAULT_TIMEOUT and version set to None .	def add ( self , key , value , timeout = DEFAULT_TIMEOUT , version = None ) :
549	define the method _cull with argument self .	def _cull ( self ) :
12947	if settings.TEMPLATE_DEBUG is true ,	if settings . TEMPLATE_DEBUG :
7307	define the method to_python with arguments self and data .	def to_python ( self , data ) :
1156	if e.args list first element starts with string STR0 ,	if e . args [ 0 ] . startswith ( STR0 ) :
11411	return value under the key key of d dictionary .	return d [ key ]
1698	call the method urlresolvers.set_urlconf with urlconf as the argument .	urlresolvers . set_urlconf ( urlconf )
13716	call the method os.environ.copy , substitute the result for new_environ .	new_environ = os . environ . copy ( )
14721	return a tuple with 3 elements : if path is true , path , in not , a string STR0 formated with obj.__class__.__module__ , and obj.__class__.__name__ , first element of obj._constructor_args and second element of obj._constructor_args .	return ( path or STR0 % ( obj . __class__ . __module__ , obj . __class__ . __name__ ) , obj . _constructor_args [ 0 ] , obj . _constructor_args [ 1 ] , )
13629	define the function inotify_code_changed .	def inotify_code_changed ( ) :
12685	raise an TemplateSyntaxError exception with an argument string STR0 , where STR1 is replaced with tag and TemplateTagNode.mapping converted into a list .	raise TemplateSyntaxError ( STR0 % ( tag , list ( TemplateTagNode . mapping ) ) )
13718	call the function os.spawnve with os.P_WAIT , sys.executable , args and new_environ as arguments , substitute the result for exit_code .	exit_code = os . spawnve ( os . P_WAIT , sys . executable , args , new_environ )
9634	if boundary is an instance of six.text_type class ,	if isinstance ( boundary , six . text_type ) :
2114	if username is None substitute settings.EMAIL_HOST_USER for self.username , if not substitute username for self.username .	self . username = settings . EMAIL_HOST_USER if username is None else username
7787	error is an dictionary with an initial entry error.error_list for filed if true , or NON_FIELD_ERRORS if not .	error = { field or NON_FIELD_ERRORS : error . error_list }
14090	derive the class NullDevice .	class NullDevice :
8134	and call to the method form.has_changed evaluates to false , skip this loop iteration ,	continue
7998	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
16976	return integer 0 and ch2 .	return 0 , ch2
15302	return iri .	return iri
14480	return a string STR0 formated with the result of the function self.g .	return STR0 % self . g ( )
13324	if not ,	else :
9204	unpack dictionary final_attrs , map the values through force_text function with an argument v and convert it to a dictionary , again , substitute the result input_attrs .	input_attrs = dict ( value = force_text ( v ) , ** final_attrs )
13601	for every dirpath , dirnames and locale_filenames in directory tree starting at the basedir directory .	for dirpath , dirnames , locale_filenames in os . walk ( basedir ) :
10723	call the method self.compile_filter with an argument token.contents , substitute the result for filter_expression .	filter_expression = self . compile_filter ( token . contents )
709	from django.apps import apps into default name space .	from django . apps import apps
5488	if not ,	else :
15644	call the function time_format with 3 arguments : value , string STR0 and use_l10n as use_l10n , return the result .	return time_format ( value , STR0 , use_l10n = use_l10n )
10965	raise an TemplateSyntaxError exception with an argument string STR0 , where STR1 is replaced with name , dlen subtracted from alen , and plen .	raise TemplateSyntaxError ( STR0 % ( name , alen - dlen , plen ) )
16886	otherwise if ch equals a string STR0 ,	elif ch == STR0 :
9001	define the method __ne__ with an argument self .	def __ne__ ( self , other ) :
15462	call the method handler.addQuickElement with 3 arguments : string STR2 , value under the STR3 key of the item dictionary and dictionary with an entry : STR0 for STR1 .	handler . addQuickElement ( STR0 , item [ STR1 ] , { STR2 : STR3 } )
17137	bitwise shift integer 1 to the left by 31 spaces , return the result .	return 1 << 31
10146	yield buf as return value of the generator .	yield buf
10071	if self has an STR0 attribute ,	if hasattr ( self , STR0 ) :
14091	define the method write with 2 arguments : self and s .	def write ( self , s ) :
1448	call the method tmpfile.mkstemp with suffix set to suffix , prefix set to prefix and dir set to dir , store the result in the fd and name , respective .	fd , name = tempfile . mkstemp ( suffix = suffix , prefix = prefix , dir = dir )
8635	append a tuple with 2 elements : obj and form.changed_data to self.changed_objects .	self . changed_objects . append ( ( obj , form . changed_data ) )
6127	daemon_kwargs is an empty dictionary .	daemon_kwargs = { }
5009	if cleaned_line ends with STR0 character ,	if cleaned_line . endswith ( STR0 ) :
8386	message is an string STR0 .	message = STR0
3771	call the method parser.add_argument with 5 arguments : string STR1 , action as a string STR2 , dest as a string STR3 , default set to boolean True , and help as a string STR0 .	parser . add_argument ( STR1 , action = STR2 , dest = STR3 , default = True , help = STR0 )
600	if timeout equals to DEFAULT_TIMEOUT ,	if timeout == DEFAULT_TIMEOUT :
16409	if count of occurrence of STR0 in ip_str is greater than integer 1 ,	if ip_str . count ( STR0 ) > 1 :
353	do nothing .	pass
12804	append loader to loaders .	loaders . append ( loader )
9304	convert elements of choices into a list , substitute it for self.choices .	self . choices = list ( choices )
14295	define the method __getstate__ with an argument self .	def __getstate__ ( self ) :
11416	for every d in self.dicts ,	for d in self . dicts :
10970	define the method resolve_variable with 2 arguments : path and context .	def resolve_variable ( path , context ) :
12910	error_msg is a string STR0 , where STR1 is replaced with parent .	error_msg = STR0 % parent
12319	return the absolute path of file path filepath , substitute it for filepath .	filepath = os . path . abspath ( filepath )
18740	define the method _isdst with 2 arguments self and dt .	def _isdst ( self , dt ) :
14823	substitute first element of renamed_method for old_method_name .	old_method_name = renamed_method [ 0 ]
3473	define the method get_meta with arguments self and table_name .	def get_meta ( self , table_name ) :
14416	call the method self.func with an argument value .	return self . func ( value )
7054	define the method __init__ with 5 arguments : self , max_length set to None , min_length set to None , unpacked list args , and unpacked dictionary kwargs .	def __init__ ( self , max_length = None , min_length = None , * args , ** kwargs ) :
10236	join elements of the output into a string , separated with STR0 , return the result .	return STR0 . join ( output )
1219	return boolean False .	return False
12900	define the method __init__ with 4 arguments : self , nodelist , parent_name and template_dirs set to None .	def __init__ ( self , nodelist , parent_name , template_dirs = None ) :
17728	do nothing .	pass
15592	call the method _format_modules_cache.setdefault with 2 arguments : lang and list created out of the results of the function , iter_format_modules called with 2 arguments : lang and settings.FORMAT_MODULE_PATH , substitute the result for modules .	modules = _format_modules_cache . setdefault ( lang , list ( iter_format_modules ( lang , settings . FORMAT_MODULE_PATH ) ) )
15890	define the method __new__ with 5 arguments : cls , fget set to None , fset set to None , fdel set to None and doc set to None .	def __new__ ( cls , fget = None , fset = None , fdel = None , doc = None ) :
11035	try ,	try :
9582	call the private dict.__setitem__ method with self class instance , key and result of the function http_cookies.Morsel ( ) as arguments .	dict . __setitem__ ( self , key , http_cookies . Morsel ( ) )
408	if renamed is boolean False ,	if not renamed :
2530	if not ,	else :
8777	define the method __init__ with 4 arguments : self , parent_instance , unpacked list args and unpacked dictionary kwargs .	def __init__ ( self , parent_instance , * args , ** kwargs ) :
7331	define the function split_url with an argument url .	def split_url ( url ) :
14316	if default is None ,	if default is None :
1833	while newline character is not contained in self.buffer and , size is None or length of self.buffer is less than size ,	while STR0 not in self . buffer and ( size is None or len ( self . buffer ) < size ) :
12678	register.tag decorator ,	@ register . tag
3796	append list containing string STR0 to self.msgattrib_options .	self . msgattrib_options = self . msgattrib_options [ : ] + [ STR0 ]
15032	substitute value under name key of handlers dictionary for handler_config .	handler_config = handlers [ name ]
8740	append self.fk.name to form._meta.fields .	form . _meta . fields . append ( self . fk . name )
17794	define the function fix with an argument match .	def fix ( match ) :
16970	if StopIteration exception ,	except StopIteration :
3050	if self.verbosity is greater than integer 1 ,	if self . verbosity > 1 :
9114	call the method media_property with an argument new_class , substitute the result for new_class.media .	new_class . media = media_property ( new_class )
2408	try ,	try :
16115	try ,	try :
1049	if self has an attribute STR0 .	if hasattr ( self , STR0 ) :
3830	create a directory self.default_locale_path .	os . makedirs ( self . default_locale_path )
2695	for every opt in self.option_list ,	for opt in self . option_list :
5526	define the method __next__ with an argument self .	def __next__ ( self ) :
17548	finally perform ,	finally :
10222	call the method bytes_to_text with 2 arguments : default and self.encoding , substitute the result for default .	default = bytes_to_text ( default , self . encoding )
16200	__D is a raw string STR0 .	__D = STR0
9223	call the function ugettext_lazy with an argument string STR0 , substitute the result for input_text .	input_text = ugettext_lazy ( STR0 )
636	define the method close with self and dictionary pairs of elements kwargs .	def close ( self , ** kwargs ) :
14503	if self.timezone is true , call the method self.timezone.tzname with an argument self.data , substitute the result for name , otherwise name is None .	name = self . timezone . tzname ( self . data ) if self . timezone else None
10619	call the function force_text with an argument template_string .	template_string = force_text ( template_string )
8509	define the method __init__ with 7 arguments : self , data set to None , files set to None , auto_id set to string STR0 , prefix set to None , queryset set to None and unpacked dictionary kwargs .	def __init__ ( self , data = None , files = None , auto_id = STR0 , prefix = None , queryset = None , ** kwargs ) :
18233	slice language from ( p+1 ) -th index to the end , calculate the length of the obtained segment , if it is greater than integer 2 ,	if len ( language [ p + 1 : ] ) > 2 :
11932	if TypeError or ValueError exceptions are caught ,	except ( ValueError , TypeError ) :
3214	for every model in model_list ,	for model in model_list :
10921	call the method self.var.resolve with an argument context , substitute it for obj .	obj = self . var . resolve ( context )
11016	for bit in self.lookups ,	for bit in self . lookups :
10123	if not ,	else :
7143	return nothing .	return
13072	result is None .	result = None
12628	try ,	try :
18182	if p is greater or equal to integer 0 ,	if p >= 0 :
12790	import module warnings .	import warnings
771	substitute msg for self.msg .	self . msg = msg
7005	return value .	return value
6374	if self._callback is not None ,	if self . _callback is not None :
10302	derive the class HttpResponseBase from the six.Iterator base class .	class HttpResponseBase ( six . Iterator ) :
2384	return msg .	return msg
15404	derive the class Enclosure from the object base class .	class Enclosure ( object ) :
9697	try ,	try :
1832	define method readline with self class instance and size set to None .	def readline ( self , size = None ) :
16241	if year is lesser than integer 100 ,	if year < 100 :
17230	for every attr in _urllib_error_moved_attributes ,	for attr in _urllib_error_moved_attributes :
3036	replace STR1 in string STR0 with : unique , return value of the function qn called with an argument :	index_output . append ( STR0 % ( unique , qn ( STR1 % ( tablename , f . name ) ) , qn ( tablename ) , qn ( f . name ) ) )
8151	property decorator ,	@ property
2508	if not ,	else :
14929	remove first element from name , substitute the result for used .	used = name . pop ( 0 )
17213	_moved_attributes is a list with 55 initial elements , 13 of them are the results of the call to the function MovedAttribute , with different 3 string arguments , the others are results of the call to the function MovedModule called with 3 string arguments .	_moved_attributes = [ MovedAttribute ( STR0 , STR1 , STR2 , STR3 ) , MovedAttribute ( STR4 , STR5 , STR6 , STR7 , STR8 ) , MovedAttribute ( STR9 , STR10 , STR11 , STR12 , STR13 ) , MovedAttribute ( STR14 , STR15 , STR16 , STR17 , STR18 ) , MovedAttribute ( STR19 , STR20 , STR21 , STR22 , STR23 ) , MovedAttribute ( STR24 , STR25 , STR26 , STR27 , STR28 ) , MovedAttribute ( STR29 , STR30 , STR31 , STR32 ) , MovedAttribute ( STR33 , STR34 , STR35 ) , MovedAttribute ( STR36 , STR37 , STR38 ) , MovedAttribute ( STR39 , STR40 , STR41 ) , MovedAttribute ( STR42 , STR43 , STR44 , STR45 , STR46 ) , MovedAttribute ( STR47 , STR48 , STR49 , STR50 , STR51 ) , MovedAttribute ( STR52 , STR53 , STR54 , STR55 , STR56 ) , MovedModule ( STR57 , STR58 ) , MovedModule ( STR59 , STR60 ) , MovedModule ( STR61 , STR62 ) , MovedModule ( STR63 , STR64 , STR65 ) , MovedModule ( STR66 , STR67 , STR68 ) , MovedModule ( STR69 , STR70 , STR71 ) , MovedModule ( STR72 , STR73 , STR74 ) , MovedModule ( STR75 , STR76 , STR77 ) , MovedModule ( STR78 , STR79 , STR80 ) , MovedModule ( STR81 , STR82 , STR83 ) , MovedModule ( STR84 , STR85 , STR86 ) , MovedModule ( STR87 , STR88 , STR89 ) , MovedModule ( STR90 , STR91 , STR92 ) , MovedModule ( STR93 , STR94 , STR95 ) , MovedModule ( STR96 , STR97 , STR98 ) , MovedModule ( STR99 , STR100 , STR101 ) , MovedModule ( STR102 , STR103 ) , MovedModule ( STR104 , STR105 ) , MovedModule ( STR106 , STR107 ) , MovedModule ( STR108 , STR109 , STR110 ) , MovedModule ( STR111 , STR112 ) , MovedModule ( STR113 , STR114 , STR115 ) , MovedModule ( STR116 , STR117 , STR118 ) , MovedModule ( STR119 , STR120 , STR121 ) , MovedModule ( STR122 , STR123 , STR124 ) , MovedModule ( STR125 , STR126 , STR127 ) , MovedModule ( STR128 , STR129 , STR130 ) , MovedModule ( STR131 , STR132 , STR133 ) , MovedModule ( STR134 , STR135 , STR136 ) , MovedModule ( STR137 , STR138 , STR139 ) , MovedModule ( STR140 , STR141 , STR142 ) , MovedModule ( STR143 , STR144 , STR145 ) , MovedModule ( STR146 , STR147 , STR148 ) , MovedModule ( STR149 , STR150 , STR151 ) , MovedModule ( STR152 , STR153 , STR154 ) , MovedModule ( STR155 , __name__ + STR156 , STR157 ) , MovedModule ( STR158 , __name__ + STR159 , STR160 ) , MovedModule ( STR161 , __name__ + STR162 , __name__ + STR163 ) , MovedModule ( STR164 , STR165 , STR166 ) , MovedModule ( STR167 , STR168 , STR169 ) , MovedModule ( STR170 , STR171 , STR172 ) , MovedModule ( STR173 , STR174 ) , ]
5316	try ,	try :
13956	return boolean False .	return False
7479	otherwise if self.required is true ,	elif self . required :
1439	call the function that is the return value of get_storage_class method , substitute the result for self._wrapped .	self . _wrapped = get_storage_class ( ) ( )
12715	call the method nodelist.render with an argument , an instance of Context class , use the result as an argument for the creation of , an instance of VerbatimNode class , return it .	return VerbatimNode ( nodelist . render ( Context ( ) ) )
16249	call the method m.group with an argument string STR0 , convert the result into a string , substitute it for min .	min = int ( m . group ( STR0 ) )
11312	return func .	return func
9696	counters is a list containing length of handlers number of zeros .	counters = [ 0 ] * len ( handlers )
11602	call the function wraps with an argument func , call the result with an argument _dec , return the result .	return wraps ( func ) ( _dec )
4014	if self.merge is true and conflicts is false ,	if self . merge and not conflicts :
20	try ,	try :
14802	derive the class RemovedInDjango19Warning from DeprecationWarning base class .	class RemovedInDjango19Warning ( DeprecationWarning ) :
8482	define the function modelform_factory with 10 arguments : model , form set to ModelForm , fields set to None , exclude set to None ,	def modelform_factory ( model , form = ModelForm , fields = None , exclude = None , formfield_callback = None , widgets = None , localized_fields = None , labels = None , help_texts = None , error_messages = None ) :
3547	if not ,	else :
17041	join elements of list source from index last to the end into a string , substitute it for piece .	piece = STR . join ( source [ last : ] )
12381	call the method self.view_name.resolve with an argument context , substitute the result for view_name .	view_name = self . view_name . resolve ( context )
12391	if NoReverseMatch exception is caught ,	except NoReverseMatch :
1222	if not ,	else :
17687	convert num to an integer , substitute the result for length .	length = int ( num )
3445	increment num by one .	num += 1
18027	raise an ValueError exception with an argument string STR0 , where STR1 is replaced with value .	raise ValueError ( STR0 % value )
4228	try ,	try :
535	if call to the _has_expired method with argument key evaluates to boolean False ,	if not self . _has_expired ( key ) :
17419	if want_unicode is false ,	if not want_unicode :
6834	import module re .	import re
6926	if y and m and d are all true ,	if y and m and d :
11653	while length of digits is smaller than or equal to absolute value of exponent ,	while len ( digits ) <= abs ( exponent ) :
1236	call the os.stat function with argument src , substitute the result for st .	st = os . stat ( src )
12802	call the function find_template_loader with an argument loader_name , substitute the result for loader .	loader = find_template_loader ( loader_name )
17317	call the method types.MethodType with 3 arguments : func , obj and obj.__class__ , return the result .	return types . MethodType ( func , obj , obj . __class__ )
1615	if self.activated is boolean False ,	if not self . activated :
7568	for every f in files ,	for f in files :
3192	if primary_keys is true ,	if primary_keys :
16087	otherwise if safe_input is true ,	elif safe_input :
16405	define the function is_valid_ipv6_address with an argument ip_str .	def is_valid_ipv6_address ( ip_str ) :
8811	self.field.choice_cache is a list containing results of the method self.choice called with an argument obj , for every obj in result of the method self.queryset.all .	self . field . choice_cache = [ self . choice ( obj ) for obj in self . queryset . all ( ) ]
5163	call the function shutil.rmtree with 2 arguments : path_to_remove and onerror set to rmtree_errorhandler .	shutil . rmtree ( path_to_remove , onerror = rmtree_errorhandler )
16311	define the function is_safe_url with 2 arguments url and host set to None .	def is_safe_url ( url , host = None ) :
738	if weight is greater or equal to integer 6 ,	if weight >= 6 :
7903	get the value under the STR0 key of the self.field.widget.attrs dictionary , if the key exists substitute it for id_ , if not , substitute self.auto_id for id_ .	id_ = self . field . widget . attrs . get ( STR0 ) or self . auto_id
14695	subtract year from integer 2000 , substitute the result for delta .	delta = 2000 - year
8712	return form .	return form
5256	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
10668	derive the class Lexer form the base class object .	class Lexer ( object ) :
5222	if used_name is not equal to guessed_filename ,	if used_name != guessed_filename :
3843	for every locale in locales ,	for locale in locales :
16804	if not ,	else :
1374	call the function locks.lock with fd and locks.LOCK_EX as arguments .	locks . lock ( fd , locks . LOCK_EX )
15316	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
15180	define the method add_handlers with 3 arguments : self , logger and handlers .	def add_handlers ( self , logger , handlers ) :
6339	call the function force_text with arguments self and _regex , substitute the result for regex .	regex = force_text ( self . _regex )
8324	get STR0 attribute from object f , if it doesnt exists or its true ,	if not getattr ( f , STR0 , False ) :
17849	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
18387	call the method gettext_module.find with 3 arguments : string STR0 , path and list with an element : result of the function ,	if gettext_module . find ( STR0 , path , [ to_locale ( lang_code ) ] ) is not None :
16091	join elements of words into a string , return it .	return STR . join ( words )
9346	value is an string STR0 .	value = STR0
2435	call the method self._create_mime_attachment with unpacked list alternative as an argument , use the result as an argument for the call to the msg.attach method .	msg . attach ( self . _create_mime_attachment ( * alternative ) )
18340	if message is an instance of SafeData ,	if isinstance ( message , SafeData ) :
5231	substitute last four elements of base for base .	base = base [ : - 4 ]
9519	define the method needs_multipart_form with an argument self .	def needs_multipart_form ( self ) :
1367	if content has an attribute STR0 ,	if hasattr ( content , STR0 ) :
13536	create directories from the elements in filename .	os . makedirs ( dirname )
16328	raise an ValueError with an argument string STR0 .	raise ValueError ( STR0 )
3880	if pot_path file path exists ,	if os . path . exists ( pot_path ) :
13951	try ,	try :
9006	return first element of the list containing elements of error .	return list ( error ) [ 0 ]
5549	from __future__ import absolute_import into default name space .	from __future__ import absolute_import
129	docsring	STR0
13965	random is an instance of random.SystemRandom class .	random = random . SystemRandom ( )
13285	define the method display with an argument self .	def display ( self ) :
12897	return an empty string .	return STR
17080	if rhs is an instance of SafeData .	if isinstance ( rhs , SafeData ) :
1652	from django.utils import six into default name space .	from django . utils import six
7113	return value .	return value
12525	if length bits is smaller than intger 4 ,	if len ( bits ) < 4 :
14129	substitute first element of item for k .	k = item [ 0 ]
18399	split lang_code by STR0 , substitute the first element of the result for generic_lang_code .	generic_lang_code = lang_code . split ( STR0 ) [ 0 ]
2297	call the method MIMEMultipart.__init__ with 5 arguments : self , _subtype , boundary , _subparts and unpacked dictionary _params .	MIMEMultipart . __init__ ( self , _subtype , boundary , _subparts , ** _params )
4410	define the method run with 3 arguments : self and unpacked dictionary options .	def run ( self , ** options ) :
3763	define the method add_arguments with 2 arguments : self and parser .	def add_arguments ( self , parser ) :
7820	try ,	try :
13681	append filename to _error_files .	_error_files . append ( filename )
7861	call the method ( hidden_widget.value_from_datadict with 3 arguments : self.data , self.files and initial_prefixed_name , use the result as an argument for the call to the field.to_python method , substitute the result for initial_value .	initial_value = field . to_python ( hidden_widget . value_from_datadict ( self . data , self . files , initial_prefixed_name ) )
3898	call the method os.path.abspath with an argument dirpath , join the result and dirname into a file path , inset it at the beggining of self.locale_paths .	self . locale_paths . insert ( 0 , os . path . join ( os . path . abspath ( dirpath ) , dirname ) )
7896	substitute self.field.label for self.label .	self . label = self . field . label
7411	return boolean True .	return True
17146	substitute doc for func.__doc__ .	func . __doc__ = doc
17533	increment self.active_writers by integer 1 ,	self . active_writers += 1
6765	try ,	try :
14442	self.timezone is None .	self . timezone = None
12393	call the function six.reraise with unpacked list exc_info as an argument .	six . reraise ( * exc_info )
4307	loader is instance of MigrationLoader initialized with connection as an argument .	loader = MigrationLoader ( connection )
16046	call the function force_text with an argument text , split by it word_split_re , substitute it for words .	words = word_split_re . split ( force_text ( text ) )
4322	for every plan_node in return value of the graph.forwards_plan method called with node as argument .	for plan_node in graph . forwards_plan ( node ) :
11599	call the function func with 2 arguments : unpacked list args and unpacked dictionary kwargs , use the result as an argument for the call to the mark_safe function , return the result .	return mark_safe ( func ( * args , ** kwargs ) )
10622	if settings.TEMPLATE_DEBUG is true and origin is None ,	if settings . TEMPLATE_DEBUG and origin is None :
8790	if self.pk_field ,	if self . pk_field :
15765	call the method self.__text_cast , return the result .	return self . __text_cast ( )
10696	call the method token_string.find with an argument TRANSLATOR_COMMENT_MARK , if it evaluates to true ,	if token_string . find ( TRANSLATOR_COMMENT_MARK ) :
5127	join top_dir and relative_dir into a file path , substitute it for target_dir .	target_dir = path . join ( top_dir , relative_dir )
5544	try ,	try :
16419	return boolean False .	return False
8742	unique_check is a list with elements field , for every field in unique_check if field is not equal to self.fk.name .	unique_check = [ field for field in unique_check if field != self . fk . name ]
15296	substitute smart_bytes for smart_str .	smart_str = smart_bytes
4790	from django.contrib.auth import get_user_model into default name space .	from django . contrib . auth import get_user_model
7471	raise an ValidationError with 3 arguments : value under the STR0 key of the self.error_messages dictionary , code set to an string STR1 and dictionary params with an entry : choice for STR2 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 , params = { STR2 : choice } , )
6826	from django.forms.forms import everything into default name space .	from django . forms . forms import *
7856	call the function initial_value , substitute the result for initial_value .	initial_value = initial_value ( )
3845	replace STR1 in string STR0 with locale , write it to self.stdout .	self . stdout . write ( STR0 % locale )
349	do nothing	pass
11420	define the method __contains__ with 2 arguments : self and key .	def __contains__ ( self , key ) :
18733	call the function timedelta with an argument integer 0 , return the result .	return timedelta ( 0 )
17006	return a list containing first element of source and a list containing params .	return [ source [ 0 ] ] , [ params ]
4919	call the method connection.introspection.table_names , substitute the result for tables .	tables = connection . introspection . table_names ( )
15479	mime_type is a string STR0 .	mime_type = STR0
230	if expires is lesser than now ,	if expires < now :
8629	if obj.pk is None ,	if obj . pk is None :
10508	derive the class HttpResponseGone from the HttpResponse base class .	class HttpResponseGone ( HttpResponse ) :
1484	from django.utils.encoding import force_str into default name space .	from django . utils . encoding import force_str
17046	from django.utils import six into default name space .	from django . utils import six
15481	define the method write with 3 arguments : self , outfile and encoding .	def write ( self , outfile , encoding ) :
12116	call the function format_html with 2 arguments : string STR0 , and csrf_token , return the result .	return format_html ( STR0 , csrf_token )
9075	define the method add_css with arguments self and data .	def add_css ( self , data ) :
5387	define the method end_index with an argument self .	def end_index ( self ) :
5717	substitute value for value under the field.attname key of the data dictionary .	data [ field . attname ] = value
12963	call the method parser.next_token , substitute the result for endblock .	endblock = parser . next_token ( )
5825	call the method self.xml.startElement with arguments string STR0 and an empty dictionary .	self . xml . startElement ( STR0 , { } )
10925	if not ,	else :
7100	return attrs .	return attrs
12192	if len_values is smaller than integer 1 ,	if len_values < 1 :
12304	derive the class RegroupNode from Node base class .	class RegroupNode ( Node ) :
8373	get opt attribute of the opts object , substitute it for value .	value = getattr ( opts , opt )
9074	append path to self._js .	self . _js . append ( path )
13828	find the value of response under the key STR0 , use it as a delimiter to split string ss_delim_re , assign the result to cc .	cc = cc_delim_re . split ( response [ STR0 ] )
8760	if can_fail is true ,	if can_fail :
10975	substitute var for self.var .	self . var = var
18714	derive the class LocalTimezone from the tzinfo base class .	class LocalTimezone ( tzinfo ) :
15808	define the function new_method_proxy with an argument func .	def new_method_proxy ( func ) :
9580	self.bad_cookies is an empty set .	self . bad_cookies = set ( )
1027	define the method __bool__ with argument self .	def __bool__ ( self ) :
10868	substitute i for p .	p = i
17397	convert data to string , substitute it for data .	data = str ( data )
14842	import module types .	import types
2475	call the method commands.update , with an argument dictionary containing entries : app_config_name for name , for every name in return value of the function find_commands , called with an argument path .	commands . update ( { name : app_config . name for name in find_commands ( path ) } )
3682	define the method __repr__with an argument self .	def __repr__ ( self ) :
13880	join all of the elements of vary_headers and additional_headers in a string delimited by a comma , substitute it for value of dictionary response under the key STR0 .	response [ STR0 ] = STR1 . join ( vary_headers + additional_headers )
12937	try ,	try :
16688	if not ,	else :
18322	define the function catalog .	def catalog ( ) :
3634	cmp_fmt is None .	cmp_fmt = None
3844	if self.verbosity is greater than integer 0 ,	if self . verbosity > 0 :
18002	substitute self.old_timezone for _active.value .	_active . value = self . old_timezone
11723	return value .	return value
5765	if not ,	else :
12812	raise an TemplateDoesNotExist exception with an argument name .	raise TemplateDoesNotExist ( name )
3778	get the value under the STR0 key of the options dictionary , substitute it for exclude .	exclude = options . get ( STR0 )
3717	call the function templatize with 2 arguments : src_data and sliced orig_file , without first 2 elements , substitute the result for content .	content = templatize ( src_data , orig_file [ 2 : ] )
9450	substitute renderer for self.renderer .	self . renderer = renderer
14922	value_converters is a dictionary with 2 entries : STR0 for STR1 and STR2 for STR3 .	value_converters = { STR0 : STR1 , STR2 : STR3 , }
1369	if not ,	else :
17708	call the method regex.search with 2 arguments : text and pos .	m = regex . search ( text , pos )
6183	substitute compressed for data .	data = compressed
7027	call the method self.run_validators with an argument value .	self . run_validators ( value )
3331	strip_prefix is a lambda function with an argument s , return value is s without the first element if s starts with string 'u STR , otherwise returns s .	strip_prefix = lambda s : s [ 1 : ] if s . startswith ( STR0 ) else s
85	define the function default_key_func with 3 arguments , key , key_prefix and version .	def default_key_func ( key , key_prefix , version ) :
18725	call the nethod self._isdst with an argument dt , if it evaluates to true ,	if self . _isdst ( dt ) :
7012	if value is contained in self.empty_values ,	if value in self . empty_values :
3349	skip this loop iteration ,	continue
7589	substitute self.choices for self.widgetchoices .	self . widget . choices = self . choices
1600	if content_length is greater than settings.FILE_UPLOAD_MAX_MEMORY_SIZE ,	if content_length > settings . FILE_UPLOAD_MAX_MEMORY_SIZE :
609	define the method make_key with self class instance , key and version defaulting to None as arguments .	def make_key ( self , key , version = None ) :
18806	call the method self.characters with an argument contents .	self . characters ( contents )
8588	for every field in unique_check ,	for field in unique_check :
9959	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
18358	define the function do_ntranslate with 4 arguments : singular , plural , number and translation_function .	def do_ntranslate ( singular , plural , number , translation_function ) :
6361	joint prefix , character STR0 and self._callback_str together , substitute the result for self._callback_str .	self . _callback_str = prefix + STR0 + self . _callback_str
13508	if KeyError or AttributeError , renamed to exc , exceptions are caught ,	except ( KeyError , AttributeError ) as exc :
7915	if widget is false ,	if not widget :
4541	join statements into a string , separated by newlines , return it .	return STR0 . join ( statements )
18684	return data .	return data
4479	try ,	try :
6288	raise an ImportError exception with an argument string STR0 , where STR1 is replaced by lookup_view .	raise ImportError ( STR0 % lookup_view )
17873	multiply seconds by count , subtract it from since , divide the result by seconds2 , store the floored result in count2 .	count2 = ( since - ( seconds * count ) ) // seconds2
2476	return commands .	return commands
4691	call the method parser.add_argument with 2 arguments : string STR0 , and help is a string STR1 .	parser . add_argument ( STR0 , help = STR1 )
4803	call the method warnings.warn with 2 arguments : string STR0 and RemovedInDjango19Warning .	warnings . warn ( STR0 , RemovedInDjango19Warning )
18781	if not ,	else :
8673	get the value under self._pk_field.name key of form._meta.widgets dictionary , if it exists substitute it for widget , if not , widget is an instance of HiddenInput class .	widget = form . _meta . widgets . get ( self . _pk_field . name , HiddenInput )
850	define the method inner with argument check .	def inner ( check ) :
13747	if kwargs is None ,	if kwargs is None :
4276	for every sql in custom_sql ,	for sql in custom_sql :
11841	if AttributeError exception is caught ,	except AttributeError :
1101	call the method self.file.close .	self . file . close ( )
11354	taglib_module is an string STR0 , where STR1 is replaced to module and library_name .	taglib_module = STR0 % ( module , library_name )
8384	missing_fields is difference between set containing none_model_fields and set containing result of the method , new_class.declared_fields.keys .	missing_fields = ( set ( none_model_fields ) - set ( new_class . declared_fields . keys ( ) ) )
10661	trans_bit is a list with an element bit .	trans_bit = [ bit ]
1424	call the self.path with argument name , use the result as an argument for the call to the os.path.getsize function , return the result .	return os . path . getsize ( self . path ( name ) )
6178	call the serializer function , call the dumps method on the result with an argument obj , substitute result for data .	data = serializer ( ) . dumps ( obj )
16440	split ip_str by STR0 , substitute it for hextet .	hextet = ip_str . split ( STR0 )
4624	output_transaction is boolean True .	output_transaction = True
10160	call the method query_string.decode , substitute the result for query_string .	query_string = query_string . decode ( )
13423	import module os .	import os
6561	call the function get_language , substitute the result for language_code .	language_code = get_language ( )
2757	if output is true ,	if output :
5616	raise a ValueError exception with an argument string STR0 .	raise ValueError ( STR0 )
14468	if self.data.minute equals integer 0 ,	if self . data . minute == 0 :
8549	if qs.ordered is false ,	if not qs . ordered :
9250	if upload is true ,	if upload :
17071	call the function method with 3 arguments : self , unpacked list args and unpacked dictionary kwargs , substitute the result for data .	data = method ( self , * args , ** kwargs )
18244	derive the class DjangoTranslation from gettext_module.GNUTranslations base class .	class DjangoTranslation ( gettext_module . GNUTranslations ) :
5119	if settings.configured is false ,	if not settings . configured :
13911	if cache is None ,	if cache is None :
2773	app_configs is a list containing app_config .	app_configs = [ app_config ]
14487	return an empty string .	return STR
1383	close the _file file .	_file . close ( )
6856	yield string STR0 as an return value of the generator .	yield STR0
8304	skip this loop iteration .	continue
3411	define the method normalize_col_name with 4 arguments : self , col_name , used_column_names and is_relation .	def normalize_col_name ( self , col_name , used_column_names , is_relation ) :
15934	from .html_parser import HTMLParser and HTMLParseError into default name space .	from . html_parser import HTMLParser , HTMLParseError
7736	call the function six.text_type with an argument bf , append the result to hidden_fields .	hidden_fields . append ( six . text_type ( bf ) )
8905	raise an ValidationError with 3 arguments : dictionary self.error_messages value under the key STR0 , code set to string STR1 and params as a dictionary with an entry , val for STR2 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 , params = { STR2 : val } , )
4964	call the method connection.creation.sql_destroy_model with arguments : model , references_to_delete and style , extend with the result the list output .	output . extend ( connection . creation . sql_destroy_model ( model , references_to_delete , style ) )
1082	buffer_ is None .	buffer_ = None
11997	decorator function register.filter with an argument is_safe set to boolean False .	@ register . filter ( is_safe = False )
9177	input_type is a string STR0 .	input_type = STR0
9577	call the private dict.__setitem__ method with self class instance , key and M as arguments .	dict . __setitem__ ( self , key , M )
6546	candidate_subs is dictionary created from elements in return value of the function urlquote called with argument v , mapped with a function k , for every k and v in return value of the method candidate_subs.items .	candidate_subs = dict ( ( k , urlquote ( v ) ) for ( k , v ) in candidate_subs . items ( ) )
3197	self.stdout.ending is None .	self . stdout . ending = None
11979	return an empty string .	return STR
3526	for every fixture_label in fixture_labels ,	for fixture_label in fixture_labels :
11629	try ,	try :
571	call the method self._cache.clear .	self . _cache . clear ( )
4775	missing_args_message is a string STR0 .	missing_args_message = STR0
2840	call the method self.handle_label with 2 arguments : label and unpacked dictionary options , substitute the result for label_output .	label_output = self . handle_label ( label , ** options )
7958	if id_ is true ,	if id_ :
2640	substitute options.settings for value under the STR0 key of the os.environ dictionary .	os . environ [ STR0 ] = options . settings
8318	field_list is an empty list .	field_list = [ ]
9841	substitute self._stream for stream .	stream = self . _stream
16623	if kwds is true ,	if kwds :
6843	__all__ is an tuple containing string STR0 .	__all__ = ( STR0 , )
8667	if pk is an instance of OneToOneField or ForeignKey classes ,	if isinstance ( pk , OneToOneField ) or isinstance ( pk , ForeignKey ) :
17464	_assertRaisesRegex is a strnig STR0 .	_assertRaisesRegex = STR0
1667	try ,	try :
15388	define the method write with 3 arguments self , outfile and encoding .	def write ( self , outfile , encoding ) :
5121	call the method self.handle_template with 2 arguments : value under the STR0 key of the options dictionary and base_subdir .	template_dir = self . handle_template ( options [ STR0 ] , base_subdir )
5849	call the function handle_m2m with an argument relobj .	handle_m2m ( relobj )
8640	define the method save_new_objects with 2 arguments : self and commit set to boolean True .	def save_new_objects ( self , commit = True ) :
16813	if not ,	else :
10094	try ,	try :
14688	define the function strftime with 2 arguments dt and fmt .	def strftime ( dt , fmt ) :
8603	if data is contained in seen_data ,	if data in seen_data :
3986	define the method add_arguments with 2 arguments self and parser .	def add_arguments ( self , parser ) :
17946	get the type of the exc object , substitute it for exc_type .	exc_type = type ( exc )
1880	call the warnings.warn method with string STR0 , RemovedInDjango19Warning and integer 2 as arguments .	warnings . warn ( STR0 , RemovedInDjango19Warning , 2 )
16945	yield ch and boolean False .	yield ch , False
5313	substitute allow_empty_first_page for self.allow_empty_first_page .	self . allow_empty_first_page = allow_empty_first_page
10751	return nodelist .	return nodelist
18097	define the function ungettext_lazy with 3 arguments : singular , plural and number set to None .	def ungettext_lazy ( singular , plural , number = None ) :
417	if exception OSError , renamed to e , is caught ,	except OSError as e :
14668	define the method date with an argument self .	def date ( self ) :
798	if self.id is contained in settings.SILENCED_SYSTEM_CHECKS return boolean True , False otherwise .	return self . id in settings . SILENCED_SYSTEM_CHECKS
3620	skip this loop iteration .	continue
17233	substitute _urllib_error_moved_attributes for Module_six_moves_urllib_error._moved_attributes .	Module_six_moves_urllib_error . _moved_attributes = _urllib_error_moved_attributes
13788	multiply x by length of from_digits add the return value of method from_digits.index with digit argument , substitute the result for x .	x = x * len ( from_digits ) + from_digits . index ( digit )
3151	try ,	try :
8816	call the method self.choice with an argument obj , yield the result .	yield self . choice ( obj )
7280	params is a dictionary with 2 initial entries : self.max_length for STR0 and length of file_name for STR1 .	params = { STR0 : self . max_length , STR1 : len ( file_name ) }
8621	self.deleted_objects is an empty list .	self . deleted_objects = [ ]
2143	if self.connection is None ,	if self . connection is None :
13218	property decorator ,	@ property
9680	if not ,	else :
16016	call the function starttag_re.sub with 2 arguments : an empty string and html , substitute the result for html .	html = starttag_re . sub ( STR , html )
3490	from django.utils._os import upath into default name space .	from django . utils . _os import upath
13979	call the function force_bytes with an argument secret , substitute the result for secret .	secret = force_bytes ( secret )
16170	find the ending position of the regular expression match of the object match , substitute the result for j .	j = match . end ( )
10124	self._post is an instance of QueryDict created with arguments : an empty string and encoding set to self._encoding , self._files is an instance of class MultiValueDict .	self . _post , self . _files = QueryDict ( STR , encoding = self . _encoding ) , MultiValueDict ( )
17735	create a list out of fist end_text_pos text elemnts , substitue it for out .	out = text [ : end_text_pos ]
10147	substitute xreadlines for __iter__ .	__iter__ = xreadlines
6887	define the method render with 4 arguments : self , name , value and attrs set to None .	def render ( self , name , value , attrs = None ) :
7888	substitute field for self.field .	self . field = field
6160	do nothing .	pass
14029	call the function digest twice , substitute the results for inner , outer , respectively .	inner , outer = digest ( ) , digest ( )
5353	num_pages is a property object with _get_num_pages as a getter method .	num_pages = property ( _get_num_pages )
11089	define the method render with 2 arguments : self and context .	def render ( self , context ) :
18048	if not ,	else :
1799	from django.utils import datastructures into default name space .	from django . utils import datastructures
9651	call the method handler.handle_raw_input with 5 arguments : self._input_data , self._meta , self._content_length , self._boundary , and encoding , substitute the result for result .	result = handler . handle_raw_input ( self . _input_data , self . _meta , self . _content_length , self . _boundary , encoding )
3121	if pks is true ,	if pks :
4997	define the function sql_all with 3 arguments : app_config , style and connection .	def sql_all ( app_config , style , connection ) :
5035	call the method connection.ops.prepare_sql_script with 2 arguments : return value of the function fp.read , and _allow_fallback set to boolean True , extend the output with the result .	output . extend ( connection . ops . prepare_sql_script ( fp . read ( ) , _allow_fallback = True ) )
8984	with an argument message for STR0 , or if not message for STR1 and error.code for STR2 in error.code is true , if not , an empty string for STR3 . return errors .	return errors
2692	call the method parser.add_option with 2 arguments : string STR1 and help set to string STR2 .	parser . add_option ( STR1 , help = STR2 ) ,
14194	define the method __delitem__ with 2 arguments : self and key .	def __delitem__ ( self , key ) :
18256	return a string STR0 , where STR1 is replaced with self.__language .	return STR0 % self . __language
14237	substitute v for value under the k key of self dictionary .	self [ k ] = v
12453	substitute first element of args for arg .	arg = args [ 1 ]
2388	if self.encoding exists substitute it for encoding , if not substitute settings.DEFAULT_CHARSET for encoding .	encoding = self . encoding or settings . DEFAULT_CHARSET
13486	raise an NotImplementedError exception with an argument string STR0 .	raise NotImplementedError ( STR0 )
17739	for every tag in open_tags ,	for tag in open_tags :
11332	raise an InvalidTemplateLibrary exception with an argument string STR0 , where STR1 is replaced with taglib_module .	raise InvalidTemplateLibrary ( STR0 % taglib_module )
12997	substitute value for value under the options key of options dictionary .	options [ option ] = value
3347	if table_name_filter is not None and table_name_filter is callable object ,	if table_name_filter is not None and callable ( table_name_filter ) :
16775	return boolean False .	return False
4940	define the function sql_delete with 4 arguments : app_config , style , connection and close_connection set to boolean True .	def sql_delete ( app_config , style , connection , close_connection = True ) :
13232	call the __init__ method from the base class of the class TemplateResponse , with 4 arguments : template , context , content_type , status .	super ( TemplateResponse , self ) . __init__ ( template , context , content_type , status )
5149	if self.verbosity is greater or equal to integer 2 ,	if self . verbosity >= 2 :
17288	_meth_self is a string STR0 .	_meth_self = STR0
4308	substitute loader.graph for graph .	graph = loader . graph
12554	if not ,	else :
8256	file_field_list is an empty list .	file_field_list = [ ]
8514	call the method __init__ from the base class of the class BaseModelFormSet , with an argument unpacked dictionary defaults .	super ( BaseModelFormSet , self ) . __init__ ( ** defaults )
10573	BLOCK_TAG_START is a string STR0 .	BLOCK_TAG_START = STR0
18149	if KeyError exception is caught ,	except KeyError :
13283	define the method __init__ with 2 arguments : self and value .	def __init__ ( self , value ) :
9421	call the method self.choice_input_class with 5 arguments : self.name , self.value , result of the method self.attrs.copy , choice and idx , return the result .	return self . choice_input_class ( self . name , self . value , self . attrs . copy ( ) , choice , idx )
1613	return raw_data .	return raw_data
14742	decorator decorator .	@ decorator
14285	define the method __copy__ with an argument self .	def __copy__ ( self ) :
14646	call the method datetime.datetime with an argument unpacked dictionary kw , return the result .	return datetime . datetime ( ** kw )
11946	try ,	try :
7059	if max_length is not None ,	if max_length is not None :
10363	define the method __getstate__ with an argument self .	def __getstate__ ( self ) :
11729	substitute arg converted into an integer for length .	length = int ( arg )
12830	call the function t.render with an argument context_instance , return the result .	return t . render ( context_instance )
13670	define the function check_errors with argument fn .	def check_errors ( fn ) :
15888	call the method copy.deepcopy with 2 arguments : self._wrapped and memo , return the result .	return copy . deepcopy ( self . _wrapped , memo )
12823	if not ,	else :
4857	call the method logger.removeHandler with an argument handler .	logger . removeHandler ( handler )
7782	if field is not None ,	if field is not None :
9213	derive the class FileInput from the Input base class .	class FileInput ( Input ) :
8155	return self._errors .	return self . _errors
18180	define the function to_locale with an argument language .	def to_locale ( language ) :
15245	try ,	try :
8225	if max_num is None ,	if max_num is None :
148	if value is None ,	if value is None :
14978	value is an instance of ConvertingDict class , created with an argument value .	value = ConvertingDict ( value )
13349	derive the class FixUnicode from the base class fixer_base.BaseFix .	class FixUnicode ( fixer_base . BaseFix ) :
15596	define the function get_format with 3 arguments : format_type , lang set to None and use_l10n set to None .	def get_format ( format_type , lang = None , use_l10n = None ) :
8568	define the method validate_unique with an argument self .	def validate_unique ( self ) :
8506	get the type of form object , return an instance of resulting class created with 3 arguments : class_name , tuple with an element form , and form_class_attrs .	return type ( form ) ( class_name , ( form , ) , form_class_attrs )
14155	for every dict_ in self.dicts ,	for dict_ in self . dicts :
15849	get the id of the self object , use it as a key to obtain the value from the memo dictionary , substitute self with it .	memo [ id ( self ) ] = result
13941	split string s once , with STR0 as delimiter , substitute the result for t .	t = s . split ( STR0 , 1 )
13104	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
6996	increment Field.creation_counter by one .	Field . creation_counter += 1
6313	define the function get_resolver with an argument urlconf .	def get_resolver ( urlconf ) :
18017	call the method datetime.now , return the result .	return datetime . now ( )
6760	validate_ipv4_address is a instance of a RegexValidator class , created with 3 arguments : ipv4_re , return value of the call to the function _ with an argument string STR0 and string STR1 .	validate_ipv4_address = RegexValidator ( ipv4_re , _ ( STR0 ) , STR1 )
1209	convert ret to a boolean , return it .	return bool ( ret )
18107	substitute language for self.language .	self . language = language
11836	map elements of value through mapping function force_text , substitute the result for value .	value = map ( force_text , value )
6556	derive the class LocaleRegexURLResolver with RegexURLResolver as base class .	class LocaleRegexURLResolver ( RegexURLResolver ) :
11241	define the function dec with an argument func .	def dec ( func ) :
15618	return val .	return val
1421	raise an SuspiciousFileOperation exception with string STR0 as argument , replace STR1 with name .	raise SuspiciousFileOperation ( STR0 % name )
10207	call the method bytes_to_text with 2 arguments : key and self.encoding , substitute the result for key .	key = bytes_to_text ( key , self . encoding )
2449	import module os .	import os
1313	define the method path with arguments self and name .	def path ( self , name ) :
14575	call the method self.z , substitute the result for day_of_year .	day_of_year = self . z ( )
3161	call the method app_list.setdefault with 2 arguments app_config and an empty list , substitute the result for app_list_value .	app_list_value = app_list . setdefault ( app_config , [ ] )
13586	module_values is a set created from the elements of sys.modules.values method return value .	module_values = set ( sys . modules . values ( ) )
10001	get the value under the STR0 key of the self.META dictionary , substitute the result for host .	host = self . META [ STR0 ]
4186	replace STR1 in string STR0 with second and first element of the first targets row , respectively ,	self . stdout . write ( self . style . MIGRATE_LABEL ( STR0 ) + STR1 % ( targets [ 0 ] [ 1 ] , targets [ 0 ] [ 0 ] ) )
12553	call the method parser.delete_first_token .	parser . delete_first_token ( )
12434	if not ,	else :
8066	substitute initial_forms for total_forms .	total_forms = initial_forms
7900	call the method self.as_hidden with an argument only_initial set to boolean True , append the result to the result of the method , self.as_widget , return the resulting string .	return self . as_widget ( ) + self . as_hidden ( only_initial = True )
10937	for every func and args in self.filters ,	for func , args in self . filters :
4477	define the method ipython with an argument self .	def ipython ( self ) :
16037	call the function force_str with an argument url , use the result as an argument for the call to the function unquote , substitute the result for url .	url = unquote ( force_str ( url ) )
1658	set class fields _request_middleware , _view_middleware , _template_response_middleware , _response_middleware and _exception_middleware to None .	self . _request_middleware = self . _view_middleware = self . _template_response_middleware = self . _response_middleware = self . _exception_middleware = None
12150	derive the class FirstOfNode from Node base class .	class FirstOfNode ( Node ) :
15132	return result .	return result
17955	divide absolute offset by module 60 , use the result to format string STR0 , substitute it for hhmm .	hhmm = STR0 % divmod ( abs ( offset ) , 60 )
18476	return message .	return message
5634	internal_use_only is boolean True .	internal_use_only = True
12052	if length of bits is greater than integer 2 ,	if len ( bits ) > 2 :
1906	evaluate function Lock ( ) assign the result to initLock .	initLock = Lock ( )
1655	derive class BaseHandler , derive from the base class object , making this a new style class .	class BaseHandler ( object ) :
10358	delete the value under the header converted to lowercase key of the self._headers dictionary .	del self . _headers [ header . lower ( ) ]
8468	call the method self._get_validation_exclusions , substitute the result for exclude .	exclude = self . _get_validation_exclusions ( )
16750	raise an exception ,	raise
14827	substitute third element of renamed_method for deprecation_warning .	deprecation_warning = renamed_method [ 2 ]
14961	if m is true ,	if m :
2261	g is an instance of a class generator.Generator called with fp and mangle_from_ set to False .	g = generator . Generator ( fp , mangle_from_ = False )
8146	return string STR0 .	return STR0
2409	call the method filename.encode with an argument string STR0	filename . encode ( STR0 )
11230	set filter_func objec attr attribute to value .	setattr ( filter_func , attr , value )
6748	try ,	try :
2129	set value under the STR0 key of the connection_params to self.timeout .	connection_params [ STR0 ] = self . timeout
2232	call the function sanitize_address with arguments addr and encoding , for every addr in return value of the getadresses function with tuple containing val as argument , join all the results into a string separated by STR0 , substitute the result for val .	val = STR0 . join ( sanitize_address ( addr , encoding ) for addr in getaddresses ( ( val , ) ) )
15789	get the id of the self object , use it as a key to obtain the value from the memo dictionary , substitute self with it .	memo [ id ( self ) ] = self
6923	format self.day_field string with name , use it as the key for the data dictionary , substitute the result for d .	d = data . get ( self . day_field % name )
10684	take elements of token_string from second to second last element and strip the whitespaces surrounding the result , substitute the result for block_content .	block_content = token_string [ 2 : - 2 ] . strip ( )
4448	define the method check_migrations with an argument self .	def check_migrations ( self ) :
13659	if filename is not contained in _mtimes ,	if filename not in _mtimes :
9259	call the method __init__ from the base class of the class Textarea , with an argument default_attrs .	super ( Textarea , self ) . __init__ ( default_attrs )
5684	if not ,	else :
11086	substitute s for self.s .	self . s = s
9635	call the method boundary.encode with an argument string STR0 , substitute the result for boundary .	boundary = boundary . encode ( STR0 )
17826	call the method match.group with an argument integer 0 , return the result .	return match . group ( 0 )
17414	want_unicode is boolean True .	want_unicode = True
16930	create a list with count decremented by 1 number of last element of result elements , extend list result with it .	result . extend ( [ result [ - 1 ] ] * ( count - 1 ) )
18050	set real_name attribute of the self object to value of real_name attribute of trans object .	setattr ( self , real_name , getattr ( trans , real_name ) )
831	for every receiver , _ and _ in receivers ,	for receiver , _ , _ in receivers :
7659	sort fields elements with key being a lambda function with argument x and return value creation_counter filed of first element of x .	fields . sort ( key = lambda x : x [ 1 ] . creation_counter )
7618	strip whitespaces from both sides of the value , return the result .	return value . strip ( )
6691	raise a ValidationError exception with arguments self.message and code set to self.code .	raise ValidationError ( self . message , code = self . code )
15433	call the method handler.addQuickElement with 2 arguments : string STR0 and value under the STR1 key of the self.feed dictionary .	handler . addQuickElement ( STR0 , self . feed [ STR1 ] )
583	renamed methods is a tuple containing 3 elements : STR0 , STR1 and RemovedInDjango19Warning .	renamed_methods = ( ( STR0 , STR1 , RemovedInDjango19Warning ) , )
6208	call the function force_str with an argument value , substitute the result for value .	value = force_str ( value )
18596	call the function blankout with 2 arguments : t.contents and STR0 , write the result to out .	out . write ( blankout ( t . contents , STR0 ) )
14311	return val .	return val
17530	with self.mutex perform ,	with self . mutex :
5609	if r ends with string STR0 ,	if r . endswith ( STR0 ) :
14327	if default_list is None ,	if default_list is None :
927	do nothing .	pass
10909	take a tuple with 2 elements : boolean False and instance of Variable class , created with an argument constant_arg , append it to args .	args . append ( ( True , Variable ( var_arg ) ) )
4853	call the method logging.StreamHandler , substitute the result for handler .	handler = logging . StreamHandler ( )
7404	raise an ValidationError with 3 arguments : value under the STR0 key of the self.error_messages dictionary , code set to an string STR1 and dictionary params with an entry : value for STR2 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 , params = { STR2 : value } , )
16024	call the method re.sub with 3 arguments : raw string STR0 , empty string and result of the function force_text , called with an argument value , return the result .	return re . sub ( STR0 , STR , force_text ( value ) )
6585	resolved_path is an empty list .	resolved_path = [ ]
810	call the __init__ method with 3 arguments : ERROR , unpacked list args and unpacked dictionary kwargs from the base class of Error .	return super ( Error , self ) . __init__ ( ERROR , * args , ** kwargs )
13320	call the function op , return the result .	return op ( )
13728	if not ,	else :
17067	return an instance of SafeBytes , created with an argument t .	return SafeBytes ( t )
3153	if LookupError exception is caught ,	except LookupError :
14320	call the method __setitem__ from the base class of the class MultiValueDict , with 2 arguments key and list_ .	super ( MultiValueDict , self ) . __setitem__ ( key , list_ )
12457	call the method parser.delete_first_token .	parser . delete_first_token ( )
891	context_extras is an empty dictionary .	context_extras = { }
17203	substitute new_attr for self.attr .	self . attr = new_attr
17790	call the function re.compile with an argument string STR0 , substitute the result for ustring_re .	ustring_re = re . compile ( STR0 )
2070	write a newline character into self.stream file stream .	self . stream . write ( STR0 )
11912	if title is an instance of list or tuple ,	if isinstance ( title , ( list , tuple ) ) :
1214	substitute fcntl.LOCK_NB for LOCK_NB .	LOCK_NB = fcntl . LOCK_NB
5182	if name is None ,	if name is None :
1272	tr ,	try :
273	if features.needs_datetime_string_cast field of object under the db key of connections dictionary is true and current_expires is not an instance of datetime object .	if ( connections [ db ] . features . needs_datetime_string_cast and not isinstance ( current_expires , datetime ) ) :
15293	substitute smart_text for smart_str .	smart_str = smart_text
13380	call the function isabs with an argument path , if it evaluates to false ,	if not isabs ( path ) :
12743	from django.conf import settings into default name space .	from django . conf import settings
5440	get the value under the format key of the _serializers dictionary , return the Deserializer filed of the result .	return _serializers [ format ] . Deserializer
5932	if LookupError or TypeError exceptions are caught ,	except ( LookupError , TypeError ) :
14187	call the method self.__class__ with an argument list , with 2 elements : key and result of the function copy.deepcopy , called with 2 arguments : value and memo , for every key and value in result for the method self.items , return the result .	return self . __class__ ( [ ( key , copy . deepcopy ( value , memo ) ) for key , value in self . items ( ) ] )
13678	if not ,	else :
10305	define the method __init__ with 4 arguments : self , content_type set to None , status set to None , reason set to None .	def __init__ ( self , content_type = None , status = None , reason = None ) :
3699	join self.dirpath and self.file into a file path , substitute it for orig_file .	orig_file = os . path . join ( self . dirpath , self . file )
13930	convert string header to uppercase and replace all occurrences of STR0 with STR1 , substitute it for header .	header = header . upper ( ) . replace ( STR0 , STR1 )
13858	if cache_timeout is lesser than integer 0 ,	if cache_timeout < 0 :
10044	format the string STR0 by replacing scheme with self.scheme , host with return value of the self.get_host method , and path with self.path , substitute the result for current_uri .	current_uri = STR0 . format ( scheme = self . scheme , host = self . get_host ( ) , path = self . path )
12404	substitute content for self.content .	self . content = content
17247	substitute _urllib_response_moved_attributes for Module_six_moves_urllib_response._moved_attributes .	Module_six_moves_urllib_response . _moved_attributes = _urllib_response_moved_attributes
8193	if self.can_order is true ,	if self . can_order :
10365	get the value under the STR0 key of the state dictionary , convert it to a string and substitute it for value under the STR1 key of the state dictionary .	state [ STR0 ] = str ( state [ STR1 ] )
15884	if self._wrapped is empty ,	if self . _wrapped is empty :
6680	call the re.compile function with 2 arguments : raw string STR0 , STR1 , STR2 and re.IGNORECASE , substitute the result for regex .	regex = re . compile ( STR0 , re . IGNORECASE )
18757	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
17059	define the method __html__ with an argument self .	def __html__ ( self ) :
5450	serializers is an empty dictionary .	serializers = { }
1133	substitute self.closed for close .	close = self . closed
6947	s is an instance of the Select class , created with choices set to choices .	s = Select ( choices = choices )
8379	raise an ImproperlyConfigured exception with an argument string STR0or the STR1 attribute is prohibited ; form % s needs updating . `` , where STR2 is replaced with name .	raise ImproperlyConfigured ( STR0 % name )
4098	biggest_number is integer 1 .	biggest_number = 1
14829	if new_method is false and old_method is true ,	if not new_method and old_method :
5509	raise a NotImplementedError with an argument string	raise NotImplementedError ( STR0 )
8028	define the method __init__ with 7 arguments : self , data set to None , files set to None , auto_id set to an string STR0 ,	def __init__ ( self , data = None , files = None , auto_id = STR0 , prefix = None , initial = None , error_class = ErrorList ) :
15598	if use_l10n is true , or if use_l10n is None and settings.USE_L10N is true ,	if use_l10n or ( use_l10n is None and settings . USE_L10N ) :
12351	define the method render with 2 arguments : self and context .	def render ( self , context ) :
16035	if ValueError exception is caught ,	except ValueError :
4493	get shell attribute of the self object , call it and return the result .	return getattr ( self , shell ) ( )
9982	do nothing .	pass
13667	do nothing .	pass
10112	if self has an attribute STR0 ,	if hasattr ( self , STR0 ) :
7110	convert value into an floating point number , substitute it for value .	value = float ( value )
16344	for every character in name ,	for character in name :
999	if self has an attribute STR0 ,	if hasattr ( self , STR0 ) :
12148	call the method context.push with an argument var set to output , with the result perform ,	with context . push ( var = output ) :
4007	write string STR0 with STR1 where STR2 is replaced with app_label , write it for self.stderr .	self . stderr . write ( STR0 % app_label )
15070	substitute name for handler.name .	handler . name = name
7527	raise an ValidationError with 2 arguments : value under the STR0 key of the self.error_messages dictionary and code set to STR1 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 )
1500	call the function os.path.basename with argument name , substitute the result for name .	name = os . path . basename ( name )
14496	call the function _ with an argument string STR0 , return the result .	return _ ( STR0 )
15983	define the method handle_data with 2 arguments self and d .	def handle_data ( self , d ) :
7837	if not ,	else :
13184	if not ,	else :
8916	data is an empty list .	data = [ ]
7925	substitute self.html_initial_id for value under the STR0 key of the attrs dictionary .	attrs [ STR0 ] = self . html_initial_id
13967	if NotImplementedError exception is caught ,	except NotImplementedError :
11615	multiply 10 to the power of 200 , with itself , substitute the result for pos_inf .	pos_inf = 1e200 * 1e200
5793	call the self.indent method with integer 0 as an argument .	self . indent ( 0 )
13398	return final_path .	return final_path
9028	from django.utils.datastructures import MultiValueDict and MergeDict into default name space .	from django . utils . datastructures import MultiValueDict , MergeDict
10641	from django.template.debug import DebugLexer and DebugParser .	from django . template . debug import DebugLexer , DebugParser
12847	from django.utils.safestring import mark_safe into default name space .	from django . utils . safestring import mark_safe
14445	call the function get_default_timezone , substitute the result for self.timezone .	self . timezone = get_default_timezone ( )
13047	derive the class Loader from the BaseLoader base class .	class Loader ( BaseLoader ) :
13792	res is an empty string .	res = STR
15601	cache_key is a tuple with 2 argumetns : format_type and lang .	cache_key = ( format_type , lang )
5899	call the method node.getElementsByTagName with the argument string STR0 , substitute the result for keys .	keys = node . getElementsByTagName ( STR0 )
7849	self._changed_data is an empty list .	self . _changed_data = [ ]
17844	call the method re.sub with 3 arguments : string STR0 , empty string and value , strip the result of whitespaces from both ends , and convert it to lowercase , substitute the result for value .	value = re . sub ( STR0 , STR , value ) . strip ( ) . lower ( )
4082	for every migration in merge_migrations ,	for migration in merge_migrations :
2947	basedirs is a list containing tuple with strings , STR0 and STR1 .	basedirs = [ os . path . join ( STR0 , STR1 ) , STR2 ]
6584	substitute parts , without the first element , for path .	path = parts [ 1 : ]
1502	call the os.path.splitex with argument name , assign the result to name and ext , respectively .	name , ext = os . path . splitext ( name )
13564	import termios module .	import termios
2858	import module sys .	import sys
13226	self._is_rendered is boolean True .	self . _is_rendered = True
2354	call the method self.recipients , if it evaluates to false ,	if not self . recipients ( ) :
17394	return nothing .	return
8407	self._validate_unique is boolean False .	self . _validate_unique = False
3524	substitute tuple with 2 elements : bz2.BZ2File and string STR for value under the STR0 key of the self.compression_formats dictionary .	self . compression_formats [ STR0 ] = ( bz2 . BZ2File , STR1 )
8390	if not ,	else :
12805	put loaders elements in a tuple , substitute it for template_source_loaders .	template_source_loaders = tuple ( loaders )
1095	position the file pointer at the beginning of self file .	self . seek ( 0 )
7332	try ,	try :
9288	substitute string STR0 for value under the STR1 key of final_attrs dictionary .	final_attrs [ STR0 ] = STR1
10119	call the method self._mark_post_parse_error .	self . _mark_post_parse_error ( )
16963	if nesting is false ,	if not nesting :
8338	substitute value under the f.name key of the help_texts dictionary for value under the STR0 key of kwargs dictionary .	kwargs [ STR0 ] = help_texts [ f . name ]
8486	if exclude is not None ,	if exclude is not None :
5487	call the method self.handle_field with arguments obj and filed .	self . handle_field ( obj , field )
6875	if empty_label is an instance of list or tuple type ,	if isinstance ( empty_label , ( list , tuple ) ) :
12565	derive the class TemplateLiteral from Literal base class .	class TemplateLiteral ( Literal ) :
9136	define the method __deepcopy__ with arguments self and memo .	def __deepcopy__ ( self , memo ) :
4155	raise CommandError exception with STR0 , with STR1 substituted for app_label , as arguments .	raise CommandError ( STR0 % app_label )
6962	from django.forms.widgets import TextInput , NumberInput , EmailInput , URLInput , HiddenInput , MultipleHiddenInput , ClearableFileInput ,	from django . forms . widgets import ( TextInput , NumberInput , EmailInput , URLInput , HiddenInput , MultipleHiddenInput , ClearableFileInput , CheckboxInput , Select , NullBooleanSelect , SelectMultiple , DateInput , DateTimeInput , TimeInput , SplitDateTimeWidget , SplitHiddenDateTimeWidget , FILE_INPUT_CONTRADICTION )
10375	define the method get with 3 arguments : self , header and alternate set to None .	def get ( self , header , alternate = None ) :
9144	define the method subwidgets with 5 arguments : self , name , value , attrs set to None and choices set to an empty tuple .	def subwidgets ( self , name , value , attrs = None , choices = ( ) ) :
5501	raise a NotImplementedError with an argument string STR0 .	raise NotImplementedError ( STR0 )
18568	strip message_context of STR characters from both ends , substitute the result for message_context .	message_context = message_context . strip ( STR )
14232	return hard copy of self.keyOrder elements .	return self . keyOrder [ : ]
3048	for every statement in index_output ,	for statement in index_output :
15810	if self._wrapped is contained in empty ,	if self . _wrapped is empty :
2829	if app_config.models_module is None ,	if app_config . models_module is None :
15815	_wrapped is None .	_wrapped = None
6723	if code is not None	if code is not None :
8814	if not ,	else :
185	import module base64 .	import base64
6644	from django.utils.encoding import force_text into default name space .	from django . utils . encoding import force_text
1165	if close is True ,	if close :
12465	call the method token.split_contents , substitute the result for args .	args = token . split_contents ( )
9057	define the method absolute_path with 3 arguments self , path and prefix set to None .	def absolute_path ( self , path , prefix = None ) :
5431	define the function get_public_serializer_formats .	def get_public_serializer_formats ( ) :
10908	otherwise if var_arg is true ,	elif var_arg :
12700	if length of bits is not zero ,	if len ( bits ) :
14788	if middleware has an attribute STR0 ,	if hasattr ( middleware , STR0 ) :
17215	set attr.name attribute of the _MovedItemst object to attr .	setattr ( _MovedItems , attr . name , attr )
18369	substitute ngettext for ungettext .	ungettext = ngettext
15274	if strings_only and boolean return value of the call to the function is_protected_type for argument s are boolean True ,	if strings_only and is_protected_type ( s ) :
6239	import module warnings .	import warnings
9443	substitute CheckboxChoiceInput for choice_input_class .	choice_input_class = CheckboxChoiceInput
13107	if ImportError exception is caught ,	except ImportError :
6176	call the data.decode method with a string STR0 as an argument , use the result as an argument for the call to the json.load function , return the result .	return json . loads ( data . decode ( STR0 ) )
4373	requires_system_checks is boolean False .	requires_system_checks = False
3743	append orig_file to string STR0 , substitute it for new .	new = STR0 + orig_file [ 2 : ]
5563	call the method json.__version__.split with an argument STR0 , if the result is respectively greater than list containing strings STR1 , STR2 and STR3 ,	if json . __version__ . split ( STR0 ) >= [ STR1 , STR2 , STR3 ] :
15198	call the method self.add_filters with 2 arguments : logger and filters .	self . add_filters ( logger , filters )
494	substitute None for pickled .	pickled = None
18411	return None .	return None
9814	return self .	return self
11784	decorator function register.filter with an argument is_safe set to boolean True .	@ register . filter ( is_safe = True )
17642	get the first space decremented with integer 1 elements from string line , append newline character to it , and yield the result .	yield STR0 % line [ : space - 1 ]
10572	VARIABLE_ATTRIBUTE_SEPARATOR is a string STR0 .	VARIABLE_ATTRIBUTE_SEPARATOR = STR0
1699	call the method urlresolvers.RegexURLResolver with raw literal string STR0 and urlconf as the arguments , substitute the result for resolver .	resolver = urlresolvers . RegexURLResolver ( STR0 , urlconf )
4828	requires_system_checks is boolean False .	requires_system_checks = False
7197	call the method to_python with an argument value from the base class of the DateField class , return the result .	return super ( DateField , self ) . to_python ( value )
3756	help is a string STR0 .	help = ( STR0 )
12671	concatenate var_name , VARIABLE_ATTRIBUTE_SEPARATOR and fourth element of bits , use the result as an argument for the call the method , parser.compile_filter , substitute the result for expression .	expression = parser . compile_filter ( var_name + VARIABLE_ATTRIBUTE_SEPARATOR + bits [ 3 ] )
27	remove STR0 key from kwargs dictionary and put it into location , or use an empty string if key doesnt exists .	location = kwargs . pop ( STR0 , STR )
5911	call the function getInnerText with an argument node , call the strip method on the result , substitute the result for field_value .	field_value = getInnerText ( node ) . strip ( )
8935	from django.conf import settings into default name space .	from django . conf import settings
10416	try ,	try :
189	if ImportError exception occurred ,	except ImportError :
9975	from django.utils.six.moves.urllib.parse import parse_qsl , urlencode , quote , urljoin and urlsplit into default name space .	from django . utils . six . moves . urllib . parse import parse_qsl , urlencode , quote , urljoin , urlsplit
14113	define the method __copy__ with an argument self .	def __copy__ ( self ) :
5956	raise an ExternalReferenceForbidden exception with arguments context , base , sysid and pubid .	raise ExternalReferenceForbidden ( context , base , sysid , pubid )
6789	substitute the limit_value for self.limit_value .	self . limit_value = limit_value
13286	return printable representation of self.value .	return repr ( self . value )
6461	return the value under the language_code key of the self._app_dict dictionary .	return self . _app_dict [ language_code ]
14488	call the method self.Z , substitute the result for seconds .	seconds = self . Z ( )
10157	substitute encoding for self.encoding .	self . encoding = encoding
5374	if self.number is lesser than self.paginator.num_pages , return boolean True , otherwise return boolean False .	return self . number < self . paginator . num_pages
10034	if default is true and RAISE_ERROR is false ,	if default is not RAISE_ERROR :
13065	if not ,	else :
17177	if ImportError exception is caught ,	except ImportError :
12631	if InvalidTemplateLibrary , renamed to e , exception is caught ,	except InvalidTemplateLibrary as e :
787	if not ,	else :
16193	from django.utils.datastructures import MultiValueDict into default name space .	from django . utils . datastructures import MultiValueDict
16486	parts is an empty list .	parts = [ ]
18452	call the function re.compile with an argument string STR0 [ ^ STR1 ) | ( ? : STR4 ] * ? ' ) ) ( \s+.*context\s+ ( ( ? : STR2 ] * ? STR3 , substitute the result for inline_re .	inline_re = re . compile ( STR0 )
1684	call the method connections.all ( ) , perform the following for every db in the result ,	for db in connections . all ( ) :
12180	if not ,	else :
3555	increment self.fixture_count by one .	self . fixture_count += 1
4168	substitute the value under the STR0 key of options dictionary for app_label .	app_label = options [ STR0 ]
12613	call the method token.split_contents , substitute the result for bits .	bits = token . split_contents ( )
8217	for every form in self call the form.as_p method , join the results in a string , separated by an empty string .	forms = STR . join ( form . as_p ( ) for form in self )
17295	_iteritems is a string STR0 .	_iteritems = STR0
15564	use global variables _format_cache and _format_modules_cache .	global _format_cache , _format_modules_cache
2851	define the method handle with 3 arguments : self , unpacked list args and unpacked dictionary options .	def handle ( self , * args , ** options ) :
9279	define the function boolean_check with an argument v .	def boolean_check ( v ) :
7434	substitute SelectMultiple for widget .	widget = SelectMultiple
9174	remover the entry under the STR0 key of the attrs dictionary , substitute it for self.input_type , if the key doesnt exists , substitute self.input_type for self.input_type .	self . input_type = attrs . pop ( STR0 , self . input_type )
3561	for every obj in objects ,	for obj in objects :
18326	return t .	return t
2631	call the method self.error with an argument self.cmd.missing_args_message .	self . error ( self . cmd . missing_args_message )
11357	if lib is true ,	if lib :
13110	from django.conf import settings into default name space .	from django . conf import settings
15958	if not ,	else :
4984	return output .	return output
14120	define the method getlist with 2 arguments : self and key .	def getlist ( self , key ) :
16242	if year is lesser than integer 70 ,	if year < 70 :
1001	return the printable representation of the self object converted to a list .	return repr ( list ( self ) )
5246	return boolean False .	return False
10482	url is a property of the class , lambda function is getter attribute with an argument self and return value is the value under the STR0 key of the self dictionary .	url = property ( lambda self : self [ STR0 ] )
334	call the method self.validate_key with argument key .	self . validate_key ( key )
12801	for every loader_name in settings.TEMPLATE_LOADERS ,	for loader_name in settings . TEMPLATE_LOADERS :
9310	call the method self.render_options with 2 arguments : choices and list with an entry , value , substitute the result for options .	options = self . render_options ( choices , [ value ] )
16882	append ch to result .	result . append ( ch )
4018	call the method self.handle_merge with 2 arguments : loader and conflicts , return the result .	return self . handle_merge ( loader , conflicts )
14676	call the function datetime with an argument unpacked list kw , return the result .	return datetime ( * kw )
9962	import module re .	import re
3664	from django.core.management.utils import handle_extensions , find_command and popen_wrapper into default name space .	from django . core . management . utils import ( handle_extensions , find_command , popen_wrapper )
8555	define the method save_existing with 4 arguments : self , form , instance and commit set to boolean True .	def save_existing ( self , form , instance , commit = True ) :
214	substitute CacheEntry for self.cache_model_class .	self . cache_model_class = CacheEntry
10865	substitute i for self.pointer .	self . pointer = i
10559	from django.utils.formats import localize into default name space .	from django . utils . formats import localize
932	derive the class DisallowedRedirect from the SuspiciousOperation base class .	class DisallowedRedirect ( SuspiciousOperation ) :
18687	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
1581	raise an NotImplementedError with argument string STR0 .	raise NotImplementedError ( STR0 )
14377	if STR0 is contained in kwargs ,	if STR0 in kwargs :
1077	for every chunk in return value of the method self.chunks ,	for chunk in self . chunks ( ) :
2386	call the method mimetype.split with arguments : character STR0 and integer 1 , substitute the result for basetype and subtype , respectively .	basetype , subtype = mimetype . split ( STR0 , 1 )
1098	if not ,	else :
10753	while self.tokens is true ,	while self . tokens :
1942	if script_url is true ,	if script_url :
594	property decorator ,	@ property
16288	join elements of base36 into a string , return it .	return STR . join ( base36 )
15886	get the id of the self object , use it as a key to obtain the value from the memo dictionary , substitute self with it .	memo [ id ( self ) ] = result
17845	call the function re.sub with 3 arguments : string STR0 , string STR1 and value , use the result as an argument for the call to the , mark_safe function , return the result .	return mark_safe ( re . sub ( STR0 , STR1 , value ) )
4707	raise an CommandError with an argument string STR0 , where STR1 is replaced with migration_name and app_label .	raise CommandError ( STR0 % ( migration_name , app_label ) )
11636	return input_val .	return input_val
1490	substitute size for self.size .	self . size = size
17544	define the method writer with an argument self .	def writer ( self ) :
14881	return result .	return result
12877	get value under the BLOCK_CONTEXT_KEY key of context.render_context dictionary , substitute it for block_context .	block_context = context . render_context . get ( BLOCK_CONTEXT_KEY )
16436	define the function _explode_shorthand_ip_string with an argument ip_str .	def _explode_shorthand_ip_string ( ip_str ) :
16799	return boolean True .	return True
15798	decorator function wraps with an argument func .	@ wraps ( func )
12835	for every template_name in template_name_list ,	for template_name in template_name_list :
16852	derive the class Group from list base class .	class Group ( list ) :
14756	define the function decorator_from_middleware with an argument middleware_class .	def decorator_from_middleware ( middleware_class ) :
16327	if package doesnt have an STR0 attribute ,	if not hasattr ( package , STR0 ) :
15787	call the function sself.__cast with an argument self , divide the result with rhs and return the reminder of the division .	return self . __cast ( ) % rhs
854	return check .	return check
14661	call the function strftime with 2 arguments : self and fmt , return the result .	return strftime ( self , fmt )
2236	if name converted to lower case equals to string STR0 ,	if name . lower ( ) == STR0 :
15575	format_module_path is a list containing an element format_module_path .	format_module_path = [ format_module_path ]
12855	convert elements of defaultdict to list , substitute it for self.blocks .	self . blocks = defaultdict ( list )
6532	create a list of tuples out of 2 lists : appended params list to prefix_args and text_args , covert the result into a dictionary , substitute it for candidate_subs .	candidate_subs = dict ( zip ( prefix_args + params , text_args ) )
8001	from django.forms.fields import IntegerField and BooleanField into default name space .	from django . forms . fields import IntegerField , BooleanField
4988	for model in router.get_migratable_models method return value , called with 3 arguments : app_config , connection.alias ,	for model in router . get_migratable_models ( app_config , connection . alias , include_auto_created = True ) :
6429	call the method lookups.appendlist with 2 arguments : name and a tuple containing 3 elements : new_matches , sum of p_pattern and pat , and dictionary created by applying defaults mapping on the pattern.default_kwargs dictionary .	lookups . appendlist ( name , ( new_matches , p_pattern + pat , dict ( defaults , ** pattern . default_kwargs ) ) )
16445	if length of hextet is greater than integer 1 ,	if len ( hextet ) > 1 :
727	settings.BASE_DIR .	settings . BASE_DIR
12323	return boolean False .	return False
453	call the function pickle.load with argument f , substitute the result for exp .	exp = pickle . load ( f )
12060	if TypeError exception is caught ,	except TypeError :
17447	call the function meta with 3 arguments : name , base and d .	return meta ( name , bases , d )
14473	return integer 12 .	return 12
2825	if AttributeError exception is caught ,	except AttributeError :
8421	if field is not contained in self.fields ,	if field not in self . fields :
2541	curr is an empty string .	curr = STR
14440	define the method __init__ with 2 arguments : self and obj .	def __init__ ( self , obj ) :
12412	substitute asvar for self.asvar .	self . asvar = asvar
17507	define the method reader_leaves with an argument self .	def reader_leaves ( self ) :
11244	define the method render with 2 arguments self and context .	def render ( self , context ) :
5483	for every field in concrete_model._meta.local_fields ,	for field in concrete_model . _meta . local_fields :
18704	define the method __repr__ with an argument self .	def __repr__ ( self ) :
1558	derive the class SkipFile from the UploadFileException base class .	class SkipFile ( UploadFileException ) :
15116	if string STR0 is not contained in e converted into a string ,	if STR0 not in str ( te ) :
11235	if not ,	else :
4114	from django.core.management.color import no_style into default name space .	from django . core . management . color import no_style
7987	substitute self.form.auto_id for auto_id .	auto_id = self . form . auto_id
12689	call the method token.split_contents , substitute the result for bits .	bits = token . split_contents ( )
8429	if not ,	else :
12241	substitute nodelist_true and nodelist_false for self.nodelist_true and self.nodelist_false , respectively .	self . nodelist_true , self . nodelist_false = nodelist_true , nodelist_false
12361	substitute nodelist for self.nodelist .	self . nodelist = nodelist
8978	instantiate ValidationError class with an argument self.data , return its field error_list .	return ValidationError ( self . data ) . error_list
9733	for every handler in handlers ,	for handler in handlers :
13525	call the method self._archive.printdir with 2 arguments : unpacked list args and unpacked dictionary kwargs .	self . _archive . printdir ( * args , ** kwargs )
3681	substitute locale_dir for self.locale_dir .	self . locale_dir = locale_dir
16669	substitute last for value under the PREV key of the link dictionary .	link [ PREV ] = last
18034	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
17248	instantiate class Module_six_moves_urllib_response with an argument , string STR0 appended to __name__ , assign it to value under the string STR1 appended to __name__ key of the sys.modules dictionary , and to value under the string STR2 appended to __name__ key of the sys.modules dictionary .	sys . modules [ __name__ + STR0 ] = sys . modules [ __name__ + STR1 ] = Module_six_moves_urllib_response ( __name__ + STR2 )
11458	define the method __iter__ with an argument self .	def __iter__ ( self ) :
7934	call the method self.as_widget with 3 arguments : instance of a class Textarea , attrs and unpacked dictionary kwargs , return the result .	return self . as_widget ( Textarea ( ) , attrs , ** kwargs )
17791	define the function javascript_quote with 2 arguments : s and quote_double_quotes set to boolean False .	def javascript_quote ( s , quote_double_quotes = False ) :
15586	call the function import_module with an argument string STR0 formated with location , which is formated with loc , yield the result .	yield import_module ( STR0 % ( location % loc ) )
4154	if app_label is not contained in executor.loader.migrated_apps ,	if app_label not in executor . loader . migrated_apps :
7342	substitute third element of url_fields for second element of url_fields .	url_fields [ 1 ] = url_fields [ 2 ]
12623	return an instance of a SsiNode class , created with 2 arguments : filepath and parsed .	return SsiNode ( filepath , parsed )
2684	if not ,	else :
1031	define the method __len__ with argument self .	def __len__ ( self ) :
16734	msg is a string STR1 , where STR2 is replaced with error_prefix , dotted_path and e , respectively .	msg = STR1 % ( error_prefix , dotted_path , e )
1452	substitute os.unlink for unlink .	unlink = os . unlink
5683	skip this loop iteration ,	continue
10053	assign the settings.SECURE_PROXY_SSL_HEADER to header and value , respectively .	header , value = settings . SECURE_PROXY_SSL_HEADER
7730	html_class_attr is an empty string .	html_class_attr = STR
3877	define the method remove_potfiles with an argument self .	def remove_potfiles ( self ) :
18080	try ,	try :
9592	if not ,	else :
921	derive the class ObjectDoesNotExist from the Exception base class .	class ObjectDoesNotExist ( Exception ) :
17647	call the function _generator , join the result into a string , return the result .	return STR . join ( _generator ( ) )
15399	get the value under the date_key key of the item dictionary , substitute it for item_date .	item_date = item . get ( date_key )
16975	return integer 1 and ch2 .	return 1 , ch2
13078	if not ,	else :
12197	substitute length of self.loopvars for num_loopvars .	num_loopvars = len ( self . loopvars )
16437	call the function _is_shorthand_ip with an argument ip_str , if it evaluates to false ,	if not _is_shorthand_ip ( ip_str ) :
5888	value is None .	value = None
2361	append filename to the self.attachments list .	self . attachments . append ( filename )
12383	try ,	try :
2805	raise an NotImplementedError exception with an argument string STR0 .	raise NotImplementedError ( STR0 )
5964	derive the class DefusedXmlException from the ValueError base class .	class DefusedXmlException ( ValueError ) :
3248	append a tuple containing 2 elemetns : model and deps , to skipped .	skipped . append ( ( model , deps ) )
17366	convert byte to its integer representation , return all of the results for every byte in buf .	return ( ord ( byte ) for byte in buf )
17261	append string STR0 to __name__ , use it as an key to get the value from the sys.modules dictionary , substitute it for robotparser .	robotparser = sys . modules [ __name__ + STR0 ]
11469	use global variable _standard_context_processors .	global _standard_context_processors
17536	otherwise if self.waiting_readers is not equal to integer 0 ,	elif self . waiting_readers != 0 :
94	derive the class BaseCache from the object base class .	class BaseCache ( object ) :
3224	substitute field.rel.to with rel_model .	rel_model = field . rel . to
13118	concatenate string STR0 and template_name , substitute the result for pkg_name .	pkg_name = STR0 + template_name
14229	define the method items with an argument self .	def items ( self ) :
15875	define the method _setup with an argument self .	def _setup ( self ) :
735	increment weight by integer 2 .	weight += 1
17235	derive class Module_six_moves_urllib_request from the _LazyModule base class .	class Module_six_moves_urllib_request ( _LazyModule ) :
12710	return an instance of a URLNode class , created with 4 arguments viewname , args , kwargs and asvar .	return URLNode ( viewname , args , kwargs , asvar )
5486	if self.selected_fields is None or field.attname is contained in self.selected_fields	if self . selected_fields is None or field . attname in self . selected_fields :
8987	define the method as_text with an argument self .	def as_ul ( self ) :
6548	get the attribute STR0 from the getattr , if it exists substitute it for m , if not , m is None .	m = getattr ( lookup_view , STR0 , None )
2664	output_transaction is boolean False .	output_transaction = False
778	if self equals to other return boolean False , otherwise return True .	return not ( self == other )
8992	for every e in self , append convert e to an string and append it to string STR0 , join all of the results into a string separated by newline character , return the result .	return STR0 . join ( STR1 % e for e in self )
12672	return an instance of a RegroupNode class , created with 3 arguments target , expression and var_name .	return RegroupNode ( target , expression , var_name )
5410	create a instance of a class BadSerializerModule from the object base class , with elements Deserializer set to bad_serializer and Serializer set to bad_serializer .	module = type ( STR0 , ( object , ) , { STR1 : bad_serializer , STR2 : bad_serializer , } )
18222	if value under the STR0 key of the kwargs dictionary is equal to string STR1 or strnig STR2 ,	if kwargs [ STR0 ] in ( STR1 , STR2 ) :
16628	define the function lru_cache with 2 arguments maxsize set to integer 100 and typed set to boolean False .	def lru_cache ( maxsize = 100 , typed = False ) :
6833	import module datetime .	import datetime
6443	self._populated is boolean True .	self . _populated = True
5763	if stream_or_string is an instance of the six.string_types ,	if isinstance ( stream_or_string , six . string_types ) :
5896	return None .	return None
6692	try ,	try :
11095	if context.autoescape is true and value is not an instance of SafeData , or value is an instance of EscapeData ,	if ( ( context . autoescape and not isinstance ( value , SafeData ) ) or isinstance ( value , EscapeData ) ) :
62	delete the attribute name from the cache dictionary under the DEFAULT_CACHE_ALIAS key .	return delattr ( caches [ DEFAULT_CACHE_ALIAS ] , name )
15344	if six.PY2 ,	if six . PY2 :
16668	substitute link for values under the NEXT key of the last dictionary and PREV key of the root dictionary .	last [ NEXT ] = root [ PREV ] = link
17701	html4_singlets is a tuple with 9 elements : strings STR , STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 and STR7 .	html4_singlets = ( STR , STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 , STR7 )
3207	raise CommandError with an argument string STR0 , where STR1 is replaced with e .	raise CommandError ( STR0 % e )
7470	if ValueError , TypeError or ValidationError exception is caught ,	except ( ValueError , TypeError , ValidationError ) :
8825	self.empty_label is None .	self . empty_label = None
8416	call the method formfield.queryset.complex_filter with an argument limit_choices_to , substitute the result for formfield.queryset .	formfield . queryset = formfield . queryset . complex_filter ( limit_choices_to )
14951	raise an ValueError exception with an argument string STR0 formated with value .	raise ValueError ( STR0 % value )
12539	call the method parser.parse with an argument tuple with an element string STR0 , substitute the result for nodelist_empty .	nodelist_empty = parser . parse ( ( STR0 , ) )
11103	return a string STR0 , substitute STR1 with self.filter_expression .	return STR0 % self . filter_expression
13569	import pyinotify module .	import pyinotify
14108	try ,	try :
793	in the string STR0 , replace STR1 with the name of the type of this class instance , replace all the STR2 with self.level , self.msg , self.hint . self.obj and self.id , respectively , return the result .	return STR0 % ( self . __class__ . __name__ , self . level , self . msg , self . hint , self . obj , self . id )
748	decorator register with argument Tags.compatibility .	@ register ( Tags . compatibility )
17877	define the function timeuntil with 2 arguments , d and now defaulting to none .	def timeuntil ( d , now = None ) :
8359	get STR0 attribute from the options object , if it exists substitute it for self.exclude , if not self.exclude is None .	self . exclude = getattr ( options , STR0 , None )
10799	update self.tags dictionary with lib.tags .	self . tags . update ( lib . tags )
15087	append i-th element of existing to child_loggers .	child_loggers . append ( existing [ i ] )
7951	if contents is false , substitute self.label for contents .	contents = contents or self . label
12026	call the function ungettext with 3 arguments : string STR0 , string STR1 and 0 , STR2 is replaced with 0 , substitute the result for value .	value = ungettext ( STR0 , STR1 , 0 ) % { STR2 : 0 }
2392	call the method content.message , substitute the result for content .	content = content . message ( )
4490	if shell is true substitute list with element shell for available_shells , if not substitute self.shells for available_shells .	available_shells = [ shell ] if shell else self . shells
4571	get the value under the STR0 key of the options dictionary , use it as the key to get the value from the connections dictionary , substitute the result for connection .	connection = connections [ options [ STR0 ] ]
1482	from django.core.files.base import File into default name space .	from django . core . files . base import File
351	do nothing .	pass
6310	raise an ViewDoesNotExist exception with an argument string STR0 , where string STR1 is replaced by mod_name and func_name , respectively .	raise ViewDoesNotExist ( STR0 % ( mod_name , func_name ) )
14523	call the method self.data.weekday , use the result as an key for obtaining WEEKDAYS_ABBR dictionary value , return it .	return WEEKDAYS_ABBR [ self . data . weekday ( ) ]
8307	value under f.name key of the dta dictionary is an empty list .	data [ f . name ] = [ ]
6739	if UnicodeError exception is caught ,	except UnicodeError :
6683	define the method __init__ with 3 arguments : self , schemes set to None and unpacked dictionary kwargs .	def __init__ ( self , schemes = None , ** kwargs ) :
4754	from django.core.management.base import CommandError into default name space .	from django . core . management . base import CommandError
11566	if e doesnt have an STR0 attribute ,	if not hasattr ( e , STR0 ) :
5186	message is a string STR0 .	message = STR0
2319	if not ,	else :
10262	if not ,	else :
1841	call the function BytesIO with self.buffer as argument , store the result is sio .	sio = BytesIO ( self . buffer )
9500	append string STR0 to id_ .	id_ += STR0
1291	from django.utils.deconstruct import deconstructible into default name space .	from django . utils . deconstruct import deconstructible
4343	call the method warnings.warn with 2 arguments : string STR0 , and RemovedInDjango19Warning .	warnings . warn ( STR0 , RemovedInDjango19Warning )
5507	do nothing .	pass
15868	call the function new_method_proxy with an argument len , substitute the result for __len__ .	__len__ = new_method_proxy ( len )
12749	define the method __init__ with 3 arguments : self , unpacked list args and unpacked dictionary kwargs .	def __init__ ( self , * args , ** kwargs ) :
8297	data is an empty dictionary .	data = { }
1773	if settings.DEBUG_PROPAGATE_EXCEPTIONS is True ,	if settings . DEBUG_PROPAGATE_EXCEPTIONS :
11463	define the method get with 3 arguments : self , key and otherwise set to None .	def get ( self , key , otherwise = None ) :
18694	derive the class FixedOffset from the tzinfo base class .	class FixedOffset ( tzinfo ) :
8863	if value is contained in self.empty_values ,	if value in self . empty_values :
17621	from django.utils.encoding import force_unicode .	from django . utils . encoding import force_unicode
4047	substitute STR1 in a string STR0 with return value of the operation.describe method , write the result to self.stdout .	self . stdout . write ( STR0 % operation . describe ( ) )
11183	substitute args for self.args .	self . args = args
7518	raise an ValidationError with 2 arguments : value under the STR0 key of the self.error_messages dictionary and code set to STR1 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 )
3546	call the method self.stdout.write with an argument string STR0 , where STR1 is replaced with self.loaded_object_count and self.fixture_count , respectively .	self . stdout . write ( STR0 % ( self . loaded_object_count , self . fixture_count ) )
12458	return an instance of AutoEscapeControlNode with 2 arguments : boolean exception arg equals to string STR0 , and nodelist .	return AutoEscapeControlNode ( ( arg == STR0 ) , nodelist )
16099	set use_workaround to boolean True if current_version tuple elements are smaller than the tuple ( 2,7,3 ) , respectively , or if current_version is greater than ( 3,0 ) , but smaller than ( 3,2,3 ) , otherwise set use_workaround to boolean False .	use_workaround = ( ( current_version < ( 2 , 7 , 3 ) ) or ( current_version >= ( 3 , 0 ) and current_version < ( 3 , 2 , 3 ) ) )
6733	raise a ValidationError exception with arguments self.message and code set to self.code .	raise ValidationError ( self . message , code = self . code )
5432	f _serializers is false ,	if not _serializers :
4078	if not ,	else :
13917	return None .	return None
12267	child_nodelists is a tuple with 2 elements strings STR0 and STR1 .	child_nodelists = ( STR0 , STR1 )
10565	TOKEN_TEXT is integer 0	TOKEN_TEXT = 0
4314	if invalid_apps in not empty ,	if invalid_apps :
17939	define the method tzname with 2 arguments : self and dt .	def tzname ( self , dt ) :
6672	if self.inverse_match equals to return value of the self.regex.search method converted to boolean , called with argument force_text ( value ) ,	if not ( self . inverse_match is not bool ( self . regex . search ( force_text ( value ) ) ) ) :
15782	define the method __mod__ with 2 arguments : self and rhs .	def __mod__ ( self , rhs ) :
11650	sum absolute p with units an integer 1 , substitute the result for prec .	prec = abs ( p ) + units + 1
5354	define the method _get_page_range with an argument self .	def _get_page_range ( self ) :
13418	remove symlink_path file .	os . remove ( symlink_path )
4673	define the method handle_app_config with 3 arguments : self , app_config and unpacked dictionary options .	def handle_app_config ( self , app_config , ** options ) :
13773	append value to the self.sign , return the result .	return self . sign + value
16148	slice the rawdata string from the k-th to the endpos-th index , remove the whitespaces from the start and the end of the string , substitute it for end .	end = rawdata [ k : endpos ] . strip ( )
2622	from django.utils.encoding import force_st into default name space .	from django . utils . encoding import force_str
3299	if value under the STR0 key of the options dictionary is true ,	if options . get ( STR0 ) :
5485	if field.rel is None ,	if field . rel is None :
51	substitute cache for value under the alias key of self._caches.caches dictionary .	self . _caches . caches [ alias ] = cache
2320	self.bcc is an empty list .	self . bcc = [ ]
5678	for every d in object_list ,	for d in object_list :
17443	substitute type.__init__ for __init__ .	__init__ = type . __init__
2930	return boolean False .	return False
10830	take subject elements from p-th to i-th index , substitute it for s .	s = subject [ p : i ]
15410	define the method write with 3 arguments : self , outfile and encoding .	def write ( self , outfile , encoding ) :
11004	if self.message_context is true ,	if self . message_context :
7614	call the __init__ method with unpacked list args and unpacked dictionary kwargs from the base class of the IPAddressField class .	super ( IPAddressField , self ) . __init__ ( * args , ** kwargs )
14786	if middleware has an attribute STR0 ,	if hasattr ( middleware , STR0 ) :
10068	substitute val for self._encoding .	self . _encoding = val
14331	define the method appendlist with 3 arguments : self , key and value .	def appendlist ( self , key , value ) :
13241	define the method nud with 2 arguments : self and parser .	def nud ( self , parser ) :
12646	for every taglib in bits without the first element ,	for taglib in bits [ 1 : ] :
18775	assign integer 2 to parts if third element of version equals to zero , otherwise assign it integer 3 .	parts = 2 if version [ 2 ] == 0 else 3
15136	get the value under f key of dictionary under STR0 key of self.config dictionary , use the result as an argument for the call to the method filterer.addFilter .	filterer . addFilter ( self . config [ STR0 ] [ f ] )
739	call the Warning function with 3 arguments : hint tuple containing one string , Django 1.6 introduced a new default test runner . It looks like this project was generated using Django 1.5 or earlier . You should ensure your tests are all running & behaving as expected . See https : //docs.djangoproject.com/en/dev/releases/1.6/ # new-test-runner for more information . `` , obj set to None and id set to a string STR0 , put the result into a list and return it .	return [ Warning ( STR0 , hint = ( STR1 ) , obj = None , id = STR2 , ) ]
9638	for every x in upload_handlers if x.chunk_size is true , append x.chunk_size to a list , substitute the result for possible_sizes .	possible_sizes = [ x . chunk_size for x in upload_handlers if x . chunk_size ]
14154	define the method has_key with 2 arguments : self and key .	def has_key ( self , key ) :
12619	parsed is boolean True .	parsed = True
996	divide message by error.params , substitute the residue of the division for message .	message %= error . params
2823	try ,	try :
3835	if not ,	else :
13395	get the unicode representation of the absolute path of base , substitute it for base_path .	base_path = abspathu ( base )
5920	if not ,	else :
3913	raise an CommandError with an argument string STR0 ,	raise CommandError ( STR0 % file_path )
612	call the method self.make_key with key and version set to version as arguments , substitute the result for key .	key = self . make_key ( key , version = version )
7628	if value is true and character STR0 is contained in value ,	if value and STR0 in value :
4010	call the method loader.detect_conflicts , substitute the result for conflicts .	conflicts = loader . detect_conflicts ( )
12198	if num_loopvars is greater than integer 1 , unpack is an boolean True , otherwise is an boolean False .	unpack = num_loopvars > 1
2629	define the method parse_args with 3 arguments : self , args set to None and namespace set to None .	def parse_args ( self , args = None , namespace = None ) :
2405	substitute DEFAULT_ATTACHMENT_MIME_TYPE for mimetype .	mimetype = DEFAULT_ATTACHMENT_MIME_TYPE
15129	if not ,	else :
14119	return default .	return default
3116	call the function warnings.warn with an argument string STR0 , and RemovedInDjango19Warning .	warnings . warn ( STR0 , RemovedInDjango19Warning )
13383	define the function upath with an argument path .	def upath ( path ) :
15856	if not ,	else :
10766	raise AttributeError exception ,	raise AttributeError
2700	call the method parser.add_option with 8 arguments : string STR0 , string STR1 , action set to string STR2 ,	parser . add_argument ( STR0 , STR1 , action = STR2 , dest = STR3 , default = STR4 , type = int , choices = [ 0 , 1 , 2 , 3 ] , help = STR5 )
15938	call the function re.compile with raw string STR0 , substitute the result for unencoded_ampersands_re .	unencoded_ampersands_re = re . compile ( STR0 )
5067	from django.utils.six.moves.urllib.request import urlretrieve into default name space .	from django . utils . six . moves . urllib . request import urlretrieve
4720	if not ,	else :
15703	define the method __get__ with 3 arguments : self , instance and name type to None .	def __get__ ( self , instance , type = None ) :
6720	define the __init__ method with 4 arguments : self , message set to None , code set to None and whitelist set to None .	def __init__ ( self , message = None , code = None , whitelist = None ) :
11443	substitute current_app for self.current_app .	self . current_app = current_app
2627	substitute cmd for self.cmd .	self . cmd = cmd
4351	call the function runfastcgi with an argument args .	runfastcgi ( args )
3316	help is an string STR0 .	help = STR0
683	call method __init__ from the base class of the class PyLibMCCache with arguments : server , params , library set to pylibmc and value_not_found_exception set to pylibmc.NotFound .	super ( PyLibMCCache , self ) . __init__ ( server , params , library = pylibmc , value_not_found_exception = pylibmc . NotFound )
3787	put elements of ignore_patterns into a set , substitute the length of it for self.ignore_patterns .	self . ignore_patterns = list ( set ( ignore_patterns ) )
13136	substitute settings.TEMPLATE_DIRS for template_dirs .	template_dirs = settings . TEMPLATE_DIRS
9540	__all__ is a list of strings , STR0 , STR1 , STR2 , STR3 , STR4 ,	__all__ = [ STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 , STR7 , STR8 , STR9 , STR10 , STR11 , STR12 , STR13 , STR14 , STR15 , STR16 , STR17 , STR18 , STR19 , STR20 , STR21 , STR22 , ]
17116	__version__ is a string STR0 .	__version__ = STR0
16384	if best_doublecolon_end equals length of hextets ,	if best_doublecolon_end == len ( hextets ) :
7078	if max_value is not None ,	if max_value is not None :
11698	define the function title with an argument value .	def title ( value ) :
9258	update default_attrs dictionary with attrs entry .	default_attrs . update ( attrs )
7545	if initial is None ,	if initial is None :
17368	assign StringIO.StringIO to StringIO and BytesIO .	StringIO = BytesIO = StringIO . StringIO
17314	define the function get_unbound_function with an argument unbound .	def get_unbound_function ( unbound ) :
9644	define the method parse with an argument self .	def parse ( self ) :
10851	raise an TemplateSyntaxError exception with an argument STR0 , where STR1 is replaced with subject .	raise TemplateSyntaxError ( STR0 % subject )
11695	return an empty string .	return STR
2587	call the settings.INSTALLED_APPS .	settings . INSTALLED_APPS
18417	define the function get_language_from_request with 2 arguments : request and check_path set to boolean False .	def get_language_from_request ( request , check_path = False ) :
5283	path is an list containing path .	path = [ path ]
16383	sum best_doublecolon_start and best_doublecolon_len , substitute the result for best_doublecolon_end ,	best_doublecolon_end = ( best_doublecolon_start + best_doublecolon_len )
7102	default_error_messages is an dictionary with an initial entry : result of the function _ called with an argument string , STR0 for STR1 .	default_error_messages = { STR0 : _ ( STR1 ) , }
14227	substitute _iterkeys for iterkeys .	iterkeys = _iterkeys
3853	call the method self.remove_potfiles .	self . remove_potfiles ( )
7410	if value equals k2 or text_value equals return value of the function force_text called with argument k2 ,	if value == k2 or text_value == force_text ( k2 ) :
16657	if not ,	else :
8939	from django.utils.translation import ugettext_lazy as _ into default name space .	from django . utils . translation import ugettext_lazy as _
14600	if call to the method self.L evaluates to true , and result of the call to the method self.data.month is greater than integer 2 ,	if self . L ( ) and self . data . month > 2 :
6942	if not ,	else :
16264	if six.PY2 is true and value is greater than sys.maxint ,	if six . PY2 and value > sys . maxint :
1499	if name is not None ,	if name is not None :
14443	if obj is an instance of datetime.datetime ,	if isinstance ( obj , datetime . datetime ) :
15073	raise an ValueError exception with an argument string STR0 formated with name and e .	raise ValueError ( STR0 % ( name , e ) )
15521	call the method handler.addQuickElement with 3 arguments : string STR2 , an empty string and a dictionary with 2 entries : value under the STR3 key of item dictionary for STR4 and STR0 for STR1 .	handler . addQuickElement ( STR0 , STR , { STR1 : item [ STR4 ] , STR2 : STR3 } )
1778	if resolver.urlconf_module is None :	if resolver . urlconf_module is None :
2020	if email_messages is false ,	if not email_messages :
10745	call the method self.compile_function_error with 2 arguments token and e , if it evaluates to false ,	if not self . compile_function_error ( token , e ) :
648	return val .	return val
8038	define the method __str__ with an argument self .	def __str__ ( self ) :
1183	substitute c_ulong for ULONG_PTR .	ULONG_PTR = c_ulong
1846	call the sio.read method , substitute the result for self.buffer .	self . buffer = sio . read ( )
12837	call the function get_template with 2 arguments template_name and dirs , return the result .	return get_template ( template_name , dirs )
1233	if ImportError exception occurred ,	except ImportError :
100	if ValueError or TypeError exceptions occurred ,	except ( ValueError , TypeError ) :
7758	substitute last element of output for last_row .	last_row = output [ - 1 ]
15694	get the value under the mem_args key of the cache dictionary , return it .	return cache [ mem_args ]
17081	return an instance of SafeText , created with an argument t .	return SafeText ( t )
13588	if only_new is true ,	if only_new :
15867	call the function new_method_proxy with an argument operator.delitem , substitute the result for __delitem__ .	__delitem__ = new_method_proxy ( operator . delitem )
12054	substitute first 2 elements of bits for singular_suffix and plural_suffix , respectively .	singular_suffix , plural_suffix = bits [ : 2 ]
3049	execute statement on the database that curs points to .	curs . execute ( statement )
3866	if six.PY2 is true ,	if six . PY2 :
330	call the method self.validate_key with argument key .	self . validate_key ( key )
16051	if middle ends with punctuation ,	if middle . endswith ( punctuation ) :
8286	if f.name is contained in cleaned_data ,	if f . name in cleaned_data :
6667	if self.flags is true and self.regex is not an instance of a six.string_types type ,	if self . flags and not isinstance ( self . regex , six . string_types ) :
17580	return value under the DEFAULT_PALETTE key of the PALETTES dictionary .	return PALETTES [ DEFAULT_PALETTE ]
13654	for every filename in gen_filenames ( ) ,	for filename in gen_filenames ( ) :
16118	replace STR0 in the string STR1 with the result of the function call tag.lower ( ) , use it and the re.I as the input arguments for function re.compile , put the result in the self.interesting .	self . interesting = re . compile ( STR0 % tag . lower ( ) , re . I )
14640	convert elements of tzinfo from indexes 1 to 3 to an integer , multiply it by integer 60 and increment it by offset_mins , substitute the result for offset .	offset = 60 * int ( tzinfo [ 1 : 3 ] ) + offset_mins
8476	if not ,	else :
2350	return msg .	return msg
14094	import module warnings .	import warnings
5039	if app_config.models_module is None ,	if app_config . models_module is None :
5446	call the get_deserializer function with an argument format , substitute the result for d .	d = get_deserializer ( format )
12214	call the function warnings.warn with 2 arguments : string STR0 formated with num_loopvars and len_item , respectively , and RemovedInDjango20Warning .	warnings . warn ( STR0 . format ( num_loopvars , len_item ) , RemovedInDjango20Warning )
17364	get the integer representation of the i-th element of buf , return it .	return ord ( buf [ i ] )
2293	call the method MIMEText.__setitem__ with arguments self , name and val .	MIMEText . __setitem__ ( self , name , val )
6841	from django.utils import six into default name space .	from django . utils import six
13335	call the method self.next_token , substitute the result for self.current_token .	self . current_token = self . next_token ( )
13431	instantiate Archive class with an argument path , with it renamed to archive , perform ,	with Archive ( path ) as archive :
12346	return an string STR0 , where STR1 is replaced with e .	return STR0 % e
13611	if filename is empty ,	if not filename :
13790	substitute first element of to_digits for res .	res = to_digits [ 0 ]
5728	call the method apps.get_model with an argument model_identifier .	return apps . get_model ( model_identifier )
16317	call the function urlparse with an argument url , substitute the result for url_info .	url_info = urlparse ( url )
2662	_called_from_command_line is boolean False .	_called_from_command_line = False
17423	break from the loop execution .	break
10706	substitute tokens for self.tokens .	self . tokens = tokens
2646	substitute None for self.style_func .	self . style_func = None
2864	if supported_platform is False or is_a_tty is False ,	if not supported_platform or not is_a_tty :
3782	get the value under the STR0 key of the options dictionary , substitute it for extensions .	extensions = options . get ( STR0 )
7287	define the method clean with arguments self , data and initial set to None .	def clean ( self , data , initial = None ) :
4561	from django.db import connections and DEFAULT_DB_ALIAS into default name space .	from django . db import connections , DEFAULT_DB_ALIAS
1353	call the os.umask function with argument integer 0 , substitute the result for old_umask .	old_umask = os . umask ( 0 )
9030	from django.utils.html import conditional_escape and format_html into default name space .	from django . utils . html import conditional_escape , format_html
10015	msg is a string STR0 , replace STR1 with host .	msg = STR0 % host
4827	help is a string STR0 .	help = STR0
11937	decorator function register.filter with an argument is_safe set to boolean False .	@ register . filter ( is_safe = False )
8073	if not ,	else :
6384	self.callback is None .	self . callback = None
12582	call the method token.split_contents , substitute results without the first element for bits .	bits = token . split_contents ( ) [ 1 : ]
6580	if not ,	else :
10125	define the method close with an argument self .	def close ( self ) :
15406	substitute length and mime_type for self.length and self.mime_type .	self . length , self . mime_type = length , mime_type
9413	inner_html is a string STR0 .	inner_html = STR0
2099	increment mes_count by one .	msg_count += 1
17444	define the method __new__ with 4 arguments : cls , name , this_bases and d .	def __new__ ( cls , name , this_bases , d ) :
17243	_urllib_response_moved_attributes is a list with 4 elements : result of the function MovedAttribute , called with 3 arguments : strings STR0 , STR1 and STR2 , result of the function MovedAttribute , called with 3 arguments : strings STR3 , STR4 , STR5 , result of the function MovedAttribute , called with 3 arguments : strings STR6 , STR7 , STR8 and result of the function MovedAttribute , called with 3 arguments : strings STR9 , STR10 , STR11 .	_urllib_response_moved_attributes = [ MovedAttribute ( STR0 , STR1 , STR2 ) , MovedAttribute ( STR3 , STR4 , STR5 ) , MovedAttribute ( STR6 , STR7 , STR8 ) , MovedAttribute ( STR9 , STR10 , STR11 ) , ]
11197	return self.tag_function .	return self . tag_function
17857	call the function datetime.datetime with 3 arguments , d.year , d.month and d.day , substitute the result for d .	d = datetime . datetime ( d . year , d . month , d . day )
13899	call function force_bytes with value as argument , use the result to as the result for the call to the methgod ctx.update .	ctx . update ( force_bytes ( value ) )
18125	call the function _trans.check_for_language with an argument lang_code , return the result .	return _trans . check_for_language ( lang_code )
12757	call the function get_template_from_string with 3 arguments : source , origin and template_name , substitute the result for template .	template = get_template_from_string ( source , origin , template_name )
9198	if value is None ,	if value is None :
53	define the method all with argument self .	def all ( self ) :
2394	call the message_from_string function with an argument content , substitute the result for content .	content = message_from_string ( content )
5623	if not ,	else :
14078	call the method os.umask with an argument umask .	os . umask ( umask )
8459	append name to exclude .	exclude . append ( name )
13841	substitute response dictionary value under the key STR0 for cc .	response [ STR0 ] = cc
14293	call the method dict.__setitem__ with 3 arguments : result , result of the function copy.deepcopy , called with 2 arguments : key , and memo , and result of the function copy.deepcopy called with 2 arguments : value and memo .	dict . __setitem__ ( result , copy . deepcopy ( key , memo ) , copy . deepcopy ( value , memo ) )
9978	compile the regex STR0 , substitute it for host_validation_re .	host_validation_re = re . compile ( STR0 )
10206	call the method self._assert_mutable .	self . _assert_mutable ( )
15269	if s is an instance of an object bytes .	if isinstance ( s , bytes ) :
10193	get the identity of the self object , use it as a key to get the value of the memo dictionary , substitute result for it .	memo [ id ( self ) ] = result
323	do nothing .	pass
8303	if exclude is true and f.name is contained in exclude ,	if exclude and f . name in exclude :
14616	define the function parse_date with an argument value .	def parse_date ( value ) :
14749	if decorator has an attribute STR0 ,	if hasattr ( decorator , STR0 ) :
6145	request_finished is a instance of a Signal class .	request_finished = Signal ( )
1837	call the method self._read_limited , store the return value into chunk .	chunk = self . _read_limited ( )
16477	substitute regex for self.regex .	self . regex = regex
10598	substitute params for self.params .	self . params = params
7028	return value .	return value
7038	substitute initial for initial_value , if initial is not None , if not , initial_value is an empty string .	initial_value = initial if initial is not None else STR
13498	substitute member.name for name .	name = member . name
16745	call the function import_module with an argument string STR0 , where STR1 is replaced with app_config.name and module_to_search .	import_module ( STR0 % ( app_config . name , module_to_search ) )
16483	self.regexes is an empty dictionary .	self . regexes = { }
7326	derive the class URLField from the base class CharField class .	class URLField ( CharField ) :
18730	call the nethod self._isdst with an argument dt , if it evaluates to true ,	if self . _isdst ( dt ) :
14942	raise an ValueError exception with an argument string STR0 , formated with s and e .	v = ValueError ( STR0 % ( s , e ) )
14766	define the function _decorator with an argument view_func .	def _decorator ( view_func ) :
2677	convert self.option_list into a boolean , return the inverted value .	return not bool ( self . option_list )
6108	return boolean False .	return False
15461	otherwise if value under the STR0 key of the item dictionary is true ,	elif item [ STR0 ] :
1762	for every middleware_method in self._response_middleware ,	for middleware_method in self . _response_middleware :
2543	options is a list containing a tuple with 2 entries : string STR0 and None .	options = [ ( STR0 , None ) ]
13373	do nothing .	pass
2973	if self.verbosity is greater than integer 0 ,	if self . verbosity > 0 :
8357	get STR0 attribute from the options object , if it exists substitute it for self.model , if not self.model is None .	self . model = getattr ( options , STR0 , None )
13705	assign the return value of the function fn to change .	change = fn ( )
8419	for every f in self.instance._meta.fields ,	for f in self . instance . _meta . fields :
8933	if ImportError exception is caught .	except ImportError :
10189	call the method result.setlist with the arguments : key and value .	result . setlist ( key , value )
2974	call the self.stdout.write method with string STR0 as argument , replacing all the occurrences of STR1 with f and dirpath , respectively .	self . stdout . write ( STR0 % ( f , dirpath ) )
10370	define the method has_header with 2 arguments : self and header .	def has_header ( self , header ) :
18231	convert fist p elements of language to lowercase , append STR0 to it , covert to lowercase language elements from ( p+1 ) -th index to the end , append it to the previous result , return it .	return language [ : p ] . lower ( ) + STR0 + language [ p + 1 : ] . lower ( )
12644	call the method parser.add_library with an argument temp_lib .	parser . add_library ( temp_lib )
14472	if self.data.hour equals integer 0 ,	if self . data . hour == 0 :
7067	if self.max_length is not None ,	if self . max_length is not None :
1483	from django.core.files import temp as tempfile into default name space .	from django . core . files import temp as tempfile
14098	derive the class MergeDict from the object base class .	class MergeDict ( object ) :
13102	call the method self.template_cache.clear .	self . template_cache . clear ( )
15897	define the function fset with 3 arguments : instance , valse to None and name set to fset.__name__ .	def fset ( instance , value , name = fset . __name__ ) :
15710	define the function lazy with 2 arguments : func and unpacked list resultclasses .	def lazy ( func , * resultclasses ) :
9281	derive the class CheckboxInput from the Widget base class .	class CheckboxInput ( Widget ) :
10179	call the method self._assert_mutable .	self . _assert_mutable ( )
17726	get the index of the first occurrence of tagname , substitute it for i .	i = open_tags . index ( tagname )
8275	if form.errors is true ,	if form . errors :
10969	return self.token .	return self . token
18577	format string STR0 , with fmatch , write it to out .	out . write ( STR0 % fmatch )
17615	from django.utils.functional import allow_lazy and SimpleLazyObject into default name space .	from django . utils . functional import allow_lazy , SimpleLazyObject
11605	define the function addslashes with an argument value .	def addslashes ( value ) :
45	self._caches.caches is an empty dictionary .	self . _caches . caches = { }
8507	derive the class BaseModelFormSet from the BaseFormSet base class .	class BaseModelFormSet ( BaseFormSet ) :
16977	quant is an empty list .	quant = [ ]
9272	call the function formats.localize_input with 2 arguments : value and self.format if true , if not , then the first element of the result of the function formats.get_format called with an argument self.format_key , return the result .	return formats . localize_input ( value , self . format or formats . get_format ( self . format_key ) [ 0 ] )
6950	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
6808	derive the class MinLengthValidator form the BaseValidator base class .	class MinLengthValidator ( BaseValidator ) :
1541	from io import BytesIO into default name space .	from io import BytesIO
1723	for every middleware_method in self._exception_middleware ,	for middleware_method in self . _exception_middleware :
15795	define the function _lazy_proxy_unpickle with 4 arguments : func , args , kwargs and unpacked list resultclasses .	def _lazy_proxy_unpickle ( func , args , kwargs , * resultclasses ) :
11369	from django.utils.module_loading import import_string into default name space .	from django . utils . module_loading import import_string
2413	filename is a tuple containing 3 initial elements : string STR0 , and empty string and filename .	filename = ( STR0 , STR , filename )
7457	if data_set is not equal to initial_set , return boolean True , otherwise return boolean False .	return data_set != initial_set
11810	define the function removetags with 2 arguments value and arg .	def removetags ( value , tags ) :
14854	if level is an instance of int type ,	if isinstance ( level , int ) :
9792	call the method self._update_unget_history with length of bytes as an argument .	self . _update_unget_history ( len ( bytes ) )
13689	if fourth element of attr_list and termios.ECHO are both true ,	if not attr_list [ 3 ] & termios . ECHO :
11659	call the method formats.number_format with 2 arguments : number and absolute value of p , use the result as an argument for the call to the mark_safe function , return the result .	return mark_safe ( formats . number_format ( number , abs ( p ) ) )
15393	call the method s.getvalue , return the result .	return s . getvalue ( )
18155	from django.utils.encoding import force_text into default name space .	from django . utils . encoding import force_text
1207	call the OVERLAPPED function , substitute the result for overlapped .	overlapped = OVERLAPPED ( )
3668	from django.utils.text import get_text_list into default name space .	from django . utils . text import get_text_list
4995	and include_auto_created set to boolean True , call the method connection.creation.sql_destroy_indexes_for_model with arguments model and style , extend the output with the result .	output . extend ( connection . creation . sql_destroy_indexes_for_model ( model , style ) )
9062	substitute settings.MEDIA_URL for prefix .	prefix = settings . MEDIA_URL
12982	raise an TemplateSyntaxError with an argument string STR0 , where STR1 is replaced with first element of bits .	raise TemplateSyntaxError ( STR0 % bits [ 0 ] )
7877	return boolean True .	return True
5687	if STR0 is contained in d ,	if STR0 in d :
7231	raise an ValidationError with 2 arguments : value under the STR0 key of the self.error_messages dictionary and code set to STR1 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 )
2414	call the method attachment.add_header with 3 arguments : string STR0 , string STR1 and filename set to filename .	attachment . add_header ( STR0 , STR1 , filename = filename )
2159	call the method self._lock , with the return value ,	with self . _lock :
3522	self.compression_formats is an dictionary with 3 initial entries : tuple containing 2 elements : open and string STR0 for None , tuple with 2 arguments : gzip.GzipFile and string STR1 for STR2 , tuple with 2 arguments : SingleZipReader and string STR for STR3 .	self . compression_formats = { None : ( open , STR0 ) , STR1 : ( gzip . GzipFile , STR2 ) , STR3 : ( SingleZipReader , STR4 ) , }
9303	call the method __init__ from the base class of the class Select , with an argument attrs .	super ( Select , self ) . __init__ ( attrs )
1529	set the file pointer at the beginning of the self.file file .	self . file . seek ( 0 )
9771	call the method self.unget with list containing first remaining elements of chunk as an argument .	self . unget ( chunk [ remaining : ] )
17003	params is an empty list ,	params = [ ]
8854	choices is an property property object of this class , with _get_choices getter and ChoiceField._set_choices setter functions .	choices = property ( _get_choices , ChoiceField . _set_choices )
11176	define the method generic_tag_compiler with 9 arguments : parser , token , params , varargs , varkw , defaults , name , takes_context ,	def generic_tag_compiler ( parser , token , params , varargs , varkw , defaults , name , takes_context , node_class ) :
2226	if characters STR0 or STR1 are contained in val ,	if STR0 in val or STR1 in val :
17883	try ,	try :
8198	if self.can_delete is true ,	if self . can_delete :
7926	if only_initial is false ,	if not only_initial :
3760	msguniq_options is an list with elements : string STR0 .	msguniq_options = [ STR0 ]
16375	substitute index for doublecolon_start .	doublecolon_start = index
7657	call the function warnings.warn with 3 arguments : string STR0 , RemovedInDjango19Warning , stacklevel set to integer 2 .	warnings . warn ( STR0 , RemovedInDjango19Warning , stacklevel = 2 , )
8394	derive the class BaseModelForm from the BaseForm base class .	class BaseModelForm ( BaseForm ) :
17710	break from the loop execution ,	break
4697	get the value under the STR0 key of the options dictionary , substitute it for self.interactive .	self . interactive = options . get ( STR0 )
9939	take the first i elements of string p , strip the whitespaces from the both sides , convert it to lowercase and apply on it the method , decode with an argument string STR0 , substitute the result for name .	name = p [ : i ] . strip ( ) . lower ( ) . decode ( STR0 )
1669	if MiddlewareNotUsed exception is raised ,	except MiddlewareNotUsed :
16511	both_before is a list containing 14 elements , all of them are instances of Tok class , created with 2 arguments , a string and a raw string .	both_before = [ Tok ( STR4 , STR5 ) , Tok ( STR6 , STR7 ) , Tok ( STR8 , STR9 ) , Tok ( STR10 , literals ( STR0 , suffix = STR11 ) , next = STR31 ) , Tok ( STR12 , literals ( STR13 , suffix = STR14 ) , next = STR32 ) , Tok ( STR15 , STR1 , next = STR33 ) , Tok ( STR16 , STR17 , next = STR34 ) , Tok ( STR18 , STR19 ) , Tok ( STR20 , STR2 , next = STR35 ) , Tok ( STR21 , literals ( STR3 ) , next = STR22 ) , Tok ( STR23 , literals ( STR24 ) , next = STR36 ) , Tok ( STR25 , literals ( STR26 ) , next = STR37 ) , Tok ( STR27 , STR38([^ STR39" , next = STR40 ) , ]
3674	call the function find_command with an argument program , if it evaluates to None ,	if find_command ( program ) is None :
3519	self.fixture_object_count is integer 0 .	self . fixture_object_count = 0
3141	if primary_keys is true ,	if primary_keys :
308	call the method now.replace with argument tzinfo set to None , substitute it for now .	now = now . replace ( tzinfo = None )
6702	call the __call__ method from the base class of the URLValidator class , with an argument url .	super ( URLValidator , self ) . __call__ ( url )
13299	substitute ValueError for error_class .	error_class = ValueError
1646	from django.core import urlresolvers into default name space .	from django . core import urlresolvers
4532	output_transaction is boolean True .	output_transaction = True
13823	if second element of t is boolean True ,	if t [ 1 ] is True :
13853	create md5 hash from string response.content in hexadecimal format , surround the hash with double quotes , and store it in the value of the dictionary response under the key STR0 .	response [ STR1 ] = STR2 % hashlib . md5 ( response . content ) . hexdigest ( )
10497	derive the class HttpResponseBadRequest from the HttpResponse base class .	class HttpResponseBadRequest ( HttpResponse ) :
10963	substitute the length of defaults for dlen .	dlen = len ( defaults or [ ] )
11363	define the function add_to_builtins with an argument module .	def add_to_builtins ( module ) :
4916	raise an CommandError exception with an argument string STR0	raise CommandError ( STR0 + STR1 + STR2 )
16392	convert ip_str to lowercase , if it doesnt start with a string STR0 ,	if not ip_str . lower ( ) . startswith ( STR0 ) :
2134	call the method self.connection.starttls .	self . connection . starttls ( )
3832	map the locale_dirs elements with mapping function os.path.basename , substitute the result for all_locales .	all_locales = map ( os . path . basename , locale_dirs )
14048	import module sys .	import sys
5756	define the method end_serialization with an argument self .	def end_serialization ( self ) :
11262	define the function __init__ with 5 arguments : self , takes_context , args , kwargs and target_var .	def __init__ ( self , takes_context , args , kwargs , target_var ) :
2857	import module os .	import os
14110	if KeyError exception is caught ,	except KeyError :
12454	if arg is not string STR0 or STR1 ,	if arg not in ( STR0 , STR1 ) :
12188	if values is None ,	values = [ ]
6003	from django.core.exceptions import ImproperlyConfigured into default name space .	from django . core . exceptions import ImproperlyConfigured
5598	yield obj as generator return value ,	yield obj
12541	if not ,	else :
7980	add self.form.required_css_class to extra_classes set .	extra_classes . add ( self . form . required_css_class )
67	define the method __ne__ with self and other as arguments .	def __ne__ ( self , other ) :
3010	for every cache_alias in settings.CACHES ,	for cache_alias in settings . CACHES :
10288	from django.conf import settings into default name space .	from django . conf import settings
1849	define the initialization method __init__ with self class instance and environ as arguments .	def __init__ ( self , environ ) :
12714	call the method parser.delete_first_token .	parser . delete_first_token ( )
2896	requires_system_checks is boolean False .	requires_system_checks = False
16885	get the next element of the iterable pattern_iter , assign the result for ch and escaped , respectively .	ch , escaped = next ( pattern_iter )
6989	widget.is_localized is boolean True .	widget . is_localized = True
4456	from django.core.management.base import BaseCommand into default name space .	from django . core . management . base import BaseCommand
4867	if failures is true ,	if failures :
11783	call the function mark_for_escaping with an argument value , return the result .	return mark_for_escaping ( value )
14107	for every dict_ in self.dicts ,	for dict_ in self . dicts :
2358	if filename is an instance of MIMEBase ,	if isinstance ( filename , MIMEBase ) :
12096	substitute setting and nodelist for self.setting and self.nodelist , respectively .	self . setting , self . nodelist = setting , nodelist
13544	call the method self._archive.close .	self . _archive . close ( )
8175	if self.is_bound is false ,	if not self . is_bound :
4049	call the function os.path.dirname with an argument writer.path , substitute the result for migrations_directory .	migrations_directory = os . path . dirname ( writer . path )
15926	import module re .	import re
10566	TOKEN_VAR is integer 1	TOKEN_VAR = 1
3759	msgmerge_options is an list with elements : strings STR0 and STR1 .	msgmerge_options = [ STR0 , STR1 ]
4126	call the method parser.add_argument with string STR0 , nargs set to charcter STR1 , help containing string , STR2 as arguments .	parser . add_argument ( STR0 , nargs = STR1 , help = STR2 )
7794	if not ,	else :
8511	remove entry under STR0 key of the kwargs dictionary , substitute it for self.initial_extra if it exists , if not self.initial_extra is None .	self . initial_extra = kwargs . pop ( STR0 , None )
2313	put cc into a list , assign it to self.cc .	self . cc = list ( cc )
6586	ns_pattern is an empty string .	ns_pattern = STR
17855	chunks is a tuple containing 6 initial tuples :	chunks = ( ( 60 * 60 * 24 * 365 , ungettext_lazy ( STR0 , STR1 ) ) , ( 60 * 60 * 24 * 30 , ungettext_lazy ( STR2 , STR3 ) ) , ( 60 * 60 * 24 * 7 , ungettext_lazy ( STR4 , STR5 ) ) , ( 60 * 60 * 24 , ungettext_lazy ( STR6 , STR7 ) ) , ( 60 * 60 , ungettext_lazy ( STR8 , STR9 ) ) , ( 60 , ungettext_lazy ( STR10 , STR11 ) ) )
8888	define the method clean with 2 arguments : self and value .	def clean ( self , value ) :
9182	derive the class PasswordInput from the TextInput base class .	class PasswordInput ( TextInput ) :
8604	call the method self.get_date_error_message with an argument date_check , append the result to errors .	errors . append ( self . get_date_error_message ( date_check ) )
7112	raise an ValidationError with 2 arguments : value under the STR0 key of the self.error_messages dictionary and code set to STR1 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 )
5245	if character STR0 is not contained in template ,	if STR0 not in template :
16373	increment doublecolon_len by integer 1 ,	doublecolon_len += 1
7717	if self._errors is None ,	if self . _errors is None :
12903	substitute template_dirs for self.template_dirs .	self . template_dirs = template_dirs
10240	if Exception exception is caught ,	except Exception :
16618	increment key by kwd_mark .	key += kwd_mark
6331	self._regex_dict is an empty dictionary .	self . _regex_dict = { }
3513	call the method transaction.get_autocommit with an argument self.using , if it evaluates to true ,	if transaction . get_autocommit ( self . using ) :
4421	if sys.platform equals string win32 STR0CTRL-BREAK STR1CONTROL-C ' for quit_command .	quit_command = STR0 if sys . platform == STR1 else STR2
11116	if kwarg_format is false ,	if not kwarg_format :
17967	define the function get_default_timezone_name .	def get_default_timezone_name ( ) :
6657	if regex is not None ,	if regex is not None :
17476	buffer_types is a tuple with 2 elements bytearray and memoryview .	buffer_types = ( bytearray , memoryview )
5912	call the field.rel.to._meta.get_field method with an field.rel.field_name argument , on the result call the method to_python , with field_value as an argument , return the result .	return field . rel . to . _meta . get_field ( field . rel . field_name ) . to_python ( field_value )
2492	create dictionary out of the unpacked dictionary options , using defaults.__dict__ as a mapping function , substitute the result for defaults .	defaults = dict ( defaults . __dict__ , ** options )
7647	from django.utils.html import conditional_escape and format_html into default name space .	from django . utils . html import conditional_escape , format_html
16067	otherwise if STR0 is not contained in middle and result of the function simple_email_re.match called with an argument middle ,	elif STR0 not in middle and simple_email_re . match ( middle ) :
16741	try ,	try :
6457	define the method app_dict with an argument self .	def app_dict ( self ) :
16156	slice the rawdata from k to endpos , then take the first 20 elements of the previous slice , with it replace % r in the string STR0 , call the method self.error with the resulting string as an argument .	self . error ( STR0 % ( rawdata [ k : endpos ] [ : 20 ] , ) )
5212	call the method cgi.parse_header with an argument content_disposition , assign the result to _ and params , respectively .	_ , params = cgi . parse_header ( content_disposition )
8942	define the function flatatt with an argument attrs .	def flatatt ( attrs ) :
5467	derive the class Serializer from the object base class .	class Serializer ( object ) :
83	DEFAULT_TIMEOUT is a instance of the class object .	DEFAULT_TIMEOUT = object ( )
2565	for every option in options ,	for option in options :
9476	call the method __init__ from the base class of the class MultiWidget , with an argument attrs .	super ( MultiWidget , self ) . __init__ ( attrs )
3125	excluded_apps is an empty set .	excluded_apps = set ( )
949	if message has an STR0 attribute ,	if hasattr ( message , STR0 ) :
10242	if request._post_parse_error is true ,	if request . _post_parse_error :
2466	replace STR0 in string STR1 with app_name and name , respectively , use it as an result for the call to the import_module function , substitute the result for module .	module = import_module ( STR0 % ( app_name , name ) )
15545	if value under the STR0 key of the item dictionary is not None ,	if item [ STR0 ] is not None :
4623	help is a string STR0 .	help = STR0
10798	define the function add_library with 2 arguments : self and lib .	def add_library ( self , lib ) :
14152	define the method values with an argument self .	def values ( self ) :
15119	substitute factory for value under STR0 key of config dictionary .	config [ STR0 ] = factory
3366	substitute first element of row for column_name .	column_name = row [ 0 ]
12183	try ,	try :
12511	if every filter_name in strings STR0 or STR1 ,	if filter_name in ( STR0 , STR1 ) :
17631	define the function _generator .	def _generator ( ) :
18555	call the function block_re.match with an argument t.contents , substitute the result for bmatch .	bmatch = block_re . match ( t . contents )
8463	if ValidationError , renamed to e , exception is caught ,	except ValidationError as e :
12179	substitute value under the the STR0 key of the context dictionary for parentloop .	parentloop = context [ STR0 ]
13021	convert app_template_dirs to a tuple , return it .	return tuple ( app_template_dirs )
5953	define the method unparsed_entity_decl with arguments self , name , base , sysid , pubid and notation_name .	def unparsed_entity_decl ( self , name , base , sysid , pubid , notation_name ) :
15735	if cls._delegate_text is true ,	if cls . _delegate_text :
14874	get value under key key of self dictionary , if it doesnt exists return default , substitute the result for value .	value = dict . get ( self , key , default )
9928	define the method __iter__ with an argument self .	def __iter__ ( self ) :
15381	return an empty dictionary .	return { }
13570	call the method pyinotify.INotifyWrapper.create , on the return value call the inotify_init method , substitute the result for fd .	fd = pyinotify . INotifyWrapper . create ( ) . inotify_init ( )
8087	substitute i-th element of self.initial for value under the STR0 key of the defaults dictionary .	defaults [ STR0 ] = self . initial [ i ]
10480	call the __init__ method from the base class of the HttpResponseRedirectBase class , called with arguments : unpacked list args , and unpacked dictionary kwargs .	super ( HttpResponseRedirectBase , self ) . __init__ ( * args , ** kwargs )
5914	if field.rel.to._default_manager has an attribute STR0 ,	if hasattr ( field . rel . to . _default_manager , STR0 ) :
6315	from django.conf import settings into default name space .	from django . conf import settings
15698	return wrapper .	return wrapper
3705	call the function io.open with 3 arguments : work_file , string STR0 and encoding set to string STR1 as arguments ,	with io . open ( work_file , STR0 , encoding = STR1 ) as fp :
2648	substitute style_func for self.style_func .	self . style_func = style_func
12586	call the method parser.next_token , substitute the result for token .	token = parser . next_token ( )
2610	call the method utility.execute .	utility . execute ( )
16416	return boolean False .	return False
14209	call the method popitem from the base class of the class SortedDict , substitute the result for result .	result = super ( SortedDict , self ) . popitem ( )
18066	call the method _trans.pgettext with 2 arguments context and message .	return _trans . pgettext ( context , message )
4904	from django.conf import settings into default name space .	from django . conf import settings
12402	derive the class VerbatimNode from Node base class .	class VerbatimNode ( Node ) :
3131	if LookupError exception is caught ,	except LookupError :
16793	skip this loop iteration ,	continue
993	for every error in self.error_list ,	for error in self . error_list :
16350	return sys.modules dictionary value under the name key .	return sys . modules [ name ]
18657	return the length of self.children .	return len ( self . children )
1017	substitute file for self.file .	self . file = file
5596	call the function json.loads with an argument stream_or_string , substitute the result for objects .	objects = json . loads ( stream_or_string )
17584	if part is contained in PALETTES ,	if part in PALETTES :
4058	open writer.path file in write mode , with the file descriptor as fh , perform ,	with open ( writer . path , STR0 ) as fh :
7088	try ,	try :
13929	for every header in list of strings compiled by splitting string cc_delim_re with value under the key STR0 of response dictionary as a delimiter .	for header in cc_delim_re . split ( response [ STR0 ] ) :
9306	if value is None ,	if value is None :
12826	call the method t.render with an argument , instance of Context class , created with an argument dictionary , return the result .	return t . render ( Context ( dictionary ) )
5626	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
18660	define the method __nonzero__ with an argument self .	def __nonzero__ ( self ) :
8736	value under the name key of the form.fields dictionary is an instance of InlineForeignKeyField created with 2 arguments : self.instance and unpacked dictionary kwargs .	form . fields [ name ] = InlineForeignKeyField ( self . instance , ** kwargs )
3655	import module fnmatch .	import fnmatch
13371	if NameError exception is caught ,	except NameError :
3955	if django_po file path exists ,	if os . path . exists ( django_po ) :
3176	if format is not contained in return value of the method serializers.get_public_serializer_formats ,	if format not in serializers . get_public_serializer_formats ( ) :
4428	call the function datetime.now , on the result call the method strftime with an argument string STR0 , substitute the result for now .	now = datetime . now ( ) . strftime ( STR0 )
11049	return current .	return current
15206	call the method logging.getLogger , substitute the result for root .	root = logging . getLogger ( )
18223	use global variable _supported .	global _supported
9430	call the method self.attrs.copy , substitute the result for attrs_plus .	attrs_plus = self . attrs . copy ( )
4475	from IPython import start_ipython into default namespace .	from IPython import start_ipython
17606	return palette .	return palette
16984	get the next element of the iterable pattern_iter , assign the result for ch and escaped , respectively .	ch , escaped = next ( input_iter )
13189	if not ,	else :
9934	pop the first element from plist , convert it to lowercase , call the method decode on it , with string STR0 as an argument , substitute the result for key .	key = plist . pop ( 0 ) . lower ( ) . decode ( STR0 )
6984	substitute self.widget if the widget is false , otherwise substitute widget for widget .	widget = widget or self . widget
3099	call the method parser.add_argument with 5 arguments : string STR1 , default set to string STR2 , dest set to STR3 , add set to DEFAULT_DB_ALIAS and help is STR4 .	parser . add_argument ( STR1 , action = STR2 , dest = STR3 , default = DEFAULT_DB_ALIAS , help = STR4 )
17391	define the function print_ with 2 arguments : unpacked list args and unpacked dictionary kwargs .	def print_ ( * args , ** kwargs ) :
1894	decorator cached_property .	@ cached_property
4160	call the executor.loader.get_migration_by_prefix with app_label and migration_name , substitute the result for migration .	migration = executor . loader . get_migration_by_prefix ( app_label , migration_name )
11907	i is integer 0 .	i = 0
17935	call the method _time.mktime with an argument tt , substitute the result for stamp .	stamp = _time . mktime ( tt )
6716	call the re.compile function with 2 arguments : raw string STR0 , STR1 ( [ \001-\010\013\014\016-\037 ! # -\ [ \ ] -\177 ] |\\ [ \001-\011\013\014\016-\177 ] ) * STR2 and re.IGNORECASE , substitute the result for user_regex .	user_regex = re . compile ( STR0 STR2 , re . IGNORECASE )
13366	from os.path import join , normcase , normpath , abspath , isabs , sep and dirname into default name space .	from os . path import join , normcase , normpath , abspath , isabs , sep , dirname
14561	return string STR0 .	return STR0
3518	self.loaded_object_count is integer 0 .	self . loaded_object_count = 0
3775	call the method parser.add_argument with 5 arguments : string STR1 , action as a string STR2 , dest as a string STR3 , default as boolean False and help as a string STR0	parser . add_argument ( STR1 , action = STR2 , dest = STR3 , default = False , help = STR0 )
6019	call the function six.reraise with 3 arguments : ImproperlyConfigured , ImproperlyConfigured ( msg ) and third element of return value of the function sys.exc_info .	six . reraise ( ImproperlyConfigured , ImproperlyConfigured ( msg ) , sys . exc_info ( ) [ 2 ] )
11308	if name is true , substitute it for function_name , if not get STR0 attribute from func object , if it exists , substitute __name__ field of the result for function_name , in not , substitute func.__name__ for function_name .	function_name = ( name or getattr ( func , STR0 , func ) . __name__ )
3059	define the method handle with arguments self and unpacked dictionary options .	def handle ( self , ** options ) :
5066	from django.utils import archive into default name space .	from django . utils import archive
13362	import module os .	import os
5937	if child.nodeType equals to child.TEXT_NODE or child.nodeType equals to child.CDATA_SECTION_NODE ,	if child . nodeType == child . TEXT_NODE or child . nodeType == child . CDATA_SECTION_NODE :
11793	decorator function register.filter with 2 arguments is_safe set to boolean True and needs_autoescape set to boolean True .	@ register . filter ( is_safe = True , needs_autoescape = True )
16232	define the function parse_http_date with an argument date .	def parse_http_date ( date ) :
657	if val is None ,	if val is None :
5984	substitute notation_name for self.notation_name .	self . notation_name = notation_name
12526	raise an TemplateSyntaxError exception with an argument string STR0 , where STR1 is replaced with token.contents .	raise TemplateSyntaxError ( STR0 % token . contents )
2197	from email.utils import formatdate , getaddresses , formataddr and parseaddr into default name space .	from email . utils import formatdate , getaddresses , formataddr , parseaddr
304	define the protected method _cull with self class instance , db , cursor and now as arguments .	def _cull ( self , db , cursor , now ) :
6701	call the function urlunsplit with a tuple containing 5 elements : scheme , netloc , path , query and fragment , as an argument , substitute the result for url .	url = urlunsplit ( ( scheme , netloc , path , query , fragment ) )
37	evaluate the function backend_cls with location and params as arguments , return the result .	return backend_cls ( location , params )
6588	pop the element form the path as substitute the result for ns .	ns = path . pop ( )
16473	define the method __init__ with 4 arguments : self , name , regex and next set to None .	def __init__ ( self , name , regex , next = None ) :
13186	define the method resolve_context with 2 arguments : self and context .	def resolve_context ( self , context ) :
10456	derive the class StreamingHttpResponse from the HttpResponseBase base class .	class StreamingHttpResponse ( HttpResponseBase ) :
9870	define the method _find_boundary with an arguments self , data and eof set to boolean False .	def _find_boundary ( self , data , eof = False ) :
171	define the method incr_version with 4 arguments , self , key , delta defaulting to integer 1 and version defaulting to None .	def incr_version ( self , key , delta = 1 , version = None ) :
14427	from django.utils.timezone import get_default_timezone , is_aware and is_naive into default name space .	from django . utils . timezone import get_default_timezone , is_aware , is_naive
13271	try ,	try :
9105	if not ,	else :
17895	return ZERO .	return ZERO
4616	define the method handle with self class instance and dictionary options as the arguments .	def handle ( self , ** options ) :
17711	call the method m.end with an argument integer 0 , substitute the result for pos .	pos = m . end ( 0 )
7139	return value .	return value
7834	call the method self.clean , substitute the result for cleaned_data .	cleaned_data = self . clean ( )
9318	call the function force_text with an argument option_value , substitute the result for option_value .	option_value = force_text ( option_value )
1234	import stat .	import stat
14080	call the method sys.stdout.close .	sys . stdout . close ( )
7868	property decorator ,	@ property
12144	define the method __init__ with 3 arguments : self , filter_expr and nodelist ) .	def __init__ ( self , filter_expr , nodelist ) :
13992	return boolean False .	return False
12667	raise an TemplateSyntaxError exception with an argument string STR0 .	raise TemplateSyntaxError ( STR0 )
1294	define the method open with arguments self , name and mode defaulting to string STR0 .	def open ( self , name , mode = STR0 ) :
6881	if not ,	else :
12842	raise an TemplateDoesNotExist exception with an argument , elements of not_found joined into a string , separated with STR0	raise TemplateDoesNotExist ( STR0 . join ( not_found ) )
9559	from the base class of the class SimpleCookie call the value_encode method with val as the argument , store the result in the val and encoded , respectively .	val , encoded = super ( SimpleCookie , self ) . value_encode ( val )
11052	child_nodelists is an tuple with an element STR0 .	child_nodelists = ( STR0 , )
2979	if i equals to integer 0 and	if i == 0 and not is_writable ( npath ( base_path + STR0 ) ) :
8184	raise an ValidationError with 2 arguments : return value of the function ungettext with 3 arguments : strings STR0 , STR1 and self.min_num , where STR2 is replaced with self.min_num , and code as a string STR3 .	raise ValidationError ( ungettext ( STR0 , STR1 , self . min_num ) % self . min_num , code = STR2 )
4129	call the method parser.add_argument with string STR1 , action containing string STR2 , dest set to string STR3 , default set to DEFAULT_DB_ALIAS , help containing string STR4 as arguments .	parser . add_argument ( STR1 , action = STR2 , dest = STR3 , default = DEFAULT_DB_ALIAS , help = STR4 )
10892	call the method match.group with 2 arguments : strings STR0 and STR1 , substitute the result for var and constant , respectively .	var , constant = match . group ( STR0 , STR1 )
79	derive class InvalidCacheBackendError from the ImproperlyConfigured base class .	class InvalidCacheBackendError ( ImproperlyConfigured ) :
198	define the initialization method __init__ with self class instance and table as arguments .	def __init__ ( self , table ) :
12342	t is an instance of Template class , created with 2 arguments output and name set to filepath .	t = Template ( output , name = filepath )
16655	increment stats dictionary value under the MISSES key by integer 1 .	stats [ MISSES ] += 1
4073	append migration to merge_migrations .	merge_migrations . append ( migration )
2659	options_list is an empty tuple .	option_list = ( )
17540	while t is greater than integer 0 ,	while t > 0 :
5234	replace STR0 in string STR1 with self.app_or_project , substitute it for prefix .	prefix = STR0 % self . app_or_project
4153	assign values under the STR0 and STR1 keys of the options dictionary to the app_label and migration_name , respectively .	app_label , migration_name = options [ STR0 ] , options [ STR1 ]
11725	decorator function register.filter with an argument is_safe set to boolean True .	@ register . filter ( is_safe = True )
331	return boolean True .	return True
1856	strip trailing STR0 from the script_name string , remove first occurrence of STR1 in path_info string , append second result to the first , separated with STR2 , assign the result to self.path .	self . path = STR0 % ( script_name . rstrip ( STR1 ) , path_info . replace ( STR2 , STR , 1 ) )
6192	if first element of base64d equals to a STR0 character ,	if base64d [ : 1 ] == STR0 :
3482	from django.conf import settings into default name space .	from django . conf import settings
13981	call the method hmac.new with 3 arguments : key , msg set to result of the function force_bytes with an argument value , and digestmod set to hashlib.sha1 , return the result .	return hmac . new ( key , msg = force_bytes ( value ) , digestmod = hashlib . sha1 )
718	from django.conf import settings into default name space .	from django . conf import settings
15736	if six.PY3 is true ,	if six . PY3 :
3030	if f.primary_key is true ,	if f . primary_key :
13639	define the method update_watch with sender defaulting to None and dictionary pair of elements kwargs .	def update_watch ( sender = None , ** kwargs ) :
18643	substitute cls for obj.__class__ .	obj . __class__ = cls
413	if fname doesnt start with self._dir and fname file path doesnt exists ,	if not fname . startswith ( self . _dir ) or not os . path . exists ( fname ) :
10579	TRANSLATOR_COMMENT_MARK is a string STR0 .	TRANSLATOR_COMMENT_MARK = STR0
5655	call the function field.value_to_string with an argument obj , substitute the result for value under the field.name key of self._current dictionary .	self . _current [ field . name ] = field . value_to_string ( obj )
17361	define the function byte2int with an argument bs .	def byte2int ( bs ) :
4225	write to the standard output result of the call to the method self.style.MIGRATE_SUCCESS with string STR0 as a argument .	self . stdout . write ( self . style . MIGRATE_SUCCESS ( STR0 ) )
16787	return boolean True .	return True
3113	get the value under the STR0 key of the options dictionary , substitute the result for traceback .	show_traceback = options . get ( STR0 )
8883	define the method to_python with 2 arguments : self and value .	def to_python ( self , value ) :
8255	substitute form.cleaned_data for cleaned_data .	cleaned_data = form . cleaned_data
4288	for every model in model_list ,	for model in model_list :
380	return boolean False .	return False
13421	remove tmpdir directory .	os . rmdir ( tmpdir )
16521	if not ,	else :
8122	call the method self._should_delete_form with an argument form , if it evaluates to true ,	if self . _should_delete_form ( form ) :
16497	substitute self.toks for toks .	toks = self . toks
8270	return instance .	return instance
17036	sum item and i_item together , append the result to new_result .	new_result . append ( item + i_item )
8702	define the method initial_form_count with an argument self .	def initial_form_count ( self ) :
11685	return value converted into a list .	return list ( value )
9591	return an empty dictionary .	return { }
10113	data is an instance of BytesIO class , created with an argument : self._body .	data = BytesIO ( self . _body )
9727	if StopUpload , renamed to e , exception is caught ,	except StopUpload as e :
1808	def initialization method __init__ with self class instance , stream , limit and buf_size set to integer value of the product 64*1024*1024 .	def __init__ ( self , stream , limit , buf_size = 64 * 1024 * 1024 ) :
8121	and call to the method form.has_changed evaluates to false , skip this loop iteration ,	continue
6710	if ValueError or TypeError exceptions are caught ,	except ( ValueError , TypeError ) :
10130	self._read_started is True .	self . _read_started = True
13360	call the method node.replace with an argument decorated .	node . replace ( decorated )
18238	define the function to_language with an argument locale .	def to_language ( locale ) :
2928	call the os.utime unction , with path and None as arguments .	os . utime ( path , None )
6818	code is a string STR0	code = STR0
6529	if args is true ,	if args :
15186	define the method common_logger_config with 4 arguments : self , logger , config and incremental set to boolean False .	def common_logger_config ( self , logger , config , incremental = False ) :
5348	self._num_pages is a integer 0 .	self . _num_pages = 0
14983	otherwise if vale is not an instance of ConvertingTuple and value is an instance of tuple type ,	elif not isinstance ( value , ConvertingTuple ) and isinstance ( value , tuple ) :
17657	format truncate with a dictionary with an element : text for STR0 , return the result .	return truncate % { STR0 : text }
11547	substitute token.source for e.django_template_source .	e . django_template_source = token . source
720	if call to the settings.is_overridden with string STR0 evaluates to boolean False .	if not settings . is_overridden ( STR0 ) :
5710	if field_value has an attribute STR0 and is not an instance of six.text_type object ,	if hasattr ( field_value , STR0 ) and not isinstance ( field_value , six . text_type ) :
11941	convert value to an integer .	value = int ( value )
10690	otherwise if token_string starts with BLOCK_TAG_START ,	elif token_string . startswith ( BLOCK_TAG_START ) :
15563	define the function reset_format_cache .	def reset_format_cache ( ) :
12133	if self.silent is true ,	if self . silent :
2538	try ,	try :
11585	from django.utils.http import urlquote into default name space .	from django . utils . http import urlquote
50	call the function _create_cache with argument alias .	cache = _create_cache ( alias )
5971	substitute sysid for self.sysid .	self . sysid = sysid
5180	raise an CommandError exception with an argument string STR0 , replace STR1 with self.app_or_project and template .	raise CommandError ( STR0 % ( self . app_or_project , template ) )
70	define the function close_caches with dictionary pair of elements kwargs as argument .	def close_caches ( ** kwargs ) :
9379	define the method __str__ with an argument self .	def __str__ ( self ) :
15978	call the method HTMLParser.__init__ with 2 arguments : self and strict set to boolean False .	HTMLParser . __init__ ( self , strict = False )
1732	if not ,	else :
16122	set self.cdata_tag to None .	self . cdata_tag = None
8200	define the method add_prefix with an argument self .	def add_prefix ( self , index ) :
8129	if self doesnt have an STR0 attribute ,	if not hasattr ( self , STR0 ) :
16381	doublecolon_start is integer -1 .	doublecolon_start = - 1
11594	define the method _dec with 2 arguments : unpacked list args and unpacked dictionary kwargs .	def _dec ( * args , ** kwargs ) :
3354	try ,	try :
17345	call the function bytes with an argument tuple with an element i , return the result .	return bytes ( ( i , ) )
9915	skip this loop iteration .	continue
6385	if default_kwargs exists , substitute it for self.default_kwargs , otherwise self.default_kwargs is an empty dictionary .	self . default_kwargs = default_kwargs or { }
110	try ,	try :
5692	if ignore is true and field_name is not contained in model_fields ,	if ignore and field_name not in model_fields :
18028	call the method value.replace with an argument tzinfo as timezone , return the result .	return value . replace ( tzinfo = timezone )
1041	if self.file has an attribute STR0 and an attribute STR1 ,	if hasattr ( self . file , STR0 ) and hasattr ( self . file , STR1 ) :
6287	if not ,	else :
13032	raise an exception .	raise
6391	self._callback_strs is an empty set .	self . _callback_strs = set ( )
1759	call the method signals.got_request_exception.send with sender set to type of the self class instance and request set to request .	signals . got_request_exception . send ( sender = self . __class__ , request = request )
9353	define the method render with 5 arguments : self , name , value , attrs set to None and choices set to an empty tuple .	def render ( self , name , value , attrs = None , choices = ( ) ) :
3394	if field_type equals a string STR0 ,	if field_type == STR0 :
16934	get the next element of the iterable pattern_iter , assign the result for ch and escaped , respectively .	ch , escaped = next ( pattern_iter )
533	call the method self.validate_key with argument key .	self . validate_key ( key )
2556	do nothing .	pass
144	define method has_key with self class instance , key and version set to None as arguments .	def has_key ( self , key , version = None ) :
805	derive the class Warning from base class CheckMessage .	class Warning ( CheckMessage ) :
17975	try ,	try :
15617	substitute val for the value under the cache_key key of the _format_cache dictionary .	_format_cache [ cache_key ] = val
8197	value under the ORDERING_FIELD_NAME key of the form.fields is an instance of IntegerField class , created with 2 arguments : label set to return value of the function _ called with an string STR0 and required as boolean False .	form . fields [ ORDERING_FIELD_NAME ] = IntegerField ( label = _ ( STR0 ) , required = False )
574	do nothing .	pass
15207	call the method self.common_logger_config with 3 arguments : root , config and incremental .	self . common_logger_config ( root , config , incremental )
6552	if not ,	else :
2124	if self.connection is true ,	if self . connection :
9017	return value .	return value
7850	call the method self.fields.items , for every name and field in the result ,	for name , field in self . fields . items ( ) :
16429	if not ,	else :
13095	try ,	try :
7387	substitute choices for self.choices .	self . choices = choices
596	if self object has an attribute STR0 ,	if getattr ( self , STR0 , None ) is None :
10577	COMMENT_TAG_START is a string STR0 .	COMMENT_TAG_START = STR0
14524	define the method E with an argument self .	def E ( self ) :
10604	define the method __init__ with 2 arguments : self and name .	def __init__ ( self , name ) :
12528	if index is negative inter 3 , if is_reversed , substitute it for in_index , if not , in_index is negative integer 2 .	in_index = - 3 if is_reversed else - 2
18497	call the function plural_re.match with an argument t.contents , substitute the result for pluralmatch .	pluralmatch = plural_re . match ( t . contents )
12603	call the method parser.next_token , substitute the result for token .	token = parser . next_token ( )
10191	define the method __deepcopy__ with 3 arguments : self and memo .	def __deepcopy__ ( self , memo ) :
11595	if args in true ,	if args :
6024	substitute socket.AF_INET6 for self.address_family .	self . address_family = socket . AF_INET6
2281	delete the value under the STR0 key of self dictionary .	del self [ STR0 ]
10455	return the length of self.content .	return len ( self . content )
3308	call the function emit_post_migrate_signal with 4 arguments : all_models converted into a set , verbosity , interactive and database .	emit_post_migrate_signal ( set ( all_models ) , verbosity , interactive , database )
17201	if not ,	else :
11061	for every attr in self.child_nodelists ,	for attr in self . child_nodelists :
10434	if six.PY3 is true ,	if six . PY3 :
8812	for every choice in self.field.choice_cache ,	for choice in self . field . choice_cache :
1060	if chunk_size is false ,	if not chunk_size :
14240	append key to self.keyOrder dictionary .	self . keyOrder . append ( key )
13770	define the method encode with self class instance and i as arguments .	def encode ( self , i ) :
15464	call the method handler.addQuickElement with 2 arguments : string STR0 and result of the function rfc2822_date , called with value under the STR1 key of the item dictionary .	handler . addQuickElement ( STR0 , rfc2822_date ( item [ STR1 ] ) )
4195	if self.verbosity is greater or equal to integer 1 ,	if self . verbosity >= 1 :
6959	from django.core import validators into default name space .	from django . core import validators
15516	call the method handler.startElement with 2 arguments : string STR0 and result of the function self.item_attributes , called with an argument item .	handler . startElement ( STR0 , self . item_attributes ( item ) )
16821	if use_grouping is true and grouping is greater than integer 0 , use_grouping is boolean True , otherwise it is boolean False .	use_grouping = use_grouping and grouping > 0
690	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
13861	if object response has an attribute STR0 and if response.render is callable object ,	if hasattr ( response , STR0 ) and callable ( response . render ) :
13989	if not ,	else :
17732	insert tagname at the beginning of open_tags .	open_tags . insert ( 0 , tagname )
698	call the function urlquote with argument var for every var in vary_on , join the results into a string separated by STR0 , substitute it for key .	key = STR0 . join ( urlquote ( var ) for var in vary_on )
3820	join STR0 and STR1 into a file path , use it as an argument for the call the method os.path.abspath , put the results into a list , substitute self.locale_paths for it .	self . locale_paths = [ os . path . abspath ( os . path . join ( STR0 , STR1 ) ) ]
1356	finally perform ,	finally :
16862	if StopIteration exception ,	except StopIteration :
6677	if self equals to other return boolean False , otherwise return boolean True .	return not ( self == other )
12424	convert max_value into an floating point number , substitute it for max_value .	max_value = float ( max_value )
332	define the method get with 4 arguments : self , key , default set to None and version set to None .	def get ( self , key , default = None , version = None ) :
18190	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
7930	call the method widget.render with 3 arguments : name , return value of the method self.value , attrs set to attrs , use it as an argument for the call to the function force_text , return the result .	return force_text ( widget . render ( name , self . value ( ) , attrs = attrs ) )
3374	value under the STR0 key of the extra_params dictionary is boolean True ,	extra_params [ STR0 ] = True
13874	if call to the function response.has_header with argument STR0 returns boolean True ,	if response . has_header ( STR0 ) :
16526	if name equals a string STR0 ,	if name == STR0 :
12069	call the function phone2numeric with an argument value , return the result .	return phone2numeric ( value )
6517	try ,	try :
3622	if app_dir is a directory ,	if os . path . isdir ( app_dir ) :
10328	substitute serialize_headers for __str__ .	__str__ = serialize_headers
1363	if directory is not an directory ,	if not os . path . isdir ( directory ) :
18029	define the function make_naive with 2 arguments : value and timezone .	def make_naive ( value , timezone ) :
13222	return the content field of the base class of the class SimpleTemplateResponse .	return super ( SimpleTemplateResponse , self ) . content
7507	do nothing .	pass
11609	define the function capfirst with an argument value .	def capfirst ( value ) :
16629	define the function decorating_function with an argument user_function .	def decorating_function ( user_function ) :
16032	do nothing .	pass
11351	call the function get_templatetags_modules , substitute the result for templatetags_modules .	templatetags_modules = get_templatetags_modules ( )
13467	strip path of all leading STR0 and STRspecial characters , substitute the result for path .	path = path . lstrip ( STR0 ) . lstrip ( STRspecial )
11372	derive the class ContextPopException from the Exception base class .	class ContextPopException ( Exception ) :
5741	from yaml import CSafeLoader as SafeLoader into default name space .	from yaml import CSafeLoader as SafeLoader
7933	define the method as_textarea with 3 arguments : self , attrs set to None and unpacked dictionary kwargs .	def as_textarea ( self , attrs = None , ** kwargs ) :
2349	substitute value for value under name key of msg dictionary .	msg [ name ] = value
18434	get the value under the STR0 key of the request.META dictionary , if it exists substitute it for accept , if not accept is an empty string .	accept = request . META . get ( STR0 , STR )
13208	if newretval is not None ,	if newretval is not None :
10134	call the function six.reraise with 3 arguments : UnreadablePostError , UnreadablePostError instantiated with unpacked list e.args , third element of the result of the function sys.exc_info .	six . reraise ( UnreadablePostError , UnreadablePostError ( * e . args ) , sys . exc_info ( ) [ 2 ] )
4909	from django.db.migrations.loader import MigrationLoader into default name space .	from django . db . migrations . loader import MigrationLoader
16701	root is an list with 4 elements : root , root , None and None .	root [ : ] = [ root , root , None , None ]
2267	define the method as_bytes with arguments self and unixfrom set to boolean False .	def as_bytes ( self , unixfrom = False ) :
17927	call the method self._isdst with an argument dt , if it evaluates to true ,	if self . _isdst ( dt ) :
18057	define the function gettext_noop with an argument message .	def gettext ( message ) :
13145	tried is an empty list .	tried = [ ]
13356	call the method node.clone , substitute the result for klass .	klass = node . clone ( )
15632	lang is None .	lang = None
15435	call the method handler.addQuickElement with 2 arguments : string STR0 and cat .	handler . addQuickElement ( STR0 , cat )
2761	call the method connection.ops.start_transaction_sql , if it evaluates to true ,	if connection . ops . start_transaction_sql ( ) :
7737	if not ,	else :
8997	define the method __contains__ with an argument self .	def __contains__ ( self , item ) :
4895	define the method handle with self class instance and dictionary pair of elements options as arguments .	def handle ( self , ** options ) :
14257	try ,	try :
14501	if self.timezone is false ,	if not self . timezone :
5141	call the method template_file.read , substitute it for content .	content = template_file . read ( )
7405	define the method valid_value with arguments self and value .	def valid_value ( self , value ) :
5401	define the __call__method with arguments self , unpacked list args and unpacked dictionary kwargs .	def __call__ ( self , * args , ** kwargs ) :
4187	append it to the string STR0 , use it as the argument for the call to the self.style.MIGRATE_LABEL method , call the self.stdout.write method with previous return value as an argument . if run_syncdb and executor.loader.unmigrated_apps is true ,	if run_syncdb and executor . loader . unmigrated_apps :
15645	if not ,	else :
8076	cached_property decorator ,	@ cached_property
17299	if NameError exception is caught ,	except NameError :
11702	decorator stringfilter ,	@ stringfilter
13505	if not ,	else :
4233	for every app_config in return value of the method apps.get_app_configs if app_config.models_module is not None , and app_config.label is contained in app_labels , create a tuple containing app_config.label and return value of the method router.get_migratable_models called with app_config , connection.alias and include_auto_created set to True , append the tuple to the list all_models .	all_models = [ ( app_config . label , router . get_migratable_models ( app_config , connection . alias , include_auto_created = True ) ) for app_config in apps . get_app_configs ( ) if app_config . models_module is not None and app_config . label in app_labels ]
13211	property decorator ,	@ property
12666	if third element of bits is not equal to a string STR0 ,	if bits [ 2 ] != STR0 :
15986	format string STR0 with name , append it to self.fed .	self . fed . append ( STR0 % name )
15337	divide timezone by integer 60 , substitute the quotient of the division for hour and reminder for minute .	hour , minute = divmod ( timezone , 60 )
17970	define the function get_current_timezone .	def get_current_timezone ( ) :
2828	call the function warnings.warn with 3 argument : string STR0 , RemovedInDjango19Warning and stacklevel set to integer 2 .	warnings . warn ( STR0 , RemovedInDjango19Warning , stacklevel = 2 )
13273	if Exception exception is caught ,	except Exception :
3676	total_ordering decorator ,	@ total_ordering
980	convert self to a list and return it .	return list ( self )
5334	call the self._get_pages method with 3 arguments : self.object_list from the bottom to the top index , number and self , return the result .	return self . _get_page ( self . object_list [ bottom : top ] , number , self )
15960	define the function format_html with 3 arguments : format_string , unpacked list args and unpacked dictionary kwargs .	def format_html ( format_string , * args , ** kwargs ) :
469	if ImportError exception is caught ,	except ImportError :
472	from django.utils.synch import RWLock into default name space .	from django . utils . synch import RWLock
285	call the method self.make_key with key and version set to version as arguments , substitute the result for key .	key = self . make_key ( key , version = version )
8991	define the method as_text with an argument self .	def as_text ( self ) :
6194	decompress is boolean True .	decompress = True
6111	set the value under the STR0 key of the wsgi_opts dictionary to a tuple containing 2 elements : value under the STR1 key , of the options dictionary and value under the STR2 key of the options dictionary converted into an integer .	wsgi_opts [ STR2 ] = ( options [ STR0 ] , int ( options [ STR1 ] ) )
12146	define the method render with 2 arguments : self and context .	def render ( self , context ) :
12494	substituet node for value under the name key of the parser._namedCycleNodes dictionary .	parser . _namedCycleNodes [ name ] = node
8461	try ,	try :
11227	for every attr in tuple with 3 arguments : strings STR0 , STR1 and STR2 ,	for attr in ( STR0 , STR1 , STR2 ) :
2251	call the addr.split method with character STR0 and integer 1 as arguments , substitute the result for localpart and domain , respectively .	localpart , domain = addr . split ( STR0 , 1 )
3582	define the method find_fixtures with arguments : self and fixture_label .	def find_fixtures ( self , fixture_label ) :
72	call the function cache.close .	cache . close ( )
5560	define the class Serializer from the PythonSerializer base class .	class Serializer ( PythonSerializer ) :
3851	define the method build_potfiles with an argument self .	def build_potfiles ( self ) :
9603	from django.conf import settings into default name space .	from django . conf import settings
860	if not .	else :
17610	from gzip import GzipFile into default name space .	from gzip import GzipFile
12190	convert values into a list , substitute it for value .	values = list ( values )
6736	call the method domain_part.encode with an argument string STR0 , on the return value call the decode method with string STR1 as argument , substitute the result for domain_part .	domain_part = domain_part . encode ( STR0 ) . decode ( STR1 )
17427	if not ,	else :
17408	want_unicode is boolean True .	want_unicode = True
15268	define function force_bytes with s , encoding set to STR0 , strings_only set to False and errors set to STR1 as arguments .	def force_bytes ( s , encoding = STR0 , strings_only = False , errors = STR1 ) :
13827	if call to the method response.has_header with string STR0 as an argument returns boolean True ,	if response . has_header ( STR0 ) :
13153	err_msg is a string STR0 , where STR1 is replaced with tried .	error_msg = STR0 % tried
8949	delete entry under the attr key of the attrs dictionary .	del attrs [ attr ]
12078	import module sys .	import sys
18719	call the method self.tzname with an argument dt , substitute the result for self._tzname .	self . _tzname = self . tzname ( dt )
15134	for every f in filters ,	for f in filters :
14491	return a string STR0 formated with sign , floored result of the division of seconds by integer 3000 , reminder of the division of floored result of division of seconds by 60 , by integer 60 .	return STR0 % ( sign , seconds // 3600 , ( seconds // 60 ) % 60 )
1917	call the get_script_name function with environ as argument , use the result as an argument for call to the set_script_prefix function .	set_script_prefix ( get_script_name ( environ ) )
15112	substitute config dictionary value under STR0 key for factory .	factory = config [ STR0 ]
8704	return integer 0 .	return 0
9035	__all__ is a tuple of strings : STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 , STR7 , STR8 , STR9 , STR10 , STR11 , STR12 , STR13 , STR14 , STR15 , STR16 , STR17 , STR18 , STR19 , STR20 , STR21 , STR22 , STR23 and STR24 .	__all__ = ( STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 , STR7 , STR8 , STR9 , STR10 , STR11 , STR12 , STR13 , STR14 , STR15 , STR16 , STR17 , STR18 , STR19 , STR20 , STR21 , STR22 , STR23 , STR24 , )
4075	for m in merge_migrations append m.ancestry to a list , zip the resulting list into tuples of pairs , for every level in result ,	for level in zip ( * [ m . ancestry for m in merge_migrations ] ) :
1512	call the method tempfile.NamedTemporaryFile with argument suffix set to string STR0 .	file = tempfile . NamedTemporaryFile ( suffix = STR0 )
5798	raise an base.SerializationError exception with argument string STR0 , replace STR1 with type of the obj object .	raise base . SerializationError ( STR0 % type ( obj ) )
5173	return expanded_template .	return expanded_template
5518	define the method __init__ , with 3 arguments : self , stream_or_string and unpacked dictionary options .	def __init__ ( self , stream_or_string , ** options ) :
6432	for every app_name and namespace_list in pattern.app_dict.items method return value ,	for app_name , namespace_list in pattern . app_dict . items ( ) :
9809	if data is true ,	if data :
13784	if not ,	else :
6883	self.none_value is a tuple containing 2 elements : integer 0 and empty_label .	self . none_value = ( 0 , empty_label )
13887	define function _i18n_cache_key_suffix , with request and cache_key as arguments .	def _i18n_cache_key_suffix ( request , cache_key ) :
9538	from django.http.response import HttpResponse , StreamingHttpResponse , HttpResponseRedirect , HttpResponsePermanentRedirect , HttpResponseNotModified , HttpResponseBadRequest , HttpResponseForbidden , HttpResponseNotFound , HttpResponseNotAllowed , HttpResponseGone , HttpResponseServerError , Http404 , BadHeaderError , JsonResponse into default name space .	from django . http . response import ( HttpResponse , StreamingHttpResponse , HttpResponseRedirect , HttpResponsePermanentRedirect , HttpResponseNotModified , HttpResponseBadRequest , HttpResponseForbidden , HttpResponseNotFound , HttpResponseNotAllowed , HttpResponseGone , HttpResponseServerError , Http404 , BadHeaderError , JsonResponse )
521	define the method incr with self class instance , key , delta set to integer 1 and version set to None , as arguments .	def incr ( self , key , delta = 1 , version = None ) :
2499	define the method main_help_text with arguments : self class instance and commands_only set to boolean False .	def main_help_text ( self , commands_only = False ) :
3274	get the value STR0 key of the options dictionary , if it exists substitute it for reset_sequences , otherwise reset_sequences is boolean True .	reset_sequences = options . get ( STR0 , True )
15347	call the method date.tzinfo.utcoffset with an argument date , substitute the result for offset .	offset = date . tzinfo . utcoffset ( date )
13355	call the method unifunc.replace with an argument strfunc .	unifunc . replace ( strfunc )
5536	if self.m2m.data and save_m2m are true ,	if self . m2m_data and save_m2m :
1113	return a string STR0 .	return STR0
18009	call the method value.astimezone with an argument timezone , substitute the result for value .	value = value . astimezone ( timezone )
9488	get the value under the STR0 key of the final_attrs dictionary , substitute it for id_ , if it doesnt exists , id_ is None .	id_ = final_attrs . get ( STR0 , None )
4347	call the method translation.activate with an argument settings.LANGUAGE_CODE .	translation . activate ( settings . LANGUAGE_CODE )
2116	if use_tls is None substitute settings.EMAIL_USE_TLS for self.username , if not substitute use_tls for self.use_tls .	self . use_tls = settings . EMAIL_USE_TLS if use_tls is None else use_tls
2632	call the parse_args method with arguments args and namespace , from the base class of the CommandParser class .	return super ( CommandParser , self ) . parse_args ( args , namespace )
14254	define the method remove with 2 arguments : self and item .	def remove ( self , item ) :
9835	call the method self._stream.unget with an argument unused_char .	self . _stream . unget ( unused_char )
4600	define the handle_app_config with 3 arguments self , app_config and unpacked dictionary options .	def handle_app_config ( self , app_config , ** options ) :
11159	if param is contained in unhandled_params ,	if param in unhandled_params :
17167	substitute new for self.mod .	self . mod = new
17285	_iterlists is a string STR0 .	_iterlists = STR0
377	call the self._createdir method .	self . _createdir ( )
17574	DARK_PALETTE is a string STR0 .	DARK_PALETTE = STR0
8850	define the method _get_choices with an argument self .	def _get_choices ( self ) :
13576	RUN_RELOADER is boolean True .	RUN_RELOADER = True
11571	if not ,	else :
18601	call the method cmatch.group with an argument integer 1 , format with the result string STR0 , write it to out .	out . write ( STR0 % cmatch . group ( 1 ) )
9728	call the method self._close_files .	self . _close_files ( )
6596	do nothing .	pass
14259	if KeyError exception is caught ,	except KeyError :
1754	evaluate the function debug.technical_500_response with request , evaluated value of function sys.exc_info as a list , status code set to integer 400 , return the result .	return debug . technical_500_response ( request , * sys . exc_info ( ) , status_code = 400 )
6189	define the function loads with 5 arguments : s , key set to None , salt set to string STR0 ,	def loads ( s , key = None , salt = STR0 , serializer = JSONSerializer , max_age = None ) :
6005	from django.core.wsgi import get_wsgi_application into default name space .	from django . core . wsgi import get_wsgi_application
3252	return model_list .	return model_list
279	call the method cursor.execute with string STR0 , substitute the STR1 with table and 3 elements of a list : b64encoded , exp and key , respectively .	cursor . execute ( STR0 % table , [ key , b64encoded , exp ] )
11078	modes is an empty list .	nodes = [ ]
7887	substitute form for self.form .	self . form = form
311	call the method cursor.execute with string STR0 as argument , substitute the STR1 with table .	cursor . execute ( STR0 % table )
15109	call the method logging._releaseLock .	logging . _releaseLock ( )
17225	delete attr .	del attr
4819	break the loop execution .	break
12776	define the function find_template_loader with an argument loader .	def find_template_loader ( loader ) :
14317	return an empty list .	return [ ]
2456	from django.core.management.color import color_style into default name space .	from django . core . management . color import color_style
17981	substitute timezone for _active.value .	_active . value = timezone
12679	define the function templatetag with 2 arguments : parser and token .	def templatetag ( parser , token ) :
14513	multiply offset.days with 86400 , add offset.seconds to the result , return the result .	return offset . days * 86400 + offset . seconds
17782	zfile is an instance of GzipFile class , created with 3 arguments : mode set to string STR0 , compresslevel set to integer 6 , and fileobj set to buf .	zfile = GzipFile ( mode = STR0 , compresslevel = 6 , fileobj = buf )
7051	substitute elements of self.validators list for result.validators .	result . validators = self . validators [ : ]
10502	status_code is an integer 403 .	status_code = 403
11468	from django.conf import settings into default namespace .	from django . conf import settings
3601	if self.verbosity is greater or equals to integer 2 .	if self . verbosity >= 2 :
15363	categories is a list containing the results of the function force_text , called with an argument c , for every c in categories .	categories = [ force_text ( c ) for c in categories ]
5583	write a white space to the self.stream file stream .	self . stream . write ( STR )
16889	name is a string STR0 formated with num_args .	name = STR0 % num_args
18533	call the method one_percent_re.sub with 2 arguments : string STR0 and t.contents , substitute the result for contents .	contents = one_percent_re . sub ( STR0 , t . contents )
9292	define the method value_from_datadict with 4 arguments : self , data , files and name .	def value_from_datadict ( self , data , files , name ) :
13634	EventHandler.modified_code is I18N_MODIFIED .	EventHandler . modified_code = I18N_MODIFIED
8224	substitute DEFAULT_MIN_NUM for min_num ,	min_num = DEFAULT_MIN_NUM
6606	if ns_pattern is true ,	if ns_pattern :
5594	call the method stream_or_string.decode with an argument string STR0 , substitute the result for stream_or_string .	stream_or_string = stream_or_string . decode ( STR0 )
12347	if not ,	else :
13683	return wrapper .	return wrapper
9523	define the method __init__ with 4 arguments : self , attrs set to None , date_format set to None and time_format set to None .	def __init__ ( self , attrs = None , date_format = None , time_format = None ) :
5805	call the method self.xml.startElement with arguments string STR0 and attrs .	self . xml . startElement ( STR0 , attrs )
11856	decorator function register.filter with an argument is_safe set to boolean False .	@ register . filter ( is_safe = False )
2308	put to into a list , assign it to self.to .	self . to = list ( to )
5225	return guessed_path .	return guessed_path
3903	replace STR0 in string STR1 with filename and dirpath , write it to self.stdout .	self . stdout . write ( STR0 % ( filename , dirpath ) )
7282	if file_name is false ,	if not file_name :
1994	define the method __enter__ with argument self .	def __enter__ ( self ) :
5748	call the method DjangoSafeDumper.add_representer with arguments decimal.Decimal and DjangoSafeDumper.represent_decimal .	DjangoSafeDumper . add_representer ( decimal . Decimal , DjangoSafeDumper . represent_decimal )
7464	if value equals self.empty_value or value is contained in self.empty_values ,	if value == self . empty_value or value in self . empty_values :
2717	if self.use_argparse is true ,	if self . use_argparse :
5076	url_schemes is list of strings STR0 , STR1 and STR2 .	url_schemes = [ STR0 , STR1 , STR2 ]
3795	append list containing string STR0 to self.msguniq_options .	self . msguniq_options = self . msguniq_options [ : ] + [ STR0 ]
1522	derive the InMemoryUploadedFile class from the UploadedFile base class .	class InMemoryUploadedFile ( UploadedFile ) :
3534	if self.loaded_object_count is greater than zero ,	if self . loaded_object_count > 0 :
17534	decrement self.waiting_writers by integer 1 ,	self . waiting_writers -= 1
14007	if digest is None ,	if digest is None :
306	call the self.clear method .	self . clear ( )
9913	call the method _parse_header with an argument line , assign the result to name and tuple with 2 elements : value and params , respectively .	name , ( value , params ) = _parse_header ( line )
223	call the cursor.fetchone method , substitute the result for row .	row = cursor . fetchone ( )
6863	year_field is a string STR0 .	year_field = STR0
3484	from django.core.management.base import BaseCommand and CommandError into default name space .	from django . core . management . base import BaseCommand , CommandError
17496	self.active_writers is an integer 0 .	self . active_writers = 0
2506	if app equals a string STR0 ,	if app == STR0 :
667	l is lambda function with argument x , that calls the method self.make_key with x and version set to version as arguments .	l = lambda x : self . make_key ( x , version = version )
17246	delete attr .	del attr
13915	call the function _generate_cache_key with request , method , headerlist , key_prefix as arguments , return the result .	return _generate_cache_key ( request , method , headerlist , key_prefix )
17073	return an instance of SafeBytes , created with an argument data .	return SafeBytes ( data )
17879	from datetime import datetime , timedelta and tzinfo into default name space .	from datetime import datetime , timedelta , tzinfo
6676	define the method __ne__ with arguments self and other .	def __ne__ ( self , other ) :
13706	if change equals to FILE_MODIFIED ,	if change == FILE_MODIFIED :
4324	substitute second element of plan_node for title .	title = plan_node [ 1 ]
8719	get self.instance	pk_value = getattr ( self . instance , self . fk . rel . field_name )
7788	call the method error.items , for every field and error_list in the result ,	for field , error_list in error . items ( ) :
18514	call the method blankout with 2 arguments : part and STR0 , write the result to out .	out . write ( blankout ( part , STR0 ) )
6668	raise an TypeError exception with an argument string STR0 .	raise TypeError ( STR0 )
7382	derive the class ChoiceField from the base class Field class .	class ChoiceField ( Field ) :
5122	increment length of template_dir by one and substitute it for prefix_length .	prefix_length = len ( template_dir ) + 1
18393	if _supported is None ,	if _supported is None :
12468	if STR0 is contained in second element of args ,	if STR0 in args [ 1 ] :
8963	call the method self.items , for every field and errors in the result .	for field , errors in self . items ( ) :
17636	if space equals integer 0 ,	if space == 0 :
5229	convert base to lowercase , if it ends with string STR0 ,	if base . lower ( ) . endswith ( STR0 ) :
6044	call the self.style.HTTP_REDIRECT with an argument msg , substitute it for msg .	msg = self . style . HTTP_REDIRECT ( msg )
10854	increment i by integer 1 ,	i += 1
15724	for every resultclass in resultclasses ,	for resultclass in resultclasses :
16123	define method parse_starttag with self class instance and i as the arguments .	def parse_starttag ( self , i ) :
7090	if ValueError or TypeError exceptions are caught ,	except ( ValueError , TypeError ) :
4302	if self.load_initial_data is not empty ,	if self . load_initial_data :
7425	call the function self.coerce with an argument value , substitute it for value .	value = self . coerce ( value )
11879	if autoescape is true ,	if autoescape :
5470	substitute options for self.options .	self . options = options
7079	call the method validators.MaxValueValidator with max_value converted into an integer , append the result to list self.validators .	self . validators . append ( validators . MaxValueValidator ( max_value ) )
11148	convert params into a list , substitute it for unhandled_params .	unhandled_params = list ( params )
3489	from django.utils.functional import cached_property into default name space .	from django . utils . functional import cached_property
13808	from django.conf import settings object to the default name space .	from django . conf import settings
15438	call the method handler.addQuickElement with 2 arguments : string STR0 and result of the function rfc2822_date , called with an argument result of the method self.latest_post_date .	handler . addQuickElement ( STR0 , rfc2822_date ( self . latest_post_date ( ) ) )
578	from django.utils import six into default name space .	from django . utils import six
12505	register.tag decorator function with an argument STR0 ,	@ register . tag ( STR0 )
10450	define the method __iter__ with an argument self .	def __iter__ ( self ) :
9627	raise an MultiPartParserError with an argument string STR0 is replaced with boundary .	raise MultiPartParserError ( STR0 % boundary )
7646	from django.utils.encoding import smart_text , force_text and python_2_unicode_compatible into default name space .	from django . utils . encoding import smart_text , force_text , python_2_unicode_compatible
18166	define the function ngettext with 4 arguments : context , singular , plural and number .	def npgettext ( context , singular , plural , number ) :
4177	call the self.style.MIGRATE_HEADING method , with string STR0 as an argument , use the result as an argument for the call to the self.stdout.write method .	self . stdout . write ( self . style . MIGRATE_HEADING ( STR0 ) )
7409	for every k2 and v2 in v ,	for k2 , v2 in v :
7270	call the method __init__ from the base class of the FileField class , with 2 arguments : unpacked list args and unpacked dictionary .	super ( FileField , self ) . __init__ ( * args , ** kwargs )
842	admin is a string STR0	admin = STR0
1591	self.file is a instance of a class TemporaryUploadedFile initialized with arguments : self.file_name , self.content_type , integer 0 , self.charset and self.content_type_extra .	self . file = TemporaryUploadedFile ( self . file_name , self . content_type , 0 , self . charset , self . content_type_extra )
879	from django.utils.encoding import smart_text into default name space .	from django . utils . encoding import smart_text
14757	call the function make_middleware_decorator with an argument middleware_class , call the result , return the new result .	return make_middleware_decorator ( middleware_class ) ( )
16771	do nothing .	pass
3627	use the result as an argument for the call to the upath function , for every d in dirs , append the results into a list , substitute the resulting list for dirs . return dirs .	return dirs
14841	import module sys .	import sys
5853	call the method self.xml.startElement with 2 arguments : string STR0 and dictionary containing 3 entries : field.name for STR1 ,	self . xml . startElement ( STR0 , { STR1 : field . name , STR2 : field . rel . __class__ . __name__ , STR3 : smart_text ( field . rel . to . _meta ) , } )
1866	do nothing .	pass
538	try ,	try :
1557	return string STR0 .	return STR0
14255	delete entry under item key of self.dict dictionary .	del self . dict [ item ]
5491	for every field in concrete_model._meta.many_to_many ,	for field in concrete_model . _meta . many_to_many :
7632	default_validators is an list containing validators.validate_slug .	default_validators = [ validators . validate_slug ]
13551	import module traceback .	import traceback
7115	call the method validate with an argument value , from the base class of the FloatField class .	super ( FloatField , self ) . validate ( value )
3373	if value under the STR0 key of the dictionary contained under the column_name key of the dictionary indexes is true ,	if indexes [ column_name ] [ STR0 ] :
2316	if bcc is true ,	if bcc :
9613	derive the class InputStreamExhausted from the Exception base class .	class InputStreamExhausted ( Exception ) :
1477	substitute tempfile.gettempdir for gettempdir .	gettempdir = tempfile . gettempdir
12042	otherwise if bytes is smaller than PB ,	elif bytes < PB :
6599	call the method resolved_path.append with an argument ns .	resolved_path . append ( ns )
7799	define the method has_error with 3 arguments : self , field and code set to None .	def has_error ( self , field , code = None ) :
12866	define the method get_block with 2 arguments self and name .	def get_block ( self , name ) :
6557	define the __init__ method with 5 arguments : self , urlconf_name , default_kwargs set to None , app_name set to None and namespace set to None .	def __init__ ( self , urlconf_name , default_kwargs = None , app_name = None , namespace = None ) :
17734	return text .	return text
14169	define the method __new__ with 3 arguments : cls , unpacked list args and unpacked dictionary kwargs .	def __new__ ( cls , * args , ** kwargs ) :
6470	call the method pattern.resolve with an argument new_path , substitute the result for sub_match .	sub_match = pattern . resolve ( new_path )
11358	substitute lib for value under the library_name key of libraries dictionary .	libraries [ library_name ] = lib
7271	define the method to_python with arguments self and data .	def to_python ( self , data ) :
13873	doctring	STR0
15557	from django.utils.safestring import mark_safe into default name space .	from django . utils . safestring import mark_safe
10247	if Exception exception is caught ,	except Exception :
15714	define the method __init__ with 3 arguments : self , args and kw .	def __init__ ( self , args , kw ) :
6265	if func doesnt have a attribute STR0 ,	if not hasattr ( func , STR0 ) :
17304	substitute callable for callable .	callable = callable
12726	if not ,	else :
4317	sort loader.migrated_apps , substitute it for app_names .	app_names = sorted ( loader . migrated_apps )
17455	if slots is not None ,	if slots is not None :
4687	from django.db.migrations.optimizer import MigrationOptimizer into default name space .	from django . db . migrations . optimizer import MigrationOptimizer
17831	call the method match.group with an argument integer 0 , return the result .	return match . group ( 0 )
16237	if not ,	else :
3127	for every exclude in excludes ,	for exclude in excludes :
14444	call the function is_naive with an argument obj .	if is_naive ( obj ) :
10335	call the method value.encode with an argument charset .	value . encode ( charset )
10719	otherwise if token.token_type equals integer 1 ,	elif token . token_type == 1 :
3670	call the method re.compile with 2 arguments : raw string STR1 ,	plural_forms_re = re . compile ( STR1 , re . MULTILINE | re . DOTALL )
4500	raise an ImportError exception .	raise ImportError
358	import module hashlib .	import hashlib
1622	define lambda function that returns self.file.encoding field , use it as an argument for property function , put the result in encoding .	encoding = property ( lambda self : self . file . encoding )
5878	raise an base.DeserializationError exception with string STR0 as argument .	raise base . DeserializationError ( STR0 )
17799	raise an TypeError with an argument s .	raise TypeError ( s )
11745	decorator stringfilter ,	@ stringfilter
3612	if fixture_name is not equal to string STR0 and fixture_files is false ,	if fixture_name != STR0 and not fixture_files :
2375	substitute msg for body_msg .	body_msg = msg
9534	for every widget in self.widgets : ,	for widget in self . widgets :
795	return boolean True if self.level is greater than or equals to ERROR , otherwise return boolean False .	return self . level >= ERROR
2935	leave_locale_alone is boolean True .	leave_locale_alone = True
3341	yield string STR0 as the result .	yield STR0
1578	substitute charset for self.charset .	self . charset = charset
7439	otherwise if value is not an instance of list ot tuple type ,	elif not isinstance ( value , ( list , tuple ) ) :
16913	get the next element of the iterable pattern_iter , assign the result for ch and escaped , respectively .	ch , escaped = next ( pattern_iter )
14584	if not ,	else :
4219	call the self.stdout.write method , with string STR0 with STR1 replaced with migration and ending set to STR , as arguments .	self . stdout . write ( STR0 % migration , ending = STR )
14200	reverse order of elements of self.keyOrder , return the result .	return reversed ( self . keyOrder )
708	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
2665	leave_locale_alone is boolean False .	leave_locale_alone = False
400	try ,	try :
16684	substitute value under the RESULT key of the root dictionary for oldvalue .	oldvalue = root [ RESULT ]
9574	try ,	try :
14089	sys.stdout is an instance of NullDevice class .	sys . stdout = NullDevice ( )
6792	params is a dictionary with 2 initial entries : self.limit_value for STR0 and cleaned for STR1 .	params = { STR0 : self . limit_value , STR1 : cleaned }
8864	return None .	return None
17240	substitute _urllib_request_moved_attributes for Module_six_moves_urllib_request._moved_attributes .	Module_six_moves_urllib_request . _moved_attributes = _urllib_request_moved_attributes
17079	call the __add__ method with an arguments rhs from the base class of the class SafeText , substitute the result for t .	t = super ( SafeText , self ) . __add__ ( rhs )
6625	define the function set_urlconf with an argument urlconf_name .	def set_urlconf ( urlconf_name ) :
17502	increment self.active_readers by 1 .	self . active_readers += 1
10903	call the methof match.group with an argument STR0 , substitute the result for filter_name .	filter_name = match . group ( STR0 )
8569	all_unique_checks is an empty set .	all_unique_checks = set ( )
16450	split second element of hextet into parts by STR0 , append them to new_ip .	new_ip += hextet [ 1 ] . split ( STR0 )
3598	join fixture_name and suffix into a string , separated by STR0 for every suffix in suffixes , put the results in set , substitute it for targets .	targets = set ( STR0 . join ( ( fixture_name , suffix ) ) for suffix in suffixes )
2311	if cc is true ,	if cc :
16994	for every elt in source ,	for elt in source :
18494	otherwise if intrans is true ,	elif intrans :
3950	domains is a tuple with 2 elements : strings STR0 and STR1 .	domains = ( STR0 , STR1 )
17206	if old_attr is None ,	if old_attr is None :
18521	inplural is boolean True .	inplural = True
7512	if value is false or for every v in value every v is contained in self.empty_values ,	if not value or not [ v for v in value if v not in self . empty_values ] :
5977	define the method __init__ with arguments self , name , value , base , sysid , pubid and notation_name .	def __init__ ( self , name , value , base , sysid , pubid , notation_name ) :
10020	raise an DisallowedHost exception with an argument msg .	raise DisallowedHost ( msg )
15133	define the method add_filters with 3 arguments : self , filterer and filters .	def add_filters ( self , filterer , filters ) :
4941	call the function check_for_migrations with arguments app_config and connection .	check_for_migrations ( app_config , connection )
3240	found is boolean True .	found = True
3939	if self.no_obsolete is true ,	if self . no_obsolete :
4115	from django.core.management.sql import custom_sql_for_model , emit_post_migrate_signal and emit_pre_migrate_signal into default name space .	from django . core . management . sql import custom_sql_for_model , emit_post_migrate_signal , emit_pre_migrate_signal
6572	call the function get_urlconf with an argument urlconf .	urlconf = get_urlconf ( )
15216	from django.utils.functional import Promise into default name space .	from django . utils . functional import Promise
2290	call the method MIMEText.__init__ with 4 arguments : self , text , subtype and charset .	MIMEText . __init__ ( self , text , subtype , charset )
226	call the timezone.now function , substitute the result for now .	now = timezone . now ( )
12816	call the function get_template_from_string with 3 arguments : template , origin and template_name , substitute the result for template .	template = get_template_from_string ( template , origin , template_name )
13229	define the method __init__ with 7 arguments : self , request , template , context set to None , content_type set to None , status set to None and current_app set to None .	def __init__ ( self , request , template , context = None , content_type = None , status = None , current_app = None ) :
8579	for every uclass , unique_check in all_unique_checks ,	for uclass , unique_check in all_unique_checks :
2027	call the method self.write_message with argument message .	self . write_message ( message )
8453	call the method self._get_validation_exclusions , substitute the result for exclude .	exclude = self . _get_validation_exclusions ( )
12795	if not ,	else :
1262	try ,	try :
18524	if origin is true ,	if origin :
10093	raise an RawPostDataException exception with an argument string STR0 .	raise RawPostDataException ( STR0 )
14566	call the method self.data.utctimetuple , use the result as an argument for the call to the function calendar.timegm , return result converted into an integer .	return int ( calendar . timegm ( self . data . utctimetuple ( ) ) )
6931	if ValueError exception is caught ,	except ValueError :
6358	define the method add_prefix with arguments self and prefix .	def add_prefix ( self , prefix ) :
17333	define the function iteritems with 2 arguments : d and unpacked dictionary kw .	def iteritems ( d , ** kw ) :
9640	substitute META for self._meta .	self . _meta = META
1729	if response is None ,	if response is None :
12845	from django.template.base import TemplateSyntaxError , Library , Node , TextNode , token_kwargs and Variable into default namespace .	from django . template . base import TemplateSyntaxError , Library , Node , TextNode , token_kwargs , Variable
15625	call the function dateformat.format with 2 arguments : value and result of the function get_format called with 2 arguments : format , if its true , otherwise string STR0 and use_l10n as use_l10n , return the result .	return dateformat . format ( value , get_format ( format or STR0 , use_l10n = use_l10n ) )
13909	substitute settings.CACHE_MIDDLEWARE_KEY_PREFIX for key_prefix .	key_prefix = settings . CACHE_MIDDLEWARE_KEY_PREFIX
10060	if self.scheme equals to string STR0 , return boolean True , otherwise return boolean False .	return self . scheme == STR0
752	return errors .	return errors
9723	if not ,	else :
2586	try ,	try :
3399	value under the STR0 key of the extra_params dictionary is boolean True .	extra_params [ STR0 ] = True
16908	terminal_char is an string STR0 .	terminal_char = STR0
4264	try ,	try :
3188	substitute model._base_manager for objects .	objects = model . _base_manager
14195	call the method __delitem__ from the base class of the class SortedDict , with an argument key .	super ( SortedDict , self ) . __delitem__ ( key )
9083	for every name in MEDIA_TYPES ,	for name in MEDIA_TYPES :
3899	for every filename in filenames ,	for filename in filenames :
12025	if TypeError , ValueError or UnicodeDecodeError exceptions are caught ,	except ( TypeError , ValueError , UnicodeDecodeError ) :
8851	if self has an attribute STR0 ,	if hasattr ( self , STR0 ) :
7455	for every value in initial call the function force_text with an argument value , add the results into a set , substitute the resulting set for initial_set .	initial_set = set ( force_text ( value ) for value in initial )
7093	define the method widget_attrs with arguments self and widget .	def widget_attrs ( self , widget ) :
13620	append new_filenames to _cached_filenames .	_cached_filenames += new_filenames
6507	define the method reverse with arguments self , lookup_view , unpacked list args and unpacked dictionary kwargs .	def reverse ( self , lookup_view , * args , ** kwargs ) :
10143	read one line from self file stream , substitute the result for buf .	buf = self . readline ( )
13179	define the method resolve_template with 2 arguments : self and template .	def resolve_template ( self , template ) :
15801	for every arg in the result , if arg is an instance of Promise class ,	if isinstance ( arg , Promise ) :
8045	return the length of self.forms .	return len ( self . forms )
11025	try ,	try :
11002	substitute self.literal for value .	value = self . literal
5300	from math import ceil into default name space .	from math import ceil
10548	from inspect import getargspec and getcallargs into default name space .	from inspect import getargspec , getcallargs
1710	call the method urlresolvers.RegexURLResolver with raw literal string STR0 and urlconf as the arguments , substitute the result for resolver .	resolver = urlresolvers . RegexURLResolver ( STR0 , urlconf )
4883	get the value under the key STR0 of options dictionary , substitute it for interactive .	interactive = options . get ( STR0 )
2531	call the function load_command_class with arguments app_name and subcommand , substitute the result for klass .	klass = load_command_class ( app_name , subcommand )
1679	if mw_instance has an attribute named STR0 .	if hasattr ( mw_instance , STR0 ) :
9687	call the function force_text with 3 arguments : file_name , encoding and errors set to string STR0 , substitute the result for file_name .	file_name = force_text ( file_name , encoding , errors = STR0 )
3847	call the method self.write_po_file with 2 arguments : potfile and locale .	self . write_po_file ( potfile , locale )
4418	django.utils import translation into default namespace .	from django . utils import translation
10108	if self._read_started is true and self doesnt have an STR0 attribute .	if self . _read_started and not hasattr ( self , STR0 ) :
14730	derive the class classonlymethod from the classmethod base class .	class classonlymethod ( classmethod ) :
16609	define the method __init__ with 3 arguments : self , tup and hash set to hash .	def __init__ ( self , tup , hash = hash ) :
18293	return self.__language .	return self . __language
7738	call the method bf.css_classes , substitute the result for css_classes .	css_classes = bf . css_classes ( )
8550	call the method qs.order_by with argument self.model._meta.pk.name , substitute the result for qs .	qs = qs . order_by ( self . model . _meta . pk . name )
7580	try ,	try :
18738	if UnicodeDecodeError exception is caught ,	except UnicodeDecodeError :
5900	if keys is true ,	if keys :
16751	if first and second element of sys.version_info are both equal to integer 3 ,	if sys . version_info [ : 2 ] >= ( 3 , 3 ) :
14574	call the method self.data.weekday , increment the result by integer 1 , substitute the result for weekday .	weekday = self . data . weekday ( ) + 1
11763	call the method value.ljust with an argument , arg converted into a integer , return the result .	return value . ljust ( int ( arg ) )
16400	return result .	return result
1064	if AttributeError or UnsupportedOperation exception occurred .	except ( AttributeError , UnsupportedOperation ) :
10895	instantiate Variable class , with an argument constant , call the resolve method with an empty dictionary as an argument , substitute the result for var_obj .	var_obj = Variable ( constant ) . resolve ( { } )
17542	decrement t by integer 1 ,	t -= 1
3701	perform the following : call the method fp.read , substitute the result for src_data .	src_data = fp . read ( )
13056	if self._cached_loaders is false ,	if not self . _cached_loaders :
9643	substitute _upload_handlers for self.__upload_handlers .	self . _upload_handlers = upload_handlers
8531	substitute self.model._meta.pk for pk_field .	pk_field = self . model . _meta . pk
8137	append tuple with 2 elements : i and value under the ORDERING_FIELD_NAME key of form.cleaned_data dictionary to self._ordering .	self . _ordering . append ( ( i , form . cleaned_data [ ORDERING_FIELD_NAME ] ) )
13713	in string STR0 replace STR1 with o for every o in sys.warnoptions , put the result into a list , append the list to a list containing sys.executable , append sys.argv to the end of the resulting list , substitute the result for args .	args = [ sys . executable ] + [ STR0 % o for o in sys . warnoptions ] + sys . argv
10985	convert self.literal into an integer , substitute it for self.literal .	self . literal = int ( self . literal )
17889	__all__ is a list with 15 elements : strings STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 , STR7 , STR8 , STR9 , STR10 , STR11 , STR12 , STR13 and STR14 .	__all__ = [ STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 , STR7 , STR8 , STR9 , STR10 , STR11 , STR12 , STR13 , STR14 , ]
16647	define the function wrapper with 2 arguments : unpacked list args and unpacked dictionary kwds .	def wrapper ( * args , ** kwds ) :
8312	if not ,	else :
9378	convert self.index into a string and append it to STR0 string , substitute it for value under the STR1 key of self.attrs dictionary .	self . attrs [ STR1 ] += STR0 % self . index
9326	define the method render_options with 3 arguments : self , choices and selected_choices .	def render_options ( self , choices , selected_choices ) :
11897	if old_style_list is false ,	if not old_style_list :
13961	import module binascii .	import binascii
2084	if self.stream is not None ,	if self . stream is not None :
3590	call the method os.path.dirname with an argument fixture_name , append it to a list , substitute resulting list for fixture_dirs .	fixture_dirs = [ os . path . dirname ( fixture_name ) ]
11623	d is an instance of Decimal class created with an argument input_val .	d = Decimal ( input_val )
16107	substitute HTMLParser from the module _html_parser for HTMLParser .	HTMLParser = _html_parser . HTMLParser
8521	call the function dict with an argument tuple with 2 elements : o.pk and o , for every o in result of the method self.get_queryset , substitute the result for self._object_dict .	self . _object_dict = dict ( ( o . pk , o ) for o in self . get_queryset ( ) )
659	return val .	return val
7124	derive the class DecimalField from the base class IntegerField class .	class DecimalField ( IntegerField ) :
16754	if not ,	else :
16357	doublecolon_start is an integer -1 .	doublecolon_start = - 1
11799	call the function escape with an argument value , substitute it for value .	value = escape ( value )
17358	replace every occurrence of raw string STRspecial in s with a raw string '\\\STR , use the result and string STR0 , as arguments for the call to the unicode function , return the result .	return unicode ( s . replace ( STRspecial , STR1 ) , STR0 )
8534	call the method self._existing_object with an argument pk , substitute the result for value under the STR0 key of kwargs .	kwargs [ STR0 ] = self . _existing_object ( pk )
15267	evaluate the function force_bytes , with the arguments s , encoding , strings_only and errors , return the result .	return force_bytes ( s , encoding , strings_only , errors )
15585	try ,	try :
17482	get _assertRegex attribute of the self object , call the result with 2 arguments : unpacked list args , and unpacked dictionary kwargs , return the result .	return getattr ( self , _assertRegex ) ( * args , ** kwargs )
2513	append an empty string to usage .	usage . append ( STR )
1968	return the evaluated result of the mail.send method .	return mail . send ( )
1534	define the method __init__ with 4 arguments : self , name , content and content_type defaulting to a string STR0 .	def __init__ ( self , name , content , content_type = STR0 ) :
9415	substitute name for self.name .	self . name = name
15380	define the method root_attributes with an argument self .	def root_attributes ( self ) :
1924	if not ,	else :
11094	call the function force_text with an argument value , substitute the result for value .	value = force_text ( value )
12037	call the function ugettext with an argument string STR0 , substitute STR1 with the result of the call to the function , filesize_number_format with result of division of bytes by KB as an argument , substitute the result for value .	value = ugettext ( STR0 ) % filesize_number_format ( bytes / KB )
4841	call the method parser.add_argument with 5 arguments : string STR0 , action set to STR1 , dest set to STR2 , default set to boolean True , help set to string STR3 .	parser . add_argument ( STR0 , action = STR1 , dest = STR2 , default = True , help = STR3 ) ,
4690	define the method add_arguments with 2 arguments self and parser .	def add_arguments ( self , parser ) :
13057	cached_loaders is an empty list .	cached_loaders = [ ]
10033	if signing.BadSignature exception is caught ,	except signing . BadSignature :
7727	call the method self.non_field_errors , substitute the result for top_errors .	top_errors = self . non_field_errors ( )
18110	define the method __enter__ with an argument self .	def __enter__ ( self ) :
9448	remove entry under STR0 key of the kwargs dictionary and substitute it for renderer , if the key doesnt exists , renderer is None .	renderer = kwargs . pop ( STR0 , None )
16109	compile a regular expression pattern string STR0 into a regular expression object and assign it to tagfind .	tagfind = re . compile ( STR0 )
8911	call the method prepare_value the base class of the class ModelMultipleChoiceField , with an argument value , return the result .	return super ( ModelMultipleChoiceField , self ) . prepare_value ( value )
18661	get the type of the self object , on the result call the __bool__ method with an argument self , return the result .	return type ( self ) . __bool__ ( self )
17265	define the function add_move with an argument move .	def add_move ( move ) :
4040	if self.verbosity is greater or equal to integer 1 ,	if self . verbosity >= 1 :
3685	if self.path equals other.path , return boolean True , if not return boolean False .	return self . path == other . path
8822	default_error_messages is a dictionary with an entry , result of the call to the function _ with an argument , string STR0 for STR1 .	default_error_messages = { STR0 : _ ( STR1 ) , }
9493	widget_value is None .	widget_value = None
11706	if ValueError exception is caught ,	except ValueError :
1867	if not ,	else :
4348	if AttributeError exception is caught ,	except AttributeError :
18364	call the function translation with an argument settings.LANGUAGE_CODE , substitute the result for _default .	_default = translation ( settings . LANGUAGE_CODE )
13325	substitute element at self.pos index of self.tokens for retval .	retval = self . tokens [ self . pos ]
15923	set opname attribute of cls object to opfunc .	setattr ( cls , opname , opfunc )
1826	substitute first size elements of self.buffer for result .	result = self . buffer [ : size ]
16554	call the function import_string with an argument logging_config , substitute the result for logging_config_func .	logging_config_func = import_string ( logging_config )
16807	call the method imp.find_module with 2 arguments : module_name and list containing element entry , assign the result to file_ , _ , and _ , respectively	file_ , _ , _ = imp . find_module ( module_name , [ entry ] )
5057	import module posixpath .	import posixpath
14722	klass.__new__ is a static method of the function __new__ .	klass . __new__ = staticmethod ( __new__ )
11665	call the function iri_to_uri with an argument value , use the result as an argument for the call to the force_text function , return the result .	return force_text ( iri_to_uri ( value ) )
17624	call the function re.compile with 2 arguments : raw string STR0 and bitwise OR performed with 2 operands , re.U and re.S , substitute the result for re_words .	re_words = re . compile ( STR0 , re . U | re . S )
5074	requires_system_checks is boolean False .	requires_system_checks = False
17641	break from the loop execution	break
7812	if self.empty_permitted is true and call to the method self.has_changed evaluates to false ,	if self . empty_permitted and not self . has_changed ( ) :
6326	return callback and a empty string .	return callback , STR
4182	if not ,	else :
10889	if upto is not equal to start .	if upto != start :
9569	from the base class of the SimpleCookie class call the method load with rawdata as argument .	super ( SimpleCookie , self ) . load ( rawdata )
12874	define the method __repr__ with an argument self .	def __repr__ ( self ) :
13129	from django.template.base import TemplateDoesNotExist into default name space .	from django . template . base import TemplateDoesNotExist
18094	return proxy .	return proxy
16322	import module sys .	import sys
11476	call the function import_string with an argument path , substitute the result for func .	func = import_string ( path )
10822	define the method tag with an argument self .	def tag ( self ) :
12642	if not ,	else :
10453	call the method self.make_bytes with an argument content , append it to self._container .	self . _container . append ( self . make_bytes ( content ) )
456	call the self._delete method with argument f.name .	self . _delete ( f . name )
9003	define the method __getitem__ with an argument self .	def __getitem__ ( self , i ) :
6254	define the __init__ method with 7 arguments : self , func , args , kwargs , url_name set to None , app_name set to None and namespaces set to None .	def __init__ ( self , func , args , kwargs , url_name = None , app_name = None , namespaces = None ) :
11299	evaluates to true , call the function select_template with an argument file_name , substitute the result for t .	t = select_template ( file_name )
12906	return an string STR0 , where STR1 is replaced with self.parent_name.token .	return STR0 % self . parent_name . token
4272	if self.verbosity is greater or equal to integer 2 ,	if self . verbosity >= 2 :
8856	if value has an attribute STR0 ,	if hasattr ( value , STR0 ) :
17096	define the function mark_safe with an argument s .	def mark_safe ( s ) :
6455	return the value under the language_code key of the self._namespace_dict dictionary .	return self . _namespace_dict [ language_code ]
1085	if not ,	else :
2314	if not ,	else :
6900	if not ,	else :
3626	call the function os.path.realpath with an argument d , use the result as an argument for the call to the function os.path.abspath ,	dirs = [ upath ( os . path . abspath ( os . path . realpath ( d ) ) ) for d in dirs ]
2446	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
3332	call the method connection.cursor , with the result as cursor ,	with connection . cursor ( ) as cursor :
8691	call the method self.fk.rel.to , substitute the result for self.instance .	self . instance = self . fk . rel . to ( )
3510	get the value under the STR0 key of the options dictionary , substitute it for self.verbosity .	self . verbosity = options . get ( STR0 )
15500	if value under the STR0 key of the self.feed dictionary is not None ,	if self . feed [ STR0 ] is not None :
12674	define the function spaceless with 2 arguments : parser and token .	def spaceless ( parser , token ) :
10996	or first element of var equals STR1 , raise an TemplateSyntaxError exception with an argument string STR0 , where STR2 is replaced with var .	raise TemplateSyntaxError ( STR0 % var )
13481	substitute prefix for common_prefix .	common_prefix = prefix
7358	define the method validate with arguments self and value .	def validate ( self , value ) :
6994	substitute widget for self.widget .	self . widget = widget
6516	substitute lookup_view for original_lookup ,	original_lookup = lookup_view
11817	define the function dictsort with 2 arguments value and arg .	def dictsort ( value , arg ) :
5674	return self.objects .	return self . objects
14081	call the method sys.stderr.close .	sys . stderr . close ( )
3516	get the value under the self.using key of the connections dictionary , substitute it for connection .	connection = connections [ self . using ]
11169	if varargs is None ,	if varargs is None :
7565	if recursive is true ,	if recursive :
3819	join STR0 and STR1 into a file path , if it is a directory ,	if os . path . isdir ( os . path . join ( STR0 , STR1 ) ) :
15155	if klass is a subclass of logging.handlers.MemoryHandler base class and string STR0 is contained in config ,	if issubclass ( klass , logging . handlers . MemoryHandler ) and STR0 in config :
91	if not ,	else :
10412	call the method value.encode with an argument self._charset , use the result as an argument for the call to the bytes function , return the result .	return bytes ( value . encode ( self . _charset ) )
12572	call the method self.value.resolve with 2 arguments context and ignore_failures set to boolean True , return the result .	return self . value . resolve ( context , ignore_failures = True )
18428	called with an argument lang_code is true , return lang_code .	return lang_code
16042	if limit is None or length of x is lesser than or equal to limit ,	if limit is None or len ( x ) <= limit :
7014	errors is an empty list .	errors = [ ]
4947	if cursor is true ,	if cursor :
18031	if timezone has an attribute STR0 ,	if hasattr ( timezone , STR0 ) :
3370	extend comment_notes list with notes .	comment_notes . extend ( notes )
13377	substitute abspath for abspathu .	abspathu = abspath
18597	otherwise if t.token_type equals TOKEN_VAR ,	elif t . token_type == TOKEN_VAR :
1194	substitute windll.kernel32.LockFileEx for LockFileEx .	LockFileEx = windll . kernel32 . LockFileEx
11794	decorator stringfilter ,	@ stringfilter
17923	return self.DSTOFFSET .	return self . DSTOFFSET
6251	call the function local , substitute the result for _prefixes .	_prefixes = local ( )
15139	define the method configure_handler with 2 arguments : self and config .	def configure_handler ( self , config ) :
4106	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
16149	if end is not a STR0 or STR1 character ,	if end not in ( STR0 , STR1 ) :
15107	raise an ValueError exception with an argument string STR Unable to configure root logger : % s ' formated with e .	raise ValueError ( STR0 % e )
81	derive class CacheKeyWarning from the DjangoRuntimeWarning base class .	class CacheKeyWarning ( DjangoRuntimeWarning ) :
9498	define the method id_for_label with 2 arguments : self and id_ .	def id_for_label ( self , id_ ) :
5463	derive the class SerializationError from the Exception base class .	class SerializationError ( Exception ) :
770	substitute level for self.level .	self . level = level
16363	if unpack_ipv4 is true ,	if unpack_ipv4 :
14662	derive the class datetime from the real_datetime base class .	class datetime ( real_datetime ) :
6246	from django.utils.http import urlquote into default name space .	from django . utils . http import urlquote
8717	define the method save_new with 3 arguments : self , form and commit set to boolean True .	def save_new ( self , form , commit = True ) :
14006	define the function pbkdf2 with 5 arguments : password , salt , iterations , dklen set to integer 0 and digest set to None .	def pbkdf2 ( password , salt , iterations , dklen = 0 , digest = None ) :
5819	evaluate the field.get_attname , use the result as the name of the obj attribute to get , substitute it for related_att .	related_att = getattr ( obj , field . get_attname ( ) )
10837	substitute self.subject for subject .	subject = self . subject
13762	decimal_digits is a string STR0 .	decimal_digits = STR0
8431	get the value under the field key of the self.cleaned_data dictionary , if it exists substitute it for field_value , if not field_value is None .	field_value = self . cleaned_data . get ( field , None )
8262	if exclude is true and f.name is contained in exclude ,	if exclude and f . name in exclude :
3956	call the function io.open with 3 arguments : django_po , string STR and encoding set to string STR0 as arguments ,	with io . open ( django_po , STR , encoding = STR0 ) as fp :
10246	get is a tuple containing elements generated by the call to the function pformat with an argument POST_override , if POST_override is not None , or otherwise generated with the call to the function pformat with an argument request.POST .	post = ( pformat ( POST_override ) if POST_override is not None else pformat ( request . POST ) )
16286	i is the reminder of the division of i by j .	i = i % j
17966	return _localtime .	return _localtime
2667	call the function color_style , substitute the result for self.style .	self . style = color_style ( )
14151	call the method self.iterkeys , return the list of results .	return list ( self . iterkeys ( ) )
18250	self.plural is an lambda function with an argument n , which returns result of boolean expression n not equal to integer 1 , converted to an integer .	self . plural = lambda n : int ( n != 1 )
12844	from django.conf import settings into default name space .	from django . conf import settings
9756	self.position is an integer 0 .	self . position = 0
8378	if opts.fields is None and opts.exclude is None ,	if opts . fields is None and opts . exclude is None :
3041	append string STR0 to full_statement .	full_statement . append ( STR0 )
11415	define the method has_key with 2 arguments : self and key .	def has_key ( self , key ) :
8762	raise an ValueError with an argument string STR0 , where STR1 is replaced with , model._meta.app_label , model._meta.object_name , parent_model._meta.app_label , parent_model._meta.object_name , respectively .	raise ValueError ( STR0 % ( model . _meta . app_label , model . _meta . object_name , parent_model . _meta . app_label , parent_model . _meta . object_name ) )
12633	if not ,	else :
14535	define the method l with an argument self .	def l ( self ) :
1258	if OSError exception is caught ,	except OSError :
17362	get the integer representation of the first element of bs , return it .	return ord ( bs [ 0 ] )
9502	define the method value_from_datadict with 2 arguments : self , data , files and name .	def value_from_datadict ( self , data , files , name ) :
14279	try ,	try :
2800	otherwise if msg and visible_issue_count are true ,	elif msg and visible_issue_count :
1170	__all__ is a tuple containing strings : STR0 , STR1 , STR2 , STR3 and STR4 .	__all__ = ( STR0 , STR1 , STR2 , STR3 , STR4 )
16995	call the function contains with 2 arguments : elt and inst , if it evaluates to true ,	if contains ( elt , inst ) :
1656	response_fixes is a list with http.fix_location_header and http.conditional_content_removal as elements .	response_fixes = [ http . fix_location_header , http . conditional_content_removal , ]
7897	if field.help_text is true , substitute field.help_text for self.help_text , if not self.help_text is an empty string .	self . help_text = field . help_text or STR
9178	derive the class EmailInput from the TextInput base class .	class EmailInput ( TextInput ) :
8697	if self.instance.pk is not None ,	if self . instance . pk is not None :
1587	define the method __init__ with arguments self , argument list args and dictionary of arguments kwargs .	def __init__ ( self , * args , ** kwargs ) :
364	import module zlib .	import zlib
9549	_cookie_allows_colon_in_names is a boolean True .	_cookie_allows_colon_in_names = True
3012	if cache is an instance of BaseDatabaseCache ,	if isinstance ( cache , BaseDatabaseCache ) :
6277	derive the class NoReverseMatch with Exception as base class .	class NoReverseMatch ( Exception ) :
7823	call the method filed.clean with arguments value and initial , substitute the result for value .	value = field . clean ( value , initial )
8565	save.alters_data is boolean True .	save . alters_data = True
6523	if original_lookup and lookup_view are not callable objects ,	if not callable ( original_lookup ) and callable ( lookup_view ) :
18682	substitute conn_type for self.connector .	self . connector = conn_type
15181	for every h in handlers ,	for h in handlers :
12550	call the method parser.next_token , substitute the result for token .	token = parser . next_token ( )
1395	call the function os.chmod with arguments full_path and self.file_permissions_mode .	os . chmod ( full_path , self . file_permissions_mode )
888	call the function lazy with arguments _get_val and six.text_type , substitute the result for _get_val .	_get_val = lazy ( _get_val , six . text_type )
1464	property decorator , to be called by property built-in function .	@ property
18245	define the method __init__ with 2 arguments : self and language .	def __init__ ( self , language ) :
16407	if STR0 is not contained in ip_str .	if STR0 not in ip_str :
14452	define the method A with an argument self .	def A ( self ) :
3437	append string STR0 to new_name .	new_name += STR0
18103	define the function deactivate .	def deactivate ( ) :
10069	if self has an STR0 attribute ,	if hasattr ( self , STR0 ) :
13596	for app_config in reversed list of apps.get_app_configs ( ) elements ,	for app_config in reversed ( list ( apps . get_app_configs ( ) ) ) :
8882	call the method __init__ from the base class of the class ModelMultipleChoiceField , with 10 arguments : queryset , None , cache_choices , required , widget , label , initial , help_text , unpacked list args and unpacked dictionary kwargs .	super ( ModelMultipleChoiceField , self ) . __init__ ( queryset , None , cache_choices , required , widget , label , initial , help_text , * args , ** kwargs )
8805	substitute field.queryset for self.queryset .	self . queryset = field . queryset
14725	if args is true ,	if not args :
2064	raise an ImproperlyConfigured exception with argument string STR0 , replace STR1 with self.file_path .	raise ImproperlyConfigured ( STR0 % self . file_path )
6930	call the function datetime.date with 3 arguments : y , m and d all converted into a integers , substitute the result for date_value .	date_value = datetime . date ( int ( y ) , int ( m ) , int ( d ) )
2141	raise an exception .	raise
6345	return the value under the language_code key of the self._regex_dict dictionary .	return self . _regex_dict [ language_code ]
2203	utf8_charset.body_encoding is None .	utf8_charset . body_encoding = None
12875	return string STR0 , where STR1 is replaced with self.name and STR2 with self.nodelist .	return STR0 % ( self . name , self . nodelist )
1827	truncate first size number of elements of self.buffer .	self . buffer = self . buffer [ size : ]
13028	for every template_dir in template_dirs ,	for template_dir in template_dirs :
11439	return boolean False .	return False
5860	define the method _make_parser with an argument self .	def _make_parser ( self ) :
8649	append form to self.saved_forms .	self . saved_forms . append ( form )
1080	if buffer_ is true ,	if buffer_ :
16151	if self.__stattag_text contains newline character ,	if STR0 in self . __starttag_text :
15676	import module copy .	import copy
10252	cookies is a string STR0 .	cookies = STR0
6504	from django.conf import urls into default name space ,	from django . conf import urls
10681	return result .	return result
17550	from django.utils import six into default name space .	from django . utils import six
11274	substitute last element of bits for target_var .	target_var = bits [ - 1 ]
14873	define the method get with 3 arguments : self , key and default set to None .	def get ( self , key , default = None ) :
2331	return self.connection .	return self . connection
935	do nothing .	pass
12091	from django.utils import six into default name space .	from django . utils import six
3038	full_statement is a list containing : string STR0 , where % s is replaced by result of the function qn called with an argument tablename .	full_statement = [ STR0 % qn ( tablename ) ]
12521	return an instance of FirstOfNode class , created with an argument , result of the method parser.compile_filter called with bit , for every bit in bits .	return FirstOfNode ( [ parser . compile_filter ( bit ) for bit in bits ] )
6274	in the string STR0 , replace all the occurrences of : string STR1 with self._func_path , self.args , self.kwargs , self.url_name , self.app_name and self.namespaces , respectively .	return STR0 % ( self . _func_path , self . args , self . kwargs , self . url_name , self . app_name , self . namespaces )
3828	substitute first element of self.locale_paths for self.default_locale_path .	self . default_locale_path = self . locale_paths [ 0 ]
15009	if valu is an instance of list type ,	if isinstance ( value , list ) :
9885	iterator is None .	iterator = None
6465	call the function self.regex.search with an argument path , substitute the result for match .	match = self . regex . search ( path )
15259	if s is not an instance of the object Exception ,	if not isinstance ( s , Exception ) :
12151	define the method __init__ with 2 arguments : self and variables .	def __init__ ( self , variables ) :
4601	if app_config.models_module is None .	if app_config . models_module is None :
10987	raise an ValueError exception .	raise ValueError
12058	if ValueError exception is caught ,	except ValueError :
1890	call the self._load_post_and_files method .	self . _load_post_and_files ( )
12155	call the method var.resolve with 2 arguments : context and True , substitute the result for value .	value = var . resolve ( context , True )
4330	substitute STR1 with title in the string STR0 , write it to the standard output .	self . stdout . write ( STR0 % title )
2582	call the method handle_default_options with an argument options .	handle_default_options ( options )
15348	multiply offset.days , integer 24 and integer 60 , sum the result with floored result of division of offset.seconds , and integer 60 , substitute the result for timezone .	timezone = ( offset . days * 24 * 60 ) + ( offset . seconds // 60 )
10390	get the value under the key key of the self.cookies dictionary , substitute max-age for STR0 key of the returned dictionary .	self . cookies [ key ] [ STR0 ] = max_age
16650	if result is not root ,	if result is not root :
15581	if STR0 is contained in locale ,	if STR0 in locale :
4968	call the method connection.close ,	connection . close ( )
8470	call the method self.instance.validate_unique with an argument exclude set to exclude .	self . instance . validate_unique ( exclude = exclude )
13959	import module struc .	import struct
2109	derive the class EmailBackend from the BaseEmailBackend base class .	class EmailBackend ( BaseEmailBackend ) :
3722	append work_file to args .	args . append ( work_file )
2042	from django.conf import settings into default name space .	from django . conf import settings
17842	define the function slugify with an argument value .	def slugify ( value ) :
18315	call the method t.to_language , return the result .	return t . to_language ( )
11647	try ,	try :
14650	WEEKDAYS_REV is an dictionary with 7 entries : 0 for STR0 , 1 for STR1 , 2 for STR2 , 3 for STR3 , 4 for STR4 , 5 for STR5 and 6 for STR6 .	WEEKDAYS_REV = { STR0 : 0 , STR1 : 1 , STR2 : 2 , STR3 : 3 , STR4 : 4 , STR5 : 5 , STR6 : 6 }
12520	raise an TemplateSyntaxError exception with an argument string STR0 .	raise TemplateSyntaxError ( STR0 )
17549	call the method self.writer_leaves .	self . writer_leaves ( )
9329	call the function chain with arguments self.choices and choices , for every option_value and option_label in the result ,	for option_value , option_label in chain ( self . choices , choices ) :
11099	derive the class VariableNode form the base class Node .	class VariableNode ( Node ) :
5165	if template is None ,	if template is None :
8451	define the method _post_clean with an argument self .	def _post_clean ( self ) :
8526	return field.to_python .	return field . to_python
9295	get the name key of the data dictionary , substitute it for value .	value = data . get ( name )
3189	if not ,	else :
3649	raise an ValueError with an string STR0 .	raise ValueError ( STR0 )
16631	stats is an list with 2 elements : 2 integers 0 .	stats = [ 0 , 0 ]
8655	if pk.editable is true , or pk.auto_created is true or pk is an instance of AutoField class , or if pk.rel is true ,	return ( ( not pk . editable ) or ( pk . auto_created or isinstance ( pk , AutoField ) ) or ( pk . rel and pk . rel . parent_link and pk_is_not_editable ( pk . rel . to . _meta . pk ) ) )
13434	define the method __init__ with 2 arguments self and file .	def __init__ ( self , file ) :
4367	from django.utils import six into default name space .	from django . utils import six
14	call the function warnings.warn with string STR0 , RemovedInDjango19Warning , and stacklevel set to 2 as arguments .	warnings . warn ( STR0 , RemovedInDjango19Warning , stacklevel = 2 )
11293	call the function func with 2 arguments : unpacked list resolved_args and unpacked dictionary resolved_kwargs , substitute the result for _dict .	_dict = func ( * resolved_args , ** resolved_kwargs )
12915	return parent .	return parent
10291	from django.core.exceptions import DisallowedRedirect into default name space .	from django . core . exceptions import DisallowedRedirect
10808	derive the class TokenParser form the base class object .	class TokenParser ( object ) :
18795	if not ,	else :
14147	substitute _itervalues for itervalues .	itervalues = _itervalues
6171	create the Singer class with 2 arguments : key appended to string STR0 and salt set to salt , return it .	return Signer ( STR0 + key , salt = salt )
9468	substitute RadioFieldRenderer for renderer .	renderer = RadioFieldRenderer
12611	register.tag decorator ,	@ register . tag
7940	define the method value with an argument self .	def value ( self ) :
18707	return a tuple with an element self.__offset .	return self . __offset ,
13547	import module os .	import os
8075	return initial_forms .	return initial_forms
4203	call the method self.style.NOTICE with string STR0 as an argument , use the result as an argument for the call to the self.stdout.write method .	self . stdout . write ( self . style . NOTICE ( STR0 ) )
5433	call the function _load_serializers .	_load_serializers ( )
17470	_assertRaisesRegex is a strnig STR0 .	_assertRaisesRegex = STR0
11719	define the function truncatewords with 2 arguments value and arg .	def truncatewords ( value , arg ) :
6766	call the function validate_ipv4_address with an argument value .	validate_ipv4_address ( value )
14736	define the function _dec with an argument func .	def _dec ( func ) :
16723	call the function import_module with an argument module_path , substitute the result for module .	module = import_module ( module_path )
616	call the self._cache.get method with argument key , substitute the result for val .	val = self . _cache . get ( key )
17696	call the method self.add_truncation_text with 2 arguments : elements of words joined in a string , separated with whitespaces , and truncate , return the result .	return self . add_truncation_text ( STR . join ( words ) , truncate )
827	for name in attributes of models_signals object ,	for name in dir ( models . signals ) :
7345	call the function urlunsplit with an argument url_fields , substitute the result for value .	value = urlunsplit ( url_fields )
9743	break the loop execution .	break
2808	define the method add_arguments with self and parser as arguments .	def add_arguments ( self , parser ) :
8443	otherwise if field is contained in self.fields ,	elif field in self . fields :
14986	otherwise if vale is an instance of value ,	elif isinstance ( value , six . string_types ) :
17766	call the method zbuf.getvalue , return the result .	return zbuf . getvalue ( )
16819	if settings.USE_L10N is true , substitute settings.USE_THOUSAND_SEPARATOR for use_grouping , otherwise substitute settings.USE_L10N for use_grouping .	use_grouping = settings . USE_L10N and settings . USE_THOUSAND_SEPARATOR
4554	return nothing .	return
15089	remove name from existing .	existing . remove ( name )
14291	substitute result for value under the id of self key of memo dictionary .	memo [ id ( self ) ] = result
2048	self._fname is None .	self . _fname = None
18721	call the function force_str with an argument self._tzname , return the result .	return force_str ( self . _tzname )
1688	define method get_exception_response , with self class instance , request , resolver and status_code as the arguments .	def get_exception_response ( self , request , resolver , status_code ) :
5200	call the function tempfile.mkdtemp with arguments : prefix set to prefix and suffix set to string STR0 .	tempdir = tempfile . mkdtemp ( prefix = prefix , suffix = STR0 )
7151	subtract decimals from digits , substitute the result for whole_digits .	whole_digits = digits - decimals
6578	if viewname is not an instance of the six.string_types object ,	if not isinstance ( viewname , six . string_types ) :
16215	define the function urlunquote with an argument quoted_url .	def urlunquote ( quoted_url ) :
13645	call the method request_finished.connect with argument update_watch .	request_finished . connect ( update_watch )
3944	raise an CommandError with an argument string STR0 , where STR1 is replaced with errors .	raise CommandError ( STR0 % errors )
4893	derive class Command from CheckCommand base class .	class Command ( CheckCommand ) :
16030	call the method netloc.encode with an argument string STR0 , call the method decode on the result with an argument STR1 , substitute the result for netloc .	netloc = netloc . encode ( STR0 ) . decode ( STR1 )
12140	append 2 consecutive newlines to output .	output . append ( STR0 )
9553	substitute http_cookies.SimpleCookie for SimpleCookie .	SimpleCookie = http_cookies . SimpleCookie
6055	call the function type with 3 arguments : string STR0 , tuple containing 2 elements : socketserver.ThreadingMixIn and WSGIServer , and an empty dictionary , substitute the result for httpd_cls .	httpd_cls = type ( str ( STR0 ) , ( socketserver . ThreadingMixIn , WSGIServer ) , { } )
11688	define the function slugify with an argument value .	def slugify ( value ) :
19	try ,	try :
14109	return value under key key of dict_ dictionary .	return dict_ [ key ]
4305	return created_models	return created_models
17276	_meth_func is a string STR0 .	_meth_func = STR0
3480	import module zipfile .	import zipfile
12127	if self is not contained in context.render_context ,	if self not in context . render_context :
2001	import module sys .	import sys
11575	import module random as random_module .	import random as random_module
15413	call the method handler.startElement with 2 arguments : string STR0 and result of the method self.rss_attributes .	handler . startElement ( STR0 , self . rss_attributes ( ) )
18641	define the method _new_instance with 4 arguments : ( cls , children set to None , connector set to None and negated set to boolean False .	def _new_instance ( cls , children = None , connector = None , negated = False ) :
2638	define the function handle_default_options with an argument options .	def handle_default_options ( options ) :
14605	call the method df.format with an argument format_string , return the result .	return df . format ( format_string )
6810	clean is a lambda function with self and x as arguments , return value is length of x .	clean = lambda self , x : len ( x )
804	call the __init__ method with 3 arguments : INFO , unpacked list args and unpacked dictionary kwargs from the base class of Info .	return super ( Info , self ) . __init__ ( INFO , * args , ** kwargs )
13691	if signal has an attribute STR0 ,	if hasattr ( signal , STR0 ) :
133	define the method set with 5 arguments , self , key , value , timeout set to DEFAULT_TIMEOUT and version set to None .	def set ( self , key , value , timeout = DEFAULT_TIMEOUT , version = None ) :
10940	if lookup is false ,	if not lookup :
3542	if self.verbosity is greater of equal to integer 1 ,	if self . verbosity >= 1 :
1935	return path_info.decode method return value called with UTF_8 as the argument .	return path_info . decode ( UTF_8 )
14918	compile a regex from raw string STR0 , substitute it for WORD_PATTERN .	WORD_PATTERN = re . compile ( STR0 )
4004	call the method bad_app_labels with an argument app_label ,	bad_app_labels . add ( app_label )
624	call the method self.make_key with key and version set to version as arguments , substitute the result for key .	key = self . make_key ( key , version = version )
11947	convert value into a string , take character at the negative arg index , convert it into an integer , return it .	return int ( str ( value ) [ - arg ] )
2971	define compile_messages method with self class instance and locations as a arguments .	def compile_messages ( self , locations ) :
12513	call the method parser.parse with an argument tuple with an element string STR0 , substitute the result for nodelist .	nodelist = parser . parse ( ( STR0 , ) )
10785	call the method self.error with 2 arguments : token and string STR0 , where STR1 is replaced with command , return the result .	raise self . error ( token , STR0 % command )
5724	call the method base.build_instance with arguments Model , data and db , substitute the result for obj .	obj = base . build_instance ( Model , data , db )
11356	call the function import_library with an argument taglib_module , substitute the result for lib .	lib = import_library ( taglib_module )
9712	msg is a string STR0 , where STR1 is replace with e .	msg = STR0 % e
11913	substitute title for sublist_item .	sublist_item = title
7769	return the result of the method self._html_output , called with 5 arguments : normal_row to a string , STR1 , error_row set to a a string STR2 , row_ender set to a string STR3 , help_text_html set to a string , STR4 , and errors_on_separate_row set to boolean False .	return self . _html_output ( normal_row = STR1 , error_row = STR2 , row_ender = STR3 , help_text_html = STR4 , errors_on_separate_row = False )
4653	call the executor.loader.get_migration_by_prefix with app_label and migration_name with arguments , substitute the result fr migration .	migration = executor . loader . get_migration_by_prefix ( app_label , migration_name )
5593	if stream_or_string is instance of bytes type ,	if isinstance ( stream_or_string , bytes ) :
12681	if length of bits is not equal to integer 2 ,	if len ( bits ) != 2 :
15308	define the function get_system_encoding without the input arguments .	def get_system_encoding ( ) :
8367	remove entry under the STR0 key of the attrs dictionary , if it exists substitute if for formfield_callback , if not formfield_callback is None .	formfield_callback = attrs . pop ( STR0 , None )
14185	call the function super_set with 2 arguments : key and value .	super_set ( key , value )
9048	define the method __str__ with an argument self .	def __str__ ( self ) :
17473	substitute memoryview for memoryview .	memoryview = memoryview
1805	call logging.getLogger method with string STR0 as argument , store the result in logger .	logger = logging . getLogger ( STR0 )
9145	yield an instance of SubWidget class created with 5 arguments : self , name , value , attrs and choices .	yield SubWidget ( self , name , value , attrs , choices )
1389	call the method self.path with argument name , substitute the result for full_path .	full_path = self . path ( name )
16330	for every x is the range of integers from level to the integer 2 , in the reversed order ,	for x in range ( level , 1 , - 1 ) :
11000	call the function self._resolve_lookup with an argument context , substitute the result for value .	value = self . _resolve_lookup ( context )
4817	if confirm equals string STR0 ,	if confirm == STR0 :
18416	return None .	return None
12073	call the function pformat with an argument value , return the result .	return pformat ( value )
4572	call the function sql_destroy_indexes with 3 arguments : app_config , self.style and connection , substitute the result for statements .	statements = sql_delete ( app_config , self . style , connection )
10653	substitute value under the self.token_type key of the TOKEN_MAPPING dictionary for token_name .	token_name = TOKEN_MAPPING [ self . token_type ]
7318	file is an instance of BytesIO class created with an argument : value under the STR0 key of the data dictionary .	file = BytesIO ( data [ STR0 ] )
6330	substitute regex for self._regex .	self . _regex = regex
987	return error_dict .	return error_dict
7690	derive the class BaseForm from the base class object .	class BaseForm ( object ) :
15471	call the method handler.addQuickElement with 3 arguments : string STR0 , value under the STR1 key of the item dictionary , and guid_attrs .	handler . addQuickElement ( STR0 , item [ STR1 ] , guid_attrs )
16003	define the function strip_tags with an argument value .	def strip_tags ( value ) :
6271	define the method __getitem__ with arguments self and index .	def __getitem__ ( self , index ) :
4234	define the method model_installed with model as an argument .	def model_installed ( model ) :
14670	define the function new_date with an argument d .	def new_date ( d ) :
4353	from django.core.servers.fastcgi import FASTCGI_HELP into default namespace .	from django . core . servers . fastcgi import FASTCGI_HELP
14852	if ImportError exception is caught ,	except ImportError :
17194	if PY3 is true ,	if PY3 :
4811	msg is a tuple containing string STR0 .	msg = ( STR0 )
11326	return None .	return None
18745	create a tuple out a tuple with an element integer 2037 and a list tt elements without the first element , substitute the result for tt .	tt = ( 2037 , ) + tt [ 1 : ]
7530	get the value under the STR0 key of the field.error_messages dictionary , append it to errors .	errors . append ( field . error_messages [ STR0 ] )
7265	substitute ClearableFileInput for widget .	widget = ClearableFileInput
4539	get the value under the STR0 key of the options dictionary , use it as the key to get the value from the connections dictionary , substitute the result for connection .	connection = connections [ options [ STR0 ] ]
13938	call the method cache.set with cache_key , an empty list and cache_timeout as arguments .	cache . set ( cache_key , [ ] , cache_timeout )
7640	import module warnings .	import warnings
17730	create a list out of open_tags elements form ( i+1 ) -th index to the end , substitute it for open_tags .	open_tags = open_tags [ i + 1 : ]
15885	result is an instance of SimpleLazyObject class , created with an argument self._setupfunc .	result = SimpleLazyObject ( self . _setupfunc )
9682	call the method self._post.appendlist with 2 arguments : field_name and result of the function force_text called with 3 arguments : data , encoding and errors as a string STR0 .	self . _post . appendlist ( field_name , force_text ( data , encoding , errors = STR0 ) )
2338	call the method self.extra_headers.get with arguments : string STR0 and joined string from self.to elements separated by STR1 , substitute the result for value under the STR2 key of msg dictionary .	msg [ STR0 ] = self . extra_headers . get ( STR1 , STR2 . join ( self . to ) )
15771	call the method self.__cast , if the result doesnt equal to other , return boolean True , otherwise return boolean False .	return self . __cast ( ) != other
13523	call the method zipfile.ZipFile with an argument self , substitute the result for self._archive .	self . _archive = zipfile . ZipFile ( file )
3313	from django.core.management.base import BaseCommand and CommandError into default name space .	from django . core . management . base import BaseCommand , CommandError
249	call the cursor method on the value under the db key of connections dictionary , preform following with return value named cursor ,	with connections [ db ] . cursor ( ) as cursor :
14217	yield key .	yield key
14790	call the method response.add_post_render_callback with an argument callback .	response . add_post_render_callback ( callback )
7466	new_value is an empty list .	new_value = [ ]
3541	call the method cursor.execute with an argument line .	cursor . execute ( line )
16795	for every hook in sys.path_hooks ,	for hook in sys . path_hooks :
2780	append e to debugs list for every e in all_issues , if e.level is lesser than checks.INFO and result of the method e.is_silenced in false .	debugs = [ e for e in all_issues if e . level < checks . INFO and not e . is_silenced ( ) ]
754	from django.conf import settings into default name space .	from django . conf import settings
5913	define the method _handle_m2m_field_node with arguments self , node and field .	def _handle_m2m_field_node ( self , node , field ) :
13721	define the function python_reloader with main_func and kwargs as arguments .	def python_reloader ( main_func , args , kwargs ) :
15530	call the method handler.addQuickElement with 2 arguments : string STR0 and value under the STR1 key of the item dictionary .	handler . addQuickElement ( STR0 , item [ STR1 ] )
9707	call the method field_stream.read with an argument : over_bytes subtracted from integer 4 , substitute the result for over_chunk .	over_chunk = field_stream . read ( 4 - over_bytes )
1659	define method load_middleware with class instance self as the argument .	def load_middleware ( self ) :
5201	append the tempdir to self.paths_to_remove .	self . paths_to_remove . append ( tempdir )
257	call the function datetime.utcfromtimestamp with argument timeout , substitute it for exp .	exp = datetime . utcfromtimestamp ( timeout )
9266	format key is an empty string .	format_key = STR
18791	try	try :
17173	if attr equals any of the strings STR0 , STR1 or STR2 and self.mod is not contained in sys.modules ,	if ( attr in ( STR0 , STR1 , STR2 ) and self . mod not in sys . modules ) :
15424	call the method self.add_item_elements with 2 arguments : handler and item .	self . add_item_elements ( handler , item )
8284	if exclude is true and f.name is contained in exclude ,	if exclude and f . name in exclude :
9614	do nothing .	pass
11377	append self to context.dicts .	context . dicts . append ( self )
12447	call the method self.nodelist.render with an argument context , return the result .	return self . nodelist . render ( context )
13566	termios is None .	termios = None
7254	remove self._regex_validator from self.validators .	self . validators . remove ( self . _regex_validator )
2343	call the formatdate function , substitute it for value under the STR0 key of msg dictionary .	msg [ STR0 ] = formatdate ( )
16334	raise an ValueError with an argument string STR0 .	raise ValueError ( STR0 )
16161	if tag is contained in self.CDATA_CONTENT_ELEMENTS ,	if tag in self . CDATA_CONTENT_ELEMENTS :
4714	answer is None .	answer = None
15217	from django.utils import six into default name space .	from django . utils import six
16890	increment num_args by one .	num_args += 1
13183	call the method loader.get_template with an argument template , return the result .	return loader . get_template ( template )
16630	cache is an empty dictionary .	cache = dict ( )
2212	if AttributeError exception is caught ,	except AttributeError :
15702	if name is true , substitute it for self.name , otherwise substitute func.__name__ for self.name .	self . name = name or func . __name__
16335	return a string STR0 formated with first dot package elements and name .	return STR0 % ( package [ : dot ] , name )
3025	index_output is an empty list .	index_output = [ ]
9524	widgets is a tuple with 2 elements : instance of DateInput class , created with 2 arguments : attrs as attrs and format as date_format , and instance of TimeInput class , created with 2 arguments : attrs set to attrs and format set to date_format .	widgets = ( DateInput ( attrs = attrs , format = date_format ) , TimeInput ( attrs = attrs , format = time_format ) )
5006	if cleaned_line is false ,	if not cleaned_line :
5161	remove file path_to_remove ,	os . remove ( path_to_remove )
16499	while start is lesser than end .	while start < end :
13311	substitute mapped_tokens for self.tokens .	self . tokens = mapped_tokens
13197	define the method add_post_render_callback with 2 arguments : self and callback .	def add_post_render_callback ( self , callback ) :
5	from django.core.cache.backends.base import InvalidCacheBackendError , CacheKeyWarning and BaseCache into default name space .	from django . core . cache . backends . base import ( InvalidCacheBackendError , CacheKeyWarning , BaseCache )
3257	from django.core.management import call_command into default name space .	from django . core . management import call_command
13952	for every c in reversed order of candidate , convert c into an integer , sum all the results and substitute the result for evens .	evens = sum ( int ( c ) for c in candidate [ - 1 : : - 2 ] )
10310	if content_type is false ,	if not content_type :
1437	derive the class DefaultStorage from the LazyObject base class .	class DefaultStorage ( LazyObject ) :
7550	for every field , initial and data in list of tuples tuple containing elements of self.fields , initial and data , respectively ,	for field , initial , data in zip ( self . fields , initial , data ) :
12415	call the method self.val_expr.resolve with an argument context , substitute the result for value .	value = self . val_expr . resolve ( context )
1174	import msvcrt .	import msvcrt
10192	call the method self.__class__ with 3 arguments : an empty string , mutable is boolean True , encoding is self.encoding , substitute the result for result .	result = self . __class__ ( STR , mutable = True , encoding = self . encoding )
9596	get the value filed from the return value of the call to the c.key with the argument key , add the value to the cookiedict under the key key .	cookiedict [ key ] = c . get ( key ) . value
6074	define the function runfastcgi with 2 arguments : argset set to an empty list and unpacked dictionary kwargs .	def runfastcgi ( argset = [ ] , ** kwargs ) :
3800	if self.domain is not equal to string STR0 or string STR1 ,	if self . domain not in ( STR0 , STR1 ) :
15518	call the method handler.endElement with an argument string STR0 .	handler . endElement ( STR0 )
11438	call the flatten method of the self and other objects , if they are equal , return boolean True , if not return boolean False .	return self . flatten ( ) == other . flatten ( )
11980	try ,	try :
5293	return f .	return f
12201	substitute i for value under the STR0 key of the loop_dict dictionary .	loop_dict [ STR0 ] = i
7066	call the method widget_attrs from the base class of the class CharField , with an argument widget , substitute the result for attrs .	attrs = super ( CharField , self ) . widget_attrs ( widget )
5627	from django.apps import apps into default name space .	from django . apps import apps
12535	call the method parser.compile_filter with an argument , in_index incremented by one , and used to index parser.compile_filter , substitute the result for sequence .	sequence = parser . compile_filter ( bits [ in_index + 1 ] )
14959	if not ,	else :
6933	if not ,	else :
17902	if offset is not None ,	if offset is not None :
15229	raise the exception ValueError , with string as argument , STR0 , STR1 , replace % s with string value of klass.__name__ .	raise ValueError ( STR0 % klass . __name__ )
901	call the translation.get_language function , substitute the result for the value under the STR0 key of the context_extras dictionary .	context_extras [ STR0 ] = translation . get_language ( )
11531	define the method create_nodelist with an argument self .	def create_nodelist ( self ) :
3976	from django.core.management.base import BaseCommand and CommandError into default name space .	from django . core . management . base import BaseCommand , CommandError
2923	read 4 bytes from file f and store it in sample .	sample = f . read ( 4 )
10410	call the function bytes with an argument value , return the result .	return bytes ( value )
9908	call the method stream.unget with list containing elements of chunk list from the header_end incremented by integer 4 as a start index to the end as argument .	stream . unget ( chunk [ header_end + 4 : ] )
309	call the ops.quote_name method with argument self._table on the object under the db key of connections dictionary , substitute the result for table .	table = connections [ db ] . ops . quote_name ( self . _table )
2328	from django.core.mail import get_connection into default name space .	from django . core . mail import get_connection
1108	substitute BytesIO for stream_class .	stream_class = BytesIO
5306	derive the class EmptyPage from the InvalidPage base class .	class EmptyPage ( InvalidPage ) :
9971	from django.http.multipartparser import MultiPartParser and MultiPartParserError into default name space .	from django . http . multipartparser import MultiPartParser , MultiPartParserError
12337	read file fp , substitute the read data for output .	output = fp . read ( )
5227	define the method splitext with arguments self and the_path .	def splitext ( self , the_path ) :
16725	get attribute class_name form the module object , return it .	return getattr ( module , class_name )
18508	if not ,	else :
14581	if not ,	else :
6791	call the method self.clean with value as argument , substitute the result for cleaned .	cleaned = self . clean ( value )
5893	call the method base.DeserializedObject with arguments obj and m2m_data , return the result .	return base . DeserializedObject ( obj , m2m_data )
13796	divide x by length of to_digits , convert floor value of the result to an integer , substitute it for x .	x = int ( x // len ( to_digits ) )
2194	from email.mime.base import MIMEBase into default name space .	from email . mime . base import MIMEBase
291	define the method has_key with self class instance , key and version defaulting to None as arguments .	def has_key ( self , key , version = None ) :
4046	for every operation in migration.operations ,	for operation in migration . operations :
12764	do nothing .	pass
1451	substitute False for self.close_called .	self . close_called = False
13994	if six.PY3 is true and val1 and val2 are an instances of bytes ,	if six . PY3 and isinstance ( val1 , bytes ) and isinstance ( val2 , bytes ) :
13610	for every filename is filelist ,	for filename in filelist :
13767	raise ValueError exception with string STR0 as an argument .	raise ValueError ( STR0 )
7159	define the method widget_attrs with arguments self and widget .	def widget_attrs ( self , widget ) :
9773	yield emitting as result of the generator .	yield emitting
13190	return an instance of Context class , created with an argument context .	return Context ( context )
3906	for every path in self.locale_paths ,	for path in self . locale_paths :
7420	call the method __init__ with 2 arguments : unpacked list args and unpacked dictionary kwargs , from the base class of the class TypedChoiceField .	super ( TypedChoiceField , self ) . __init__ ( * args , ** kwargs )
126	call the method self.key_function with key , self.key_prefix and version as arguments , substitute the result for new_key .	new_key = self . key_func ( key , self . key_prefix , version )
16041	define the function trim_url with 2 arguments : x and limit set to trim_url_limit .	def trim_url ( x , limit = trim_url_limit ) :
9606	from django.utils.encoding import force_text into default name space .	from django . utils . encoding import force_text
16359	call he function is_valid_ipv6_address with an argument ip_str , if it evaluates to false ,	if not is_valid_ipv6_address ( ip_str ) :
18047	from django.utils.translation import trans_real as trans .	from django . utils . translation import trans_real as trans
14930	try ,	try :
14940	if ImportError exception is caught ,	except ImportError :
17031	extend list inner_args with args .	inner_args . extend ( args )
18716	call the function warnings.warn with 2 arguments : string STR0 and RemovedInDjango19Warning .	warnings . warn ( STR0 , RemovedInDjango19Warning )
8666	pk_value is None .	pk_value = None
15356	if date is not None ,	if date is not None :
5876	call the method field_node.getAttribute with an argument string STR0 , substitute the result for field_name .	field_name = field_node . getAttribute ( STR0 )
5214	if not ,	else :
18768	convert git_changeset to string , append it to the string STR0 , replace it for sub .	sub = STR0 % git_changeset
12461	call the method parser.skip_past with an argument string STR0 .	parser . skip_past ( STR0 )
3107	define the method handle with arguments self , unpacked list app_labels and unpacked dictionary options .	def handle ( self , * app_labels , ** options ) :
3528	for model in self.models append model._meta.db_table to a list , substitute the resulting list for table_names .	table_names = [ model . _meta . db_table for model in self . models ]
1181	substitute c_int64 for ULONG_PTR .	ULONG_PTR = c_int64
5787	get the value under the STR0 key of the options dictionary , multiply it with level , create a string containing number of whitespaces equal to the previous result , append it to the string containing newline character , use the result as the argument for the call to the self.xml.ignorableWhitespace method .	self . xml . ignorableWhitespace ( STR0 + STR * self . options . get ( STR1 , None ) * level )
11414	delete value under the key key of dictionary at last element of self.dicts .	del self . dicts [ - 1 ] [ key ]
1709	call the function urlresolvers.set_urlconf with urlconf as the argument .	urlresolvers . set_urlconf ( urlconf )
13264	derive the class Operator from the base class TokenBase .	class Operator ( TokenBase ) :
10200	for every elt in list_ call the method bytes_to_text with 2 argument : elt and self.encoding , append the result into a list , substitute the resulting list for list_ .	list_ = [ bytes_to_text ( elt , self . encoding ) for elt in list_ ]
1664	request_middleware is an empty list .	request_middleware = [ ]
3042	evaluate method transaction.atomic with arguments : using set to database and savepoint set to connection.features.can_rollback_ddl ,	with transaction . atomic ( using = database , savepoint = connection . features . can_rollback_ddl ) :
18398	return replacement .	return replacement
1260	open file old_file_name in read bytes mode , with file descriptor as f ,	with open ( old_file_name , STR0 ) as old_file :
15174	call the method result.setFormatter with an argument formatter .	result . setFormatter ( formatter )
954	substitute message.message , message.code , message.params for message , code and params , respectively .	message , code , params = message . message , message . code , message . params
3603	fixture_files_in_dir is an empty list .	fixture_files_in_dir = [ ]
16095	from django.utils.six.moves import html_parser as _html_parse into default name space .	from django . utils . six . moves import html_parser as _html_parser
16711	import module os .	import os
6064	import module os .	import os
8374	if value is an instance of six.string_types and value is not equal to ALL_FIELDS ,	if isinstance ( value , six . string_types ) and value != ALL_FIELDS :
9232	define the method render with 4 arguments : self , name , value and attrs set to None .	def render ( self , name , value , attrs = None ) :
1107	if not ,	else :
5033	if file path sql_file exists ,	if os . path . exists ( sql_file ) :
17387	execute code statement STR0 .	exec ( STR0 )
4220	flush the output buffer of the self.stdout object .	self . stdout . flush ( )
12901	substitute nodelist for self.nodelist .	self . nodelist = nodelist
15913	convert is a dictionary with 4 initial entries : list with 3 tuples : tuple with 2 elements : string STR0 , and lambda function with 2 arguments : self and other , resulting boolean False if self is lesser than other or self is equal to other , tuple with 2 elements : string STR1 , and lambda function with 2 arguments : self and other , resulting boolean True if self is lesser than other or self is equal to other , tuple with 2 elements : string STR2 , and lambda function with 2 arguments : self and other , resulting boolean False if self is lesser than other , for STR3 , list with 3 tuples : tuple with 2 elements : string STR4 , and lambda function with 2 arguments : self and other , resulting boolean False if self is lesser than or equal to other , or self is equal to other , tuple with 2 elements : string STR5 , and lambda function with 2 arguments : self and other , resulting boolean True if self is lesser than or equal to other , or self is not equal to other , tuple with 2 elements : string STR6 , and lambda function with 2 arguments : self and other , resulting boolean False if self is lesser than or equal to other , for STR7 , list with 3 tuples : tuple with 2 elements : string STR8 , and lambda function with 2 arguments : self and other , resulting boolean False if self is greater than other or self is equal to other , tuple with 2 elements : string STR9 , and lambda function with 2 arguments : self and other , resulting boolean True if self is greater than other or self is equal to other , tuple with 2 elements : string STR10 , and lambda function with 2 arguments : self and other , resulting boolean False if self is greater than other , for STR11 , and list with 3 tuples : tuple with 2 elements : string STR12 , and lambda function with 2 arguments : self and other , resulting boolean True if self is not greater than or is not equal to other , or self is equal to other , tuple with 2 elements : string STR13 , and lambda function with 2 arguments : self and other , resulting boolean True if self is great15914	er than or not equal to other , or self is not equal to other , tuple with 2 elements : string STR14 , and lambda function with 2 arguments : self and other , resulting boolean False if self is greater than or equal to other , for STR15 ,	convert = { STR0 : [ ( STR1 , lambda self , other : not ( self < other or self == other ) ) , ( STR2 , lambda self , other : self < other or self == other ) , ( STR3 , lambda self , other : not self < other ) ] , STR4 : [ ( STR5 , lambda self , other : not self <= other or self == other ) , ( STR6 , lambda self , other : self <= other and not self == other ) , ( STR7 , lambda self , other : not self <= other ) ] , STR8 : [ ( STR9 , lambda self , other : not ( self > other or self == other ) ) , ( STR10 , lambda self , other : self > other or self == other ) , ( STR11 , lambda self , other : not self > other ) ] , STR12 : [ ( STR13 , lambda self , other : ( not self >= other ) or self == other ) , ( STR14 , lambda self , other : self >= other and not self == other ) , ( STR15 , lambda self , other : not self >= other ) ] }
1519	if OSError , renamed to e , exception is caught ,	except OSError as e :
7721	if self.is_bound is true and self.errors is false , return boolean True , otherwise return boolean False .	return self . is_bound and not self . errors
11325	call the function is_library_missing with an argument taglib_module , if it evaluates to true ,	if is_library_missing ( taglib_module ) :
8983	append to errors list a dictionary created with 2 etries , if escape_html is true , return value of the function escape	errors . append ( { STR0 : escape ( message ) if escape_html else message , STR1 : error . code or STR , } )
18006	define the function localtime with 2 arguments : value and timezone set to None .	def localtime ( value , timezone = None ) :
4162	raise CommandError exception with STR0 , with STR1 substituted for migration_name and app_label , respectively , as arguments .	raise CommandError ( STR0 % ( migration_name , app_label ) )
17136	define the method __len__ with an argument self .	def __len__ ( self ) :
6608	call the method resolver._reverse_with_prefix with 4 arguments : view , prefix , unpacked list args , unpacked dictionary kwargs , use the result as an argument for the call to the function iri_to_uri , return the result .	return iri_to_uri ( resolver . _reverse_with_prefix ( view , prefix , * args , ** kwargs ) )
4545	from django.db import connections and DEFAULT_DB_ALIAS into default name space .	from django . db import connections , DEFAULT_DB_ALIAS
12761	define the method load_template_source with 3 arguments : self , template_name and template_dirs set to None .	def load_template_source ( self , template_name , template_dirs = None ) :
7268	remove the value under STR0 key from the kwargs dictionary and if the key exists substitute it for self.max_length , if not self.max_length is None .	self . max_length = kwargs . pop ( STR0 , None )
6366	if kwargs is true ,	if kwargs :
1422	call the os.path.normpath with argument path , return the result .	return os . path . normpath ( path )
14847	if m is false ,	if not m :
9199	value is an empty list .	value = [ ]
5332	if sum of the top and self.orphans is greater or equal to self.count ,	if top + self . orphans >= self . count :
5949	define the method start_doctype_decl with an arguments self , name , sysid , pubid and has_internal_subset .	def start_doctype_decl ( self , name , sysid , pubid , has_internal_subset ) :
9126	call the method self.parent_widget.render with unpacked list args as an argument , return the result .	return self . parent_widget . render ( * args )
18503	substitute STR0 in string STR1 with result of the function join_tokens , called with 2 arguments : singular , and trimmed and result of the function join_tokens called with 2 arguments : plural and trimmed , write the result to out .	out . write ( STR0 % ( join_tokens ( singular , trimmed ) , join_tokens ( plural , trimmed ) ) )
9352	allow_multiple_selected is boolean True .	allow_multiple_selected = True
3230	if rel_model has an STR0 attribute and rel_model is not equal to model ,	if hasattr ( rel_model , STR0 ) and rel_model != model :
6486	define the method urlconf_module with an argument self .	def urlconf_module ( self ) :
6825	from django.forms.fields import everything into default name space .	from django . forms . fields import *
9016	call the function six.reraise with 3 arguments : class ValidationError , class ValidationError , created with 3 arguments : message , code as a string STR0 and params as params , and third element of the return value of the function sys.exc_info .	six . reraise ( ValidationError , ValidationError ( message , code = STR0 , params = params , ) , sys . exc_info ( ) [ 2 ] )
12933	remove kwargs dictionary entry under the STR0 key , if it exists substitute it for self.extra_context , if not self.extra_context is an empty dictionary .	self . extra_context = kwargs . pop ( STR0 , { } )
12439	if extra_context is true , substitute it for self.extra_context , if not self.extra_context is an empty dictionary .	self . extra_context = extra_context or { }
13726	if KeyboardInterrupt exception is caught ,	except KeyboardInterrupt :
9082	combined is an instance of Media class .	combined = Media ( )
13745	if args is None ,	if args is None :
3495	if ImportError exception is caught ,	except ImportError :
10296	from django.utils.http import cookie_date into default name space .	from django . utils . http import cookie_date
2190	from email import charset as Charset , encoders as Encoders , message_from_string and generator .	from email import ( charset as Charset , encoders as Encoders , message_from_string , generator )
13070	get the value under the key key of the self.find_template_cache dictionary , substitute it for result .	result = self . find_template_cache [ key ]
13524	define the method list with 3 arguments : self and unpacked list args and unpacked dictionary kwargs .	def list ( self , * args , ** kwargs ) :
2275	call the method MIMEMessage.__setitem__ with arguments self , name and val .	MIMEMessage . __setitem__ ( self , name , val )
139	for every k in keys ,	for k in keys :
17316	define the function create_bound_function with 2 arguments : func and obj .	def create_bound_method ( func , obj ) :
15721	classmethod decorator ,	@ classmethod
8281	skip this loop iteration .	continue
1812	substitute buf_size for self.buf_size .	self . buf_size = buf_size
7679	declared_fields is an instance of OrderedDict class .	declared_fields = OrderedDict ( )
1630	define lambda function that returns self.file.readlines field , use it as an argument for property function , put the result in readlines .	readlines = property ( lambda self : self . file . readlines )
16040	define the function urlize with 4 arguments : text , trim_url_limit set to None , nofollow set to boolean False ,	def urlize ( text , trim_url_limit = None , nofollow = False , autoescape = False ) :
11009	define the method __repr__ with an argument self .	def __repr__ ( self ) :
809	define initialization method __init__ with self class instance , unpacked list args , unpacked dictionary kwargs as arguments .	def __init__ ( self , * args , ** kwargs ) :
6877	raise an ValueError with an argument string STR0 .	raise ValueError ( STR0 )
14771	if result is not None ,	if result is not None :
10982	try ,	try :
16779	for every entry in package_path ,	for entry in package_path :
11083	call the method node.render with an argument context , return the result .	return node . render ( context )
13999	perform bitwise exclusive OR on 2 operands integer representation of x and integer representation of y , perform bitwise OR with 2 operands : previous result and result , substitute the result for result .	result |= ord ( x ) ^ ord ( y )
5118	from django.conf import settings into a default name space ,	from django . conf import settings
3499	missing_args_message is a tuple containing a string STR0	missing_args_message = ( STR0 )
10650	substitute token_type and contents for self.token_type and self.contents .	self . token_type , self . contents = token_type , contents
10196	return result .	return result
15284	if not ,	else :
9557	if _cookie_encodes_correctly is boolean False ,	if not _cookie_encodes_correctly :
18264	get the value under the settings.__module__ key of the sys.modules dictionary , use its __file__ field as an argument for the call to the function upath , substitute the result for settingsfile .	settingsfile = upath ( sys . modules [ settings . __module__ ] . __file__ )
14352	call the method self.iterlists , return list of results .	return list ( self . iterlists ( ) )
17117	if first element of sys.version_info equals integer 2 , PY2 is boolean True , otherwise it is boolean False .	PY2 = sys . version_info [ 0 ] == 2
17814	call the method bit.group with an argument integer 0 , yield the result .	yield bit . group ( 0 )
12430	return an empty string ,	return STR
17904	if name is not None ,	if name is not None :
18500	if message_context is true ,	if message_context :
12618	if third element of bits equals a string STR0 ,	if bits [ 2 ] == STR0 :
11014	substitute context for current .	current = context
6244	from django.utils.encoding import force_str , force_text and iri_to_uri into default name space .	from django . utils . encoding import force_str , force_text , iri_to_uri
17010	for every pos and elt in enumerated iterable source ,	for pos , elt in enumerate ( source ) :
12311	define the method render with 2 arguments : self and context .	def render ( self , context ) :
464	derive the class CacheClass from the base class FileBasedCache .	class CacheClass ( FileBasedCache ) :
13446	convert filename to lowercase , use the result as an argument for the call to the function os.path.splitext , substitute the result for base and tail_ext .	base , tail_ext = os . path . splitext ( filename . lower ( ) )
10662	while bit doesnt end with sential ,	while not bit . endswith ( sentinal ) :
16468	if not ,	else :
6620	define the function clear_script_prefix .	def clear_script_prefix ( ) :
1781	evaluate the function callback with request and dictionary of parameters param_dict as the arguments , return the result .	return callback ( request , ** param_dict )
16964	return nothing .	return
16525	call the method lexer.lex with an arguments js , for every name and tok in the result ,	for name , tok in lexer . lex ( js ) :
16319	return boolean False .	return False
16826	if first element of str_number equals a string STR0 .	if str_number [ 0 ] == STR0 :
14591	if jan1_weekday is greater than integer 4 ,	if jan1_weekday > 4 :
17774	self.vals is an empty list .	self . vals = [ ]
17280	_func_defaults is a string STR0 .	_func_defaults = STR0
1777	evaluate debug.technical_500_response with request and list of arguments exec_info , return the result .	return debug . technical_500_response ( request , * exc_info )
11878	define the function unordered_list with 2 arguments value and autoescape set to None .	def unordered_list ( value , autoescape = None ) :
11480	derive the class RequestContext from the Context base class .	class RequestContext ( Context ) :
11226	substitute filter_func for value under the name key of self.filters dictionary .	self . filters [ name ] = filter_func
372	derive the class FileBasedCache from BaseCache base class .	class FileBasedCache ( BaseCache ) :
11021	if current is an instance of BaseContext and bit attribute of type of current is true ,	if isinstance ( current , BaseContext ) and getattr ( type ( current ) , bit ) :
17658	if text ends with truncate ,	if text . endswith ( truncate ) :
6472	call the get method with an argument string STR0 on the first element of the e.args , substitute the result for sub_tried .	sub_tried = e . args [ 0 ] . get ( STR0 )
9633	raise an MultiPartParserError with an argument string STR0 , where STR1 is replaced with content_length .	raise MultiPartParserError ( STR0 % content_length )
2822	define the method handle_app_config with 3 arguments : self , app_config and unpacked dictionary options .	def handle_app_config ( self , app_config , ** options ) :
4384	raise an CommandError exception with an argument string STR0 .	raise CommandError ( STR0 )
665	call the method self._cache.set_multi with safe_data , self.get_backend_timeout ( timeout ) as arguments .	self . _cache . set_multi ( safe_data , self . get_backend_timeout ( timeout ) )
7048	call the method copy.copy with an argument self , substitute the result for result .	result = copy . copy ( self )
438	try ,	try :
17856	result of multiplication of integers : 60,60,24,365 , and return value of ungettext_lazy with 2 arguments : STR0 , STR1 , result of multiplication of integers : 60,60,24,30 , and return value of ungettext_lazy with 2 arguments : STR2 , STR3 , result of multiplication of integers : 60,60,24,7 , and return value of ungettext_lazy with 2 arguments : STR4 , STR5 , result of multiplication of integers : 60,60,24 , and return value of ungettext_lazy with 2 arguments : STR6 , STR7 , result of multiplication of integers : 60,60 , and return value of ungettext_lazy with 2 arguments : STR8 , STR9 , result of multiplication of integers : 60 , and return value of ungettext_lazy with 2 arguments : STR10 , STR11 , if d is not an instance of datetime.datetime ,	if not isinstance ( d , datetime . datetime ) :
4963	if return value of the function connection.introspection.table_name_converter called with an arugment : model._meta.db_table is contained in table_names	if connection . introspection . table_name_converter ( model . _meta . db_table ) in table_names :
8644	skip this loop iteration .	continue
9564	if _cookie_allows_colon_in_names is False ,	if not _cookie_allows_colon_in_names :
9655	self._files is an instance of MultiValueDict class .	self . _files = MultiValueDict ( )
12836	try ,	try :
9063	if not ,	else :
5148	write content to new_file file .	new_file . write ( content )
14758	define the function available_attrs with an argument fn .	def available_attrs ( fn ) :
11544	substitute token.source for e.django_template_source .	e . django_template_source = token . source
1792	from threading import Lock into default name space .	from threading import Lock
9979	derive the class UnreadablePostError from the base class IOError .	class UnreadablePostError ( IOError ) :
11304	call the function context.get with 2 argument STR0 and None , substitute the result for csrf_token .	csrf_token = context . get ( STR0 , None )
3532	e.args is a tuple , containing 1 element : string STR0 , where STR1 is replaced with e .	e . args = ( STR0 % e , )
8389	update fields dictionary with new_class.declared_fields .	fields . update ( new_class . declared_fields )
1171	define the _fd function with argument f .	def _fd ( f ) :
14231	define the method keys with an argument self .	def keys ( self ) :
12290	define the method nodelist with an argument self .	def nodelist ( self ) :
2590	if subcommand is contained in no_settings_commands ,	if subcommand in no_settings_commands :
16616	if kwds is true ,	if kwds :
2884	define function no_style , without input arguments .	def no_style ( ) :
5261	from django.utils import six into default name space .	from django . utils import six
1836	if not ,	else :
18013	define the function now .	def now ( ) :
9332	for every option in option_label ,	for option in option_label :
5215	substitute used_name for guessed_filename .	guessed_filename = used_name
1814	if size is None or size is greater than self.remaining ,	if size is None or size > self . remaining :
2273	define the method __setitem__ with arguments self , name and val .	def __setitem__ ( self , name , val ) :
9108	return base .	return base
7317	if not ,	else :
17402	call the method data.encode with 2 arguments : fp.encoding and errors , substitute the result for data .	data = data . encode ( fp . encoding , errors )
18444	try ,	try :
6130	if value under the STR0 key of options dictionary is true ,	if options [ STR0 ] :
11220	call the method self.filter_function with arguments name and unpacked dictionary flags , return the result .	return self . filter_function ( name , ** flags )
7136	value is an instance of a class Decimal created with value as an argument .	value = Decimal ( value )
2051	if not ,	else :
4975	call the method connection.introspection.sequence_list if reset_sequences is true , substitute the result for seqs , if not , seqs is an empty tuple .	seqs = connection . introspection . sequence_list ( ) if reset_sequences else ( )
13565	if ImportError exception is caught ,	except ImportError :
7334	if ValueError exception is caught ,	except ValueError :
15106	if StandardError , renamed to e , exception is caught ,	except StandardError as e :
17085	call the function method with 3 arguments : self , unpacked list args and unpacked dictionary kwargs , substitute the result for data .	data = method ( self , * args , ** kwargs )
15822	if not ,	else :
13809	from django.core.cache import caches to the default name space .	from django . core . cache import caches
14780	if middleware has an attribute STR0 ,	if hasattr ( middleware , STR0 ) :
17151	define the method __init__ with 2 arguments : self and name .	def __init__ ( self , name ) :
8	from django.utils.module_loading import import_string into default name space .	from django . utils . module_loading import import_string
13674	if ImportError , IndentationError , NameError , SyntaxError , TypeError or AttributeErrorexception is caught ,	except ( ImportError , IndentationError , NameError , SyntaxError , TypeError , AttributeError ) :
2145	try ,	try :
13717	value under the STR0 key of new_environ dictionary is a string STR1 .	new_environ [ STR0 ] = STR1
3021	replace STR1 in string STR0 with tablename , write it to the self.stdout stream .	self . stdout . write ( STR0 % tablename )
13627	trans_real._default is None .	trans_real . _default = None
11119	if length of bits is lesser than integer 3 or second element of bits is not equal to string STR0 ,	if len ( bits ) < 3 or bits [ 1 ] != STR0 :
7948	call the method self.field.bound_data with 2 arguments : self.data and value under the self.name key of the dictionary , self.form.initial , if it exists , or self.field.initial if not , substitute the result for data .	data = self . field . bound_data ( self . data , self . form . initial . get ( self . name , self . field . initial ) )
11252	if func is None ,	if func is None :
10862	while i is lesser than length of subject and i-th element of subject is an empty space or tab character .	while i < len ( subject ) and subject [ i ] in ( STR , STR0 ) :
17524	increment self.active_writers by integer 1 ,	self . active_writers += 1
9008	define the function from_current_timezone with an argument value .	def from_current_timezone ( value ) :
3570	raise an exceptions	raise
17467	buffer_types is a tuple with 3 elements : bytes , bytearray and memoryview .	buffer_types = ( bytes , bytearray , memoryview )
18215	call the function re.compile with 2 arguments : raw string STR0 , and re.VERBOSE , substitute the result for accept_language_re .	accept_language_re = re . compile ( STR0 , re . VERBOSE )
13924	if cache is None ,	if cache is None :
3183	call the method app_list.items , use the result as an argument for the call to the function sort_dependencies , for every model in result ,	for model in sort_dependencies ( app_list . items ( ) ) :
8713	classmethod decorator ,	@ classmethod
11184	substitute kwargs for self.kwargs .	self . kwargs = kwargs
13835	delete dictionary item STR0 from cc .	del cc [ STR0 ]
15829	if self._wrapped is empty ,	if self . _wrapped is empty :
15469	if value object the STR0 key of the item dictionary is an instance of bool type ,	if isinstance ( item . get ( STR0 ) , bool ) :
7338	call the function split_url with an argument value , substitute the result for url_fields .	url_fields = split_url ( value )
1336	substitute the location for self.base_location .	self . base_location = location
18187	return settings.LANGUAGE_CODE .	return settings . LANGUAGE_CODE
12032	move integer 1 left for 40 bits , substitute the result for TB .	TB = 1 << 40
8287	call the method f.save_form_data with 2 arguments : instance and value under the f.name key of cleaned_data dictionary .	f . save_form_data ( instance , cleaned_data [ f . name ] )
2248	call the addr.encode method with string STR0 as an argument .	addr . encode ( STR0 )
1342	substitute base_url for self.base_url .	self . base_url = base_url
13506	try ,	try :
18025	if not ,	else :
486	call the self._lock.writer method , with the result perform the following ,	with self . _lock . writer ( ) :
17969	call the method local , substitute the result for _active .	_active = local ( )
2977	raise CommandError exception with string STR0 , with STR1 replaced with po_path , as argument .	raise CommandError ( STR0 % po_path )
9201	get the value under the STR0 key of final_attrs dictionary , substitute if for id_ if the key doesnt exists , id_ is None .	id_ = final_attrs . get ( STR0 , None )
112	if ValueError or TypeError exceptions occurred ,	except ( ValueError , TypeError ) :
15497	call the method handler.addQuickElement with 3 arguments : string STR0 , an empty string and a dictionary with 2 entries : STR1 for STR2 and value under the STR3 key of self.feed dictionary for STR4 .	handler . addQuickElement ( STR0 , STR , { STR1 : STR2 , STR3 : self . feed [ STR4 ] } )
11643	if p equals integer 0 ,	if p == 0 :
7855	if initial_value is an callable object ,	if callable ( initial_value ) :
11791	if autoescape is true and value is not an instance of SafeData , autoescape is boolean True , otherwise it is boolean False .	autoescape = autoescape and not isinstance ( value , SafeData )
1997	define the method __exit__ with arguments : self , exc_type , exc_value and traceback .	def __exit__ ( self , exc_type , exc_value , traceback ) :
1324	raise an NotImplementedError exception with argument string STR0 .	raise NotImplementedError ( STR0 )
10929	if STR0 is contained in settings.TEMPLATE_STRING_IF_INVALID , invalid_var_format_string is boolean True , otherwise it is False .	invalid_var_format_string = STR0 in settings . TEMPLATE_STRING_IF_INVALID
12252	call the method self.nodelist_true.render with an argument context , assign the result to compare_to and nodelist_true_output .	compare_to = nodelist_true_output = self . nodelist_true . render ( context )
2067	define the method write_message with arguments self and message .	def write_message ( self , message ) :
11958	if AttributeError exception is caught ,	except AttributeError :
4211	call the self.stdout.write method , with string STR0 with STR1 replaced with migration and ending set to STR , as arguments .	self . stdout . write ( STR0 % migration , ending = STR )
988	define the method __iter__ with an argument self .	def __iter__ ( self ) :
8970	derive the class ErrorList from the UserList and list base classes .	class ErrorList ( UserList , list ) :
1447	define method __init__ with self class instance , mode string STR0 , bufsize set to integer -1 , suffix and prefix set to empty strig , dir set to None as the arguments .	def __init__ ( self , mode = STR0 , bufsize = - 1 , suffix = STR , prefix = STR , dir = None ) :
12104	if not ,	else :
14188	define the method __copy__ with an argument self .	def __copy__ ( self ) :
17231	set attr.name attribute of the Module_six_moves_urllib_error object to attr .	setattr ( Module_six_moves_urllib_error , attr . name , attr )
17072	if data is an instance of bytes ,	if isinstance ( data , bytes ) :
802	derive the class Info from base class CheckMessage .	class Info ( CheckMessage ) :
5706	call the m2m_convert function with pk as argument , for every pk in field_value , substitute the value under the field.name key of the m2m_data dictionary .	m2m_data [ field . name ] = [ m2m_convert ( pk ) for pk in field_value ]
17775	return ret .	return ret
13633	if event.path ends with string STR0 ,	if event . path . endswith ( STR0 ) :
18675	extend self.children list with data.children .	self . children . extend ( data . children )
8273	call the function construct_instance with 4 arguments form , instance , fields , exclude and substitute the result for instance .	instance = construct_instance ( form , instance , fields , exclude )
13652	define the function code_changed .	def code_changed ( ) :
2889	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
17306	define the function callable with an argument obj .	def callable ( obj ) :
7587	if OSError exception is caught ,	except OSError :
11746	define the function urlize with 2 arguments value and autoescape set to None .	def urlize ( value , autoescape = None ) :
14186	define the method __deepcopy__ with 2 arguments : self and memo .	def __deepcopy__ ( self , memo ) :
16748	substitute before_import_registry for register_to._registry .	register_to . _registry = before_import_registry
11954	if arg is None ,	if arg is None :
13913	get the value of dictionary cache under the key cache_key , if key is not available return None , substitute it for headerlist .	headerlist = cache . get ( cache_key , None )
12448	register.tag decorator ,	@ register . tag
16898	append length of result to non_capturing_groups .	non_capturing_groups . append ( len ( result ) )
8595	for every form in valid_forms ,	for form in valid_forms :
9750	derive the class LazyStream from the six.Iterator base class .	class LazyStream ( six . Iterator ) :
3831	call the function glob.glob with an argument : string STR0 appended to self.default_locale_path converted into a string , filter out the results for which function os.path.isdir returns false , substitute the result for locale_dirs .	locale_dirs = filter ( os . path . isdir , glob . glob ( STR0 % self . default_locale_path ) )
7285	raise an ValidationError with 2 arguments : value under the STR0 key of the self.error_messages dictionary and code set to STR1 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 )
215	derive DatabaseCache from the BaseDatabaseCache base class .	class DatabaseCache ( BaseDatabaseCache ) :
4826	derive class Command from the BaseCommand base class .	class Command ( BaseCommand ) :
9989	self.COOKIES is an empty dictionary .	self . COOKIES = { }
3969	join elements of lines into a string , separated by newline characters , substitute it for msgs .	msgs = STR0 . join ( lines )
7325	return f .	return f
6447	if language_code is not contained in self._reverse_dict	if language_code not in self . _reverse_dict :
5792	define the method end_serialization with an argument self .	def end_serialization ( self ) :
14911	if value is not contained in result ,	if value is not result :
1888	def _get_post method with self class instance as the argument .	def _get_post ( self ) :
7081	call the method validators.MinValueValidator with min_value converted into an integer , append the result to list self.validators .	self . validators . append ( validators . MinValueValidator ( min_value ) )
12449	define the function autoescape with 2 arguments : parser and token .	def autoescape ( parser , token ) :
18279	call the method self._new_gnu_trans with an argument localedir , substitute the result for translation .	translation = self . _new_gnu_trans ( localedir )
15144	if StandardError , renamed to e , exception is caught ,	except StandardError as e :
6525	call the method self.reverse_dict.getlist with an argument lookup_view , substitute the result for possibilities .	possibilities = self . reverse_dict . getlist ( lookup_view )
13234	if context is an instance of Context class .	if isinstance ( context , Context ) :
6435	if not ,	else :
13167	substitute context for self.context_data .	self . context_data = context
18630	append a tuple with 2 entries lang and priority to result .	result . append ( ( lang , priority ) )
9307	value is an empty string .	value = STR
11715	return value .	return value
18610	substitute t.lineno for comment_lineno_cache .	comment_lineno_cache = t . lineno
5587	self._current is None .	self . _current = None
2812	try ,	try :
9171	input_type is a string STR0 .	input_type = STR0
14385	define the method complain with 3 arguments : self , unpacked dictionary wargs and unpacked dictionary kwargs .	def complain ( self , * wargs , ** kwargs ) :
10977	self.lookups is None .	self . lookups = None
911	define the function request with an argument request .	def request ( request ) :
10368	add state element to self.__dict__ dictionary .	self . __dict__ . update ( state )
17783	read data from buf file stream , yield the result .	yield buf . read ( )
7482	define the method __init__ with arguments : self , fields set to an empty tuple , unpacked list args and unpacked dictionary kwargs .	def __init__ ( self , fields = ( ) , * args , ** kwargs ) :
14835	return new_class .	return new_class
6813	decorator deconstructible ,	@ deconstructible
6291	if ImportError exception is caught .	except ImportError :
1249	if file path of src and dst files are the same , return boolean True , otherwise return boolean False .	return ( os . path . normcase ( os . path . abspath ( src ) ) == os . path . normcase ( os . path . abspath ( dst ) ) )
7675	remove entry at the key key of the attrs dictionary .	attrs . pop ( key )
2369	call the method self.attach with arguments filename , content and mimetype .	self . attach ( filename , content , mimetype )
2832	derive the LabelCommand class from the BaseCommand base class .	class LabelCommand ( BaseCommand ) :
18402	return code .	return code
4810	if return value of the method UserModel._default_manager.exists is false and value under the STR0 key of the options dictionary is true ,	if not UserModel . _default_manager . exists ( ) and options . get ( STR0 ) :
6256	substitute args for self.args .	self . args = args
15238	define the function is_protected_type with obj as the only argument .	def is_protected_type ( obj ) :
8082	if self.is_bound is true ,	if self . is_bound :
2484	if not ,	else :
18541	if comment_lineno_cache equals cur_lineno .	if comment_lineno_cache == cur_lineno :
17068	return t .	return t
7630	return value .	return value
14933	append STR0 to frag , append the result to used .	used += STR0 + frag
17062	define the method __add__ with 2 arguments self and rhs .	def __add__ ( self , rhs ) :
14106	define the method __getitem__ with 2 arguments : self and key .	def __getitem__ ( self , key ) :
6537	for every k and v in return value of the function defaults.items ,	for k , v in defaults . items ( ) :
4312	if app_name is not contained in loader.migrated_apps ,	if app_name not in loader . migrated_apps :
13878	existing_headers is a set of lowercase headers for every header in vary_headers .	existing_headers = set ( header . lower ( ) for header in vary_headers )
10825	if i is greater than or equal to length of subject .	if i >= len ( subject ) :
12976	raise an TemplateSyntaxError exception with an argument string STR0 , where STR1 is replaced with first element of bits .	raise TemplateSyntaxError ( STR0 % bits [ 0 ] )
13903	define the funtion _generate_cache_header_key with key_prefix and request as arguments .	def _generate_cache_header_key ( key_prefix , request ) :
9780	if not ,	else :
2893	from django.core.management.base import BaseCommand and CommandError into default name space .	from django . core . management . base import BaseCommand , CommandError
6827	from django.forms.formsets import everything into default name space .	from django . forms . formsets import *
5361	substitute number for self.number .	self . number = number
5833	define the method handle_m2m_field with arguments self , obj and field .	def handle_m2m_field ( self , obj , field ) :
2878	assign the value of the dictionary color_settings under the key role to format , if key doesnt exist assign the empty dictionary .	format = color_settings . get ( role , { } )
9847	append bytes to chunks .	chunks . append ( bytes )
13729	try ,	try :
18117	call the method deactivate .	deactivate ( )
6568	call the function get_urlconf with an argument urlconf .	urlconf = get_urlconf ( )
11165	call the method parser.compile_filter with an argument bit , append the result to args .	args . append ( parser . compile_filter ( bit ) )
18191	from collections import OrderedDict into default name space .	from collections import OrderedDict
15898	get name attribute from the instance object , call it with an argument value and return the result .	return getattr ( instance , name ) ( value )
12022	define the function filesizeformat with an argument bytes .	def filesizeformat ( bytes ) :
5788	define the method start_serialization with an argument self .	def start_serialization ( self ) :
4802	define the method handle with 2 arguments : self and unpacked dictionary options .	def handle ( self , ** options ) :
1409	call the self.path function with argument path , substitute it for path .	path = self . path ( path )
1072	if chunk_size is false ,	if not chunk_size :
1657	define initialization method __init__ , with self class instance as the argument .	def __init__ ( self ) :
3942	if errors is true ,	if errors :
11182	substitute takes_context for self.takes_context .	self . takes_context = takes_context
12249	if self._varlist is true ,	if self . _varlist :
14310	return default .	return default
227	substitute third element of row list for expires .	expires = row [ 2 ]
10426	raise an Exception exception with an argument string STR0 , where STR1 is replaced with self.__class__.__name__ .	raise Exception ( STR0 % self . __class__ . __name__ )
6699	if UnicodeError exception is caught ,	except UnicodeError :
11798	if autoescape is true ,	if autoescape :
4708	migrations_to_squash is a list created dynamically with elements : return value of the method executor.loader.get_migration called , with arguments al and mn , for every al , mn in executor.loader.graph.forwards_plan method return value called with 2 arguments : migration.app_label , migration.name , only if al equals migration.app_label .	migrations_to_squash = [ executor . loader . get_migration ( al , mn ) for al , mn in executor . loader . graph . forwards_plan ( ( migration . app_label , migration . name ) ) if al == migration . app_label ]
7676	sort current_fields elements with key being a lambda function with argument x and return value creation_counter filed of first element of x .	current_fields . sort ( key = lambda x : x [ 1 ] . creation_counter )
5511	raise a NotImplementedError with an argument string	raise NotImplementedError ( STR0 )
17539	increment self.active_readers by t .	self . active_readers += t
6485	property decorator ,	@ property
2309	if not ,	else :
10510	derive the class HttpResponseServerError from the HttpResponse base class .	class HttpResponseServerError ( HttpResponse ) :
16519	if s equals a string STR ,	if s == STR :
15026	for every name in handlers ,	for name in handlers :
7566	for root , dirs and files in sorted list of the directory tree starting from the directory self.path ,	for root , dirs , files in sorted ( os . walk ( self . path ) ) :
12023	try ,	try :
9069	raise an KeyError with an argument string STR1 , where STR2 is replaced with name .	raise KeyError ( STR1 % name )
9151	update attrs dictionary with extra_attrs entry .	attrs . update ( extra_attrs )
15342	call the function datetime_safe.new_datetime with an argument date , substitute the result for date .	date = datetime_safe . new_datetime ( date )
7999	from django.core.exceptions import ValidationError into default name space .	from django . core . exceptions import ValidationError
7235	call the method to_python with an argument value from the base class of the DateTimeField class , substitute the result for result .	result = super ( DateTimeField , self ) . to_python ( value )
7921	if auto_id is true and STR0 is not contained in attrs and STR1 is not contained in widget.attrs ,	if auto_id and STR0 not in attrs and STR1 not in widget . attrs :
3022	return nothing .	return
7818	call the method self.fields.items , for every name and field in result ,	for name , field in self . fields . items ( ) :
18376	if CONTEXT_SEPARATOR is contained in result ,	if CONTEXT_SEPARATOR in result :
12419	return an empty string .	return STR
13651	return EventHandler.modified_code .	return EventHandler . modified_code
18447	return settings.LANGUAGE_CODE .	return settings . LANGUAGE_CODE
18506	for every part in plural ,	for part in plural :
16320	if url_info.netloc is false or url_info.netloc equals host , and if url_info.scheme is false or url_info.scheme equals ,	return ( ( not url_info . netloc or url_info . netloc == host ) and ( not url_info . scheme or url_info . scheme in [ STR0 , STR1 ] ) )
14189	call the method self.copy , return the result .	return self . copy ( )
11678	decorator function register.filter with an argument is_safe set to boolean True .	@ register . filter ( is_safe = True )
12426	round up radio , convert it to an integer and the convert it to a string and substitute the result for result .	result = str ( int ( round ( ratio ) ) )
5577	write a new line to the self.stream file stream .	self . stream . write ( STR0 )
2304	encoding is None .	encoding = None
5155	replace STR1 in string STR0 , with new_path and self.style.NOTICE , respectively , write it to self.stderr stream .	self . stderr . write ( STR0 % new_path , self . style . NOTICE )
1835	call the self._read_limiter with length of self.buffer subtracted from size as argument , store the result into chunk .	chunk = self . _read_limited ( size - len ( self . buffer ) )
2502	if not ,	else :
2546	otherwise if first element of cwords is contanied in subcommands and is not equal to string STR0 ,	elif cwords [ 0 ] in subcommands and cwords [ 0 ] != STR0 :
9181	input_type is a string STR0 .	input_type = STR0
11586	from django.utils.text import Truncator , wrap and phone2numeric into default name space .	from django . utils . text import Truncator , wrap , phone2numeric
10535	if not ,	else :
16066	call the function smart_urlquote with an argument string STR0 formated with an argument middle , substitute the result for url .	url = smart_urlquote ( STR0 % middle )
16411	if string STR0 is contained in ip_str ,	if STR0 in ip_str :
16050	for every punctuation in TRAILING_PUNCTUATION ,	for punctuation in TRAILING_PUNCTUATION :
7324	call the method f.seek with an argument integer 0 .	f . seek ( 0 )
15799	define the function wrapper with 2 arguments : unpacked list args and unpacked dictionary kwargs .	def wrapper ( * args , ** kwargs ) :
982	if self has an STR0 attribute ,	if hasattr ( self , STR0 ) :
9067	if name is contained in MEDIA_TYPES ,	if name in MEDIA_TYPES :
17477	define the function assertCountEqual with 3 arguments : self , unpacked list args and unpacked dictionary kwargs .	def assertCountEqual ( self , * args , ** kwargs ) :
1766	call the method self.apply_response_fixes with the request and response as the arguments , substitute the result for response .	response = self . apply_response_fixes ( request , response )
6737	if method self.validate_domain_part with an argument domain_part evaluates to true ,	if self . validate_domain_part ( domain_part ) :
1335	substitute the settings.MEDIA_ROOT for location .	location = settings . MEDIA_ROOT
7986	define the method auto_id with an argument self .	def auto_id ( self ) :
9437	call the method self.choice_input_class with 5 arguments : self.name , self.value , return value of the method self.attrs.copy , choice and i , substitute the result for w .	w = self . choice_input_class ( self . name , self . value , self . attrs . copy ( ) , choice , i )
3613	call the method warnings.warn with an argument string STR0 where STR1 is replaced with fixture_name .	warnings . warn ( STR0 % fixture_name )
17481	define the function assertRegex with 3 arguments : self , unpacked list args and unpacked dictionary kwargs .	def assertRegex ( self , * args , ** kwargs ) :
5278	if striped x by STR0 character is not contained in ignored , for every x in ext_list put x into a set , return the resulting set .	return set ( x for x in ext_list if x . strip ( STR0 ) not in ignored )
16251	call the method MONTHS.index with 6 arguments : year , month , day , hour , min and sec , substitute the result for result .	result = datetime . datetime ( year , month , day , hour , min , sec )
18228	find first index of occurrence of character STR0 in language , substitute it for p .	p = language . find ( STR0 )
2021	return .	return
10106	self._post is an instance of QueryDict created with arguments : an empty string and encoding set to self._encoding ,	self . _post , self . _files = QueryDict ( STR , encoding = self . _encoding ) , MultiValueDict ( )
16002	call the method s.get_data , return the result .	return s . get_data ( )
14767	decorator function wraps with 2 arguments : view_func and assigned set to result of the function available_attrs , called with an argument view_func .	@ wraps ( view_func , assigned = available_attrs ( view_func ) )
4876	define the method with self class instance and parser as arguments .	def add_arguments ( self , parser ) :
18679	return data .	return data
11739	define the function urlencode with 2 arguments value and safe set to None .	def urlencode ( value , safe = None ) :
3282	do nothing .	pass
14935	get frag attribute from found object , substitute it for found .	found = getattr ( found , frag )
258	if not ,	else :
9375	call the function force_text with second element of choice as an argument , substitute the result for self.choice_label .	self . choice_label = force_text ( choice [ 1 ] )
15437	call the method handler.addQuickElement with 2 arguments : string STR0 and value under the STR1 key of the self.feed dictionary .	handler . addQuickElement ( STR0 , self . feed [ STR1 ] )
8116	if self doesnt have an STR0 attribute ,	if not hasattr ( self , STR0 ) :
5314	self._num_pages and self._count are None .	self . _num_pages = self . _count = None
14527	return the value under the self.data.month key of the MONTHS dictionary .	return MONTHS [ self . data . month ]
9034	from django.utils.six.moves.urllib.parse import urljoin into default name space .	from django . utils . six . moves . urllib . parse import urljoin
4050	get the value under the app_label key of the directory_created dictionary , if exists and it is false ,	if not directory_created . get ( app_label , False ) :
539	delete the value under the key key of self._cache dictionary .	del self . _cache [ key ]
16573	call the function self.format_subject with an argument subject , substitute the result for subject .	subject = self . format_subject ( subject )
18681	call the method self._new_instance with 3 arguments : self.children , self.connector and self.negated , substitute the result for obj .	obj = self . _new_instance ( self . children , self . connector , self . negated )
3621	join app_config.path and string STR0 into a valid file path , substitute it for app_dir .	app_dir = os . path . join ( app_config . path , STR0 )
17219	substitute _moved_attributes for _MovedItems._moved_attributes .	_MovedItems . _moved_attributes = _moved_attributes
17612	import module warnings .	import warnings
15417	call the method self.endChannelElement with an argument handler .	self . endChannelElement ( handler )
12397	if self.asvar is true ,	if self . asvar :
3304	define the method emit_post_migrate with arguments verbosity , interactive and database .	def emit_post_migrate ( verbosity , interactive , database ) :
16516	define the function prepare_js_for_gettext with an argument js .	def prepare_js_for_gettext ( js ) :
3109	get the value under the STR0 key of the options dictionary , substitute the result for indent .	indent = options . get ( STR0 )
6225	define the method unsign with arguments self , value and max_age set to None .	def unsign ( self , value , max_age = None ) :
1813	define the method _read_limited with self class instance and size set to None as arguments .	def _read_limited ( self , size = None ) :
5279	define the function find_command with 3 arguments : cmd , path set to None and pathext set to None .	def find_command ( cmd , path = None , pathext = None ) :
11971	if AttributeError exception is caught ,	except AttributeError :
15173	if formatter is true ,	if formatter :
16649	call the function cache_get with 2 arguments : key and root , substitute the result for result .	result = cache_get ( key , root )
16974	if ch equals string STR0 ,	if ch == STR0 :
12569	define the method display with an argument self .	def display ( self ) :
4063	define the method handle_merge with arguments self , loader and conflicts .	def handle_merge ( self , loader , conflicts ) :
1061	substitute the self.DEFAULT_CHUNK_SIZE for chunk_size .	chunk_size = self . DEFAULT_CHUNK_SIZE
3338	yield string STR0 as the result .	yield STR0
18598	split t.contents by STR0 symbol , substitute the result for parts ,	parts = t . contents . split ( STR0 )
1307	call the os.path.split with argument name , assign the result to the dir_name and file_name respectively .	dir_name , file_name = os . path . split ( name )
4573	join statements into a string , separated by newlines , return it .	return STR0 . join ( statements )
3821	substitute first element of self.locale_paths for self.default_locale_path .	self . default_locale_path = self . locale_paths [ 0 ]
9120	substitute name and value for self.name and self.value .	self . name , self . value = name , value
12766	define the method __init__ with 5 arguments : self , display_name , loader , name and dirs .	def __init__ ( self , display_name , loader , name , dirs ) :
7704	define the method __str__ with an argument self .	def __str__ ( self ) :
1869	self._post_parse_error is boolean False .	self . _post_parse_error = False
3079	if key is not contained in default_settings ,	if key not in default_settings :
7792	if field equals NON_FIELD_ERRORS ,	if field == NON_FIELD_ERRORS :
11995	define the function default with 2 arguments value and arg .	def default ( value , arg ) :
3493	import bz2 .	import bz2
15679	import module sys .	import sys
18156	from django.utils.safestring import mark_safe and SafeData into default name space .	from django . utils . safestring import mark_safe , SafeData
4215	wrte to the standard output result of the call to the method self.style.MIGRATE_SUCCESS with string STR0 as a argument .	self . stdout . write ( self . style . MIGRATE_SUCCESS ( STR0 ) )
252	call the timezone.now function , substitute the result for now .	now = timezone . now ( )
15265	if s is an instance of an object Promise .	if isinstance ( s , Promise ) :
5617	call the method o.isoformat substitute the result for r .	r = o . isoformat ( )
6216	call the force_text function with an argument value , return the result .	return force_text ( value )
8296	substitute instance._meta for opts .	opts = instance . _meta
15034	if level is true ,	if level :
16691	substitute link for value under the NEXT key of the last dictionary , for value under the PREV key of the root dictionary , for value under the key key of the cache dictionary .	last [ NEXT ] = root [ PREV ] = cache [ key ] = link
2220	msgid is a string STR0 , replace STR1 with utcdate , pid , randint , idstring and idhost , respectively .	msgid = STR0 % ( utcdate , pid , randint , idstring , idhost )
2382	if not ,	else :
6284	if func_name is false ,	if not func_name :
15571	substitute settings.FORMAT_MODULE_PATH for settings.FORMAT_MODULE_PATH .	format_module_path = settings . FORMAT_MODULE_PATH
9725	if not ,	else :
5194	if url ends with STR0 character ,	if url . endswith ( STR0 ) :
13151	append filepath to tried .	tried . append ( filepath )
15776	define the method __lt__ with 2 arguments : self and other .	def __lt__ ( self , other ) :
13590	if not ,	else :
9503	for every i and widget in enumerated iterable self.widgets , call the function widget.value_from_datadict with 3 arguments : data , files and string created with concatenation of : name , string STR0 and i converted into a string , return the results in a list .	return [ widget . value_from_datadict ( data , files , name + STR0 % i ) for i , widget in enumerate ( self . widgets ) ]
10433	call method self.serialize_headers , append bytes string STR0 to the result , append self.content to the result , return it .	return self . serialize_headers ( ) + STR0 + self . content
193	from django.db import connections , transaction , router and DatabaseError into default name space .	from django . db import connections , transaction , router , DatabaseError
9158	input_type is None .	input_type = None
1096	otherwise if self.name exists and self.name file path exists ,	elif self . name and os . path . exists ( self . name ) :
12841	skip this loop iteration .	continue
564	do nothing .	pass
3264	help is a tuple containing a string : STR1	help = ( STR1 )
178	call the self.delete method with key and version set to version as arguments .	self . delete ( key , version = version )
16872	otherwise if ch equals a string STR0 ,	elif ch == STR0 :
13649	call the method notifier.process_events .	notifier . process_events ( )
2527	call the function sys.exit with an argument integer 1 .	sys . exit ( 1 )
8792	return self.parent_instance .	return self . parent_instance
15780	define the method __hash__ with an argument self .	def __hash__ ( self ) :
1263	call the function locks.lock with arguments fd and locks.LOCK_EX .	locks . lock ( fd , locks . LOCK_EX )
2426	call the method self._create_alternatives with an argument msg , use it as an argument for the call to the self._create_attachments method , return the result .	return self . _create_attachments ( self . _create_alternatives ( msg ) )
14806	deifne the method __init__ with 5 arguments : self , class_name , old_method_name , new_method_name and deprecation_warning .	def __init__ ( self , class_name , old_method_name , new_method_name , deprecation_warning ) :
1269	call the function locks.unlock with fd as argument .	locks . unlock ( fd )
598	return self._client .	return self . _client
17132	if sys.platform starts with string STR0 ,	if sys . platform . startswith ( STR0 ) :
13272	call the function func with 2 arguments : context and self.first , return the result .	return func ( context , self . first )
1432	call the function self.path with argument name , use the result as an argument for the call to the function os.path.getctime , use the result as an argument for the call to the function datetime.fromtimestamp , return the result .	return datetime . fromtimestamp ( os . path . getctime ( self . path ( name ) ) )
14493	if self.data.minute equals integer 0 and self.data.hour equals integer 0 ,	if self . data . minute == 0 and self . data . hour == 0 :
2725	if not ,	else :
964	if message is not an instance of the ValidationError class ,	if not isinstance ( message , ValidationError ) :
14871	substitute key for result.key .	result . key = key
11211	get STR0 attribute from func , return func if the attribute doesnt exists , use its __name__ field as a key to get the value from self.tags , assign func to it .	self . tags [ getattr ( func , STR0 , func ) . __name__ ] = func
7927	substitute self.html_name for name .	name = self . html_name
1535	if content is empty , substitute it for an empty string .	content = content or STR
18477	instantiate Lexer class with 2 argumets src and origin , call the method tokenize from it , for every t in the result ,	for t in Lexer ( src , origin ) . tokenize ( ) :
11365	call the function add_to_builtins with an argument string STR0 .	add_to_builtins ( STR0 )
17412	if end is not None ,	if end is not None :
14430	derive the class Formatter from object base class .	class Formatter ( object ) :
10002	if STR0 is contained in self.META ,	elif STR0 in self . META :
3728	if is_templatized is true ,	if is_templatized :
18807	call the method self.endElement with an argument name .	self . endElement ( name )
7365	derive the class NullBooleanField from the base class BooleanField class .	class NullBooleanField ( BooleanField ) :
734	call the function settings.is_overridden with argument string STR0 , if it evaluates to boolean True ,	if settings . is_overridden ( STR0 ) :
7468	try ,	try :
8347	if formfield is true ,	if formfield :
13488	raise an NotImplementedError exception with an argument string STR0 .	raise NotImplementedError ( STR0 )
254	if timeout is None ,	if timeout is None :
16469	return boolean True .	return True
17113	import module sys .	import sys
11966	return an empty string .	return STR
8055	raise ValidationError with 2 arguments : return value of the function _ called with an argument string , STR0 and code as a string STR1 .	raise ValidationError ( _ ( STR0 ) , code = STR1 , )
12422	try ,	try :
485	call the pickle.dumps function with value and pickle.HIGHEST_PROTOCOL as arguments .	pickled = pickle . dumps ( value , pickle . HIGHEST_PROTOCOL )
1620	call the import_string with arguments path , call the return function with arguments : unpacked list args and unpacked dictionary kwargs , return the result .	return import_string ( path ) ( * args , ** kwargs )
17957	return an instance of FixedOffset class , created with 2 arguments : offset and name .	return FixedOffset ( offset , name )
12546	if length of bits is not equal to integer 3 ,	if len ( bits ) != 3 :
3910	if locale_dir is false ,	if not locale_dir :
11128	delete first element of bits .	del bits [ : 1 ]
14599	append self.data.day to the value under the self.data.month key of the self.year_days dictionary , substitute the result for doy .	doy = self . year_days [ self . data . month ] + self . data . day
16729	define the function import_by_path with 2 arguments dotted_path and error_prefix set to an empty string..	def import_by_path ( dotted_path , error_prefix = STR ) :
6342	if re.error , renamed to e , is caught ,	except re . error as e :
18379	define the function all_locale_paths .	def all_locale_paths ( ) :
10620	if UnicodeDecodeError exception is caught ,	except UnicodeDecodeError :
9611	derive the class MultiPartParserError from the Exception base class .	class MultiPartParserError ( Exception ) :
7943	if data is an callable object ,	if callable ( data ) :
6114	if values under the STR0 , STR1 and STR2 keys of the options dictionary are false ,	elif not options [ STR0 ] and not options [ STR1 ] and not options [ STR2 ] :
18481	translators_comment_start is None .	translators_comment_start = None
17384	delete frame .	del frame
3531	if Exception , renamed to e , exception is caught ,	except Exception as e :
1631	define lambda function that returns self.file.seek field , use it as an argument for property function , put the result in seek .	seek = property ( lambda self : self . file . seek )
2803	write msg to self.stderr stream .	self . stdout . write ( msg )
17911	return ZERO .	return ZERO
10003	substitute the value under the STR0 key of the self.META dictionary , substitute it for host .	host = self . META [ STR0 ]
1116	define the method __nonzero__ with argument self .	def __nonzero__ ( self ) :
14751	if not ,	else :
12973	call the method parser.compile_filter with an argument second element for bits , substitute the result for parent_name .	parent_name = parser . compile_filter ( bits [ 1 ] )
5758	define the method getvalue with an argument self .	def getvalue ( self ) :
16535	join elements of c into a string , return it .	return STR . join ( c )
6211	call the function signed_value with an argument value , substitute the result for signed_value .	signed_value = force_str ( signed_value )
579	from django.utils.deprecation import RenameMethodsBase and RemovedInDjango19Warning into default name space .	from django . utils . deprecation import RenameMethodsBase , RemovedInDjango19Warning
15067	sort elements of handlers , for every name in result ,	for name in sorted ( handlers ) :
7068	update attrs dictionary with entry : self.max_length converted into a string for STR0 .	attrs . update ( { STR0 : str ( self . max_length ) } )
6973	substitute substitute TextInput for widget .	widget = TextInput
17847	define the function camel_case_to_spaces with an argument value .	def camel_case_to_spaces ( value ) :
8079	return forms .	return forms
3574	if e is not an instance of CommandError class ,	if not isinstance ( e , CommandError ) :
8732	substitute self.fk.name for name .	name = self . fk . name
10741	call the method self.invalid_block_tag with 3 arguments : token , command and parse_until .	self . invalid_block_tag ( token , command , parse_until )
2102	import module smtplib .	import smtplib
4039	for every app_label and app_migrations in result of the method changes.items ,	for app_label , app_migrations in changes . items ( ) :
17149	return value under the name key of the sys.modules dictionary .	return sys . modules [ name ]
13950	convert candidate to a string .	candidate = str ( candidate )
11347	return templatetags_modules .	return templatetags_modules
12675	call the method parser.parse with an argument tuple with an element string STR0 , substitute the result for nodelist .	nodelist = parser . parse ( ( STR0 , ) )
705	import module django.core.checks.compatibility.django_1_7_0 .	import django . core . checks . compatibility . django_1_7_0
10991	remove first 2 and last 2 elements from var .	var = var [ 2 : - 1 ]
49	raise and exception InvalidCacheBackendError with string STR0 as argument , replace STR1 with alias .	raise InvalidCacheBackendError ( STR0 % alias )
3456	if KeyError exception is caught ,	except KeyError :
5908	call the field.rel.to._meta.get_field method with an field.rel.field_name argument , on the result call the method to_python , with field_value as an argument , substitute the result for obj_pk .	obj_pk = field . rel . to . _meta . get_field ( field . rel . field_name ) . to_python ( field_value )
3246	changed is boolean True .	changed = True
14843	from django.utils import six into default name space .	from django . utils import six
1628	define lambda function that returns self.file.readinto field , use it as an argument for property function , put the result in readinto .	readinto = property ( lambda self : self . file . readinto )
13624	from django.utils.translation import trans_real into default namespace .	from django . utils . translation import trans_real
6899	do nothing .	pass
8180	try ,	try :
7286	return data .	return data
2983	return value of the npath function with string STR0 appended to the base_path as argument , and return value of the npath function with string STR1 appended to the base_path as argument , substitute it for args . call the popen_wrapper with args as the argument , assign the result to the output , errors and status , respectively .	output , errors , status = popen_wrapper ( args )
14696	floor the division of delta by integer 100 and delta by integer 400 , sum the two results , multiply integer 6 by it , substitute the result for off .	off = 6 * ( delta // 100 + delta // 400 )
17745	call the function allow_lazy with 2 arguments : get_valid_filename and six.text_type , substitute the result for get_valid_filename .	get_valid_filename = allow_lazy ( get_valid_filename , six . text_type )
5138	if new_path file path exists ,	if path . exists ( new_path ) :
17763	zfile is an instance of GzipFile class , created with 3 arguments : mode set to string STR0 , compresslevel set to integer 6 , and fileobj set to zbuf .	zfile = GzipFile ( mode = STR0 , compresslevel = 6 , fileobj = zbuf )
3692	from django.conf import settings into default namespace .	from django . conf import settings
16811	if ImportError exception is caught ,	except ImportError :
12321	if filepath starts with root ,	if filepath . startswith ( root ) :
7777	return the result of the method field.widget.value_from_datadict called with 3 arguments : self.data , self.files and prefix .	return field . widget . value_from_datadict ( self . data , self . files , prefix )
8729	substitute self._pk_field.name for name .	name = self . _pk_field . name
13642	perform the bitwise or operation on the next 6 operands pyinotify.IN_MODIFY pyinotify.IN_DELETE , pyinotify.IN_ATTRIB , pyinotify.IN_MOVED_FROM , pyinotify.IN_MOVED_TO and pyinotify.IN_CREATE , store the result in mask .	mask = ( pyinotify . IN_MODIFY | pyinotify . IN_DELETE | pyinotify . IN_ATTRIB | pyinotify . IN_MOVED_FROM | pyinotify . IN_MOVED_TO | pyinotify . IN_CREATE )
18663	if other is contained in self.children , return boolean True , otherwise return boolean False .	return other in self . children
10939	for every lookup and arg in args ,	for lookup , arg in args :
12882	if not ,	else :
12716	register.tag decorator ,	@ register . tag
7685	remove entry at the attr key of the declared_fields dictionary .	declared_fields . pop ( attr )
8510	substitute queryset for self.queryset .	self . queryset = queryset
6614	define the function set_script_prefix with an argument prefix .	def set_script_prefix ( prefix ) :
13933	append header to the string STR0 , append the result to the list headerlist .	headerlist . append ( STR0 + header )
12038	otherwise if bytes is smaller than GB ,	elif bytes < GB :
13435	call the method self._archive_cls with an argument file , call the result with an argument file , substitute the result for self._archive .	self . _archive = self . _archive_cls ( file ) ( file )
7276	substitute data.size for file_name .	file_size = data . size
160	define the method delete_many with arguments self , keys and version defaulting to None .	def delete_many ( self , keys , version = None ) :
8219	define the method as_ul with an argument self .	def as_ul ( self ) :
14121	for every dict_ in self.dicts ,	for dict_ in self . dicts :
1182	if not ,	else :
12295	try ,	try :
6721	if message is not None	if message is not None :
4591	from django.core.management.base import AppCommand into default name space .	from django . core . management . base import AppCommand
1629	define lambda function that returns self.file.readline field , use it as an argument for property function , put the result in readline .	readline = property ( lambda self : self . file . readline )
12438	substitute nodelist for self.nodelist .	self . nodelist = nodelist
10567	TOKEN_BLOCK is integer 2	TOKEN_BLOCK = 2
6140	create the object WSGIServer with 2 arguments : get_internal_wsgi_application return value and unpacked dictionary wsgi_opts , call the method run on it .	WSGIServer ( get_internal_wsgi_application ( ) , ** wsgi_opts ) . run ( )
7901	call the method self.as_widget , return the result .	return self . as_widget ( )
3333	yield string STR0 as the result .	yield STR0
17821	convert text without first element to hexadecimal integer , substitute it for c .	c = int ( text [ 1 : ] , 16 )
16639	nonlocal_root is an list with an element root .	nonlocal_root = [ root ]
10513	do nothing .	pass
784	substitute self.obj for model .	model = self . obj
3559	call the method self.stdout.write with an argument string STR0 , substitute STR1 with ser_fmt , fixture_name and return value of the function humanize called with an argument fixture_dir .	self . stdout . write ( STR0 % ( ser_fmt , fixture_name , humanize ( fixture_dir ) ) )
12756	try ,	try :
16084	call the function mark_safe with an argument word , substitute the result for i-th element of words .	words [ i ] = mark_safe ( word )
12849	register is an instance of Library class .	register = Library ( )
4535	call the method parser.add_argument with 3 arguments : string STR1 , default set to DEFAULT_DB_ALIAS , and help set to a string STR2 .	parser . add_argument ( STR1 , default = DEFAULT_DB_ALIAS , help = STR2 )
6654	inverse_match is boolean False .	inverse_match = False
11080	call the method node.get_nodes_by_type with an argument nodetype , extend nodes with it .	nodes . extend ( node . get_nodes_by_type ( nodetype ) )
2294	derive the class SafeMIMEMultipart from the MIMEMixin and MIMEMultipart base class .	class SafeMIMEMultipart ( MIMEMixin , MIMEMultipart ) :
18200	from django.core.exceptions import AppRegistryNotReady into default name space .	from django . core . exceptions import AppRegistryNotReady
9320	call the function mark_safe with an argument string STR1 , substitute the result for selected_html .	selected_html = mark_safe ( STR1 )
11540	msg is an string STR0 , where STR1 is replaced with command , and elements of parse_until joined into a string , separated by string STR2 .	msg = STR0 % ( command , STR1 . join ( parse_until ) )
17275	if PY3 is true ,	if PY3 :
5668	if self.use_natural_foreign_keys is true and field.rel.to has an STR0 attribute ,	if self . use_natural_foreign_keys and hasattr ( field . rel . to , STR0 ) :
5800	attrs is a dictionary containing 1 entry : return value of the smart_text function with argument obj._meta for STR0 .	attrs = { STR0 : smart_text ( obj . _meta ) }
1003	return the string STR0 , replace STR1 with self .	return STR0 % self
15277	evaluate the function bytes with the argument s , and return the result .	return bytes ( s )
7556	substitute path , match and recursive for self.path , self.match and self.recursive .	self . path , self . match , self . recursive = path , match , recursive
12292	define the method render with 2 arguments : self and context .	def render ( self , context ) :
11399	yield d .	yield d
9645	from django.http import QueryDict into default namespace .	from django . http import QueryDict
8333	if localized_fields equals ALL_FIELDS , or if localized_fields is true and f.name is contained in localized_fields ,	if localized_fields == ALL_FIELDS or ( localized_fields and f . name in localized_fields ) :
13310	increment i by integer 1 .	i += 1
10391	if expires is false ,	if not expires :
15236	return the result of the call to the function force_text , with s , encoding , string_only and errors as arguments .	return force_text ( s , encoding , strings_only , errors )
16844	append digit to int_part_gd .	int_part_gd += digit
2034	raise an exception .	raise
8843	return self._queryset .	return self . _queryset
8478	call the function with 7 arguments : self , self.instance , self._meta.fields , fail_message , commit , self._meta.exclude , and construct as boolean False , return the result .	return save_instance ( self , self . instance , self . _meta . fields , fail_message , commit , self . _meta . exclude , construct = False )
6775	raise a ValueError exception with an argument STR0 .	raise ValueError ( STR0 )
12879	if block_context is None ,	if block_context is None :
5931	call the method apps.get_model with an argument model_identifier , return the result .	return apps . get_model ( model_identifier )
13168	self._post_render_callbacks is an empty list .	self . _post_render_callbacks = [ ]
3954	join into a file path : django_dir , STR0 , STR1 , locale , STR2 and string STR3 appended to domain , substitute the result for django_po .	django_po = os . path . join ( django_dir , STR0 , STR1 , locale , STR2 , STR3 % domain )
9726	call the function exhaust with an argument stream .	exhaust ( stream )
17951	define the function get_fixed_timezone with an argument offset .	def get_fixed_timezone ( offset ) :
13191	property decorator ,	@ property
8090	if i is greater than , or equal to the result of the call to the method self.initial_form_count ,	if i >= self . initial_form_count ( ) and i >= self . min_num :
14949	match rest string with self.WORD_PATTERN regex , substitute the result for m .	m = self . WORD_PATTERN . match ( rest )
9760	return self.position .	return self . position
17638	if space equals integer 0 ,	if space == 0 :
13086	raise an TemplateDoesNotExist exception with an argument name .	raise TemplateDoesNotExist ( name )
4164	raise CommandError exception with STR0 , with STR1 substituted for migration_name and app_label , respectively , as arguments .	raise CommandError ( STR0 % ( migration_name , app_label ) )
2063	if self.file_path file is not writable ,	if not os . access ( self . file_path , os . W_OK ) :
11577	from functools import wraps into default name space .	from functools import wraps
8435	define the method clean with an argument self .	def clean ( self ) :
17095	substitute SafeText for SafeUnicode .	SafeUnicode = SafeText
14304	define the method get with 3 arguments : self , key and default set to None .	def get ( self , key , default = None ) :
18022	define the function make_aware with 2 arguments : value and timezone .	def make_aware ( value , timezone ) :
7156	if self.max_digits is not None and self.decimal_places is not None and whole_digits is grater than the difference of ,	if ( self . max_digits is not None and self . decimal_places is not None and whole_digits > ( self . max_digits - self . decimal_places ) ) :
13526	define the method extract with 2 arguments self and to_path .	def extract ( self , to_path ) :
12981	if length of bits is lesser than integer 2 ,	if len ( bits ) < 2 :
17843	call the method unicodedata.normalize with 2 arguments : string STR0 and value , encode the result with 2 arguments : string STR1 , and string STR2 , call the method decode on the result with an argument string STR3 , substitute the result for value .	value = unicodedata . normalize ( STR0 , value ) . encode ( STR1 , STR2 ) . decode ( STR3 )
18421	if check_path is true ,	if check_path :
12739	call the method parser.delete_first_token .	parser . delete_first_token ( )
12367	define the method __init__ with 2 arguments : self and tagtype .	def __init__ ( self , tagtype ) :
12848	from django.utils import six into default name space .	from django . utils import six
5982	substitute sysid for self.sysid .	self . sysid = sysid
2074	fname is a string STR0 , with STR1 replaced by timestamp and absolute value of the return value of the function id with argument self , respectively .	fname = STR0 % ( timestamp , abs ( id ( self ) ) )
1242	__all__ is a list containing a string STR0 .	__all__ = [ STR0 ]
1066	endless loop ,	while True :
9265	derive the class DateTimeBaseInput from the TextInput base class .	class DateTimeBaseInput ( TextInput ) :
14663	define the method strftime with 2 arguments : self and fmt .	def strftime ( self , fmt ) :
1783	for every func in self.response_fixes ,	for func in self . response_fixes :
12538	if token.contents equals string STR0 ,	if token . contents == STR0 :
6213	raise an BadSignature exception with an argument string STR1 , where STR2 is replaced by self.sep .	raise BadSignature ( STR1 % self . sep )
5970	substitute name for self.name .	self . name = name
15847	if self._wrapped is empty ,	if self . _wrapped is empty :
4217	wrte to the standard output result of the call to the method self.style.MIGRATE_SUCCESS with string STR0 as a argument .	self . stdout . write ( self . style . MIGRATE_SUCCESS ( STR0 ) )
9486	output is an empty list .	output = [ ]
17020	for every i in range of integers from 0 to length of result , not included ,	for i in range ( len ( result ) ) :
12507	split into two parts token.contents by None , substitute the parts for _ and rest , respectively .	_ , rest = token . contents . split ( None , 1 )
10454	define the method tell with an argument self .	def tell ( self ) :
15379	return length of self.items .	return len ( self . items )
18138	call the function lazy with 2 arguments : _string_concat and six.text_type , substitute the result for string_concat .	string_concat = lazy ( _string_concat , six . text_type )
7570	join root and f into a file , substitute it for f .	f = os . path . join ( root , f )
90	return key_func .	return key_func
6187	prefix the base64d with a STR0 character .	base64d = STR0 + base64d
4585	if app_config.models_module is None ,	if app_config . models_module is None :
1687	return view	return view
556	define the method _delete with arguments self and key .	def _delete ( self , key ) :
12719	if length of bits equals integer 4 ,	if len ( bits ) == 4 :
12414	try ,	try :
7771	return the result of the method self._html_output , called with 5 arguments : normal_row to a string , STR1 , error_row set to a a string STR2 , row_ender set to a string STR3 , help_text_html set to a string , < span class= STR0 > % s < /span > ' and errors_on_separate_row set to boolean True .	return self . _html_output ( normal_row = STR1 , error_row = STR2 , row_ender = STR3 , help_text_html = STR4 , errors_on_separate_row = True )
684	decorator cached_property ,	@ cached_property
13514	open filename file in write mode , with the file descriptor renamed to outfile , perform ,	with open ( filename , STR0 ) as outfile :
5204	replace STR1 in string STR0 , with display_url , write it to self.stdout stream .	self . stdout . write ( STR0 % display_url )
17757	define the function phone2numeric with an argument phone .	def phone2numeric ( phone ) :
15160	otherwise if klass is a subclass of logging.handlers.SMTPHandler and string STR0 is contained in config ,	elif issubclass ( klass , logging . handlers . SMTPHandler ) and STR0 in config :
8500	parent is a tuple with 2 arguments : form.Meta and object .	parent = ( form . Meta , object )
3439	if first element of new_name is digit ,	if new_name [ 0 ] . isdigit ( ) :
3623	append app_dir to dirs list .	dirs . append ( app_dir )
5780	from django.utils.encoding import smart_text into default name space .	from django . utils . encoding import smart_text
18078	define the method __mod__ with 2 arguments : self and rhs .	def __mod__ ( self , rhs ) :
8460	call the function construct_instance with 4 arguments : self , self.instance , opts.fields and construct_instance_exclude , substitute the result for self.instance .	self . instance = construct_instance ( self , self . instance , opts . fields , construct_instance_exclude )
14529	if self.timezone is true and call to the method self.timezone.dst with an argument self.data , evaluates to true ,	if self . timezone and self . timezone . dst ( self . data ) :
1164	execute regardless of the exception being raised ,	finally :
13836	if cc contains item STR0 and kwargs contains item STR1 ,	elif STR0 in cc and STR1 in kwargs :
18563	call the method one_percent_re.sub with 2 arguments : string STR0 and g , substitute the result for .	g = one_percent_re . sub ( STR0 , g )
13182	otherwise is template is six.string_types instance ,	elif isinstance ( template , six . string_types ) :
9054	define the method render_css with an argument self .	def render_css ( self ) :
11627	if every input_val in special_floats ,	if input_val in special_floats :
18386	call the function all_locale_paths , for every path is the result ,	for path in all_locale_paths ( ) :
12111	get the value under the STR0 key of the context dictionary , if it exists substitute the result for csrf_token , if not csrf_token is None .	csrf_token = context . get ( STR0 , None )
4245	for every model in model_list ,	for model in model_list :
17153	define the method __get__ with 3 arguments : self , obj and tp .	def __get__ ( self , obj , tp ) :
1028	convert self.name into an boolean , return it .	return bool ( self . name )
11750	define the function urlizetrunc with 3 arguments value , limit and autoescape set to None .	def urlizetrunc ( value , limit , autoescape = None ) :
17165	if new is None ,	if new is None :
16333	if ValueError exception is caught ,	except ValueError :
5376	if self.number is greater than integer 1 , return boolean True , otherwise return boolean False .	return self . number > 1
14927	define the method resolve with 2 arguments : self and s .	def resolve ( self , s ) :
970	substitute params for self.params .	self . params = params
2572	try ,	try :
561	try ,	try :
1970	if connection exists dont change it , if not call the get_connection function with username set to auth_user , password set to auth_password , fail_silently set to fail_silently as arguments , assign the result to connection .	connection = connection or get_connection ( username = auth_user , password = auth_password , fail_silently = fail_silently )
17688	if html is true ,	if html :
11185	define the method get_resolved_arguments with 2 arguments : self and context .	def get_resolved_arguments ( self , context ) :
13805	import hashlib module .	import hashlib
18496	call the function endblock_re.match with an argument t.contents , substitute the result for endbmatch .	endbmatch = endblock_re . match ( t . contents )
16326	define the function _resolve_name with 3 arguments : name , package and level .	def _resolve_name ( name , package , level ) :
5880	skip this loop iteration .	continue
11833	return an empty string .	return STR
3435	append string STR0 to field_notes .	field_notes . append ( STR0 )
2887	create lambda identity function which returns x for input parameter x , return the function .	return lambda x : x
9513	media is a property object of the current class , with _get_media as getter function .	media = property ( _get_media )
15693	if mem_args is contained in cache ,	if mem_args in cache :
9844	chunks is an empty list .	chunks = [ ]
2899	call the method parser.add_argument with 5 arguments : string STR0 , string STR1 , action set to string STR2 , dest set to string STR3 and help set to string STR4 .	parser . add_argument ( STR0 , STR1 , action = STR2 , dest = STR3 , help = STR4 )
293	call the self.validate_key method with argument key .	self . validate_key ( key )
1498	define the method _set_name with arguments self and name .	def _set_name ( self , name ) :
16638	root is a list with elements : root , root , None and None .	root [ : ] = [ root , root , None , None ]
14014	if not ,	else :
11741	if safe is not None ,	if safe is not None :
421	call the function self._key_to_file with key and version as arguments , substitute it for fname .	fname = self . _key_to_file ( key , version )
17809	call the function allow_lazy with 2 arguments : javascript_quote and six.text_type , substitute the result for javascript_quote .	javascript_quote = allow_lazy ( javascript_quote , six . text_type )
3053	from django.db import connections and DEFAULT_DB_ALIAS into default name space .	from django . db import connections , DEFAULT_DB_ALIAS
12108	return an empty string ,	return STR
1700	try ,	try :
9803	substitute chunk_size for self.chunk_size .	self . chunk_size = chunk_size
16106	if not ,	else :
8408	call the method __init__ from the base class of the class BaseModelForm , with 8 arguments : data , files , auto_id , prefix , object_data , error_class , label_suffix and empty_permitted .	super ( BaseModelForm , self ) . __init__ ( data , files , auto_id , prefix , object_data , error_class , label_suffix , empty_permitted )
3450	return new_name , field_params and field_notes .	return new_name , field_params , field_notes
4873	help is a string STR0 .	help = STR0
9297	if value is an instance of six.string_types class ,	if isinstance ( value , six . string_types ) :
11694	if TypeError or ValueError exceptions are caught ,	except ( ValueError , TypeError ) :
10491	delete the value under the STR0 key of the self dictionary .	del self [ STR0 ]
10835	return s .	return s
3460	substitute field_type for field_type and new_params , respectively .	field_type , new_params = field_type
16816	from django.utils.safestring import mark_safe into default name space .	from django . utils . safestring import mark_safe
1180	if size of c_ulong does not equals to size of c_void_p ,	if sizeof ( c_ulong ) != sizeof ( c_void_p ) :
10795	insert token at the beginning of self.tokens .	self . tokens . insert ( 0 , token )
10859	increment i by integer 1 ,	i += 1
31	call the function params.update with argument kwargs .	params . update ( kwargs )
5158	write string STR0 to self.stdout stream .	self . stdout . write ( STR0 )
2680	define the method usage with arguments self and subcommand .	def usage ( self , subcommand ) :
3695	substitute STR0 is string STR1 with self.file and self.dirpath , write it to command.stdout .	command . stdout . write ( STR0 % ( self . file , self . dirpath ) )
10133	if IOError , renamed to e , exception is caught ,	except IOError as e :
5649	return data .	return data
3101	call the method parser.add_argument with 6 arguments : string STR0 , string STR1 , action is string STR2 , dest is string STR3 , default is boolean False and help is a string STR4 .	parser . add_argument ( STR0 , STR1 , action = STR2 , dest = STR3 , default = False , help = STR4 )
9335	if not ,	else :
6084	call the fastcgi_help function , return the result .	return fastcgi_help ( )
15328	call the method datetime_safe.new_datetime with an argument date , substitute the result for date .	date = datetime_safe . new_datetime ( date )
6205	call the function base64_hmac with 3 arguments : string STR0 appended to self.salt , value and self.key , substitute the result for signature .	signature = base64_hmac ( self . salt + STR0 , value , self . key )
17195	if new_mod is None ,	if new_mod is None :
8174	call the method self.error_class , substitute the result for self._non_form_errors .	self . _non_form_errors = self . error_class ( )
4352	define the method usage with 2 argument : self and subcommand .	def usage ( self , subcommand ) :
5253	call the function os.stat with an argument filename , substitute the result for st .	st = os . stat ( filename )
5890	call the function getInnerText with argument field_node , on the result call the method strip , use the result as an argument for the call to the field.to_python method , substitute the result for value .	value = field . to_python ( getInnerText ( field_node ) . strip ( ) )
15391	s is an instance of StringIO class .	s = StringIO ( )
12474	if name is not contained in parser._namedCycleNodes ,	if name not in parser . _namedCycleNodes :
5786	if value under the STR0 key of the options dictionary exists and is not None ,	if self . options . get ( STR0 , None ) is not None :
10569	TOKEN_MAPPING is a dictionary with 4 initial entries : STR0 for TOKEN_TEXT , STR1 for TOKEN_VAR , STR2 for TOKEN_BLOCK , and STR3 for TOKEN_COMMENT .	TOKEN_MAPPING = { TOKEN_TEXT : STR0 , TOKEN_VAR : STR1 , TOKEN_BLOCK : STR2 , TOKEN_COMMENT : STR3 , }
11738	decorator stringfilter ,	@ stringfilter
2523	substitute value under the subcommand key of the commands dictionary for app_name .	app_name = commands [ subcommand ]
9560	in encoded , replace all the occurrences of unicode character STR0 with STR2 character and STR1 with STR3 characters .	encoded = encoded . replace ( STR0 , STR1 ) . replace ( STR2 , STR3 )
13518	call the method extracted.close .	extracted . close ( )
2155	self.connection is None .	self . connection = None
17619	from django.utils.safestring import mark_safe into default name space .	from django . utils . safestring import mark_safe
4606	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
1839	break the execution of the smallest enclosing loop .	break
9677	call the function base64.b64decode with an argument raw_data , substitute the result for data .	data = base64 . b64decode ( raw_data )
4414	if not ,	else :
11526	call the method self.source_error with 2 arguments : token.source and msg , return the result .	return self . source_error ( token . source , msg )
12418	if VariableDoesNotExist exception is caught ,	except VariableDoesNotExist :
11996	return value , if it is None return arg .	return value or arg
6197	call the function zlib.decompress with an argument data , substitute the result for data .	data = zlib . decompress ( data )
8694	substitute save_as_new for self.save_as_new .	self . save_as_new = save_as_new
14343	substitute _iterlists for lists .	lists = _iterlists
3779	get the value under the STR0 key of the options dictionary , substitute it for self.domain .	self . domain = options . get ( STR0 )
6203	call the force_str function with an argument : salt , if it exists , if not with a string STR0 , with STR1 replaced by , self.__class__.__module__ and self.__class__.__name__ , respectively , substitute the result for self.salt .	self . salt = force_str ( salt or STR0 % ( self . __class__ . __module__ , self . __class__ . __name__ ) )
14531	if not ,	else :
6837	from django.utils.dates import MONTHS into default name space .	from django . utils . dates import MONTHS
3244	if found is true ,	if found :
17846	call the function allow_lazy with 2 arguments : slugify and six.text_type , substitute the result slugify .	slugify = allow_lazy ( slugify , six . text_type )
17198	if new_attr is None ,	if new_attr is None :
12622	call the method parser.compile_filter with second element of bits as an argument , substitute the result for filepath .	filepath = parser . compile_filter ( bits [ 1 ] )
17417	if kwargs is true ,	if kwargs :
6249	from django.utils import six and lru_cache into default name space .	from django . utils import six , lru_cache
6264	join self.namespaces into a string separated with character STR0 , substitute it for self.namespace .	self . namespace = STR0 . join ( self . namespaces )
2317	if bcc is not an six.string_types instance raise an error with message string STR1 .	assert not isinstance ( bcc , six . string_types ) , STR1
5092	make a directory top_dir .	os . makedirs ( top_dir )
11528	e is an instance of TemplateSyntaxError class , created with an argument msg .	e = TemplateSyntaxError ( msg )
8862	define the method to_python with 2 arguments : self and value .	def to_python ( self , value ) :
14848	raise an ValueError exception with an argument string STR0 formated with s .	raise ValueError ( STR0 % s )
17587	definition is an empty dictionary ,	definition = { }
18339	get translation_function attribute of the object _default , call the result with an argument eol_message , substitute the result for result .	result = getattr ( _default , translation_function ) ( eol_message )
14894	if value is not contained in result ,	if value is not result :
14041	call the method dig1.digest , use the result as an argument for the call to the function dig2.update .	dig2 . update ( dig1 . digest ( ) )
11054	do nothing .	pass
13205	substitute self.rendered_content for self.content .	self . content = self . rendered_content
10926	if settings.TEMPLATE_STRING_IF_INVALID is true ,	if settings . TEMPLATE_STRING_IF_INVALID :
15916	if roots is false ,	if not roots :
10274	define the method validate_host with 2 arguments : host and allowed_hosts .	def validate_host ( host , allowed_hosts ) :
1791	from io import BytesIO into default name space .	from io import BytesIO
12950	decorator method register.tag with an argument STR0 ,	@ register . tag ( STR0 )
16026	define the function smart_urlquote with an argument url .	def smart_urlquote ( url ) :
11583	from django.utils.encoding import force_text and iri_to_uri into default name space .	from django . utils . encoding import force_text , iri_to_uri
2595	if subcommand equals to a string STR0 .	if subcommand == STR0 :
1151	if data is empty .	if not data :
9536	from django.http.cookie import SimpleCookie and parse_cookie into default name space .	from django . http . cookie import SimpleCookie , parse_cookie
12336	open filepath file in read mode , with file descriptor as fp , perform ,	with open ( filepath , STR0 ) as fp :
14686	add j and integer 1 , substitute the result for i .	i = j + 1
10308	self._closable_objects is an empty list .	self . _closable_objects = [ ]
17713	increment current_len by integer 1 ,	current_len += 1
12084	from django.template.base import Node , NodeList , Template , Context , Library , TemplateSyntaxError , VariableDoesNotExist , validTemplateLibrary , BLOCK_TAG_START , BLOCK_TAG_END , VARIABLE_TAG_START , VARIABLE_TAG_END , SINGLE_BRACE_START , SINGLE_BRACE_END , COMMENT_TAG_START , COMMENT_TAG_END , VARIABLE_ATTRIBUTE_SEPARATOR , get_library , token_kwargs , kwarg_re and render_value_in_context .	from django . template . base import ( Node , NodeList , Template , Context , Library , TemplateSyntaxError , VariableDoesNotExist , InvalidTemplateLibrary , BLOCK_TAG_START , BLOCK_TAG_END , VARIABLE_TAG_START , VARIABLE_TAG_END , SINGLE_BRACE_START , SINGLE_BRACE_END , COMMENT_TAG_START , COMMENT_TAG_END , VARIABLE_ATTRIBUTE_SEPARATOR , get_library , token_kwargs , kwarg_re , render_value_in_context )
12334	return an empty string ,	return STR
9562	put the double qoutes around encoded .	encoded = STR + encoded + STR
7291	if self.required is false ,	if not self . required :
9313	append string STR0 to output .	output . append ( STR0 )
12632	raise an TemplateSyntaxError exception with an argument string STR0 , where STR1 is replaced with taglib and e .	raise TemplateSyntaxError ( STR0 % ( taglib , e ) )
963	for every message is message ,	for message in message :
7426	if ValueError , TypeError or ValidationError exception is caught ,	except ( ValueError , TypeError , ValidationError ) :
5791	call the method self.xml.startElement with 2 arguments , string STR0 and a dictionary containing 1 element : STR1 for STR2 .	self . xml . startElement ( STR0 , { STR1 : STR2 } )
8578	errors is an empty list .	errors = [ ]
16776	for every finder in sys.meta_path ,	for finder in sys . meta_path :
3004	get value under the STR0 key of the options dictionary , substitute it for db .	db = options . get ( STR0 )
18788	get the absolute path of the __file__ , repo_dir is name of the directory two leveles above it .	repo_dir = os . path . dirname ( os . path . dirname ( os . path . abspath ( __file__ ) ) )
14230	put a tuple with 2 elements : k and value under k key of self dictionary into a list , for every k in self.keyOrder , return resulting list .	return [ ( k , self [ k ] ) for k in self . keyOrder ]
8564	sum results of method self.save_existing_objects called with an argument commit and of method self.save_new_objects , called with an argument commit , return the result .	return self . save_existing_objects ( commit ) + self . save_new_objects ( commit )
2395	attachment is an instance of a class SafeMIMEMessage , created with the arguments content and subtype .	attachment = SafeMIMEMessage ( content , subtype )
1627	define lambda function that returns self.file.read field , use it as an argument for property function , put the result in read .	read = property ( lambda self : self . file . read )
338	call the method self.validate_key with argument key .	self . validate_key ( key )
10505	define the method __init__ with 4 arguments : self , permitted_methods , unpacked list args and unpacked dictionary kwargs .	def __init__ ( self , permitted_methods , * args , ** kwargs ) :
6195	call the method b64_decode with an argument base64 , substitute the result for data .	data = b64_decode ( base64d )
15369	to_unicode is an lambda function with an argument s , result is the result of the function force_text ,	def add_item ( self , title , link , description , author_email = None , author_name = None , author_link = None , pubdate = None , comments = None , unique_id = None , unique_id_is_permalink = None , enclosure = None , categories = ( ) , item_copyright = None , ttl = None , updateddate = None , ** kwargs ) :
8034	substitute initial_id for self.auto_id .	self . initial = initial
10072	del self._post	del self . _post
4478	for every ip in tuple containing 3 elements : self._ipython , self._ipython_pre_100 and self._ipython_pre_011 ,	for ip in ( self . _ipython , self . _ipython_pre_100 , self . _ipython_pre_011 ) :
11672	for every i and line in enumerated iterable lines ,	for i , line in enumerate ( lines ) :
9371	substitute name for self.name .	self . name = name
12163	substitute is_reversed for self.is_reversed .	self . is_reversed = is_reversed
11013	define the method _resolve_lookup with 2 arguments : self and context .	def _resolve_lookup ( self , context ) :
16996	return boolean True .	return True
17355	define the function b with an argument s .	def b ( s ) :
655	if self.LibraryValueNotFoundException exception is caught ,	except self . LibraryValueNotFoundException :
3301	if not ,	else :
8892	call the method self.queryset.none , return the result .	return self . queryset . none ( )
12590	call the method parser.parse with an argument tuple with 3 elements strings STR0 , STR1 and STR2 , substitute the result for nodelist .	nodelist = parser . parse ( ( STR0 , STR1 , STR2 ) )
6753	return boolean False .	return False
14579	if not ,	else :
16538	import module warnings .	import warnings
17652	define the method add_truncation_text with 3 arguments : self , text and truncate set to None .	def add_truncation_text ( self , text , truncate = None ) :
15541	if value under the STR0 key of the item dictionary is not None ,	if item [ STR0 ] is not None :
15704	if instance is None ,	if instance is None :
18592	format string STR0 , with fmatch , write it to out .	out . write ( STR0 % cmatch )
2760	get the value under the STR0 key of the options dictionary , if it doesnt exists use the DEFAULT_DB_ALIAS to address an element from the connections list , substitute it for connection .	connection = connections [ options . get ( STR0 , DEFAULT_DB_ALIAS ) ]
11565	if Exception , renamed to e , exception is caught ,	except Exception as e :
9782	self._unget_history is an empty list .	self . _unget_history = [ ]
18084	if not ,	else :
6043	otherwise if first element of second row of args equals a string STR0 ,	elif args [ 1 ] [ 0 ] == STR0 :
6308	if not ,	else :
11349	get the value under the library_name key of the libraries dictionary , if it exists , substitute it for lib , if not , lib is None .	lib = libraries . get ( library_name , None )
17229	_urllib_error_moved_attributes is a list with 3 elements : result of the call to the function MovedAttribute with 3 arguments : strings STR0 , STR1 , STR2 , result of the call to the function MovedAttribute with 3 arguments : strings STR3 , STR4 , STR5 and result of the call to the function MovedAttribute with 3 arguments : strings STR6 , STR7 , STR8 .	_urllib_error_moved_attributes = [ MovedAttribute ( STR0 , STR1 , STR2 ) , MovedAttribute ( STR3 , STR4 , STR5 ) , MovedAttribute ( STR6 , STR7 , STR8 ) , ]
8748	fks_to_parent is a list containing f , for every f in opts.fields if f.name equals fk_name .	fks_to_parent = [ f for f in opts . fields if f . name == fk_name ]
1079	for every line in chunk_buffer ,	for line in chunk_buffer :
12349	return output .	return output
1457	close the file object .	self . file . close ( )
4469	define the method _ipython_pre_100 with an argument self .	def _ipython_pre_100 ( self ) :
545	call the method self._expire_info.get with key and integer -1 as arguments , substitute the result for exp .	exp = self . _expire_info . get ( key , - 1 )
14456	define the method B with an argument self .	def B ( self ) :
14005	if hashlib had an instance STR0 ,	if hasattr ( hashlib , STR0 ) :
18278	join app_config.path and string STR0 into a file path , substitute it for localedir .	localedir = os . path . join ( app_config . path , STR0 )
9285	define the method render with 4 arguments : self , name , value and attrs set to None .	def render ( self , name , value , attrs = None ) :
17105	if s is an instance of SafeData or EscapeData ,	if isinstance ( s , ( SafeData , EscapeData ) ) :
9917	substitute FIELD for TYPE ,	TYPE = FIELD
14022	if dklen is false ,	if not dklen :
4612	output_transaction is boolean True .	output_transaction = True
3326	raise an CommandError exception with an argument STR0 .	raise CommandError ( STR0 )
6030	define the __init__ method with 3 arguments : self , unpacked list args and unpacked dictionary **kwargs .	def __init__ ( self , * args , ** kwargs ) :
18220	decorator function receiver with an argument setting_changed ,	@ receiver ( setting_changed )
12087	from django.utils.deprecation import RemovedInDjango20Warning into default name space .	from django . utils . deprecation import RemovedInDjango20Warning
12508	call the method parser.compile_filter with an argument string STR0 , where STR1 is replaced with rest , substitute the result for filter_expr .	filter_expr = parser . compile_filter ( STR0 % ( rest ) )
12293	for every condition and nodelist in self.conditions_nodelists ,	for condition , nodelist in self . conditions_nodelists :
13577	FILE_MODIFIED is integer 1 .	FILE_MODIFIED = 1
13742	raise an SystemRestart exception ,	raise SystemRestart
2902	if value under the STR0 key of options dictionay is true ,	if options . get ( STR0 ) :
7042	call the method self._coerce with an argument data , substitute the result for data .	data = self . _coerce ( data )
1623	define lambda function that returns self.file.fileno field , use it as an argument for property function , put the result in fileno .	fileno = property ( lambda self : self . file . fileno )
7816	call the method self._post_clean .	self . _post_clean ( )
6116	if not ,	else :
1126	return the first element of the return value of the call to the self._det_image_dimensions method .	return self . _get_image_dimensions ( ) [ 0 ]
5797	if STR0 is not an attribute of obj ,	if not hasattr ( obj , STR0 ) :
4985	define the function sql_indexes with 3 arguments : app_config , style and connection .	def sql_indexes ( app_config , style , connection ) :
17120	substitute str for string_types .	string_types = str ,
7626	return an empty string .	return STR
2937	program_options is list containing string STR0 .	program_options = [ STR0 ]
638	define the method incr with self , key , delta defaulting to integer 1 and version defaulting to None as arguments .	def incr ( self , key , delta = 1 , version = None ) :
10294	from django.utils import six and timezone into default name space .	from django . utils import six , timezone
13473	return path an an empty string .	return path , STR
565	define the method delete with self class instance , key and version defaulting to None as arguments .	def delete ( self , key , version = None ) :
12139	output is an list with initial elements generated with call to the function pformat with an argument val , for every val in context .	output = [ pformat ( val ) for val in context ]
9692	try ,	try :
16044	return a string STR0 formated with elements of x up to the index equal to the maximum value between integer 0 and 3 subtracted from limit .	return STR0 % x [ : max ( 0 , limit - 3 ) ]
2125	return boolean False ,	return False
2152	return nothing .	return
14157	return boolean True .	return True
16541	from django.core.mail import get_connection into default name space .	from django . core . mail import get_connection
18154	from django.conf import settings into default name space .	from django . conf import settings
6109	from django.core.servers.basehttp import get_internal_wsgi_application into default name space .	from django . core . servers . basehttp import get_internal_wsgi_application
7322	call the function six.reraise with 3 arguments : ValidationError , ValidationError created with 2 arguments : value under the STR0 key of the self.error_messages dictionary and code set to a string STR1 , and third element of the return value of the function sys.exc_info .	six . reraise ( ValidationError , ValidationError ( self . error_messages [ STR0 ] , code = STR1 , ) , sys . exc_info ( ) [ 2 ] )
15526	if value under the STR0 key of the item dictionary is not None ,	if item [ STR0 ] is not None :
957	for every field , messages in return value of the message.items method ,	for field , messages in message . items ( ) :
17960	use global variable _localtime .	global _localtime
2521	call the function get_commands , substitute it for commands .	commands = get_commands ( )
3339	yield string STR0 as the result .	yield STR0
2025	call the method self.open , substitute the result for stream_created .	stream_created = self . open ( )
11330	return mod.register .	return mod . register
14396	substitute complain for append .	append = complain
11508	substitute end for upto .	upto = end
10845	increment i by one .	i += 1
17700	return an empty string .	return STR
13365	import module tempfile .	import tempfile
146	define the method incr with 4 arguments , self class instance , key , delta defaulting to integer 1 and version defaulting to None .	def incr ( self , key , delta = 1 , version = None ) :
15544	call the method handler.addQuickElement with 3 arguments : string STR0 , an empty string and a dictionary with an entry : cat for STR1 .	handler . addQuickElement ( STR0 , STR , { STR1 : cat } )
5671	m2m_value is a lambda function with an argument value , return value is the result of the function smart_text called with arguments :	m2m_value = lambda value : smart_text ( value . _get_pk_val ( ) , strings_only = True )
14794	return response .	return response
15061	for every name in filters ,	for name in filters :
8553	define the method save_new with 3 arguments : self , form and commit set to boolean True .	def save_new ( self , form , commit = True ) :
14023	substitute hlen for dklen .	dklen = hlen
4749	write string STR0 to self.stdout .	self . stdout . write ( STR0 )
17471	_assertRegex is a strnig STR0 .	_assertRegex = STR0
8094	call the method self.add_fields with arguments form and i ) .	self . add_fields ( form , i )
7435	default_error_messages is an dictionary with an entry : return value of the function _ called with an argument string , STR0 for STR1 , and return value of the function _ called with an argument string STR2 for STR3 .	default_error_messages = { STR0 : _ ( STR1 ) , STR2 : _ ( STR3 ) , }
9056	return the result of the call to the function chain , with an argument unpacked list , containing the result of the function , format_html called with 3 arguments : string STR4 , return value of the function self.absolute_path called with an argument path and medium , for every medium in media and for every path in value under the medium key of the self._css dictionary .	return chain ( * [ [ format_html ( STR4 , self . absolute_path ( path ) , medium ) for path in self . _css [ medium ] ] for medium in media ] )
15494	call the method handler.addQuickElement with 2 arguments : string STR0 and value under the STR1 key of the self.feed dictionary .	handler . addQuickElement ( STR0 , self . feed [ STR1 ] )
15244	return s .	return s
9270	substitute format for self.format if format is true , if not self.format is None .	self . format = format if format else None
4560	from django.core.management.sql import sql_delete into default name space .	from django . core . management . sql import sql_delete
5951	define the method entity_decl with arguments self , name , is_parameter_entity , value , base , sysid , pubid and notation_name .	def entity_decl ( self , name , is_parameter_entity , value , base , sysid , pubid , notation_name ) :
9128	needs_multipart_form is boolean False .	needs_multipart_form = False
9245	format self.template_with_clear with substitutions , substitute the result for value under the STR0 key of , substitutions dictionary .	substitutions [ STR0 ] = self . template_with_clear % substitutions
14909	call the method tuple.__getitem__ with 2 arguments : self and key , substitute the result for value .	value = tuple . __getitem__ ( self , key )
16646	otherwise if maxsize is None ,	elif maxsize is None :
837	return errors .	return errors
1645	from django.conf import settings into default name space .	from django . conf import settings
18631	sort result in reversed order by the key as lambda function with an argument k and reeturn value second element of k .	result . sort ( key = lambda k : k [ 1 ] , reverse = True )
3858	substitute STR1 in string STR0 with f.file and f.dirpath , write it to self.stdout .	self . stdout . write ( STR0 % ( f . file , f . dirpath ) )
383	define the method get with 5 arguments , self class instance , key , default set to None and version set to None .	def get ( self , key , default = None , version = None ) :
12476	get the index name , of the parser._namedCycleNodes , return the result .	return parser . _namedCycleNodes [ name ]
5305	do nothing .	pass
4685	from django.db.migrations.executor import MigrationExecutor into default name space .	from django . db . migrations . executor import MigrationExecutor
16667	substitute value under the PREV key of the root dictionary for last .	last = root [ PREV ]
5335	define the method _get_page with self class instance , unpacked list args and unpacked dictionary kwargs as arguments .	def _get_page ( self , * args , ** kwargs ) :
9688	call the function unescape_entities with an argument file_name , use the result as an argument for the call to the self.IE_sanitize , method , substitute the result for file_name .	file_name = self . IE_sanitize ( unescape_entities ( file_name ) )
4971	if only_django ,	if only_django :
8950	call the function format_html_join twice , first time with 3 elements : an empty string , string STR1 and sorted return value of the items of the attrs dictionary , and second time with 3 arguments : an empty string , string STR2 , and sorted list of boolean_attrs elements , concatenate the results and return the resulting list .	return ( format_html_join ( STR , STR1 , sorted ( attrs . items ( ) ) ) + format_html_join ( STR , STR2 , sorted ( boolean_attrs ) ) )
13113	from django.utils import six into default name space .	from django . utils import six
14632	call the method match.groupdict , substitute the result for kw .	kw = match . groupdict ( )
9555	substitute http_cookies.Morsel for Morsel .	Morsel = http_cookies . Morsel
5295	add ext to f , substitute the result for fext .	fext = f + ext
4901	import module re .	import re
9206	replace STR0 in string STR1 with id_ and i , substitute the result for input_attrs dictionary value under the STR2 key .	input_attrs [ STR0 ] = STR1 % ( id_ , i )
12786	if args is true ,	if args :
12341	try ,	try :
8849	call the function smart_text with an argument obj , return the result .	return smart_text ( obj )
16479	define the function literals with 3 arguments : choices , prefix set to an empty string and suffix set to an empty string .	def literals ( choices , prefix = STR , suffix = STR ) :
4838	call the run_from_argv function from the base class of the Command class with argv as a argument , .	super ( Command , self ) . run_from_argv ( argv )
4013	substitute ' % s\ in string STR0 , with name_str , use it as an argument to throw an CommandError exception .	raise CommandError ( STR0 % name_str )
4960	call the method references_to_delete.setdefault with arguments : r.rel.to and an empty list , append to the result tuple with 2 entries : model and f .	references_to_delete . setdefault ( f . rel . to , [ ] ) . append ( ( model , f ) )
15143	get the value under formatter key of dictionary under STR0 key of self.config dictionary , substitute the result for formatter .	formatter = self . config [ STR0 ] [ formatter ]
623	define the method delete with self , key and version set to None as arguments .	def delete ( self , key , version = None ) :
11945	return value .	return value
4362	from django.core.management.base import BaseCommand and CommandError into default name space .	from django . core . management . base import BaseCommand , CommandError
7189	default_error_messages is an dictionary with an entry : return value of the function _ called with an argument string STR0 for STR1 .	default_error_messages = { STR0 : _ ( STR1 ) , }
13450	get the value under the ext key of the extension_map dictionary , substitute it for cls .	cls = extension_map . get ( ext )
14631	if match is true ,	if match :
13680	if filename is not contained in _error_files ,	if filename not in _error_files :
2784	append e to criticals list for every e in all_issues , if checks.CRITICAL is lesser than or equal to e.level .	criticals = [ e for e in all_issues if checks . CRITICAL <= e . level ]
13609	filenames is an empty list .	filenames = [ ]
17597	if colors is true and last element of colors is contained in color_names ,	if colors and colors [ - 1 ] in color_names :
15329	call the method date.weekday , use the result as an key to obtain the value from the days dictionary , substitute it for dow .	dow = days [ date . weekday ( ) ]
11800	replace every occurrence of newline character in value with string STR0 , use it as an argument for the call to the mark_safe , return the result .	return mark_safe ( value . replace ( STR0 , STR1 ) )
1637	define lambda function that returns self.file.xreadlines field , use it as an argument for property function , put the result in xreadlines .	xreadlines = property ( lambda self : self . file . xreadlines )
1393	break from the smallest enclosing loop .	break
4037	define the method write_migration_files with arguments self and changes .	def write_migration_files ( self , changes ) :
10758	define the method create_variable_node with 2 arguments self and filter_expression .	def create_variable_node ( self , filter_expression ) :
2250	if character STR0 is contained in addr ,	if STR0 in addr :
16371	value under the index key of the hextets dictionary is a string STR0 .	hextets [ index ] = STR0
9350	get the value under the value key of a dictionary with 6 entries : boolean True for STR0 , boolean True for boolean True , boolean True for STR1 , boolean False for STR2 , boolean False for STR3 and boolean False for boolean False , return it if the key exists , if not return None .	return { STR0 : True , True : True , STR1 : True , STR2 : False , STR3 : False , False : False } . get ( value , None )
547	return boolean False .	return False
10199	call the method bytes_to_text with an arguments key and self.encoding , substitute the result for key .	key = bytes_to_text ( key , self . encoding )
14552	if self.data.day equals integer 11 , 12 or 13 ,	if self . data . day in ( 11 , 12 , 13 ) :
17077	derive the class SafeText from six.text_type and SafeData base classes .	class SafeText ( six . text_type , SafeData ) :
5393	from django.utils import six into default name space .	from django . utils import six
5530	substitute obj for self.object .	self . object = obj
9193	derive the class MultipleHiddenInput from the HiddenInput base class .	class MultipleHiddenInput ( HiddenInput ) :
2652	define the method write with 4 arguments : self , msg , style_func with None and ending set None .	def write ( self , msg , style_func = None , ending = None ) :
2278	substitute charset for self.encoding .	self . encoding = charset
17977	if AttributeError exception is caught ,	except AttributeError :
10223	call the method setlistdefault from the base class of the class QueryDict , with arguments key and default_list , return the result .	return super ( QueryDict , self ) . setdefault ( key , default )
14735	define the function method_decorator with an argument decorator .	def method_decorator ( decorator ) :
8279	append opts.virtual_fields to opts.many_to_many , for every f in the result ,	for f in opts . many_to_many + opts . virtual_fields :
11568	raise an exception .	raise
13637	call the pyinotify.WatchManager method , assign the result to wm .	wm = pyinotify . WatchManager ( )
1221	return boolean True .	return True
10423	define the method flush with an argument self .	def flush ( self ) :
13563	try ,	try :
10927	use global variable invalid_var_format_string .	global invalid_var_format_string
14476	return self.data.hour .	return self . data . hour
9558	define method value_encode with self class instance and val as arguments .	def value_encode ( self , val ) :
14144	if not ,	else :
4862	if value under the STR0 key of the options dictionary is not None ,	if options . get ( STR0 ) is not None :
5754	if not ,	else :
12854	define the method __init__ with an argument self .	def __init__ ( self ) :
11028	raise an VariableDoesNotExist exception with an argument string STR0 , where STR1 is replaced with bit and STR2 is replaced with current .	raise VariableDoesNotExist ( STR0 , ( bit , current ) )
7360	raise an ValidationError with 2 arguments : value under the STR0 key of the self.error_messages dictionary and code set to STR1 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 )
12932	substitute template for self.template .	self . template = template
3147	app_list is an instance of a class OrderedDict .	app_list = OrderedDict ( )
17908	define the method tzname with 2 arguments : self and dt .	def tzname ( self , dt ) :
8096	property decorator ,	@ property
12999	get the value under the STR0 key of the options dictionary , if it exists , substitute it for namemap , if not namemap is an empty dictionary .	namemap = options . get ( STR0 , { } )
11645	if not ,	else :
7666	if base has an STR0 attribute ,	if hasattr ( base , STR0 ) :
16280	decrement factor by one .	factor -= 1
13545	extension_map is a dictioanry with 6 initial elntries : TarArchive for STR0 , TarArchive for STR1 , TarArchive for STR2 ,	extension_map = { STR0 : TarArchive , STR1 : TarArchive , STR2 : TarArchive , STR3 : TarArchive , STR4 : TarArchive , STR5 : ZipArchive , }
5720	if not ,	else :
47	do nothing .	pass
6988	if self.localize is true ,	if self . localize :
5088	call the method self.validate_name with 2 arguments name and app_or_project .	self . validate_name ( name , app_or_project )
9015	params is an dictionary containing 2 initial entries : value for STR0 and current_timezone for STR1 .	params = { STR0 : value , STR1 : current_timezone }
1119	call the self.seek method with argument integer 0 .	self . seek ( 0 )
6444	property decorator ,	@ property
7826	substitute value for the value under the name key of the self.cleaned_data dictionary .	self . cleaned_data [ name ] = value
11942	if ValueError exception is caught ,	except ValueError :
10047	define the method _get_scheme with an argument self .	def _get_scheme ( self ) :
13714	if sys.platform equals to string STR0 ,	if sys . platform == STR0 :
2341	call the key.lower method for every key in self.extra_headers , join the results into a header_names .	header_names = [ key . lower ( ) for key in self . extra_headers ]
1255	raise an IOError exception with string STR0 as argument , where STR1 is replaced by new_file_name .	raise IOError ( STR0 % new_file_name )
2447	import module collections .	import collections
374	define the initialization method __init__ with arguments : self class instance , dir and params .	def __init__ ( self , dir , params ) :
18595	if not ,	else :
1648	from django.core.exceptions import MiddlewareNotUsed , PermissionDenied and SuspiciousOperation into default name space .	from django . core . exceptions import MiddlewareNotUsed , PermissionDenied , SuspiciousOperation
2719	call the function vars with an argument options , substitute the result for cmd_options .	cmd_options = vars ( options )
1903	_get_files is getter function for FILES attribute of this class .	FILES = property ( _get_files )
10483	derive the class HttpResponseRedirect from the HttpResponseRedirectBase base class .	class HttpResponseRedirect ( HttpResponseRedirectBase ) :
10190	return result .	return result
5489	if self.selected_fields is None or last three elements of field.attname are contained in self.selected_fields :	if self . selected_fields is None or field . attname [ : - 3 ] in self . selected_fields :
15288	for every arg in s , evaluate the function force_bytes for the arguments arg , encoding , strings_only and errors , put the results in a list , join the list elements in a string separated by whitespace separator , return the string as the bytes string .	return STR . join ( [ force_bytes ( arg , encoding , strings_only , errors ) for arg in s ] )
17528	call the method self.can_write.acquire .	self . can_write . acquire ( )
11232	set filter_func._decorated_function objects attr attribute to value .	setattr ( filter_func . _decorated_function , attr , value )
2015	call the method msg_data.decode with argument charset , substitute the result for msg_data .	msg_data = msg_data . decode ( charset )
5802	substitute return value of the method obj._get_pk_val for obj_pk .	obj_pk = obj . _get_pk_val ( )
18472	define the function join_tokens with 2 arguments : tokens and trim set to boolean False .	def join_tokens ( tokens , trim = False ) :
592	substitute library for self._lib .	self . _lib = library
5830	if not ,	else :
2596	if string STR0 is contained in args ,	if STR0 in args :
3453	field_notes is an empty list .	field_notes = [ ]
7238	call the method datetime.datetime.strptime with 2 arguments : result of the function force_str called with an argument value , and format , return the result .	return datetime . datetime . strptime ( force_str ( value ) , format )
9479	for every w in self.widgets , if all elements w.is_hidden are true , return boolean True , otherwise return boolean False .	return all ( w . is_hidden for w in self . widgets )
2195	from email.mime.message import MIMEMessage into default name space .	from email . mime . message import MIMEMessage
15428	call the method handler.addQuickElement with 2 arguments : string STR0 and value under the STR1 key of the self.feed dictionary .	handler . addQuickElement ( STR0 , self . feed [ STR1 ] )
11436	define the method __eq__ with 2 arguments : self and other .	def __eq__ ( self , other ) :
12354	define the method __init__ with 2 arguments : self and format_string .	def __init__ ( self , format_string ) :
18692	from django.utils.encoding import force_str , force_text and DEFAULT_LOCALE_ENCODING into default name space .	from django . utils . encoding import force_str , force_text , DEFAULT_LOCALE_ENCODING
2103	import module ssl .	import ssl
11724	instantiate class Truncator , with an argument value , call the method words on the result with 2 arguments length , and truncate set to string STR0 , return the result .	return Truncator ( value ) . words ( length , truncate = STR0 )
1666	evaluate the function import_string with middleware_path as argument , substitute the result for my_class .	mw_class = import_string ( middleware_path )
13165	define the method __init__ with 5 arguments : self , template , context set to None , content_type set to None and status set to None .	def __init__ ( self , template , context = None , content_type = None , status = None ) :
12306	substitute target and expression for self.target and self.expression , respectively .	self . target , self . expression = target , expression
11190	return resolved_args and resolved_kwargs .	return resolved_args , resolved_kwargs
1032	return self.size .	return self . size
15528	call the method handler.addQuickElement with 2 arguments : string STR0 and value under the STR1 key of the item dictionary .	handler . addQuickElement ( STR0 , item [ STR1 ] )
9859	substitute elements of tuple boundary to end and next , respectively .	end , next = boundary
11716	instantiate class Truncator , with an argument value , call the method chars on the result with 2 arguments length , and html set to boolean True , return the result .	return Truncator ( value ) . chars ( length , html = True )
4326	substitute STR1 in the string STR0 with length of replaces filed of graph.nodes element at the plan_node index , append the string to the title .	title += STR0 % len ( graph . nodes [ plan_node ] . replaces )
11164	if not ,	else :
7583	skip this loop execution .	continue
11956	try ,	try :
3636	if last element of parts is contained in self.serialization_formats ,	if parts [ - 1 ] in self . serialization_formats :
11027	if IndexError , ValueError , KeyError or TypeError exceptions are caught ,	except ( IndexError , ValueError , KeyError , TypeError ) :
12420	if ValueError or TypeError exceptions are caught ,	except ( ValueError , TypeError ) :
3472	return field_type , field_params and field_notes .	return field_type , field_params , field_notes
15974	call the function allow_lazy with 2 arguments : linebreaks , six.text_type , substitute the result for linebreaks .	linebreaks = allow_lazy ( linebreaks , six . text_type )
12908	call the method self.parent_name.resolve with an argument context .	parent = self . parent_name . resolve ( context )
17321	substitute callable for callable .	callable = callable
13010	if six.PY2 is true ,	if six . PY2 :
18179	substitute gettext for gettext_noop , gettext_lazy and _ .	gettext_noop = gettext_lazy = _ = gettext
7959	call the method widget.id_for_label with an argument id_ , substitute the result for id_for_label .	id_for_label = widget . id_for_label ( id_ )
17801	replace every occurrence of STRspecial in s with STR0 .	s = s . replace ( STRspecial , STR0 )
10040	if location is None ,	if location is None :
9230	define the method clear_checkbox_id with 2 arguments : self and name .	def clear_checkbox_id ( self , name ) :
3369	add params to extra_params dictionary .	extra_params . update ( params )
9215	needs_multipart_form is boolean True .	needs_multipart_form = True
9892	for every __ in iterator ,	for __ in iterator :
4236	substitute connection.introspection.table_name_converter for converter .	converter = connection . introspection . table_name_converter
17284	_iteritems is a string STR0 .	_iteritems = STR0
18712	define the method dst with 2 arguments self and dt .	def dst ( self , dt ) :
448	if self._dir file path does not exists ,	if not os . path . exists ( self . _dir ) :
141	if val is not None ,	if val is not None :
13743	call the function time.sleep with argument integer 1 .	time . sleep ( 1 )
16047	for every i and word in enumerated iterable words ,	for i , word in enumerate ( words ) :
75	import module time .	import time
706	import module django.core.checks.model_checks .	import django . core . checks . model_checks
10507	join into a string permitted_methods , separated by string STR0 , substitute it for value under the STR1 key of the self dictionary .	self [ STR0 ] = STR1 . join ( permitted_methods )
3000	define the method add_arguments with arguments self and parser .	def add_arguments ( self , parser ) :
7293	data is None .	data = None
7735	call the function _ with an argument string STR0 , where STR1 is replaced with name , and STR2 is replaced with return value of the force_text function called with an argument e , extend the top_errors with the result .	top_errors . extend ( [ _ ( STR0 ) % { STR1 : name , STR2 : force_text ( e ) } for e in bf_errors ] )
16052	substitute elements of middle from the beginning to the negative length of punctuation , for middle .	middle = middle [ : - len ( punctuation ) ]
13980	call the method hashlib.sha1 with an argument secret appended to key_salt , call the method digest on the result , return the result .	key = hashlib . sha1 ( key_salt + secret ) . digest ( )
5406	try ,	try :
15659	call the function force_str with an argument : default if it is true , or if not , first element of the result of the function , get_format called with an argument string STR0 , substitute the result for format .	format = force_str ( default or get_format ( STR0 ) [ 0 ] )
8726	define the method add_fields with 3 arguments : self , form and index .	def add_fields ( self , form , index ) :
4006	for every app_label in bad_app_labels ,	for app_label in bad_app_labels :
12504	return an instance of DebugNode class .	return DebugNode ( )
12182	call the method context.push , with the result perform ,	with context . push ( ) :
12126	define the method render with 2 arguments : self and context .	def render ( self , context ) :
16661	call the function cache_get with an argument key , substitute the result for link .	link = cache_get ( key )
654	call the method self._cache.decr with key and delta as arguments , substitute the result for val .	val = self . _cache . decr ( key , delta )
13702	if not ,	else :
7244	substitute error_messages for value under the STR error_messages ' key of the kwargs dictionary .	kwargs [ STR0 ] = error_messages
14810	substitute deprecation_warning for self.deprecation_warning .	self . deprecation_warning = deprecation_warning
7036	return self.limit_choices_to .	return self . limit_choices_to
3909	break the loop execution .	break
5343	return self._count .	return self . _count
5881	call the method Model._meta.get_field with an argument field_name , substitute it for field .	field = Model . _meta . get_field ( field_name )
14306	substitute value under the key key of self dictionary for val .	val = self [ key ]
15233	define the function smart_text , with s , encoding set to string STR0 , strings_only set to False , errors set to STR1 as arguments .	def smart_text ( s , encoding = STR0 , strings_only = False , errors = STR1 ) :
11296	if file_name is an instance of Template class .	if isinstance ( file_name , Template ) :
13027	substitute app_template_dirs for template_dirs .	template_dirs = app_template_dirs
6763	raise a ValidationError exception with 2 arguments : return value of the function _ called with an argument string STR0 , and code set to string STR1 .	raise ValidationError ( _ ( STR0 ) , code = STR1 )
17752	call the function allow_lazy with 2 arguments : get_text_list and six.text_type , substitute the result for get_text_list .	get_text_list = allow_lazy ( get_text_list , six . text_type )
8879	substitute MultipleHiddenInput for hidden_widget .	hidden_widget = MultipleHiddenInput
15375	result of the function iri_to_uri called with an argument link for STR0 , result of the function to_unicode called with an argument description for STR1 , result of the function to_unicode called with an argument author_email for STR2 , result of the function to_unicode called with an argument author_name for STR3 , result of the function iri_to_uri called with an author_link link for STR4 , pubdate for STR5 , updateddate for STR6 , result of the function to_unicode called with an comments author_name for STR7 , result of the function to_unicode called with an argument unique_id ) for STR8 , unique_id_is_permalink for STR9 , enclosure for STR10 , if true , categories is value for STR11 key , if not , empty tuple is value for STR12 key , result of the function to_unicode called with an argument item_copyright for STR13 , ttl for STR14 .	item = { STR0 : to_unicode ( title ) , STR1 : iri_to_uri ( link ) , STR2 : to_unicode ( description ) , STR3 : to_unicode ( author_email ) , STR4 : to_unicode ( author_name ) , STR5 : iri_to_uri ( author_link ) , STR6 : pubdate , STR7 : updateddate , STR8 : to_unicode ( comments ) , STR9 : to_unicode ( unique_id ) , STR10 : unique_id_is_permalink , STR11 : enclosure , STR12 : categories or ( ) , STR13 : to_unicode ( item_copyright ) , STR14 : ttl , }
1110	call the __init__ method with stream_class ( content ) and name set to name arguments , from the base class of the ContentFile class .	super ( ContentFile , self ) . __init__ ( stream_class ( content ) , name = name )
2549	from django.core.servers.fastcgi import FASTCGI_OPTIONS into default namespace ,	from django . core . servers . fastcgi import FASTCGI_OPTIONS
10080	upload_handlers.setter decorator .	@ upload_handlers . setter
8707	call the method _construct_form from the base class of the class BaseInlineFormSet , with 2 arguments : i , and unpacked dictionary kwargs , substitute the result for form .	form = super ( BaseInlineFormSet , self ) . _construct_form ( i , ** kwargs )
12718	call the method token.split_contents , substitute the result for bits .	bits = token . split_contents ( )
567	call the method self.validate_key with argument key .	self . validate_key ( key )
3215	add model to models set .	models . add ( model )
5184	call the method re.search with 2 arguments : raw string STR0 and name , if it evaluates to false ,	if not re . search ( STR0 , name ) :
4914	call the function check_for_migrations with an arguments app_config , connection .	check_for_migrations ( app_config , connection )
11427	define the method new with 2 arguments : self and values set to None .	def new ( self , values = None ) :
4112	from django.core.management import call_command into default name space .	from django . core . management import call_command
15893	define the function fget with 3 arguments : instance , instance_type set to None and name set to fget.__name__ .	def fget ( instance , instance_type = None , name = fget . __name__ ) :
15841	define the method __reduce_ex__ with 2 arguments self and proto .	def __reduce_ex__ ( self , proto ) :
10476	define the method __init__ with 4 arguments : self , redirect_to , unpacked list args and unpacked dictionary kwargs .	def __init__ ( self , redirect_to , * args , ** kwargs ) :
18141	try ,	try :
221	call the cursor method on the value under the db key of connections dictionary , preform following with return value named cursor ,	with connections [ db ] . cursor ( ) as cursor :
11170	raise an TemplateSyntaxError exception with an argument string STR0 , where STR1 is replaced with name .	raise TemplateSyntaxError ( STR0 % name )
14590	divide j by integer 7 , substitute the floored result for week_number .	week_number = j // 7
2763	write output to self.stdout stream .	self . stdout . write ( output )
18581	if first element of message_context equals to character STR ,	if message_context [ 0 ] == STR :
5901	call the function getInnerText with argument k , on the result call the method strip , for every k in keys , append the results to field_value list .	field_value = [ getInnerText ( k ) . strip ( ) for k in keys ]
5654	if not ,	else :
17618	from django.utils.translation import ugettext_lazy , ugettext as _ and pgettext into default name space .	from django . utils . translation import ugettext_lazy , ugettext as _ , pgettext
9914	if ValueError exception is caught ,	except ValueError :
18312	get STR0 attribute of the _active object , if it exists substitute it for t , if not t is None .	t = getattr ( _active , STR0 , None )
12759	if TemplateDoesNotExist exception is caught ,	except TemplateDoesNotExist :
8457	if value under the name key of self.cleaned_data dictionary is not None ,	if self . cleaned_data . get ( name ) is not None and self . cleaned_data [ name ] . _state . adding :
12368	substitute tagtype for self.tagtype .	self . tagtype = tagtype
15300	define the function iri_to_uri with iri as an argument .	def iri_to_uri ( iri ) :
11802	decorator stringfilter ,	@ stringfilter
9846	increment bytes_read by length of bytes .	bytes_read += len ( bytes )
8152	define the method errors with an argument self .	def errors ( self ) :
8896	for every pk in value ,	for pk in value :
11464	return value under the key key of dictionary in last element of self.dicts , if it doesnt exists return otherwise .	return self . dicts [ - 1 ] . get ( key , otherwise )
10617	define the method __init__ with 4 arguments : self , template_string , origin set to None and name set to None .	def __init__ ( self , template_string , origin = None , name = None ) :
6871	if months is true ,	if months :
13067	define the method find_template with 3 arguments : self , name , dirs set to None .	def find_template ( self , name , dirs = None ) :
7176	strip whitespaces from both ends of unicode_value , substitute the result for value .	value = unicode_value . strip ( )
9298	get the value of the values dictionary under the value converted to lowercase key , substitute it for value , if the key doesnt exists , substitute value for value .	value = values . get ( value . lower ( ) , value )
12157	call the function render_value_in_context with 2 arguments : value and context , return the result .	return render_value_in_context ( value , context )
243	call the method self.validate_key with key as argument .	self . validate_key ( key )
1337	substitute the return value of the function abspathu with self.base_location as argument for self.location .	self . location = abspathu ( self . base_location )
6425	substitute pattern.regex.pattern for parent_pat .	parent_pat = pattern . regex . pattern
4666	from django.db import connections and DEFAULT_DB_ALIAS into default name space .	from django . db import connections , DEFAULT_DB_ALIAS
16894	get the next element of the iterable pattern_iter , assign the result for ch and escaped , respectively .	ch , escaped = next ( pattern_iter )
136	raise an exception of class NotImplementedError , with string STR0 as argument .	raise NotImplementedError ( STR0 )
7909	define the method __getitem__ with 2 arguments : self and idx .	def __getitem__ ( self , idx ) :
10150	derive the class QueryDict from the base class MultiValueDict .	class QueryDict ( MultiValueDict ) :
14821	substitute base.__name__ for class_name .	class_name = base . __name__
3311	import module keyword .	import keyword
6713	derive the class EmailValidator form the object base class .	class EmailValidator ( object ) :
5153	call the method self.make_writeable with an argument new_path .	self . make_writeable ( new_path )
9462	call the method self.get_renderer with 4 arguments : name , value , attrs and choices , call the render method on the result , return the result .	return self . get_renderer ( name , value , attrs , choices ) . render ( )
6467	slice the path list from the result of the match.end method as the start index to the end , substitute it for new_path .	new_path = path [ match . end ( ) : ]
14878	if type of result is ConvertingDict , ConvertingList or ConvertingTuple ,	if type ( result ) in ( ConvertingDict , ConvertingList , ConvertingTuple ) :
8266	if not ,	else :
9339	define the method __init__ with 2 arguments : self and attrs set to None .	def __init__ ( self , attrs = None ) :
3255	from django.apps import apps into default name space .	from django . apps import apps
4462	call the method parser.add_argument with 4 arguments : string STR0 , action set to string STR1 , dest as a string STR2 , and help is a string STR3 .	parser . add_argument ( STR0 , action = STR1 , dest = STR2 , help = STR3 )
6119	if the value under the STR0 key of the wsgi_opts dictionary is not None , set daemonize to boolean True , if not , set it to boolean False .	daemonize = ( wsgi_opts [ STR0 ] is not None )
16505	yield a tuple with 2 elements : tok.name and toktext .	yield ( tok . name , toktext )
597	call the self._lib.Client with argument self._servers , substitute the result for self._client .	self . _client = self . _lib . Client ( self . _servers )
8107	property decorator ,	@ property
10229	call the function force_bytes with 2 arguments : safe and self.encoding , substitute it for safe .	safe = force_bytes ( safe , self . encoding )
11112	if bits is false ,	if not bits :
7832	define the method _clean_form with an argument self .	def _clean_form ( self ) :
2179	if smtplib.SMTPException exception is caught ,	except smtplib . SMTPException :
10526	if response.status_code is lesser than integer 200 and grater or equal than 100 , or response.status_code equals to integer 204 or 304 ,	if 100 <= response . status_code < 200 or response . status_code in ( 204 , 304 ) :
18612	call the function blankout with 2 arguments : t.contents and STR0 , write the result to out .	out . write ( blankout ( t . contents , STR0 ) )
9241	call the method self.clear_checkbox_id with an argument checkbox_name , substitute the result for checkbox_id .	checkbox_id = self . clear_checkbox_id ( checkbox_name )
7170	call the method __init__ from the base class of the BaseTemporalField class , with arguments : unpacked list args and unpacked dictionary kwargs .	super ( BaseTemporalField , self ) . __init__ ( * args , ** kwargs )
12455	raise an TemplateSyntaxError exception with an argument string STR0 .	raise TemplateSyntaxError ( STR0 )
6698	call the method netloc.encode with an argument string STR0 , on the return value call the decode method with string STR1 as argument , substitute the result for netloc .	netloc = netloc . encode ( STR0 ) . decode ( STR1 )
18036	from django.utils.encoding import force_text into default name space .	from django . utils . encoding import force_text
7847	define the method changed_data with an argument self .	def changed_data ( self ) :
6747	call the method literal_match.group with an integer 1 , substitute the result for ip_address .	ip_address = literal_match . group ( 1 )
17961	if _localtime is None ,	if _localtime is None :
12309	substitute obj for value under the self.var_name key of the context dictionary .	context [ self . var_name ] = obj
8906	call the method self.run_validators with an argument value .	self . run_validators ( value )
15660	call the method value.strftime with an argument format , return the result .	return value . strftime ( format )
7424	try ,	try :
8946	append tuple containing element attr to boolean_attrs .	boolean_attrs . append ( ( attr , ) )
18049	from django.utils.translation import trans_null as trans .	from django . utils . translation import trans_null as trans
13849	if exception ValueError or TypeError is raised ,	except ( ValueError , TypeError ) :
12709	call the method parser.compile_filter with an argument value , append the result to args .	args . append ( parser . compile_filter ( value ) )
1093	define the method open with arguments self and mode defaulting to None .	def open ( self , mode = None ) :
4986	call the function check_for_migrations with an arguments app_config and connection .	check_for_migrations ( app_config , connection )
18354	call the function force_text with an argument message , return the result .	result = force_text ( message )
13443	substitute file.name for filename .	filename = file . name
324	from django.core.cache.backends.base import BaseCache and DEFAULT_TIMEOUT into default name space .	from django . core . cache . backends . base import BaseCache , DEFAULT_TIMEOUT
11537	call the method extend_nodelist with 3 arguments : nodelist , node and token , from the base class of the class DebugParser .	super ( DebugParser , self ) . extend_nodelist ( nodelist , node , token )
1563	bring integer 2 to the power of 10 , multiply it by integer 64 , substitute the result for chunk_size .	chunk_size = 64 * 2 ** 10
6618	define the function get_script_prefix .	def get_script_prefix ( ) :
11889	try ,	try :
18406	return supported_code .	return supported_code
18489	write string STR0 to out file .	out . write ( STR0 )
14420	import module time .	import time
3791	append list containing string STR0 to self.msgattrib_options .	self . msgattrib_options = self . msgattrib_options [ : ] + [ STR0 ]
11120	return an empty dictionary .	return { }
13535	if dirname is true and dirname path doesnt exists ,	if dirname and not os . path . exists ( dirname ) :
4025	call the method self.write_migration_files with an argument changes .	self . write_migration_files ( changes )
10631	define the method _render with 2 arguments self and context .	def _render ( self , context ) :
5325	if not ,	else :
10698	token is an instance of Token class , created with 2 arguments : TOKEN_COMMENT and content .	token = Token ( TOKEN_COMMENT , content )
4060	otherwise if self.verbosity equals integer 3 ,	elif self . verbosity == 3 :
87	define the function get_key_func with argument key_func .	def get_key_func ( key_func ) :
14967	convert idx to an integer , substitute it or n .	n = int ( idx )
11110	call the function re.compile with an argument raw string STR0 , substitute the result for kwarg_re .	kwarg_re = re . compile ( STR0 )
4083	call the method migration.ancestry.index with an argument common_ancestor , increment the result by one , slice migration.ancestry list from the last result as an starting index to the end , substitute the slice for migration.branch .	migration . branch = migration . ancestry [ ( migration . ancestry . index ( common_ancestor ) + 1 ) : ]
6272	return the element at the index index of the tuple containing 3 elements : self.func , self.args and self.kwargs .	return ( self . func , self . args , self . kwargs ) [ index ]
16767	join package.__name__ and module_name into a string separated with STR0 , substitute it for name .	name = STR0 . join ( [ package . __name__ , module_name ] )
4784	raise an exception CommandError , with argument string STR0 , where STR1 is replaced with project_name .	raise CommandError ( STR0 % project_name )
11360	if lib is false ,	if not lib :
9463	define the method id_for_label with 2 arguments : self and id_ .	def id_for_label ( self , id_ ) :
14001	define the function _bin_to_long with an argument x .	def _bin_to_long ( x ) :
13133	is_usable is boolean True .	is_usable = True
9166	call the method self.build_attrs with 3 arguments : attrs , type as self.input_type , name as name , substitute the result for final_attrs .	final_attrs = self . build_attrs ( attrs , type = self . input_type , name = name )
3182	define the function get_objects .	def get_objects ( ) :
7965	append self.form.required_css_class to a whitespace character , append it to the value under the STR0 key of the attrs dictionary .	attrs [ STR0 ] += STR + self . form . required_css_class
5152	call the function shutil.copymode with arguments old_path and new_path .	shutil . copymode ( old_path , new_path )
12464	define the function cycle with 2 arguments : parser and token .	def cycle ( parser , token ) :
11835	define the function join with 3 arguments : value , arg and autoescape set to None .	def join ( value , arg , autoescape = None ) :
10767	if AttributeError exception is raised ,	except AttributeError :
17737	if truncate_text is true ,	if truncate_text :
13069	try ,	try :
16081	format string STR1 with lead , middle and trail , use it as an argument for the call to the function mark_safe , substitute the result for i-th element of words .	words [ i ] = mark_safe ( STR0 % ( lead , middle , trail ) )
4221	otherwise if action equals to string STR0 .	elif action == STR0 :
16034	call the function urlunsplit with an argument tuple with 4 elements : scheme , netloc , path , query and fragment , substitute the result for url .	url = urlunsplit ( ( scheme , netloc , path , query , fragment ) )
2137	call the method self.connection.login with arguments self.username and self.password .	self . connection . login ( self . username , self . password )
8263	skip this loop iteration .	continue
5468	internal_use_only is a boolean False .	internal_use_only = False
11976	decorator function register.filter with 2 arguments string STR0 and is_safe set to boolean False .	@ register . filter ( STR0 , is_safe = False )
9276	format_key is a string STR0 .	format_key = STR0
5892	call the method base.build_instance with arguments Model , data and self.db , substitute the result for obj .	obj = base . build_instance ( Model , data , self . db )
2023	call the method self._lock , with the result ,	with self . _lock :
18747	call the method time.localtime with an argument stamp , substitute the result for tt .	tt = time . localtime ( stamp )
289	call the cursor method on the value under the db key of connections dictionary , preform following with return value named cursor ,	with connections [ db ] . cursor ( ) as cursor :
5958	call the method _ExpatParser.reset with an argumen sefl .	_ExpatParser . reset ( self )
11931	convert value and arg into a integers , return their sum .	return int ( value ) + int ( arg )
11545	define the method compile_function_error with 3 arguments : self , token and e .	def compile_function_error ( self , token , e ) :
13449	call the method os.path.splitext with an argument base , substitute the result for base and ext , respectively .	base , ext = os . path . splitext ( base )
14372	call the method self.setlistdefault with an argument key , append value to the result .	self . setlistdefault ( key ) . append ( value )
7444	raise an ValidationError with 3 arguments : value under the STR0 key of the self.error_messages dictionary , and code set to an string STR1 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 )
13019	call the function template_dir.decode with an argument fs_encoding , substitute the result for template_dir .	template_dir = template_dir . decode ( fs_encoding )
8447	for every message in messages ,	for message in messages :
948	if message is an instance of ValidationError class ,	if isinstance ( message , ValidationError ) :
2306	if to is true ,	if to :
4193	if the value under the STR0 key of the options dictionary exists ,	if options . get ( STR0 , False ) :
16108	if not ,	else :
12033	move integer 1 left for 50 bits , substitute the result for PB .	PB = 1 << 50
8100	define the method extra_forms with an argument self .	def extra_forms ( self ) :
16985	if StopIteration exception ,	except StopIteration :
10960	get the STR0 attribute from func object , if it exists substitute it for func .	func = getattr ( func , STR0 , func )
18770	mapping is a dictionary with 3 initial entries : STR0 for STR1 , STR for STR2 and STR3 for STR4 .	mapping = { STR0 : STR1 , STR2 : STR , STR3 : STR4 }
14593	return week_number .	return week_number
17674	define the method _text_chars with 5 arguments : self , length , truncate , text and truncate_len .	def _text_chars ( self , length , truncate , text , truncate_len ) :
8678	define the function modelformset_factory with 18 arguments : model , form set to ModelForm , formfield_callback set to None ,	def modelformset_factory ( model , form = ModelForm , formfield_callback = None , formset = BaseModelFormSet , extra = 1 , can_delete = False , can_order = False , max_num = None , fields = None , exclude = None , widgets = None , validate_max = False , localized_fields = None , labels = None , help_texts = None , error_messages = None , min_num = None , validate_min = False ) :
14567	if not ,	else :
15358	format string STR0 with bits.hostname , d , bits.path and bits.fragment , return it .	return STR0 % ( bits . hostname , d , bits . path , bits . fragment )
6624	do nothing .	pass
14784	raise an exception .	raise
9180	derive the class URLInput from the TextInput base class .	class URLInput ( TextInput ) :
5386	decrement self.number by one , multiply it by self.paginator.per_page , increment the result by one , return it .	return ( self . paginator . per_page * ( self . number - 1 ) ) + 1
18139	define the function get_language_info with an argument lang_code .	def get_language_info ( lang_code ) :
3323	for every line in return value of the method self.handle_inspection called with an argument options ,	for line in self . handle_inspection ( options ) :
4603	get the value under the STR0 key of the options dictionary , use it as the key to get the value from the connections dictionary , substitute the result for connection .	connection = connections [ options [ STR0 ] ]
13918	define function learn_cache_key with request , response , cache_timeout set to None , key_prefix set to None , cache set to None as arguments .	def learn_cache_key ( request , response , cache_timeout = None , key_prefix = None , cache = None ) :
6494	get attribute STR0 form the self.urlconf_module , substitute it for patterns , if the attribute doesnt exist , substitute self.urlconf_module for self.urlconf_module .	patterns = getattr ( self . urlconf_module , STR0 , self . urlconf_module )
695	define the function make_template_fragment_key with fragment_name and vary_on defaulting to None as arguments .	def make_template_fragment_key ( fragment_name , vary_on = None ) :
11578	from pprint import pformat into default name space .	from pprint import pformat
13457	call the method self.close .	self . close ( )
11676	concatenate string STR1 , width and string STR0 , format the previous string with i incremented by 1 , and result of the function escape called with an argument line , substitute the result for i-th element of lines .	lines [ i ] = ( STR0 + width + STR1 ) % ( i + 1 , escape ( line ) )
16633	substitute _make_key for make_key .	make_key = _make_key
5656	define the method handle_fk_field with self , obj and field arguments .	def handle_fk_field ( self , obj , field ) :
3040	replace % s in string STR0 with : line and character STR1 if i is lesser than length of table_output decremented by one , or with an empty string if its not , append the resulting string to full_statement .	full_statement . append ( STR0 % ( line , STR1 if i < len ( table_output ) - 1 else STR ) )
15749	get the type of res , call the method mro on the result , for every t in the result ,	for t in type ( res ) . mro ( ) :
4670	define the method add_arguments , with 2 arguments self and parser .	def add_arguments ( self , parser ) :
610	call the method make_key with arguments key and version from the base class of the class BaseMemcachedCache , use it as an argument for the call to the function force_str , return the result .	return force_str ( super ( BaseMemcachedCache , self ) . make_key ( key , version ) )
14849	return boolean True .	return True
5885	call the method self._handle_fk_field_node with field_node and field as arguments , substitute the result for the value under the field.attname of the data dictionary .	data [ field . attname ] = self . _handle_fk_field_node ( field_node , field )
3024	name set to a string STR0 , max_length set to integer 255 , unique set to boolean True and primary_key set to boolean True , return value of the method models.TextField called with argument name set to a string STR1 , and return value of the method models.DateTimeField called with 2 arguments : name set to string STR2 and db_index set to True . table_output is an empty list .	table_output = [ ]
11730	if ValueError exception is caught ,	except ValueError :
7806	return boolean False .	return False
2442	if self doesnt have an attribute STR0 ,	if not hasattr ( self , STR0 ) :
1539	call the method cls with 3 arguments : value under the STR0 key of file_dict , value under the STR1 key of file_dict ,	return cls ( file_dict [ STR0 ] , file_dict [ STR1 ] , file_dict . get ( STR2 , STR3 ) )
8314	if not ,	else :
4818	call the function call_command with 3 arguments : string STR0 , interactive is boolean True , and database set to value under the STR1 key of the options dictionary .	call_command ( STR0 , interactive = True , database = options [ STR1 ] )
11704	try ,	try :
18317	do nothing .	pass
5586	call the json.dump function with 4 arguments : return value of the method self.get_dump_object called with an argument obj , self.stream , cls set to DjangoJSONEncoder and unpacked dictionary self.json_kwargs .	json . dump ( self . get_dump_object ( obj ) , self . stream , cls = DjangoJSONEncoder , ** self . json_kwargs )
11638	convert d into a integer , subtract d from it , substitute the result for m .	m = int ( d ) - d
7019	if e has an attribute STR0 and e.code is contained in self.error_messages ,	if hasattr ( e , STR0 ) and e . code in self . error_messages :
3940	append self.msgattrib_options to a list containing string STR0 , append to it a list containing string STR1 , pofile and pofile , substitute the result for args .	args = [ STR0 ] + self . msgattrib_options + [ STR1 , pofile , pofile ]
9162	return value .	return value
9887	iterator is iterator created out of stream_or_iterable .	iterator = iter ( stream_or_iterable )
15489	if value under the STR0 key of the self.feed dictionary is not None ,	if self . feed [ STR0 ] is not None :
6214	call the signed_value.rsplit method with arguments self.sep and integer 1 , substitute the result for value and sig , respectively .	value , sig = signed_value . rsplit ( self . sep , 1 )
2299	call the function forbid_multi_line_headers with 3 arguments : name , val and self.encoding , substitute the result for name and val , respectively .	name , val = forbid_multi_line_headers ( name , val , self . encoding )
2039	create list out of email_messages , return the length of the list .	return len ( list ( email_messages ) )
6377	return self._callback .	return self . _callback
3762	xgettext_options is an list with elements : strings STR0 and STR1 .	xgettext_options = [ STR0 , STR1 ]
12221	call the method context.update with an argument unpacked_vars .	context . update ( unpacked_vars )
4798	define the method add_arguments with self and parser as arguments .	def add_arguments ( self , parser ) :
2907	if not ,	else :
16948	get the value under ch key of the ESCAPE_MAPPINGS dictionary , if it exists substitute it for representative , if not substitute ch for representative .	representative = ESCAPE_MAPPINGS . get ( ch , ch )
11943	return value .	return value
1376	if _file is None ,	if _file is None :
17678	call the function unicodedata.combining with an argument char , if it evaluates to true ,	if unicodedata . combining ( char ) :
7648	from django.utils.safestring import mark_safe into default name space .	from django . utils . safestring import mark_safe
1828	if not ,	else :
13242	raise an exception parser.error_class with an argument string STR0 , where STR1 is replaced with self.id .	raise parser . error_class ( STR0 % self . id )
6615	if prefix doesnt end with character STR0 ,	if not prefix . endswith ( STR0 ) :
15063	call the method self.configure_filter with an argument value under name key of filters dictionary , substitute the result for filters dictionary value under name key .	filters [ name ] = self . configure_filter ( filters [ name ] )
11711	define the function truncatechars_html with 2 arguments value and arg .	def truncatechars_html ( value , arg ) :
18105	derive the class override from the object base class .	class override ( object ) :
10683	if in_tag is true and token_string starts with BLOCK_TAG_START .	if in_tag and token_string . startswith ( BLOCK_TAG_START ) :
15470	covert to string value under the STR0 key of the item dictionary , convert it to lowercase , substitute the result for value under the STR1 key of the guid_attrs dictionary .	guid_attrs [ STR0 ] = str ( item [ STR1 ] ) . lower ( )
7475	call the method self._coerce with an argument value , return the result .	return self . _coerce ( value )
10396	get the value under the key key of the self.cookies dictionary , domain expires for STR0 key of the returned dictionary .	self . cookies [ key ] [ STR0 ] = domain
1757	raise an exception .	raise
16124	set self.__starttag_text to None .	self . __starttag_text = None
16733	if ImportError , renamed to e , exception is caught ,	except ImportError as e :
11792	call the function linebreaks with 2 arguments value and autoescape , use the result as an argument for the call to the mark_safe , return the result .	return mark_safe ( linebreaks ( value , autoescape ) )
15390	define the method writeString with 2 arguments self and encoding .	def writeString ( self , encoding ) :
8242	from django.forms.formsets import BaseFormSet and formset_factory into default name space .	from django . forms . formsets import BaseFormSet , formset_factory
9233	substitutions is a dictionary with 4 initial entries : self.initial_text for STR0 , self.input_text for STR1 , an empty string for STR2 and self.clear_checkbox_label for STR3 .	substitutions = { STR0 : self . initial_text , STR1 : self . input_text , STR2 : STR , STR3 : self . clear_checkbox_label , }
17066	otherwise if rhs is an instance of SafeBytes ,	elif isinstance ( rhs , SafeBytes ) :
10552	from django.template.context import BaseContext , Context , RequestContext and ContextPopException into default namespace .	from django . template . context import ( BaseContext , Context , RequestContext , ContextPopException )
15561	_format_modules_cache is an empty dictionary .	_format_modules_cache = { }
5099	if not ,	else :
717	define the function _check_test_runner with app_config set to None and kwargs dictionary as arguments .	def _check_test_runner ( app_configs = None , ** kwargs ) :
14061	call the function os.umask with an argument umask .	os . umask ( umask )
537	call the self._lock.writer method , with the result perform the following ,	with self . _lock . writer ( ) :
2795	if msg is true ,	if msg :
7904	if if_is true attrs is an dictionary with initial entry : id_ for STR0 , if not , attrs is an empty dictionary .	attrs = { STR0 : id_ } if id_ else { }
16132	if match evaluates to False throw an exception with the string message STR0 .	assert match , STR0
1226	define the function unlock with argument f .	def unlock ( f ) :
13962	import module time .	import time
2478	try ,	try :
11933	try ,	try :
18720	define the method __repr__ with an argument self .	def __repr__ ( self ) :
18202	from django.test.signals import setting_changed into default name space .	from django . test . signals import setting_changed
16362	call the function _explode_shorthand_ip_string with an argument ip_str , substitute the result for ip_str .	ip_str = _sanitize_ipv4_mapping ( ip_str )
18172	check_for_language is lambda function that returns boolean True for every argument x .	check_for_language = lambda x : True
5606	call the method o.isoformat substitute the result for r .	r = o . isoformat ( )
10545	import module re .	import re
13786	x is integer 0 .	x = 0
14671	call the function data with 3 arguments : d.year , d.month and d.day , return the result .	return date ( d . year , d . month , d . day )
18011	call the method timezone.normalize with an argument value , substitute the result for value .	value = timezone . normalize ( value )
9529	return a list containing 2 elements : return value of the value.date method and return value of the replace method , called with the argument microseconds set to integer 0 , on the result of the method value.time .	return [ value . date ( ) , value . time ( ) . replace ( microsecond = 0 ) ]
14357	define the method update with 3 arguments : self , unpacked list args and unpacked dictionary kwargs .	def update ( self , * args , ** kwargs ) :
8269	call the method f.save_form_data with 2 arguments : instance and value under the f.name key of cleaned_data dictionary .	f . save_form_data ( instance , cleaned_data [ f . name ] )
416	call the function os.remove with argument fname .	os . remove ( fname )
9576	call the M.set method with the key , real_value , coded_value as the arguments .	M . set ( key , real_value , coded_value )
15021	call the method logging._acquireLock .	logging . _acquireLock ( )
15600	call the function get_language , substitute the result for lang .	lang = get_language ( )
15977	if fist and second element of sys.version_info equals to integer 3 and 2 , respectively ,	if sys . version_info [ : 2 ] == ( 3 , 2 ) :
18241	convert fist p elements of locale to lowercase , append STR0 to it , covert to lowercase locale elements from ( p+1 ) -th index to the end , append it to the previous result , return it .	return locale [ : p ] . lower ( ) + STR0 + locale [ p + 1 : ] . lower ( )
13154	if not ,	else :
7537	raise an ValidationError with an argument errors .	raise ValidationError ( errors )
16922	if ch is true ,	if ch :
11348	define the function get_library with an argument library_name .	def get_library ( library_name ) :
5282	if path is an instance of six.string_types ,	if isinstance ( path , six . string_types ) :
4550	call the method add_arguments from the base class of the class Command , with an argument parser .	super ( Command , self ) . add_arguments ( parser )
14706	if site is contained in sites2 ,	if site in sites2 :
4290	call the connection.creation.sql_indexes_for_model with model and no_style ( ) as arguments , substitute the result for index_squl .	index_sql = connection . creation . sql_indexes_for_model ( model , no_style ( ) )
16696	return an instance of _CacheInfo class , created with 4 arguments : value under the HITS key of the stats dictionary , value under the MISSES key of the stats dictionary , maxsize and length of cache .	return _CacheInfo ( stats [ HITS ] , stats [ MISSES ] , maxsize , len ( cache ) )
15307	evaluate function force_bytes with path as the argument , replace all of the occurancies of the STR0 with STR1 in the resulting string , call the function quote with the result and with the safe set to bytes string STR2 , return the function result .	return quote ( force_bytes ( path ) . replace ( STR0 , STR1 ) , safe = STR2 )
14190	define the method __setitem__ with 3 arguments : self , kay and value .	def __setitem__ ( self , key , value ) :
2915	import module codecs .	import codecs
4064	if self.interactive is true ,	if self . interactive :
12047	decorator function register.filter with an argument is_safe set to boolean False .	@ register . filter ( is_safe = False )
12028	filesize_number_format is an lambda function with an argument value , return value is the result of the method formats.number_format , called with 2 arguments : value rounded to 1 decimal point and integer 1 .	filesize_number_format = lambda value : formats . number_format ( round ( value , 1 ) , 1 )
11428	call the function copy with an argument self , substitute the result for new_context .	new_context = copy ( self )
7131	return None .	return None
8768	if fk.unique is boolean true ,	if fk . unique :
913	from functools import reduce into default name space .	from functools import reduce
3148	for every label in app_labels ,	for label in app_labels :
5989	define the method __init__ with arguments self , context , base , sysid and pubid .	def __init__ ( self , context , base , sysid , pubid ) :
11925	join elements of output into a string , separated with newlines , return the result .	return STR0 . join ( output )
13231	substitute current_app for self._current_app .	self . _current_app = current_app
5403	define the function register_serializer with 3 arguments : format , serializer_module and serializers set to None .	def register_serializer ( format , serializer_module , serializers = None ) :
8192	define the method add_fields with 3 arguments : self , form and index .	def add_fields ( self , form , index ) :
16717	define the function import_string with an argument dotted_path .	def import_string ( dotted_path ) :
1676	insert mw_instance.process_template_response at the beginning of self._template_response_middleware .	self . _template_response_middleware . insert ( 0 , mw_instance . process_template_response )
10994	if ValueError exception is caught ,	except ValueError :
18599	call the method constant_re.match with first element of parts as an argument , substitute the result for cmatch .	cmatch = constant_re . match ( parts [ 0 ] )
2024	try ,	try :
16143	remove first and last character from the attrvalue , substitute it for attrvalue .	attrvalue = attrvalue [ 1 : - 1 ]
12270	substitute nodelist_true and nodelist_false for self.nodelist_true and self.nodelist_false , respectively .	self . nodelist_true , self . nodelist_false = nodelist_true , nodelist_false
16378	substitute doublecolon_start for best_doublecolon_start .	best_doublecolon_start = doublecolon_start
5551	import module datetime .	import datetime
14165	define the method __repr__ with an argument self .	def __repr__ ( self ) :
8274	substitute instance._meta for opts .	opts = instance . _meta
3231	append rel_model to deps .	deps . append ( rel_model )
14498	define the method s with an argument self .	def s ( self ) :
3625	append an empty string to dirs list .	dirs . append ( STR )
7854	get the value under the name key of the self.initial dictionary , if it exists substitute it for initial_value , if not substitute field.initial for initial_value .	initial_value = self . initial . get ( name , field . initial )
1346	call the function self.path with argument name , use it and mode as arguments for the call to the function open , use it as an argument for creatinon of a File object instance , return it .	return File ( open ( self . path ( name ) , mode ) )
6296	if submod is true and return value of the function module_has_submodule called with 2 arguments : result of the function : import_module called with an argument parentmod and submod , evaluates to false .	if submod and not module_has_submodule ( import_module ( parentmod ) , submod ) :
13708	otherwise id change equals to I18N_MODIFIED ,	elif change == I18N_MODIFIED :
1004	from django.core.files.base import File into default name space .	from django . core . files . base import File
396	call the function self._key_to_file with key and version as arguments , substitute it for fname .	fname = self . _key_to_file ( key , version )
2448	from importlib import import_module into default name space .	from importlib import import_module
13143	do nothing .	pass
16135	as long k is smaller than endpos ,	while k < endpos :
10183	define the method __delitem__ with 3 arguments : self and key .	def __delitem__ ( self , key ) :
3277	call the function no_style , substitute it for self.style .	self . style = no_style ( )
12549	call the method parser.parse with an argument tuple with an element string STR0 and end_tag , substitute the result for nodelist_true .	nodelist_loop = parser . parse ( ( STR0 , end_tag ) )
10395	if domain is not None ,	if domain is not None :
2118	substitute timeout for self.timeout .	self . timeout = timeout
5629	from django.core.serializers import base into default name space .	from django . core . serializers import base
7248	return self._regex .	return self . _regex
1811	substitute empty bytes string for self.buffer .	self . buffer = STR
3912	if locale_dir is false ,	if not locale_dir :
13005	from django.template.base import TemplateDoesNotExist into default name space .	from django . template . base import TemplateDoesNotExist
644	if self.LibraryValueNotFoundException exception is caught ,	except self . LibraryValueNotFoundException :
677	if attribute STR0 of the self object is None ,	if getattr ( self , STR0 , None ) is None :
10169	if self._encoding is None ,	if self . _encoding is None :
12482	as_form is boolean True	as_form = True
16038	call the function quote with 2 arguments : url and safe as bytes string STR0 , substitute the result for url .	url = quote ( url , safe = STR0 )
15341	define the function rfc3339_date with an argument date .	def rfc3339_date ( date ) :
8022	value under the INITIAL_FORM_COUNT of the self.base_fields dictionary is an instance of IntegerField class , created with an argument widget set to HiddenInput .	self . base_fields [ INITIAL_FORM_COUNT ] = IntegerField ( widget = HiddenInput )
6696	call the function urlsplit with an argument value , assign the result to scheme , netloc , path , query and fragment , respectively .	scheme , netloc , path , query , fragment = urlsplit ( value )
5168	if template starts with a string STR0 ,	if template . startswith ( STR0 ) :
11327	if not ,	else :
16252	call the method result.utctimetuple , use the result as an argument for the call to the method calendar.timegm , return the result .	return calendar . timegm ( result . utctimetuple ( ) )
13084	if not ,	else :
10836	define the method value with an argument self .	def value ( self ) :
18146	split lang_code by character STR0 , substitute the first element of the result for generic_lang_code .	generic_lang_code = lang_code . split ( STR0 ) [ 0 ]
10238	try ,	try :
4166	target_app_labels_only is boolean False .	target_app_labels_only = False
6756	validate_email is an instance of EmailValidator class .	validate_email = EmailValidator ( )
281	return boolean False .	return False
161	for every key in keys ,	for key in keys :
2963	if not ,	else :
10832	increment i by integer 1 .	i += 1
9261	if value is None ,	if value is None :
18131	call the function _trans.get_language_from_path with an argument path , return the result .	return _trans . get_language_from_path ( path )
11873	append x converted to an integer to bits .	bits . append ( int ( x ) )
3318	db_module is a string STR0 .	db_module = STR0
4528	from django.core.management.sql import sql_create into default name space .	from django . core . management . sql import sql_create
17211	gett self.attr from the module object , return it .	return getattr ( module , self . attr )
11461	define the method has_key with 2 arguments : self and key .	def has_key ( self , key ) :
17917	if not ,	else :
7050	call the method copy.deepcopy with arguments self.widget and memo , substitute the result for result.widget .	result . widget = copy . deepcopy ( self . widget , memo )
15654	otherwise if value is an instance of datetime.date ,	elif isinstance ( value , datetime . date ) :
516	call the method self.make_key with key and version set to version as arguments , substitute the result for key .	key = self . make_key ( key , version = version )
10716	call the method self.next_token , substitute the result for token .	token = self . next_token ( )
7224	call the function __current_timezone with an argument value , return the result .	return from_current_timezone ( value )
4965	finally perform ,	finally :
4054	if init_path is not a file ,	if not os . path . isfile ( init_path ) :
11291	define the method render with 2 arguments : self and context .	def render ( self , context ) :
8497	substitute error_messages for value under the STR0 key of attrs dictionary .	attrs [ STR0 ] = error_messages
1297	if name is None ,	if name is None :
8680	if meta is None ,	if meta is None :
1155	if zlib.error as e exception is raised ,	except zlib . error as e :
16254	call the function six.reraise with 3 arguments : ValueError , instance of a class ValueError , created with an argument string , STR0 formated with date and third element of the result of the function sys.exc_info .	six . reraise ( ValueError , ValueError ( STR0 % date ) , sys . exc_info ( ) [ 2 ] )
3784	get the value under the STR0 key of the options dictionary , substitute it for ignore_patterns .	ignore_patterns = options . get ( STR0 )
158	for every key and value in data.items method return value ,	for key , value in data . items ( ) :
6016	call the import_string with app_path as an argument , return the result .	return import_string ( app_path )
5715	if not ,	else :
3071	call the method parser.add_argument with 5 arguments : string STR0 , action set to string STR1 , dest set to string STR2 , default set to boolean False and help set to a string 'Display all settings , regardless of their value .	parser . add_argument ( STR1 , action = STR2 , dest = STR3 , default = False , help = STR4 )
5941	if not ,	else :
8120	if i is greater than or equal to the result of the method self.initial_form_count ,	if i >= self . initial_form_count ( ) and not form . has_changed ( ) :
11466	return value under the key key of dictionary in last element of self.dicts .	return self . dicts [ - 1 ] [ key ]
6020	derive the class WSGIServer from simple_server.WSGIServer and object base classes .	class WSGIServer ( simple_server . WSGIServer , object ) :
2791	substitute STR0 in the string STR1 , with group_name and formatted , substitute the result for msg .	msg += STR0 % ( group_name , formatted )
10806	if not ,	else :
13900	call iri_to_uri with return value of the request.build_absolute_uri method , us the result as the argument for the call to the force_bytes function , use the result as the argument for the call to the hashlib.mdb function , store the result in url .	url = hashlib . md5 ( force_bytes ( iri_to_uri ( request . build_absolute_uri ( ) ) ) )
10984	if STR0 is not contained in var and STR1 is not contained in var converted into lowercase ,	if STR0 not in var and STR1 not in var . lower ( ) :
5959	substitute self._parser for parser .	parser = self . _parser
3581	decorator method lru_cache.lru_cache with an argument maxsize set to None .	@ lru_cache . lru_cache ( maxsize = None )
15401	if latest_date is None or item_date is greater than latest_date ,	if latest_date is None or item_date > latest_date :
2498	self.settings_exception is None .	self . settings_exception = None
6273	define the method __repr__ with an argument self .	def __repr__ ( self ) :
14793	call the method middleware.process_response with 2 arguments : request and response , return the result .	return middleware . process_response ( request , response )
16028	call the function urlsplit with an argument url , assign the result to scheme , netloc , path , query and fragment , respectively .	scheme , netloc , path , query , fragment = urlsplit ( url )
5512	define the method handle_m2m_field with argument self , obj and field .	def handle_m2m_field ( self , obj , field ) :
7304	return is boolean True .	return True
9404	define the method __init__ with 3 arguments : self , unpacked list args and unpacked dictionary kwargs .	def __init__ ( self , * args , ** kwargs ) :
11449	call the the method __copy__ from the base class of the class Context , substitute the result for duplicate .	duplicate = super ( Context , self ) . __copy__ ( )
14612	from django.utils.timezone import utc and get_fixed_timezone into default name space .	from django . utils . timezone import utc , get_fixed_timezone
10807	raise an TemplateSyntaxError with an argument string STR0 , substitute STR1 with filter_name .	raise TemplateSyntaxError ( STR0 % filter_name )
10245	try ,	try :
7123	return attrs .	return attrs
5128	if target_dir path doesnt exists ,	if not path . exists ( target_dir ) :
5187	if not ,	else :
10649	define the method __init__ with 3 arguments : self , token_type and contents .	def __init__ ( self , token_type , contents ) :
3261	from django.utils.six.moves import input into default name space .	from django . utils . six . moves import input
4890	import module warnings .	import warnings
13079	result is an tuple with 2 elements : template and return value of the function make_origin called with 4 arguments : display_name , loader , name and dirs .	result = ( template , make_origin ( display_name , loader , name , dirs ) )
3465	if fifth and sixth elements of row are None ,	if row [ 4 ] is None or row [ 5 ] is None :
16472	num is an integer 0 .	num = 0
4023	crate a dictionary with app mapping and from the class Migration , created with arguments : string STR0 and app , for every app in app_labels .	changes = dict ( ( app , [ Migration ( STR0 , app ) ] ) for app in app_labels )
18616	convert lang_string to lowercase , split by the result string accept_language_re , substitute the result for pieces .	pieces = accept_language_re . split ( lang_string . lower ( ) )
692	from django.utils.encoding import force_bytes into default name space .	from django . utils . encoding import force_bytes
18119	call the method activate with an argument self.old_language .	activate ( self . old_language )
13779	convert value to an integer , return it .	return int ( value )
586	call the initialization method with argument params for the base class of the BaseMemcachedCache class .	super ( BaseMemcachedCache , self ) . __init__ ( params )
8747	if fk_name is true ,	if fk_name :
7456	for every value in data call the function force_text with an argument value , add the results into a set , substitute the resulting set for data_set .	data_set = set ( force_text ( value ) for value in data )
14514	derive the class DateFormat from the base class TimeFormat .	class DateFormat ( TimeFormat ) :
13676	if STR0 attribute of ev is None ,	if getattr ( ev , STR0 , None ) is None :
6167	call the salted_hmac with 3 arguments : salt , value and key , call the digest method on the result , use the result as an argument for the call to the b64_encode function , return the result .	return b64_encode ( salted_hmac ( salt , value , key ) . digest ( ) )
11140	define the function parse_bits with 8 arguments : parser , bits , params , varargs , varkw , defaults , takes_context and name .	def parse_bits ( parser , bits , params , varargs , varkw , defaults , takes_context , name ) :
10230	encode is an lambda function with arguments k and v , return value is string STR0 , where STR1 is replaced with : return value of the function quote called with arguments k and safe , and with return value of the function quote called with arguments v and safe .	encode = lambda k , v : STR0 % ( ( quote ( k , safe ) , quote ( v , safe ) ) )
16071	if UnicodeError exception is caught ,	except UnicodeError :
17347	call the method operator.methodcaller with 3 arguments : string STR0 , integer 1 and string STR1 , substitute the result for int2byte .	int2byte = operator . methodcaller ( STR0 , 1 , STR1 )
6592	substitute current_app for ns .	ns = current_app
2239	define the function sanitize_address with arguments addr and encoding .	def sanitize_address ( addr , encoding ) :
13734	call the function sys.exit with argument exit_code .	sys . exit ( exit_code )
12941	values is an dictionary with entries : return value of the method var.resolve with an argument context for name , for every name and var in return value of the function six.iteritems called with an argument self.extra_context .	values = { name : var . resolve ( context ) for name , var in six . iteritems ( self . extra_context ) }
1008	from io import BytesIO , StringIO and UnsupportedOperation into default name space .	from io import BytesIO , StringIO , UnsupportedOperation
13111	from django.template.base import TemplateDoesNotExist into default name space .	from django . template . base import TemplateDoesNotExist
15748	call the function func with 2 arguments : unpacked list self.__args and unpacked dictionary self.__kw , substitute the result for res .	res = func ( * self . __args , ** self . __kw )
16847	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
8123	call the method self._deleted_form_indexes.append with an argument i .	self . _deleted_form_indexes . append ( i )
15031	substitute value under name key of logging._handlers dictionary for handler .	handler = logging . _handlers [ name ]
3303	class static method ,	@ staticmethod
11881	if not ,	else :
4698	get the values under the STR0 and STR1 keys of the options dictionary , substitute them for app_label and migration_name , respectively .	app_label , migration_name = options [ STR0 ] , options [ STR1 ]
10077	if self._upload_handlers is false ,	if not self . _upload_handlers :
6661	if code is not None ,	if code is not None :
12864	define the method push with 3 arguments : self , name and block .	def push ( self , name , block ) :
10779	call the method self.error with 2 arguments : token and string STR0 , return the result .	raise self . error ( token , STR0 )
8222	define the function formset_factory with 9 arguments : form , formset set to BaseFormSet , extra set to integer 1 ,	def formset_factory ( form , formset = BaseFormSet , extra = 1 , can_order = False , can_delete = False , max_num = None , validate_max = False , min_num = None , validate_min = False ) :
7228	if value is an instance of list type ,	if isinstance ( value , list ) :
4329	if not ,	else :
5226	return the_path .	return the_path
1874	self._stream is a class instance of a LimitedStream class , initialized with self.environ dictionary value under the STR0 key , and content_length .	self . _stream = LimitedStream ( self . environ [ STR0 ] , content_length )
3715	with the result renamed to fp , perform the following : call the method fp.read , substitute the result for src_data .	src_data = fp . read ( )
17332	get _itervalues attribute of the class d , call the result with an argument unpacked dictionary kw , convert the result to a iterable , return it .	return iter ( getattr ( d , _itervalues ) ( ** kw ) )
3521	call the method serializers.get_public_serializer_formats , substitute the result for self.serialization_formats .	self . serialization_formats = serializers . get_public_serializer_formats ( )
7179	try ,	try :
1373	try ,	try :
9483	substitute self.is_localized for widget.is_localized .	widget . is_localized = self . is_localized
1508	define the __init__ method with 6 arguments : self , name , content_type , size , charset and content_type_extra set to None .	def __init__ ( self , name , content_type , size , charset , content_type_extra = None ) :
12561	call the function do_ifequal with 3 arguments : parser , token and boolean False , return the result .	return do_ifequal ( parser , token , False )
6103	try ,	try :
14206	do nothing .	pass
17422	want_unicode is boolean True .	want_unicode = True
4505	try ,	try :
17648	call the function allow_lazy with 2 arguments : wrap and six.text_type , substitute the result for wrap .	wrap = allow_lazy ( wrap , six . text_type )
16708	from __future__ import absolute_import into default name space .	from __future__ import absolute_import
16662	if link is not None ,	if link is not None :
7344	call the function urlunsplit with an argument url_fields , use the result as an argument for the call to the function split_url , substitute the result for url_fields .	url_fields = split_url ( urlunsplit ( url_fields ) )
5242	if archive.ArchiveException or IOError , renamed to e , exception are caught ,	except ( archive . ArchiveException , IOError ) as e :
18532	if t.token_type == TOKEN_TEXT :	elif t . token_type == TOKEN_TEXT :
18743	call the method time.mktime with an argument tt , substitute the result for stamp .	stamp = time . mktime ( tt )
11510	if last_bit is true ,	if last_bit :
2658	derive the BaseCommand class from the object base class .	class BaseCommand ( object ) :
13890	if settings.USE_TZ is True ,	if settings . USE_TZ :
246	call the method self.get_backend_timeout with argument timeout , substitute the result for timeout .	timeout = self . get_backend_timeout ( timeout )
8751	if fk is not an instance of ForeignKey class , or fk.rel.to is not equal to parent_model , and fk.rel.to is not contained in result of the call to the method parent_model._meta.get_parent_list .	if not isinstance ( fk , ForeignKey ) or ( fk . rel . to != parent_model and fk . rel . to not in parent_model . _meta . get_parent_list ( ) ) :
10090	define the method body with an argument self .	def body ( self ) :
4614	call the parent class of Command class add_arguments method and parser as the arguments .	super ( Command , self ) . add_arguments ( parser )
16710	from importlib import import_module into default name space .	from importlib import import_module
5289	break the loop execution .	break
12920	value under the BLOCK_CONTEXT_KEY key of context.render_context dictionary is BlockContext class instance .	context . render_context [ BLOCK_CONTEXT_KEY ] = BlockContext ( )
5275	for every i and ext in enumerated iterable ext_list ,	for i , ext in enumerate ( ext_list ) :
8172	define the method full_clean with an argument self .	def full_clean ( self ) :
14805	derive the class warn_about_renamed_method from object base class .	class warn_about_renamed_method ( object ) :
18030	call the method value.astimezone with an argument timezone , substitute the result for value .	value = value . astimezone ( timezone )
11940	convert arg to an integer .	arg = int ( arg )
11102	define the method __repr__ with an argument self .	def __repr__ ( self ) :
3712	if file_ext is contained in command.extensions , is_templatized is boolean True , otherwise it is boolean False .	is_templatized = file_ext in command . extensions
16730	call the function warnings.warn with 3 arguments : string STR0 , RemovedInDjango19Warning and stacklevel as integer 2 .	warnings . warn ( STR0 , RemovedInDjango19Warning , stacklevel = 2 )
6247	from django.utils.module_loading import module_has_submodule into default name space .	from django . utils . module_loading import module_has_submodule
9002	if other is not equal to list containing elements of self , return boolean True , otherwise return boolean False .	return list ( self ) != other
14407	substitute prefix for self.prefix .	self . prefix = prefix
18113	if not ,	else :
12544	define the function do_ifequal with 2 arguments : parser , token and negate .	def do_ifequal ( parser , token , negate ) :
15869	call the function new_method_proxy with an argument operator.contains , substitute the result for __contains__ .	__contains__ = new_method_proxy ( operator . contains )
3554	try ,	try :
16008	substitute new_value for value .	value = new_value
5699	define the function m2m_convert with an argument value .	def m2m_convert ( value ) :
5856	call the method __init__ from the base class of the Deserializer class with arguments stream_or_string and unpacked dictionary options .	super ( Deserializer , self ) . __init__ ( stream_or_string , ** options )
1493	substitute content_type_extra for self.content_type_extra .	self . content_type_extra = content_type_extra
5412	substitute module for the value under the format key of the _serializers dictionary .	_serializers [ format ] = module
4387	raise an CommandError exception with an argument string STR0 .	raise CommandError ( STR0 )
14034	call the method password.translate with an argument hmac.trans_5C , update outer dictionary with the result .	outer . update ( password . translate ( hmac . trans_5C ) )
6999	get STR0 from the c object , if it doesnt exists return an empty dictionary , use the result as the argument for the call to the messages.update function .	messages . update ( getattr ( c , STR0 , { } ) )
1854	substitute environ for self.environ .	self . environ = environ
6172	derive the class JSONSerializer from the object base class .	class JSONSerializer ( object ) :
1211	try ,	try :
5219	call the method mimetypes.guess_extension with an argument content_type , substitute result for ext .	ext = mimetypes . guess_extension ( content_type )
5562	define the method start_serialization with an argument self .	def start_serialization ( self ) :
1830	substitute empty bytes string for self.buffer .	self . buffer = STR
192	from django.core.cache.backends.base import BaseCache and DEFAULT_TIMEOUT into default name space .	from django . core . cache . backends . base import BaseCache , DEFAULT_TIMEOUT
17091	if six.PY3 is true ,	if six . PY3 :
18602	for every p in parts without the first element ,	for p in parts [ 1 : ] :
13724	try ,	try :
2890	from django.apps import apps into default name space .	from django . apps import apps
16049	substitute empty string , word an empty string for lead , middle and trail , respectively .	lead , middle , trail = STR , word , STR
134	raise an exception of class NotImplementedError , with string STR0 as argument .	raise NotImplementedError ( STR0 )
15007	return result .	return result
488	call the method self._set with key , pickled and timeout as arguments .	self . _set ( key , pickled , timeout )
17771	append val to self.vals .	self . vals . append ( val )
2811	from django.apps import apps into default name space .	from django . apps import apps
5670	if not ,	else :
7446	call the method self.valid_value with an argument val , if it evaluates to false ,	if not self . valid_value ( val ) :
16911	while ch is not equal to terminal_char ,	while ch != terminal_char :
16749	if call to the function module_has_submodule with 2 arguments : app_config.module and module_to_search evaluates to true ,	if module_has_submodule ( app_config . module , module_to_search ) :
12859	define the method self and name .	def pop ( self , name ) :
1692	if an exception occurred ,	except :
956	self.error_dict is an empty dictionary .	self . error_dict = { }
9783	increment self.position by length of output .	self . position += len ( output )
5525	return self .	return self
1936	define get_script_name function with environ as an argument .	def get_script_name ( environ ) :
16138	breaks from the smallest enclosing loop .	break
14910	call the method self.configurator.convert with an argument value , substitute the result for result .	result = self . configurator . convert ( value )
11886	substitute list_ for first_item and second_item , respectively .	first_item , second_item = list_
507	if KeyError exception is caught ,	except KeyError :
11205	otherwise if name is not None and compile_function is not None ,	elif name is not None and compile_function is not None :
16704	substitute cache_info for wrapper.cache_info .	wrapper . cache_info = cache_info
18550	if not ,	else :
10959	calculate length of provided and increment it by one , substitute the result for plen .	plen = len ( provided ) + 1
7395	self._choices and self.widget.choices are assigned value converted into a list .	self . _choices = self . widget . choices = list ( value )
7328	default_error_messages is an dictionary with an entry : return value of the function _ called with an argument string STR0 for STR1 .	default_error_messages = { STR0 : _ ( STR1 ) , }
10968	define the method __str__ with an argument self .	def __str__ ( self ) :
7880	for field in self if field.is_hidden is true , append field to a list , return the resulting list .	return [ field for field in self if field . is_hidden ]
2206	do nothing .	pass
9585	return an empty dictionary .	return { }
4544	from django.core.management.sql import sql_all into default name space .	from django . core . management . sql import sql_all
15066	get config dictionary element under STR0 key , if it exists substitute it for handlers , if not , handlers is EMPTY_DICT .	handlers = config . get ( STR0 , EMPTY_DICT )
12750	do nothing .	pass
9946	define the function _parse_header_params with an argument s .	def _parse_header_params ( s ) :
8110	raise an AttributeError exception with an argument string : STR0 , where STR1 is replaced with self.__class__.__name__ .	raise AttributeError ( STR0 % self . __class__ . __name__ )
7983	define the method is_hidden with an argument self .	def is_hidden ( self ) :
881	define the function csrf with an argument request .	def csrf ( request ) :
15745	class method decorator ,	@ classmethod
11153	if param is not in params and varkw is None ,	if param not in params and varkw is None :
15015	if string STR0 is not contained in config ,	if STR0 not in config :
18463	intrans is boolean False .	intrans = False
3935	call the method self.copy_plural_forms with arguments : msgs and locale , substitute it for msgs .	msgs = self . copy_plural_forms ( msgs , locale )
13382	call the function normpath with an argument path , return the result .	return normpath ( path )
8235	return valid .	return valid
4413	call the method autoreload.main with 3 arguments : self.inner_run , None and options .	autoreload . main ( self . inner_run , None , options )
6456	property decorator ,	@ property
877	from django.middleware.csrf import get_token into default name space .	from django . middleware . csrf import get_token
11040	if TypeError exception is caught ,	except TypeError :
15558	from django.utils import six into default name space .	from django . utils import six
5749	derive the class Serializer from the PythonSerializer base class .	class Serializer ( PythonSerializer ) :
7165	step is an string STR0 .	step = STR0
8258	if f.editable is true and f is an instance of models.AutoField , or f.name is not contained in cleaned_data ,	if not f . editable or isinstance ( f , models . AutoField ) or f . name not in cleaned_data :
9073	if path is not contained in self._js ,	if path not in self . _js :
17354	if not ,	else :
10011	call the function split_domain_port with an argument host , assign the result to domain and port , respectively .	domain , port = split_domain_port ( host )
11043	raise an exception ,	raise
278	if not ,	else :
9594	cookiedict is an empty dictionary .	cookiedict = { }
7414	return boolean True .	return True
6741	raise a ValidationError exception with arguments self.message and code set to self.code .	raise ValidationError ( self . message , code = self . code )
17669	break from the loop execution .	break
9546	assign return value of the call to the http_cookies.SimpleCookie function to _tc .	_tc = http_cookies . SimpleCookie ( )
12809	call the function make_origin with 4 arguments : display_name , loader , name and dirs , return a tuple containing 2 elements : source and previous result .	return ( source , make_origin ( display_name , loader , name , dirs ) )
16983	try ,	try :
11342	call the function import_module with an argument templatetag_module .	import_module ( templatetag_module )
10986	if var ends with STR0 ,	if var . endswith ( STR0 ) :
2618	from django.core import checks into default name space .	from django . core import checks
647	raise an ValueError exception with string STR0 as argument , substitute STR1 for key .	raise ValueError ( STR0 % key )
16755	from importlib import find_loader as importlib_find .	from importlib import find_loader as importlib_find
836	call the Error function with 4 arguments , string STR0 with all the STR1 replaced by values of description , name and reference joined into a string delimited by STR2 , respectively , obj set to receiver.__module__ , hint set to None and id set to string STR3 , append the result to errors .	errors . append ( Error ( STR0 % ( description , name , STR1 . join ( reference ) ) , obj = receiver . __module__ , hint = None , id = STR2 ) )
15395	latest_date is None .	latest_date = None
17389	get attribute STR0 from the moves.builtins object , if it exists substitute it for print_ , if not print_ is None .	print_ = getattr ( moves . builtins , STR0 , None )
3576	raise an exception .	raise
12878	call the context.push method , with the result , perform ,	with context . push ( ) :
18761	define the function get_version with version set to None as argument .	def get_version ( version = None ) :
9775	return out .	return out
922	silent_variable_failure is an boolean True .	silent_variable_failure = True
7140	define the method validate with arguments self and value .	def validate ( self , value ) :
17301	return next element of the iterable it .	return it . next ( )
15339	if not ,	else :
14118	if KeyError exception is caught ,	except KeyError :
13361	call the function touch_import with 3 arguments : string STR0 , string STR1 and decorated .	touch_import ( STR0 , STR1 , decorated )
5532	define the method __repr__ with an argument self .	def __repr__ ( self ) :
7199	call the method datetime.datetime.strptime with 2 arguments : result of the function force_str called with an argument value , and format , call the method date on the result , return the result .	return datetime . datetime . strptime ( force_str ( value ) , format ) . date ( )
7208	return value ,	return value
9439	call the function format_html with 3 arguments : self.outer_html , if id_ is true id_attr set to return value of the function format_html , if not id_attr set to an empty string , content set to result of the function mark_safe with an argument : string created by joining elements of outputs , with STR0 separator , return the result .	return format_html ( self . outer_html , id_attr = format_html ( STR1 , id_ ) if id_ else STR , content = mark_safe ( STR2 . join ( output ) ) )
1161	return size of the image that was fed to the parser p .	return p . image . size
17070	remove kwargs dictionary element under the STR0 key , substitute it for method .	method = kwargs . pop ( STR0 )
3716	convert self.file to string and append string STR0 to it , substitute the result for thefile .	thefile = STR0 % self . file
17459	remove slots_var key from the orig_vars dictionary .	orig_vars . pop ( slots_var )
13397	raise an ValueError with an argument string STR0 , where STR1 is replaced with final_path and base_path .	raise ValueError ( STR0 % ( final_path , base_path ) )
4855	call the method execute form the base class of the class Command , with 2 arguments : unpacked list args and unpacked dictionary options .	super ( Command , self ) . execute ( * args , ** options )
5613	call the method o.isoformat , return the result .	return o . isoformat ( )
11093	call the function localize with 2 arguments : value and use_l10n=context.use_l10n , substitute the result for value .	value = localize ( value , use_l10n = context . use_l10n )
10904	args is an empty list .	args = [ ]
11063	if nodelist is true ,	if nodelist :
6304	if can fail is true ,	if can_fail :
8147	define the method non_form_errors with an argument self .	def non_form_errors ( self ) :
14382	call the method tuple.__new__ with 3 arguments : cls , unpacked list args and unpacked dictionary kwargs , substitute the result for self .	self = tuple . __new__ ( cls , * args , ** kwargs )
13018	if six.PY2 is true ,	if six . PY2 :
2183	return boolean True .	return True
13195	call the method template.render with an argument context , substitute the result for content .	content = template . render ( context )
9460	call the method self.renderer with 4 arguments : name , value , final_attrs and choices , return the result .	return self . renderer ( name , value , final_attrs , choices )
844	models is a string STR0	models = STR0
9052	define the method render_js with an argument self .	def render_js ( self ) :
16990	define the function contains with 2 arguments source and inst .	def contains ( source , inst ) :
8583	create a generator that for every d in row_data , if d has an STR0 attribute , returns the result of the call the method d._get_pk_val , if not return d , put all the generator items into a tuple row_data .	row_data = tuple ( d . _get_pk_val ( ) if hasattr ( d , STR0 ) else d for d in row_data )
15264	define function smart_bytes with s , encoding set to string STR0 , strings_only set to False and errors set to string STR1 , as arguments .	def smart_bytes ( s , encoding = STR0 , strings_only = False , errors = STR1 ) :
12994	value is boolean True .	value = True
11717	decorator function register.filter with an argument is_safe set to boolean True .	@ register . filter ( is_safe = True )
14426	from django.utils import six into default name space .	from django . utils import six
10184	call the method self._assert_mutable .	self . _assert_mutable ( )
1531	define the method multiple_chunks with arguments self and hunk_size set to None .	def multiple_chunks ( self , chunk_size = None ) :
6286	return lookup_view .	return lookup_view
1429	define the method accessed_time with arguments self and name .	def accessed_time ( self , name ) :
16439	new_ip is an empty list ,	new_ip = [ ]
14103	if any element of self.dicts is true , return boolean True , otherwise return boolean False .	return any ( self . dicts )
749	define the function check_1_7_compatibility with argument kwargs dictionary .	def check_1_7_compatibility ( ** kwargs ) :
5601	if Exception , renamed to e , exception is caught ,	except Exception as e :
4991	define the function sql_destroy_indexes with 3 arguments : app_config , style and connection .	def sql_destroy_indexes ( app_config , style , connection ) :
12990	call the function token_kwargs with 3 arguments : remaining_bits , parser , support_legacy set to boolean False , substitute the result for value .	value = token_kwargs ( remaining_bits , parser , support_legacy = False )
10220	call the method self._assert_mutable .	self . _assert_mutable ( )
1905	derive the WSGIHandler class from the base class base.BaseHandler .	class WSGIHandler ( base . BaseHandler ) :
13379	define the function abspathu with an argument path .	def abspathu ( path ) :
15590	if lang is None ,	if lang is None :
8069	return total_forms .	return total_forms
7118	return value .	return value
8422	append f.name to exclude .	exclude . append ( f . name )
4625	define the method add_arguments with self class instance and parser as the arguments .	def add_arguments ( self , parser ) :
5095	replace STR1 in string STR0 with top_dir , substitute it for message .	message = STR0 % top_dir
16832	substitute first decimal_pos elements of dec_part for dec_part .	dec_part = dec_part [ : decimal_pos ]
9343	try ,	try :
151	call the self.set method with key , new_value and version set to version as arguments .	self . set ( key , new_value , version = version )
16372	if value under the index key of the hextets dictionary equals to string STR0 ,	if hextets [ index ] == STR0 :
2303	mixed_subtype is a string STR0 .	mixed_subtype = STR0
10030	raise an exception .	raise
6838	from django.utils.encoding import force_str into default name space .	from django . utils . encoding import force_str
1567	self.content_length is None .	self . content_length = None
11806	define the function safeseq with an argument value .	def safeseq ( value ) :
10128	second element of l for every l in return value of the self._files.lists call the method f.close .	f . close ( )
188	from django.utils.six.moves import cPickle as pickle , into default namespace .	from django . utils . six . moves import cPickle as pickle
5679	try ,	try :
11518	define the method __init__ with 2 arguments : self and lexer .	def __init__ ( self , lexer ) :
18646	if self.negated ,	if self . negated :
18727	if not ,	else :
8299	get STR0 attribute from object f , if it doesnt exists or its true ,	if not getattr ( f , STR0 , False ) :
8617	define the method get_form_error with an argument self .	def get_form_error ( self ) :
10525	define the function conditional_content_removal with request and response as the arguments .	def conditional_content_removal ( request , response ) :
16043	return x .	return x
18217	call the function re.compile with an argument raw string STR0 , substitute the result for language_code_prefix_re .	language_code_prefix_re = re . compile ( STR0 )
3661	from itertools import dropwhile into default name space .	from itertools import dropwhile
7549	call the method self.widget.decompress with an argument initial , substitute the result for initial .	initial = self . widget . decompress ( initial )
1865	if exception LookupError is caught ,	except LookupError :
5796	define the method start_object with arguments self and obj .	def start_object ( self , obj ) :
604	else if timeout converted into an integer equals to integer 0 ,	elif int ( timeout ) == 0 :
9009	if settings.USE_TZ is true and value is not None and call to the function timezone.is_naive with an argument value , evaluates to true ,	if settings . USE_TZ and value is not None and timezone . is_naive ( value ) :
7120	call the method widget_attrs with an argument widget , from the base class of the FloatField class , substitute the result for attrs .	attrs = super ( FloatField , self ) . widget_attrs ( widget )
14252	define the method add with 2 arguments : self and item .	def add ( self , item ) :
522	call the self.get method with key and version set to version as arguments , substitute the result for value .	value = self . get ( key , version = version )
12720	assign the bits elements to tag , this_value_expr , max_value_expr and max_width , respectively .	tag , this_value_expr , max_value_expr , max_width = bits
12178	if string STR0 is contained in context ,	if STR0 in context :
13626	trans_real._translations is an empty dictionary .	trans_real . _translations = { }
17743	call the function force_text with an argument s , strip the result of whitespaces from both ends , replace every occurrence of whitespaces in the previous result for STR0 , substitute the result for s .	s = force_text ( s ) . strip ( ) . replace ( STR , STR0 )
4610	derive the class Command from the base class BaseCommand .	class Command ( BaseCommand ) :
2699	call the method parser.add_option with 3 arguments : string STR0 , action set to string STR1 , and version set to result of the method self.get_version .	parser . add_argument ( STR0 , action = STR1 , version = self . get_version ( ) )
1661	self._template_response_middleware is an empty list .	self . _template_response_middleware = [ ]
1147	try ,	try :
7609	return None .	return None
11845	define the function last with an argument value .	def last ( value ) :
4189	call the self.style.MIGRATE_HEADING with string STR0 as an argument , use the result as an argument for the call to the self.stdout.write .	self . stdout . write ( self . style . MIGRATE_HEADING ( STR0 ) )
16182	convert tag to lowercase , use it as the argument for the call to the method self.handle_endtag .	self . handle_endtag ( tag . lower ( ) )
4301	call the cursor.close method .	cursor . close ( )
12451	if length of args is not equal to integer 2 ,	if len ( args ) != 2 :
1270	close the file fd .	os . close ( fd )
16299	if etags is false ,	if not etags :
8832	substitute cache_choices for self.cache_choices .	self . cache_choices = cache_choices
15838	classmethod decorator ,	@ classmethod
9490	try ,	try :
9570	for every key is self.bad_cookies ,	for key in self . bad_cookies :
391	if e.errno equals to errno.ENOENT ,	if e . errno == errno . ENOENT :
11894	new_second_item is an empty list .	new_second_item = [ ]
994	substitute error.message for message .	message = error . message
7242	get the value under the STR0 key of the kwargs dictionary , if it exists substitute it for error_messages , if not , error_messages is an empty dictionary .	error_messages = kwargs . get ( STR0 ) or { }
10693	token is an instance of Token class , created with 2 arguments : TOKEN_BLOCK and block_content .	token = Token ( TOKEN_BLOCK , block_content )
4756	derive the class Command from the TemplateCommand base class .	class Command ( TemplateCommand ) :
13100	return self.find_template_cache dictionary value under the key key .	return self . template_cache [ key ]
13087	define the method load_template with 3 arguments : self , template_name , template_dirs set to None .	def load_template ( self , template_name , template_dirs = None ) :
6123	convert the value under the STR0 key of options dictionary to lowercase , if it equals to string STR1 , STR2 or STR3 ,	elif options [ STR0 ] . lower ( ) in ( STR1 , STR2 , STR3 ) :
12888	substitute block for value under the STR0 key of context dictionary .	context [ STR0 ] = block
6190	instantiate TimestampSigner object with arguments key and salt set to salt , call its method unsign with arguments : s and max_age set to max_age , use it as an argument for the force_bytes function , substitute the result for base64d .	base64d = force_bytes ( TimestampSigner ( key , salt = salt ) . unsign ( s , max_age = max_age ) )
15819	define the method __setattr__ with 3 arguments : self , name and value .	def __setattr__ ( self , name , value ) :
7620	define the method __init__ with 5 arguments : self , protocol set to string STR0 , unpack_ipv4 set to boolean False , unpacked list args , unpacked dictionary kwargs .	def __init__ ( self , protocol = STR0 , unpack_ipv4 = False , * args , ** kwargs ) :
15368	define the method add_item with 17 arguments : self , title , link , description , author_email set to None , author_name set to None ,	self . items = [ ]
3483	from django.core import serializers into default name space .	from django . core import serializers
3384	call the method self.get_field_type with 3 arguments connection , table_name and row , assign the result to field_type , field_params , field_notes , respectively .	field_type , field_params , field_notes = self . get_field_type ( connection , table_name , row )
16185	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
11224	return dec .	return dec
14517	return the value under the self.data.month key of the MONTHS_3 dictionary .	return MONTHS_3 [ self . data . month ]
4559	from django.core.management.base import AppCommand into default name space .	from django . core . management . base import AppCommand
12187	if values is None ,	if values is None :
15313	substitute string STR0 for encoding .	encoding = STR0
2481	raise an CommandError exception with an argument string STR0 , with STR1 replaced by name .	raise CommandError ( STR0 % name )
13855	define the function patch_response_headers , with response and cache_timeout with None as default value , as arguments .	def patch_response_headers ( response , cache_timeout = None ) :
7689	python_2_unicode_compatible decorator ,	@ python_2_unicode_compatible
3211	for every app_config and model_list in app_list ,	for app_config , model_list in app_list :
4235	substitute model._meta for opts .	opts = model . _meta
12440	if name is true ,	if name :
6611	call the function get_callable.cache_clear .	get_callable . cache_clear ( )
740	if not ,	else :
6886	substitute self.none_value for self.day_none_value .	self . day_none_value = self . none_value
4327	if plan_node is contained in loader.applied_migrations ,	if plan_node in loader . applied_migrations :
1589	define the method new_file with arguments : self , file_name , unpacked list args and unpacked dictionary kwargs .	def new_file ( self , file_name , * args , ** kwargs ) :
12101	substitute old_setting for context.autoescape .	context . autoescape = old_setting
10017	append string STR0 to msg , where STR1 is replaced with domain .	msg += STR0 % domain
7379	if data is not None ,	if data is not None :
18462	message_context is None .	message_context = None
2955	for every basedir in basedirs ,	for basedir in basedirs :
3958	if m is true ,	if m :
13560	import threading module .	import threading
16747	if register_to is true ,	if register_to :
1501	if length of name is greater than integer 255 ,	if len ( name ) > 255 :
2225	call the function force_text with argument val , substitute it for val .	val = force_text ( val )
16489	substitute tok for value under the groupid key of the self.toks dictionary .	self . toks [ groupid ] = tok
15569	return nothing .	return
1907	substitute WSGIRequest for request_class .	request_class = WSGIRequest
2186	import module os .	import os
5310	substitute object_list for self.object_list .	self . object_list = object_list
5750	internal_use_only is a boolean False .	internal_use_only = False
12636	if name is contained in lib.tags ,	if name in lib . tags :
17655	call the function force_text with an argument truncate , substitute the result for truncate .	truncate = force_text ( truncate )
17564	append value under the key v of background dictionary to code_list .	code_list . append ( background [ v ] )
9229	concatenate name and string STR0 , return it .	return name + STR0
1842	if size is not empty ,	if size :
17607	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
4923	call the method connection.creation.sql_create_model with arguments model , style and known_models , substitute the result for output and references .	output , references = connection . creation . sql_create_model ( model , style , known_models )
16312	if url is false ,	if not url :
11693	call the function six.text_type with an argument arg , append the result to STR0 , format the previous with value , return the result .	return ( STR0 + six . text_type ( arg ) ) % value
6106	if Exception exception is caught ,	except Exception :
17196	substitute name for new_mod .	new_mod = name
7979	if self.field.required is true and self.form has an attribute STR0 ,	if self . field . required and hasattr ( self . form , STR0 ) :
12780	args is an empty list .	args = [ ]
1852	if path_info is empty ,	if not path_info :
328	define the method add with 5 arguments : self , key , value , timeout set to DEFAULT_TIMEOUT and version set to None .	def add ( self , key , value , timeout = DEFAULT_TIMEOUT , version = None ) :
4519	skip this loop iteration .	continue
1254	if allow_overwrite is boolean False and call to the os.access function with arguments new_file_name and os.F_OK evaluates to boolean True ,	if not allow_overwrite and os . access ( new_file_name , os . F_OK ) :
18201	from django.dispatch import receiver into default name space .	from django . dispatch import receiver
15965	join results of format_html called with 2 arguments : format_string and tuple with an element args , into a string , separated with result of the function conditional_escape with an argument sep , for every args in args_generator , use the result as an argument for the call to the function mark_safe , return the result .	return mark_safe ( conditional_escape ( sep ) . join ( format_html ( format_string , * tuple ( args ) ) for args in args_generator ) )
14409	if key starts with self.prefix .	if key . startswith ( self . prefix ) :
11186	resolved_args is an list with elements , return value of the method var.resolve with an argument context , for every var in self.args .	resolved_args = [ var . resolve ( context ) for var in self . args ]
16695	with lock ,	with lock :
11905	output is an empty list .	output = [ ]
17122	substitute type for class_types .	class_types = type ,
11934	sum value and arg , return the result .	return value + arg
8427	otherwise if field is contained in the result of the call to the method self._errors.keys ,	elif field in self . _errors . keys ( ) :
8321	from django.db.models.fields import Field as ModelField .	from django . db . models . fields import Field as ModelField
11896	call the function convert_old_style_list with an argument sublist , substitute the result for item and old_style_list .	item , old_style_list = convert_old_style_list ( sublist )
490	return boolean False .	return False
2158	return nothing .	return
14292	for every key and value in items of dictionary self ,	for key , value in dict . items ( self ) :
3290	call the method transaction.atomic with 2 arguments : using set to database , savepoint set to connection.features.can_rollback_ddl ,	with transaction . atomic ( using = database , savepoint = connection . features . can_rollback_ddl ) :
11104	define the method render with 2 arguments self and context .	def render ( self , context ) :
12128	call the function itertools_cycle with an argument self.cyclevars , substitute the result for value under the self dictionary context.render_context .	context . render_context [ self ] = itertools_cycle ( self . cyclevars )
2874	define class dummy .	class dummy :
14912	if type of result is ConvertingDict , ConvertingList or ConvertingTuple ,	if type ( result ) in ( ConvertingDict , ConvertingList , ConvertingTuple ) :
6894	try ,	try :
12262	if string STR0 is contained in context ,	if STR0 in context :
5669	m2m_value is an lambda function with value as an argument , return value is the result of the method value.natural_key .	m2m_value = lambda value : value . natural_key ( )
13055	define the method loaders with an argument self .	def loaders ( self ) :
10765	if nodelist.contains_nontext is true ,	if nodelist . contains_nontext :
16806	try ,	try :
8265	append f to file_field_list .	file_field_list . append ( f )
775	define private method __eq__ with self class instance and other as arguments .	def __eq__ ( self , other ) :
9477	property decorator ,	@ property
35	if ImportError , renamed to e , is caught ,	except ImportError as e :
5400	substitute exception for self.exception .	self . exception = exception
4255	call the connection.creation.sql_for_pending_references method with refto , no_style ( ) and pending_references as arguments , use the result as the argument for the call to the sql.extend method .	sql . extend ( connection . creation . sql_for_pending_references ( model , no_style ( ) , pending_references ) )
10014	if not ,	else :
1257	return nothing .	return
7496	call the method __init__ with 2 arguments : unpacked list args and unpacked dictionary kwargs , from the base class of the class MultiValueField .	super ( MultiValueField , self ) . __init__ ( * args , ** kwargs )
11885	return list_ and boolean False .	return list_ , False
17141	bitwise shift integer 1 to the left by 31 spaces , substitute integer 1 from the result , convert the result to a integer , substitute it for MAXSIZE .	MAXSIZE = int ( ( 1 << 31 ) - 1 )
11334	define the function get_templatetags_modules .	def get_templatetags_modules ( ) :
12142	join elements of output into a string , return the result .	return STR . join ( output )
11828	decorator function register.filter with an argument is_safe set to boolean False .	@ register . filter ( is_safe = False )
13537	if filename ends with STR0 or with '\STR ,	if filename . endswith ( ( STR0 , STRspecial ) ) :
4542	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
15190	if incremental is true ,	if not incremental :
6065	import module sys .	import sys
11950	decorator function register.filter with 2 arguments expects_localtime set to boolean True and is_safe set to boolean False .	@ register . filter ( expects_localtime = True , is_safe = False )
9608	from django.utils.text import unescape_entities into default name space .	from django . utils . text import unescape_entities
18404	for every supported_code in _supported ,	for supported_code in _supported :
5628	from django.conf import settings into default name space .	from django . conf import settings
3284	if interactive is true ,	if interactive :
6664	substitute inverse_match for self.inverse_match .	self . inverse_match = inverse_match
9390	call the method dict with 4 : self.attrs , type as self.input_type , name as self.name , value as self.choice_value , substitute the result for final_attrs .	final_attrs = dict ( self . attrs , type = self . input_type , name = self . name , value = self . choice_value )
8446	skip this loop iteration .	continue
5919	call the method field.rel.to._default_manager.db_manager with an argument self.db , on the result call the method get_by_natural_key , with unpacked list field_value as an argument , substitute the field pk of the result for obj_pk .	obj_pk = field . rel . to . _default_manager . db_manager ( self . db ) . get_by_natural_key ( * field_value ) . pk
15966	define the function linebreaks with 2 arguments : value and autoescape set to boolean False .	def linebreaks ( value , autoescape = False ) :
17802	replace every occurrence of STR0 in s with STR1 .	s = s . replace ( STR0 , STR1 )
11555	raise an exception .	raise
18450	call the method dot_re.sub with 2 arguments : char and src , return the result .	return dot_re . sub ( char , src )
13954	sum evens and odds , if the result is divisible by integer 10 , return boolean True , if not return boolean False .	return ( ( evens + odds ) % 10 == 0 )
1289	from django.utils.text import get_valid_filename into default name space .	from django . utils . text import get_valid_filename
8444	get the value under the field key of self.fields dictionary , substitute error_messages field of the result for error_messages .	error_messages = self . fields [ field ] . error_messages
4813	endless loop ,	while 1 :
18603	find index of the occurrence of string STR0 in p , if its greater or equal to integer 0 ,	if p . find ( STR0 ) >= 0 :
3970	break the loop execution .	break
14287	define the method __deepcopy__ with 2 arguments : self and memo set to None .	def __deepcopy__ ( self , memo = None ) :
9012	call the function timezone.make_aware with arguments value and current_timezone , return the result .	return timezone . make_aware ( value , current_timezone )
15360	define the method __init__ with 15 elements : self , title , link , description , language set to None , author_email set to None , author_name set to None , author_link set to None , subtitle set to None , categories set to None , feed_url set to None , feed_copyright set to None , feed_guid set to None , ttl set to None and unpacked dictionary kwargs .	def __init__ ( self , title , link , description , language = None , author_email = None , author_name = None , author_link = None , subtitle = None , categories = None , feed_url = None , feed_copyright = None , feed_guid = None , ttl = None , ** kwargs ) :
7783	raise an TypeError with an argument string STR0 .	raise TypeError ( STR0 )
7995	substitute self.field.widget for widget .	widget = self . field . widget
3054	derive the class Command from the BaseCommand base class .	class Command ( BaseCommand ) :
17773	join elements of self.vals into a bytes string , substitute the result for ret .	ret = STR . join ( self . vals )
16235	if m is not None ,	if m is not None :
11345	skip this loop iteration .	continue
13782	convert number to a string , truncate first element .	number = str ( number ) [ 1 : ]
14558	return string STR0 .	return STR0
14977	if vale is not an instance of ConvertingDict and value is an instance of dict type ,	if not isinstance ( value , ConvertingDict ) and isinstance ( value , dict ) :
4912	raise an CommandError exception , with an arguent : string STR0 , where STR1 is replaced for app_config.label .	raise CommandError ( STR0 % app_config . label )
820	define the function check_all_models with app_configs defaulting to None and unpacked dictionary kwargs as arguments .	def check_all_models ( app_configs = None , ** kwargs ) :
13185	return template .	return template
11106	call the method self.filter_expression.resolve with an argument context , substitute the result for output .	output = self . filter_expression . resolve ( context )
851	replace tags for check.tags .	check . tags = tags
16104	define the initialization method __init__ , with self instance of this class , convert_charrefs set to boolean False , and dictionary of arbitrary length **kwargs as arguments .	def __init__ ( self , convert_charrefs = False , ** kwargs ) :
5424	if format is not contained in _serializers ,	if format not in _serializers :
10264	define the function split_domain_port with an argument host .	def split_domain_port ( host ) :
5329	call the method self.validate_number with an argument number , substitute it for number .	number = self . validate_number ( number )
6645	from django.utils.ipv6 import is_valid_ipv6_address into default name space .	from django . utils . ipv6 import is_valid_ipv6_address
420	define the method has_key with self class instance , key and version defaulting to None as arguments .	def has_key ( self , key , version = None ) :
9811	if not ,	else :
441	if e.errno is not equal to errno.EEXIST ,	if e . errno != errno . EEXIST :
12277	if self.negate is true and val1 is not equal to val2 , or if , self.negate is false and val1 equals val2 ,	if ( self . negate and val1 != val2 ) or ( not self . negate and val1 == val2 ) :
13756	BASE16_ALPHABET is a string STR0 .	BASE16_ALPHABET = STR0
6952	import module datetime .	import datetime
7246	call the method self._set_regex with an argument regex .	self . _set_regex ( regex )
10509	status_code is an integer 410 .	status_code = 410
16244	if not ,	else :
5061	import module sys .	import sys
3720	join self.dirpath , thefile into a file path , substitute it for work_file .	work_file = os . path . join ( self . dirpath , thefile )
15498	call the method handler.addQuickElement with 2 arguments : string STR0 and value under the STR1 key of the self.feed dictionary .	handler . addQuickElement ( STR0 , self . feed [ STR1 ] )
14173	define the method __init__ with 2 arguments : self and data set to None .	def __init__ ( self , data = None ) :
5581	write STR0 to the self.stream file stream .	self . stream . write ( STR0 )
12782	call the function import_string with an argument loader , substitute the result for TemplateLoader .	TemplateLoader = import_string ( loader )
6164	calculate negative length of s , by modulus integer 4 , use the result as the number of STR0 characters to be stored in pad .	pad = STR0 * ( - len ( s ) % 4 )
15351	if not ,	else :
3597	for every ext in combo , if ext is true , join it to a string , separated by STR0 , put the result in a tuple , perform the previous for every combo in result of the function product called with 3 arguments : databases , ser_fmts and cmp_fmts , substitute the result for suffixes .	suffixes = ( STR0 . join ( ext for ext in combo if ext ) for combo in product ( databases , ser_fmts , cmp_fmts ) )
14389	raise an raise self.warning with an argument self.warning .	raise AttributeError ( self . warning )
10781	call the method self.error with 2 arguments : token and string STR0 , return the result .	raise self . error ( token , STR0 )
17898	define the method dst with 2 arguments self and dt .	def dst ( self , dt ) :
15323	from django.utils.six.moves.urllib.parse import urlparse into default name space .	from django . utils . six . moves . urllib . parse import urlparse
15903	return an property object with getter function fget , setter function fset , destructor fdel and documentation string doc .	return property ( fget , fset , fdel , doc )
12492	if parser doesnt have an STR0 attribute ,	if not hasattr ( parser , STR0 ) :
4981	call the method router.get_migratable_models with arguments app_config and connection.alias .	app_models = router . get_migratable_models ( app_config , connection . alias )
4087	if self.verbosity is greater than integer 1 ,	if self . verbosity > 0 :
16454	for every hextet in new_ip ,	for hextet in new_ip :
1458	if OSError or IOError exceptions were raised ,	except ( OSError , IOError ) :
10760	define the method create_nodelist with an argument self .	def create_nodelist ( self ) :
6864	define the method __init__ with 5 arguments : self , attrs set to None , years set to None , months set to None and empty_label set to None .	def __init__ ( self , attrs = None , years = None , months = None , empty_label = None ) :
15093	raise an ValueError exception with an argument string STR0 formated with name and e .	raise ValueError ( STR0 % ( name , e ) )
14576	if day_of_year is smaller than or equalt to jan1_weekday subtracted from integer 8 and jan1_weekday is greater than integer 4 ,	if day_of_year <= ( 8 - jan1_weekday ) and jan1_weekday > 4 :
10608	define the method with reload with an argument self .	def __str__ ( self ) :
9676	try ,	try :
348	define the method set_many with 4 arguments : self , data , timeout set to DEFAULT_TIMEOUT and version set to None .	def set_many ( self , data , timeout = DEFAULT_TIMEOUT , version = None ) :
8597	and value under the unique_for key of form.cleaned_data dictionary is not None , if lookup equals a string STR0 ,	if lookup == STR0 :
5496	if self.first is true ,	if self . first :
2453	from django.conf import settings into default name space .	from django . conf import settings
4735	replace STR1 in string STR0 with lengths of operations and ew_operations , respectively , write it to self.stdout stream .	self . stdout . write ( STR0 % ( len ( operations ) , len ( new_operations ) ) )
13862	call the method response.add_post_render_callback with _set_response_etag as argument .	response . add_post_render_callback ( _set_response_etag )
9064	substitute settings.STATIC_URL for prefix .	prefix = settings . STATIC_URL
9768	if remaining is not greater than 0 , assert an error with the message string STR0 .	assert remaining > 0 , STR0
18774	call the get_complete_version with an argument version , store the result in version .	version = get_complete_version ( version )
12648	call the function get_library with an argument taglib , substitute the result for lib .	lib = get_library ( taglib )
9424	define the method render with an argument self .	def render ( self ) :
595	define the method _cache with argument self .	def _cache ( self ) :
11248	call the function generic_tag_compiler , params set to params , varargs set to varargs , varkw set to varkw , defaults set to defaults , name set to function_name , and takes_context set to takes_context and node_class set to SimpleNode .	compile_func = partial ( generic_tag_compiler , params = params , varargs = varargs , varkw = varkw , defaults = defaults , name = function_name , takes_context = takes_context , node_class = SimpleNode )
13040	if IOError exception is caught ,	except IOError :
14601	increment doy by integer 1 .	doy += 1
14888	substitute key for result.key .	result . key = key
12253	if VariableDoesNotExist exception is caught ,	except VariableDoesNotExist :
4787	call the handle method of the base class of the Command class , with 4 arguments : string STR0 , project_name , target ,	super ( Command , self ) . handle ( STR0 , project_name , target , ** options )
6803	derive the class MinValueValidator form the BaseValidator base class .	class MinValueValidator ( BaseValidator ) :
5705	m2m_convert is a lambda function with an argument v , return value is the result of the function smart_text called with an argument : return value of the method field.rel.to._meta.pk.to_python called with an argument v .	m2m_convert = lambda v : smart_text ( field . rel . to . _meta . pk . to_python ( v ) )
10894	try ,	try :
14830	call the function warnings.warn with 3 arguments : string STR0 , formated with 3 elements : class_name , old_method_name and new_method_name , deprecation_warning and integer 2 .	warnings . warn ( STR0 % ( class_name , old_method_name , new_method_name ) , deprecation_warning , 2 )
3838	if locales is true ,	if locales :
17350	substitute iter for iterbytes .	iterbytes = iter
12570	return self.text .	return self . text
6964	from django.utils.encoding import smart_text , force_str and force_text into default name space .	from django . utils . encoding import smart_text , force_str , force_text
7030	return data .	return data
5719	all the method field.rel.to._meta.get_field with field.rel.field_name as argument , call the to_python method on the result with , unpacked list field_value as an argument , substitute the result for value of under the field.attname key of the data dictionary .	data [ field . attname ] = field . rel . to . _meta . get_field ( field . rel . field_name ) . to_python ( field_value )
6780	call the re.compile function with an argument raw string STR0 , substitute the result for comma_separated_int_list_re .	comma_separated_int_list_re = re . compile ( STR0 )
14168	derive the class SortedDict from the dict base class .	class SortedDict ( dict ) :
1718	if response is None ,	if response is None :
14356	call the method copy.copy with an argument self , return the result .	return copy . copy ( self )
16113	set field cdata_tag for this class instance to None .	self . cdata_tag = None
11462	if key is contained in last element of self.dicts , return boolean True , otherwise return boolean False .	return key in self . dicts [ - 1 ]
3658	import module os .	import os
12983	options is an empty dictionary .	options = { }
6184	is_compressed is boolean True .	is_compressed = True
4386	if self.use_ipv6 is true and socket.has_ipv6 is false ,	if self . use_ipv6 and not socket . has_ipv6 :
7598	get the value under the STR0 key of the kwargs dictionary , substitute it for localize , if the key doesnt exists , substitute the result for localize .	localize = kwargs . get ( STR0 , False )
4990	return output .	return output
8399	if instance is None ,	if instance is None :
5341	if TypeError or AttributeError exceptions are caught ,	except ( AttributeError , TypeError ) :
479	call the _caches.setdefault method with name and empty dictionary as arguments , substitute the result for self_cache .	self . _cache = _caches . setdefault ( name , { } )
17286	if not ,	else :
8455	call the method self.fields.items , for every name and field in result ,	for name , field in self . fields . items ( ) :
14114	call the method __copy__ with an argument unpacked list self.dicts , return the result .	return self . __class__ ( * self . dicts )
11679	decorator stringfilter ,	@ stringfilter
14226	substitute _iteritems for iteritems .	iteritems = _iteritems
18249	call the function to_locale with an argument language , substitute it for self.__locale .	self . __locale = to_locale ( language )
9362	join elements of output into a string , separated with newline character , use it as an argument for the call to the mark_safe function , return the result .	return mark_safe ( STR0 . join ( output ) )
10560	from django.utils.html import escape into default name space .	from django . utils . html import escape
13881	define function has_vary_header , with response and header_query as arguments .	def has_vary_header ( response , header_query ) :
5837	define the function handle_m2m with an argument value ,	def handle_m2m ( value ) :
10762	define the method extend_nodelist with 4 arguments : self , nodelist , node and token .	def extend_nodelist ( self , nodelist , node , token ) :
4026	return nothing .	return
14495	if self.data.minute equals integer 0 and self.data.hour equals integer 12 ,	if self . data . minute == 0 and self . data . hour == 12 :
11842	return value .	return value
8580	seen_data is an empty set .	seen_data = set ( )
18295	return self.__to_language .	return self . __to_language
8371	instantiate class ModelFormOptions with argument : attribute STR0 of the new_class object . if it exists or None , if not , assign the result to opts and new_class._meta .	opts = new_class . _meta = ModelFormOptions ( getattr ( new_class , STR0 , None ) )
13753	call the function check_errors with argument main_func , substitute the result for wrapped_main_func .	wrapped_main_func = check_errors ( main_func )
5347	if self.count equals a integer 0 and self.allow_empty_first_page is false ,	if self . count == 0 and not self . allow_empty_first_page :
11916	substitute ( i+1 ) -th element of list_ for next_item .	next_item = list_ [ i + 1 ]
17759	for every c in phone converted to lowercase , join the value under the c key of the char2number dictionary into a string , return it .	return STR . join ( char2number . get ( c , c ) for c in phone . lower ( ) )
3915	sort all_files and return it .	return sorted ( all_files )
8869	raise an ValidationError exception with 2 arguments : value under the STR0 key of the self.error_messages dictionary , code set to a string STR1 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 )
2697	if not ,	else :
15371	categories is a list containing the results of the function to_unicode , called with an argument c , for every c in categories .	if categories :
11124	call the method kwarg_re.match with an argument first element of bits , substitute the result for match .	match = kwarg_re . match ( bits [ 0 ] )
14698	subtract year from integer 2000 , divide the result by integer 28 , floor the result , multiply it with 28 and increment by year , substitute the result for year .	year = year + ( ( 2000 - year ) // 28 ) * 28
16763	call the function importlib_find with 2 arguments : full_module_name and package_path , if the result is not None , return boolean True , otherwise return boolean False .	return importlib_find ( full_module_name , package_path ) is not None
5510	define the method handle_fk_field with argument self , obj and field .	def handle_fk_field ( self , obj , field ) :
13863	if not ,	else :
11457	derive the class RenderContext from the BaseContext base class .	class RenderContext ( BaseContext ) :
10464	property decorator ,	@ property
9710	call the method base64.b64decode with an argument chunk , substitute the result for chunk .	chunk = base64 . b64decode ( chunk )
9565	define the method load with self class instance and rawdata as arguments .	def load ( self , rawdata ) :
16267	define the function int_to_base36 with an argument i .	def int_to_base36 ( i ) :
9449	if renderer is true ,	if renderer :
13309	call the method self.translate_token with an argument token , append the result to mapped_tokens .	mapped_tokens . append ( self . translate_token ( token ) )
2544	if cword equlals a integer 1 ,	if cword == 1 :
7688	return new_class .	return new_class
16606	_CacheInfo is an instance of namedtuple class created with 2 arguments : string STR0 and a list with 4 elements : string STR4 , STR1 , STR2 and STR3 .	_CacheInfo = namedtuple ( STR0 , [ STR1 , STR2 , STR3 , STR4 ] )
8334	value under STR0 key of kwargs dictionary is boolean True .	kwargs [ STR0 ] = True
15493	define the method add_root_elements with 2 arguments : self and handler .	def add_root_elements ( self , handler ) :
5517	derive the class Deserializer from the six.Iterator base class .	class Deserializer ( six . Iterator ) :
7978	add self.form.error_css_class to extra_classes set .	extra_classes . add ( self . form . error_css_class )
9385	label_for is an empty string .	label_for = STR
13074	try ,	try :
16329	substitute length of package for dot .	dot = len ( package )
446	join into a string : md5 hash sum of force_bytes ( key ) and self.cache_suffix , compose root file path out of self._dir and previous result , return it .	return os . path . join ( self . _dir , STR . join ( [ hashlib . md5 ( force_bytes ( key ) ) . hexdigest ( ) , self . cache_suffix ] ) )
18134	define the function deactivate_all .	def deactivate_all ( ) :
9086	return combined .	return combined
8348	append a tuple with 2 elements : f.name and formfield to field_list .	field_list . append ( ( f . name , formfield ) )
4889	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
17602	if role is contained in value under the NOCOLOR_PALETTE key of the PALETTES dictionary and definition is true ,	if role in PALETTES [ NOCOLOR_PALETTE ] and definition :
12387	if settings.SETTINGS_MODULE is true ,	if settings . SETTINGS_MODULE :
14538	call the method calendar.isleap with an argument self.data.year , return the result .	return calendar . isleap ( self . data . year )
5455	call the function register_serializer with 3 arguments : format , value under the format key of the settings.SERIALIZATION_MODULES dictionary and serializers .	register_serializer ( format , settings . SERIALIZATION_MODULES [ format ] , serializers )
9957	substitute elements of s from the end index to end for s .	s = s [ end : ]
9373	substitute attrs for self.attrs .	self . attrs = attrs
3930	write errors to self.stdout .	self . stdout . write ( errors )
11371	_builtin_context_processors is a tuple containing a string STR0 .	_builtin_context_processors = ( STR0 , )
6730	raise a ValidationError exception with arguments self.message and code set to self.code .	raise ValidationError ( self . message , code = self . code )
742	define the function _check_boolean_field_default_value with app_config set to None and kwargs dictionary as arguments .	def _check_boolean_field_default_value ( app_configs = None , ** kwargs ) :
11141	if takes_context is true ,	if takes_context :
437	if self._dir path doesnt exists ,	if not os . path . exists ( self . _dir ) :
1713	substitute resolver_match for request.resolver_match .	request . resolver_match = resolver_match
5113	if second last element of django.VERSION is not equal to a string STR0 ,	if django . VERSION [ - 2 ] != STR0 :
12581	define the function do_if with 2 arguments : parser and token .	def do_if ( parser , token ) :
12450	call the method token.contents.split , substitute the result for args .	args = token . contents . split ( )
6237	import module re .	import re
9124	if self.choices is true ,	if self . choices :
6088	call the method sys.stderr.write with an argument string STR0 , where STR1 is replaced by e .	sys . stderr . write ( STR0 % e )
6058	call the httpd_cls function with 4 arguments : server_address , WSGIRequestHandler and ipv6 set to ipv6 , substitute the result for httpd .	httpd = httpd_cls ( server_address , WSGIRequestHandler , ipv6 = ipv6 )
10209	call the method appendlist from the base class of the QueryDict class , with arguments key and value .	super ( QueryDict , self ) . appendlist ( key , value )
3401	if extra_params is true ,	if extra_params :
14156	if key is contained in dict_ ,	if key in dict_ :
8931	try ,	try :
3491	from itertools import product into default name space .	from itertools import product
12955	substitute second element for bits for block_name .	block_name = bits [ 1 ]
16870	otherwise if ch equals a string STR0 ,	elif ch == STR0 :
1643	import module types .	import types
10312	self.cookies is an instance of a class SimpleCookie .	self . cookies = SimpleCookie ( )
7729	call the method self.fields.items , for every name and field in return value ,	for name , field in self . fields . items ( ) :
12815	if template has an attribute STR0 ,	if not hasattr ( template , STR0 ) :
1509	if settings.FILE_UPLOAD_TEMP_DIR is true ,	if settings . FILE_UPLOAD_TEMP_DIR :
2046	derive the class EmailBackend from the ConsoleEmailBackend base class .	class EmailBackend ( ConsoleEmailBackend ) :
9566	self.bad_cookies is an empty set .	self . bad_cookies = set ( )
920	do nothing .	pass
2347	convert name to lower case if it equals to string STR0 or 'to ,	if name . lower ( ) in ( STR0 , STR1 ) :
6321	return an instance of a class RegexURLResolver created with arguments : raw string STR0 and a list containing an element ns_resolver .	return RegexURLResolver ( STR0 , [ ns_resolver ] )
2859	from django.utils import termcolors into default name space .	from django . utils import termcolors
18082	if KeyError exception is caught ,	except KeyError :
18579	call the method bmatch.group with an argument integer 1 , use the result as an argument for the call to the function context_re.match , substitute the result for context_match .	context_match = context_re . match ( bmatch . group ( 1 ) )
18654	call the function copy.deepcopy with 2 arguments : self.children and memodict , substitute the result for obj.children .	obj . children = copy . deepcopy ( self . children , memodict )
17170	define the method _resolve with an argument self .	def _resolve ( self ) :
4945	cursor is None .	cursor = None
5031	append the result to sql_files . join into a file path : app_dir and string % s. % s.sql , where STR0 is replaced by opts.model_name , append the result to sql_files .	sql_files . append ( os . path . join ( app_dir , STR0 % opts . model_name ) )
10958	convert provided into a list and substitute it for provided .	provided = list ( provided )
6334	call the function get_language , substitute the result for language_code .	language_code = get_language ( )
2487	if command.use_argparse is true ,	if command . use_argparse :
9045	self._js is an empty list .	self . _js = [ ]
7683	call the method base.__dict__.items , for every attr and value in the result ,	for attr , value in base . __dict__ . items ( ) :
15247	if PY3 filed of six is boolean True ,	if six . PY3 :
13090	if template_tuple is contained in TemplateDoesNotExist ,	if template_tuple is TemplateDoesNotExist :
14388	if not ,	else :
10129	define the method read with 3 arguments : self , unpacked list args and unpacked dictionary kwargs .	def read ( self , * args , ** kwargs ) :
9207	call the function format_html with 2 arguments : string STR0 , return value of the function flatatt , called with an argument , input_attrs , append the result to inputs list .	inputs . append ( format_html ( STR0 , flatatt ( input_attrs ) ) )
1149	endless while loop ,	while 1 :
9801	define the method __init__ with arguments self , flo and chunk_size set to integer 64 multiplied by integer 1024 .	def __init__ ( self , flo , chunk_size = 64 * 1024 ) :
4048	if self.dry_run is false ,	if not self . dry_run :
18549	value under the comment_lineno_cache key of the lineno_comment_map dictionary is an empty string .	lineno_comment_map [ comment_lineno_cache ] = [ ]
7215	default_error_messages is an dictionary with an entry : return value of the function _ called with an argument string STR0 for STR1 .	default_error_messages = { STR0 : _ ( STR1 ) , }
120	else if timeout equals to integer 0 ,	elif timeout == 0 :
7438	return an empty list .	return [ ]
5054	import module errno .	import errno
10272	add bits to a tuple , return it .	return tuple ( bits )
7622	call the method validators.ip_address_validators with arguments protocol , unpack_ipv4 , substitute first element of the result for self.default_validators .	self . default_validators = validators . ip_address_validators ( protocol , unpack_ipv4 ) [ 0 ]
13567	USE_INOTIFY is boolean False .	USE_INOTIFY = False
16187	import module calendar .	import calendar
14817	renamed_methods is an tuple .	renamed_methods = ( )
17172	define the method __getattr__ with 2 arguments : self and attr set to None .	def __getattr__ ( self , attr ) :
17421	if arg is an instance of unicode ,	if isinstance ( arg , unicode ) :
16777	if call to the method finder.find_module with 2 arguments : name and package_path evaluates to true ,	if finder . find_module ( name , package_path ) :
502	return default .	return default
12015	substitute first , second and second elements of bits for yes , no , maybe , respectively .	yes , no , maybe = bits [ 0 ] , bits [ 1 ] , bits [ 1 ]
12074	if Exception , renamed to e , exception is caught ,	except Exception as e :
15668	append decimals to parts .	parts . append ( decimals )
2705	if self.args is true ,	if self . args :
8662	call the method self.get_queryset , substitute field pk under the result at the index index for pk_value .	pk_value = self . get_queryset ( ) [ index ] . pk
1285	from django.utils.encoding import force_text and filepath_to_uri into default name space .	from django . utils . encoding import force_text , filepath_to_uri
4896	call the method warnings.warn with string STR2 and RemovedInDjango19Warning as arguments .	warnings . warn ( STR2 , RemovedInDjango19Warning )
14095	from collections import OrderedDict into default name space .	from collections import OrderedDict
15510	for every cat in value under the STR0 key of the self.feed dictionary .	for cat in self . feed [ STR0 ] :
11512	return result .	return result
17185	substitute self.__class__.__doc__ for self.__doc__ .	self . __doc__ = self . __class__ . __doc__
17446	call the method type.__new__ with 4 arguments : cls , name , empty tuple and d , return the result .	return type . __new__ ( cls , name , ( ) , d )
18766	call the function get_git_changeset , store the result in git_changeset .	git_changeset = get_git_changeset ( )
431	if self._cull_frequency equals to integer 0 .	if self . _cull_frequency == 0 :
978	if self has an STR0 attribute ,	if hasattr ( self , STR0 ) :
7483	call the method __init__ with 2 arguments : unpacked list args and unpacked dictionary kwargs , from the base class of the class ComboField .	super ( ComboField , self ) . __init__ ( * args , ** kwargs )
4972	call the method connection.introspection.django_table_names with an argument boolean true , substitute the result for tables .	tables = connection . introspection . django_table_names ( only_existing = True )
11631	if ValueError , InvalidOperation , TypeError or UnicodeEncodeError exceptions are caught ,	except ( ValueError , InvalidOperation , TypeError , UnicodeEncodeError ) :
15148	if string STR0 is contained in config ,	if STR0 in config :
17274	raise an AttributeError with an argument string STR0 , formated with a tuple with an element name .	raise AttributeError ( STR0 % ( name , ) )
12310	call the method self.expression.resolve with 2 arguments : context and boolean True , return the result .	return self . expression . resolve ( context , True )
9910	outdict is an empty dictionary .	outdict = { }
7984	return self.field.widget.is_hidden ,	return self . field . widget . is_hidden
1266	read chunk_size bytes from the old_file file , substitute the result for current_chunk .	current_chunk = old_file . read ( chunk_size )
2991	from django.core.cache import caches into default name space .	from django . core . cache import caches
6373	define the method callback with an argument self .	def callback ( self ) :
16503	call the method match.group with an arugument name , substitute the result for toktext .	toktext = match . group ( name )
13831	cc is an empty dictionary .	cc = { }
5873	m2m_data is an empty dictionary .	m2m_data = { }
16263	convert s to integer of base 36 , substitute it for value .	value = int ( s , 36 )
8185	call the method self.clean .	self . clean ( )
8895	substitute self.to_field_name , if true , for key , or if not , substitute string STR0 for key .	key = self . to_field_name or STR0
6048	call the self.style.HTTP_BAD_REQUEST with an argument msg , substitute it for msg .	msg = self . style . HTTP_BAD_REQUEST ( msg )
15081	get the index of first occurrence of name in existing , substitute it for i .	i = existing . index ( name )
17653	if truncate is None ,	if truncate is None :
7472	return new_value .	return new_value
16753	from importlib.util import find_spec as importlib_find .	from importlib . util import find_spec as importlib_find
1330	raise an NotImplementedError exception with argument string STR0 .	raise NotImplementedError ( STR0 )
18784	return version	return version
2724	args is an empty tuple .	args = ( )
17348	call te method operator.itemgetter with an argument integer 0 , substitute the result for byte2int .	byte2int = operator . itemgetter ( 0 )
12114	call the function format_html with an argument empty string , return the result .	return format_html ( STR )
13458	define the method extract with 2 arguments : self and to_path set to an empty string .	def extract ( self , to_path = STR ) :
4832	define the method run_from_argv with arguments self and argv .	def run_from_argv ( self , argv ) :
4835	if arg starts with options ,	if arg . startswith ( option ) :
4786	call the function get_random_string with 2 arguments : integer 50 and chars , substitute it for value under the STR0 of the options dictionary .	options [ STR0 ] = get_random_string ( 50 , chars )
15472	if value under the STR0 key of the item dictionary is not None ,	if item [ STR0 ] is not None :
12105	return output .	return output
4911	if app_config.label is contained in loader.migrated_apps ,	if app_config . label in loader . migrated_apps :
12905	define the method __repr__ with an argument self .	def __repr__ ( self ) :
6231	if age is greater than max_age ,	if age > max_age :
15855	call the function new_method_proxy with an argument bool , substitute the result for __bool__ .	__bool__ = new_method_proxy ( bool )
12974	call the method parser.parse , substitute the result for nodelist .	nodelist = parser . parse ( )
16220	call the function allow_lazy with 2 arguments : urlunquote_plus and six.text_type , substitute the result for urlunquote_plus .	urlunquote_plus = allow_lazy ( urlunquote_plus , six . text_type )
18492	if not ,	else :
12958	raise an TemplateSyntaxError exception with an argument string STR0 , substitute STR1 with first element of bits and block_name , respectively .	raise TemplateSyntaxError ( STR0 % ( bits [ 0 ] , block_name ) )
14556	return string STR0 .	return STR0
7429	define the method clean with arguments self and value .	def clean ( self , value ) :
4175	call the executor.migration_plan method with targets as the argument , substitute the result for plan .	plan = executor . migration_plan ( targets )
2786	infos , STR0 for every issues and group_name in sorted_issues ,	for issues , group_name in sorted_issues :
18755	if ImportError exception is caught ,	except ImportError :
13469	index of the first occurrence of STRspecial in path , or alternatively if STRspecial is not contained in path , split path in two parts by STR0 character , return the result .	return path . split ( STR0 , 1 )
16582	define the connection with an argument self .	def connection ( self ) :
755	call the function settings.is_overridden with argument string STR0 , if the result is boolean False ,	if not settings . is_overridden ( STR0 ) :
12328	define the method render with 2 arguments : self and context .	def render ( self , context ) :
352	define the method clear with argument self .	def clear ( self ) :
18413	try ,	try :
14358	if length of args is greater than integer 1 ,	if len ( args ) > 1 :
13578	I18N_MODIFIED is integer 2	I18N_MODIFIED = 2
7928	if not ,	else :
5620	return r .	return r
17267	define the function remove_move with an argument name .	def remove_move ( name ) :
4117	from django.db.migrations.executor import MigrationExecutor into default name space .	from django . db . migrations . executor import MigrationExecutor
245	define the protected method _base_set with 4 arguments , self class instance , key , value and timeout set to DEFAULT_TIMEOUT .	def _base_set ( self , mode , key , value , timeout = DEFAULT_TIMEOUT ) :
10269	return host and an empty string .	return host , STR
13114	derive the class Loader from the BaseLoader base class .	class Loader ( BaseLoader ) :
7261	define the method clean with 2 arguments self and value .	def clean ( self , value ) :
14563	call the method calendar.monthrange with 2 arguments : self.data.year and self.data.month , format string STR0 with the second element of the result , return it .	return STR0 % calendar . monthrange ( self . data . year , self . data . month ) [ 1 ]
16839	if use_grouping is true ,	if use_grouping :
9573	evaluate the function force_str with key as the argument , substitute it for key .	key = force_str ( key )
9461	define the method render with 5 arguments : self , name , value , attrs set to None and choices set to an empty tuple .	def render ( self , name , value , attrs = None , choices = ( ) ) :
17163	call the __init__ method with an argument name from the base class of the MovedModule class .	super ( MovedModule , self ) . __init__ ( name )
1822	if size is None ,	if size is None :
15027	if name is not contained in logging._handlers ,	if name not in logging . _handlers :
11451	return duplicate	return duplicate
18706	define the method __getinitargs__ with an argument self .	def __getinitargs__ ( self ) :
15440	call the method handler.addQuickElement with 2 arguments : string STR0 and value under the STR1 key of the self.feed dictionary .	handler . addQuickElement ( STR0 , self . feed [ STR1 ] )
713	errors is an empty list	errors = [ ]
17930	return ZERO .	return ZERO
3824	convert settings.LOCALE_PATHS into a list and extend list self.locale_paths with it .	self . locale_paths . extend ( list ( settings . LOCALE_PATHS ) )
14975	return d .	return d
16435	return boolean True .	return True
16268	digits is a string STR0 .	digits = STR0
13682	raise an exception .	raise
14709	syear is a string STR0 formated with dt.year .	syear = STR0 % ( dt . year , )
5852	call the method self.indent with argument integer 2 .	self . indent ( 2 )
7872	append field.widget.media to media , substitute the result for media .	media = media + field . widget . media
12429	if ValueError , TypeError or OverflowError exceptions are caught ,	except ( ValueError , TypeError , OverflowError ) :
11166	try ,	try :
13497	for every member in members ,	for member in members :
15075	convert root.manager.loggerDict into a list , substitute it for existing .	existing = list ( root . manager . loggerDict )
7243	substitute error_message for value under the STR0 key of the error_messages dictionary .	error_messages [ STR0 ] = error_message
11281	if func is None ,	if func is None :
1481	from django.conf import settings into default name space .	from django . conf import settings
17892	define the method __repr__ with an argument self .	def __repr__ ( self ) :
10901	var_obj is an instance of Variable class , created with an argument var .	var_obj = Variable ( var )
9851	break the loop execution .	break
5565	self._current is None .	self . _current = None
6727	define the method __call__ with arguments self and value .	def __call__ ( self , value ) :
2522	try ,	try :
8800	define the method _has_changed with 3 arguments : self , initial and data .	def _has_changed ( self , initial , data ) :
4056	value under the all_label key of the directory_created dictionary is boolean True .	directory_created [ app_label ] = True
13305	substitute i-th element of tokens for token .	token = tokens [ i ]
5704	if not ,	else :
12291	return an instance of a NodeList class , created with arguments node , for every node in nodelist , and for every _ , nodelist in self.conditions_nodelists .	return NodeList ( node for _ , nodelist in self . conditions_nodelists for node in nodelist )
16160	call the method self.handle_starttag , with tag and attrs as the arguments .	self . handle_starttag ( tag , attrs )
4742	subclass is a class named Migration , sub classed from migrations.Migration base class , with fields dependencies set to an empty list , dependencies set to new_operations and replaces set to replaces .	subclass = type ( STR0 , ( migrations . Migration , ) , { STR1 : [ ] , STR2 : new_operations , STR3 : replaces , } )
11982	call the function timesince with 2 arguments : value and arg , return the result .	return timesince ( value , arg )
13269	return self .	return self
17430	if sep is None ,	if sep is None :
15020	EMPTY_DICT is an empty dictionary .	EMPTY_DICT = { }
15176	call function _checkLevel with an argument level , use the result as an argument for the method result.setLevel .	result . setLevel ( _checkLevel ( level ) )
11648	call the method d.as_tuple , substitute the result for tupl .	tupl = d . as_tuple ( )
5887	call the method field_node.getElementsByTagName with an argument string STR0 , if it evaluates to true ,	if field_node . getElementsByTagName ( STR0 ) :
13886	check if lowercase header_query exists is existing_headers , return the boolean result .	return header_query . lower ( ) in existing_headers
9447	define the method __init__ with 3 arguments : self , unpacked list args and unpacked dictionary kwargs .	def __init__ ( self , * args , ** kwargs ) :
3709	otherwise if domains equals a string django STR0.py ' or file_ext is contained in command.extensions ,	elif domain == STR0 and ( file_ext == STR1 or file_ext in command . extensions ) :
13889	call the function getattr with request , string STR0 and function get_language as arguments , append the result at the end of string STR1 , append it all at the end of string cache_key .	cache_key += STR0 % getattr ( request , STR1 , get_language ( ) )
12378	from django.core.urlresolvers import reverse , NoReverseMatch .	from django . core . urlresolvers import reverse , NoReverseMatch
16641	if maxsize equals integer 0 ,	if maxsize == 0 :
1973	define the function mail_admins with subject , message , fails_silently set to boolean False , connection set to None ,	def mail_admins ( subject , message , fail_silently = False , connection = None , html_message = None ) :
12243	define the method render with 2 arguments : self and context .	def render ( self , context ) :
16904	raise an ValueError with an argument string STR0 formated with ch .	raise ValueError ( STR0 % ch )
9132	if attrs is not None ,	if attrs is not None :
9380	call the method self.render , return the result .	return self . render ( )
17034	zip elements of result and result_args into a list of tuples , for every item and args in the result ,	for item , args in zip ( result , result_args ) :
8999	define the method __eq__ with an argument self .	def __eq__ ( self , other ) :
10186	define the method __copy__ with an argument self .	def __copy__ ( self ) :
9931	call the function parse_boundary_stream with 2 arguments : sub_stream and integer 1024 , yield the result as the return value of the generator .	yield parse_boundary_stream ( sub_stream , 1024 )
908	return an dictionary containing 1 entry : settings.STATIC_URL for STR0 .	return { STR0 : settings . STATIC_URL }
5164	define the method handle_template with 3 arguments : self , template and subdir .	def handle_template ( self , template , subdir ) :
11361	raise an InvalidTemplateLibrary exception with an argument string STR0 , where STR1 is replaced with library_name and elements of tried_modules joined into a string , separated by STR2 .	raise InvalidTemplateLibrary ( STR0 % ( library_name , STR1 . join ( tried_modules ) ) )
14313	try ,	try :
1282	from django.core.exceptions import SuspiciousFileOperation into default name space .	from django . core . exceptions import SuspiciousFileOperation
10595	derive the class VariableDoesNotExist form the base class Exception .	class VariableDoesNotExist ( Exception ) :
18246	call the method gettext_module.GNUTranslations.__init__ with an argument self .	gettext_module . GNUTranslations . __init__ ( self )
16218	define the function urlunquote with an argument quoted_url .	def urlunquote_plus ( quoted_url ) :
11266	call the method self.get_resolved_arguments with an argument context , substitute the result for resolved_args and resolved_kwargs .	resolved_args , resolved_kwargs = self . get_resolved_arguments ( context )
18321	if base_lang is contained in settings.LANGUAGES_BIDI , return boolean True , if not , return boolean False .	return base_lang in settings . LANGUAGES_BIDI
4472	call the method app.initialize with an argument argv as an empty list .	app . initialize ( argv = [ ] )
6575	if args in None of boolean False , substitute it for an empty dictionary .	kwargs = kwargs or { }
16126	if endpos is lesser than zero ,	if endpos < 0 :
17107	if s is an instance of bytes or Promise and s._delegate_bytes is true ,	if isinstance ( s , bytes ) or ( isinstance ( s , Promise ) and s . _delegate_bytes ) :
7571	append a tuple with 2 elements : f and f with first occurrence of the path replaced with an empty string , to self.choices .	self . choices . append ( ( f , f . replace ( path , STR , 1 ) ) )
1054	substitute size for self._size .	self . _size = size
3740	append orig_file to string STR0 , substitute it for new .	new = STR0 + orig_file
14056	if OSError , renamed to e , exception is caught ,	except OSError as e :
16279	bring integer 36 to the power of factor , if i is smaller than the result ,	if i < 36 ** factor :
8858	call the method value.serializable_value with an argument self.to_field_name , return the result .	return value . serializable_value ( self . to_field_name )
15803	if not ,	else :
16412	return boolean False .	return False
15892	decorator function wraps with an argument fget .	@ wraps ( fget )
16080	middle is a string STR1 formated with url , nofollow_attr and trimmed .	middle = STR1 % ( url , nofollow_attr , trimmed )
10347	replace STR0 in string STR1 for charset , append it to e.reason .	e . reason += STR0 % charset
1608	raise an exception StopFutureHandlers .	raise StopFutureHandlers ( )
13295	define the method nud with 2 arguments : self and parser .	def nud ( self , parser ) :
7972	call the function mark_safe with an argument contents , return the result .	return mark_safe ( contents )
608	convert timeout into an integer , return it .	return int ( timeout )
10407	call the method self.has_header with string STR0 as an argument , if it evaluates to true ,	if self . has_header ( STR0 ) :
18302	if language is contained in _DJANGO_DEPRECATED_LOCALES ,	if language in _DJANGO_DEPRECATED_LOCALES :
10496	self._container is an list .	self . _container = [ ]
17756	call the function allow_lazy with 2 arguments : normalize_newlines and six.text_type , substitute the result for normalize_newlines .	normalize_newlines = allow_lazy ( normalize_newlines , six . text_type )
15887	return result .	return result
6847	escaped is boolean False .	escaped = False
4484	return nothing .	return
4417	from django.conf import settings into default namespace .	from django . conf import settings
867	define the method tag_exists with self class instance and tag as arguments .	def tag_exists ( self , tag ) :
18232	if not ,	else :
2691	call the method parser.add_option with 2 arguments : string STR1 and help as a string 'The Python path to a settings module , e.g . STR0 . If this isnSTRt provided , the DJANGO_SETTINGS_MODULE environment variable will be used .	parser . add_option ( STR1 , help = STR2 )
16495	substitute self.state for state .	state = self . state
17212	derive class _MovedItems from the _LazyModule base class .	class _MovedItems ( _LazyModule ) :
5356	page_range is a property object with _get_page_range as a getter method .	page_range = property ( _get_page_range )
9807	if InputStreamExhausted exception is caught ,	except InputStreamExhausted :
1825	otherwise if size is less than length of self.buffer ,	elif size < len ( self . buffer ) :
14115	define the method get with 3 arguments : self , key and default set to None .	def get ( self , key , default = None ) :
2107	from django.core.mail.utils import DNS_NAME into default name space .	from django . core . mail . utils import DNS_NAME
13117	if resource_string is not None ,	if resource_string is not None :
10338	if not ,	else :
3117	get the value under the STR0 key of the options dictionary , substitute the result for use_natural_foreign_keys .	use_natural_foreign_keys = options . get ( STR0 ) or use_natural_keys
11271	call the function token.split_contents , substitute the result without the first element for bits .	bits = token . split_contents ( ) [ 1 : ]
8775	substitute HiddenInput for widget .	widget = HiddenInput
7504	for every x in self.fields call the method x.__deepcopy__ with an argument memo , put the result into a tuple , substitute it for result.fields .	result . fields = tuple ( [ x . __deepcopy__ ( memo ) for x in self . fields ] )
8664	pk_value is None .	pk_value = None
3896	otherwise if dirname equals string STR0 ,	elif dirname == STR0 :
18544	filemsg is an empty string .	filemsg = STR
2625	derive the CommandParser class from the ArgumentParser base class .	class CommandParser ( ArgumentParser ) :
2407	if filename is true ,	if filename :
10539	from django.template.base import ContextPopException , InvalidTemplateLibrary , TemplateDoesNotExist , TemplateEncodingError , TemplateSyntaxError and VariableDoesNotExist .	from django . template . base import ( ContextPopException , InvalidTemplateLibrary , TemplateDoesNotExist , TemplateEncodingError , TemplateSyntaxError , VariableDoesNotExist )
6381	substitute urlconf_name for self.urlconf_name .	self . urlconf_name = urlconf_name
536	return boolean True .	return True
1403	if OSError , renamed to e , is caught ,	except OSError as e :
4320	shown is an empty set .	shown = set ( )
826	errors is an empty list .	errors = [ ]
12769	define the method reload with an argument self .	def reload ( self ) :
14223	substitute _iterkeys for keys .	keys = _iterkeys
11442	substitute autoescape for self.autoescape .	self . autoescape = autoescape
17489	import dummy_threading as threading .	import dummy_threading as threading
17465	_assertRegex is a strnig STR0 .	_assertRegex = STR0
7221	if value is contained in self.empty_values ,	if value in self . empty_values :
16697	define the function cache_clear .	def cache_clear ( ) :
11489	call the function processor with an argument request , update updates dictionary with the result .	updates . update ( processor ( request ) )
4424	try ,	try :
10038	return value .	return value
12236	remove the first element of context .	context . pop ( )
12822	call the function select_template with 2 arguments : template_name , dirs , substitute the result for t .	t = select_template ( template_name , dirs )
7714	return an instance of BoundField class , created with arguments self , field and name .	return BoundField ( self , field , name )
18079	if rhs is an instance of dict type and number is true ,	if isinstance ( rhs , dict ) and number :
18700	if not ,	else :
16285	floor the division of i by j , use it an an index to get the element of the digits list , append the result for base36 .	base36 . append ( digits [ i // j ] )
17614	from django.utils.encoding import force_text into default name space .	from django . utils . encoding import force_text
5619	substitute first 12 elements of r for r .	r = r [ : 12 ]
4412	if use_reloader is true ,	if use_reloader :
14947	define the method cfg_convert with 2 arguments : self and value .	def cfg_convert ( self , value ) :
9018	define the function to_current_timezone with an argument value .	def to_current_timezone ( value ) :
11038	try ,	try :
14882	define the method pop with 3 arguments : self , key and default set to None .	def pop ( self , key , default = None ) :
12938	call the method self.template.resolve with an argument context , substitute the result for template .	template = self . template . resolve ( context )
1351	try ,	try :
8244	from django.forms.widgets import SelectMultiple , HiddenInput , MultipleHiddenInput into default namespace .	from django . forms . widgets import ( SelectMultiple , HiddenInput , MultipleHiddenInput )
18269	call the function self._new_gnu_trans with 2 arguments : localedir and use_null_fallback , substitute the result for translation .	translation = self . _new_gnu_trans ( localedir , use_null_fallback )
9497	call the method self.format_output with an argument output , use the result as an argument for the call to the function mark_safe , return the result .	return mark_safe ( self . format_output ( output ) )
8893	if value is not an instance of list or tuple types ,	if not isinstance ( value , ( list , tuple ) ) :
4306	define show_migration_list with self class instance , connection and app_names set to None , as arguments .	def show_migration_list ( self , connection , app_names = None ) :
10530	response.content is bytes empty string .	response . content = STR
11114	call the method kwarg_re.match with an argument first element of bits , substitute the result for match .	match = kwarg_re . match ( bits [ 0 ] )
6762	call the function is_valid_ipv6_address with an argument value , if it evaluates to false ,	if not is_valid_ipv6_address ( value ) :
13147	try ,	try :
16140	if rest is not False , None is considered False ,	if not rest :
1794	from django import http into default name space .	from django import http
11877	decorator function register.filter with 2 arguments is_safe set to boolean True and needs_autoescape set to boolean True .	@ register . filter ( is_safe = True , needs_autoescape = True )
18653	substitute self.__class__ for obj.__class__ .	obj . __class__ = self . __class__
17256	derive class Module_six_moves_urllib from the types.ModuleType base class .	class Module_six_moves_urllib ( types . ModuleType ) :
5083	call the method parser.add_argument with 6 arguments : string STR0 , string STR1 , dest set to string STR2 , action set to string STR3 , default as an empty list and help set to a string : STR4 .	parser . add_argument ( STR0 , STR1 , dest = STR2 , action = STR3 , default = [ ] , help = STR4 )
14096	from django.utils import six into default name space .	from django . utils import six
7882	for field in self if field.is_hidden is false , append field to a list , return the resulting list .	return [ field for field in self if not field . is_hidden ]
16523	lexer is an instance of JsLexer class .	lexer = JsLexer ( )
9172	define the method __init__ with 2 arguments : self and attrs set to None .	def __init__ ( self , attrs = None ) :
10992	try ,	try :
2196	from email.header import Header into default name space .	from email . header import Header
529	substitute pickled for value under the key key of self._cache dictionary .	self . _cache [ key ] = pickled
282	if not ,	else :
9864	slice chunk list to get the last rollback elements , if the new list is not empty ,	if not chunk [ : - rollback ] :
7905	call the method self.field.widget.subwidgets with 3 arguments : self.html_name , return value of the method self.value and attrs , for every subwidget in the result ,	for subwidget in self . field . widget . subwidgets ( self . html_name , self . value ( ) , attrs ) :
1582	define the method file_complete with arguments : self and file_size .	def file_complete ( self , file_size ) :
12348	return an empty string ,	return STR
8352	if fields is true ,	if fields :
1433	define the method modified_time with arguments self and name .	def modified_time ( self , name ) :
17717	call the method m.group with an argument integer 0 , use it as an argument for the call to the re_tag.match function , substitute the result for tag .	tag = re_tag . match ( m . group ( 0 ) )
1964	if connection exists dont modify it , if not call get_connection function with username set to auth_user , password set to auth_password , fail_silently set to fail_silently as arguments , assign it to connection .	connection = connection or get_connection ( username = auth_user , password = auth_password , fail_silently = fail_silently )
13399	define the function rmtree_errorhandler with 3 arguments func , path and exc_info .	def rmtree_errorhandler ( func , path , exc_info ) :
13658	decrement mtime by stat.st_ctime .	mtime -= stat . st_ctime
9263	call the method self.build_attrs with 2 arguments : attrs and name set to name , substitute the result for final_attrs .	final_attrs = self . build_attrs ( attrs , name = name )
2115	if password is None substitute settings.EMAIL_HOST_PASSWORD for self.username , if not substitute password for self.password .	self . password = settings . EMAIL_HOST_PASSWORD if password is None else password
11138	delete first element of bits .	del bits [ : 1 ]
3862	if potfile file path doesnt exist ,	if not os . path . exists ( potfile ) :
3200	call the method serializers.serialize with 6 arguments : format , result of the function get_objects , indent set to indent , use_natural_foreign_keys set to use_natural_foreign_keys , use_natural_primary_keys set to use_natural_primary_keys , and stream set to stream , if the stream is true , otherwise stream set to self.stdout .	serializers . serialize ( format , get_objects ( ) , indent = indent , use_natural_foreign_keys = use_natural_foreign_keys , use_natural_primary_keys = use_natural_primary_keys , stream = stream or self . stdout )
5716	all the method field.rel.to._meta.get_field with field.rel.field_name as argument , call the to_python method on the result with , unpacked list field_value as an argument , substitute the result for value .	value = field . rel . to . _meta . get_field ( field . rel . field_name ) . to_python ( field_value )
17082	return t .	return t
15255	call the function six.text_type with return value of the function bytes ( s ) , encoding and errors as the arguments , substitute the result for s .	s = six . text_type ( bytes ( s ) , encoding , errors )
1243	define the function _samefile with arguments src and dst .	def _samefile ( src , dst ) :
11129	if not ,	else :
9856	join chunks into bytes string , substitute it for chunk .	chunk = STR . join ( chunks )
8801	return boolean False .	return False
11850	decorator function register.filter with an argument is_safe set to boolean False .	@ register . filter ( is_safe = False )
6409	if callback is an instance of functools.partial object ,	if isinstance ( callback , functools . partial ) :
13381	get the unicode representation of current working directory , join it and path into a string , substitute the result for path .	path = join ( os . getcwdu ( ) , path )
2972	for every i and tuple containing dirpath and f , in enumerated list of locations ,	for i , ( dirpath , f ) in enumerate ( locations ) :
8767	call the function _get_foreign_key with 3 arguments : parent_model , model and fk_name=fk_name , substitute the result for fk .	fk = _get_foreign_key ( parent_model , model , fk_name = fk_name )
4498	try ,	try :
16509	substitute state for self.state .	self . state = state
17312	substitute object for Iterator .	Iterator = object
10440	join self._container elements into a string , return it .	return STR . join ( self . _container )
276	if mode equals to string STR0 and current_expires is lesser than now , or mode equals to string STR1 , and result is true ,	if result and ( mode == STR0 or ( mode == STR1 and current_expires < now ) ) :
3665	from django.utils.encoding import force_st into default name space .	from django . utils . encoding import force_str
11481	define the method __init__ with 7 arguments : self , request , dict_ set to None , processors set to None , current_app set to None , use_l10n set to None and use_tz set to None .	def __init__ ( self , request , dict_ = None , processors = None , current_app = None , use_l10n = None , use_tz = None ) :
6891	year_val and month_val and day_val are set to None .	year_val = month_val = day_val = None
16881	get the next element of the iterable pattern_iter , assign the result for ch and escaped , respectively .	ch , escaped = next ( pattern_iter )
10472	define the method __iter__ with an argument self .	def __iter__ ( self ) :
12389	try ,	try :
11987	define the function timeuntil_filter with 2 arguments value and arg set to None .	def timeuntil_filter ( value , arg = None ) :
5996	tpl is an string STR0 .	tpl = STR0
746	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
7601	define the method compress with arguments self and data_list .	def compress ( self , data_list ) :
1596	substitute file_size for self.file.size .	self . file . size = file_size
846	derive the class CheckRegistry with object as base class .	class CheckRegistry ( object ) :
12154	for every var in self.vars ,	for var in self . vars :
2901	define method handle with arguments self , unapcked list app_labels and unpacked dictionary options .	def handle ( self , * app_labels , ** options ) :
2573	substitute first element of self.argv for subcommand .	subcommand = self . argv [ 1 ]
7505	return result .	return result
17499	define the method reader_enters with an argument self .	def reader_enters ( self ) :
5344	count is a property object with _get_count as a getter method .	count = property ( _get_count )
4161	if AmbiguityError exception is caught ,	except AmbiguityError :
13172	call the __getstate__ method from the base class of the class SimpleTemplateResponse , substitute the result for obj_dict .	obj_dict = super ( SimpleTemplateResponse , self ) . __getstate__ ( )
2033	if self.fail_silently is boolean False ,	if not self . fail_silently :
1678	insert mw_instance.process_response at the beginning of self._response_middleware .	self . _response_middleware . insert ( 0 , mw_instance . process_response )
9400	call the method __init__ from the base class of the class RadioChoiceInput , with 2 arguments : unpacked list args , and unpacked dictionary kwargs .	super ( RadioChoiceInput , self ) . __init__ ( * args , ** kwargs )
8566	define the method clean with an argument self .	def clean ( self ) :
5785	define the method indent with argument self and level .	def indent ( self , level ) :
7109	try ,	try :
14268	do nothing .	pass
11391	define the method __copy__ with an argument self .	def __copy__ ( self ) :
18607	otherwise if t.token_type equals TOKEN_COMMENT ,	elif t . token_type == TOKEN_COMMENT :
12405	define the method render with 2 arguments : self and context .	def render ( self , context ) :
4185	if not ,	else :
18041	derive the class TranslatorCommentWarning from the SyntaxWarning base class .	class TranslatorCommentWarning ( SyntaxWarning ) :
13946	from django.utils import six into default name space .	from django . utils import six
5961	substitute self.entity_decl for parser.EntityDeclHandler .	parser . EntityDeclHandler = self . entity_decl
10591	do nothing .	pass
11744	decorator function register.filter with 2 arguments is_safe set to boolean True and needs_autoescape set to boolean True .	@ register . filter ( is_safe = True , needs_autoescape = True )
17468	if not ,	else :
1478	import module errno .	import errno
2996	from django.utils.encoding import force_text into default name space .	from django . utils . encoding import force_text
18234	convert fist p elements of language to lowercase , append STR0 to it , covert to lowercase language element at ( p+1 ) -th index , append it to the previous result , covert to lowercase language elements from ( p+2 ) -th index to the end , append it to the previous result , return it .	return language [ : p ] . lower ( ) + STR0 + language [ p + 1 ] . upper ( ) + language [ p + 2 : ] . lower ( )
6	from django.core.exceptions import ImproperlyConfigured into default name space .	from django . core . exceptions import ImproperlyConfigured
5555	from django.core.serializers.base import DeserializationError into default name space .	from django . core . serializers . base import DeserializationError
5384	if self.paginator.count equals a integer 0 ,	if self . paginator . count == 0 :
4783	if not ,	else :
9026	from django.conf import settings into default name space .	from django . conf import settings
7881	define the method visible_fields with an argument self .	def visible_fields ( self ) :
17253	delete attr .	del attr
16808	if file_ is true ,	if file_ :
10211	call the method self._assert_mutable .	self . _assert_mutable ( )
3057	define the method add_arguments with self and parser .	def add_arguments ( self , parser ) :
5196	if not ,	else :
14235	define the method update with 2 arguments : self and dict_ .	def update ( self , dict_ ) :
5823	call the method related.natural_key , substitute the result for related .	related = related . natural_key ( )
12540	call the method parser.delete_first_token .	parser . delete_first_token ( )
17557	code_list is an empty list .	code_list = [ ]
11795	define the function linebreaksbr with 2 arguments value and autoescape set to None .	def linebreaksbr ( value , autoescape = None ) :
4800	dest set to string STR0 , default set to boolean True and help as STR1 call the method parser.add_argument with 5 arguments : string STR2 , action set to string STR3 ,	parser . add_argument ( STR0 , action = STR1 , dest = STR2 , default = True , help = STR3 )
5169	remove first 7 elements form template .	template = template [ 7 : ]
2450	import module sys .	import sys
14607	tf is an instance of TimeFormat class , created with an argument value .	tf = TimeFormat ( value )
15519	define the method add_item_elements with 3 arguments : self , handler and item .	def add_item_elements ( self , handler , item ) :
1097	open the file self.name in mode or self.mode mode , whichever exists , assign the file handler to self.file .	self . file = open ( self . name , mode or self . mode )
1704	if response is True ,	if response :
3204	if Exception , renamed to e , exception is caught ,	except Exception as e :
11493	from django.utils.html import escape into default name space .	from django . utils . html import escape
14549	define the method r with an argument self .	def r ( self ) :
5321	raise an EmptyPage exception with string STR0 as an argument .	raise EmptyPage ( STR0 )
9662	call the method self.handle_file_complete with arguments old_field_name , counters .	self . handle_file_complete ( old_field_name , counters )
16145	call the method unescape with attrvalue as the argument on the self class instance , substitute the result for attrvalue .	attrvalue = self . unescape ( attrvalue )
6811	call the function ungettext_lazy with 3 arguments : string STR0Ensure this value has at least % ( limit_value ) d characters ( it has % ( show_value ) d ) . STR1limit_value ' , substitute the result for message .	message = ungettext_lazy ( STR0 , STR1 , STR2 )
9896	call the method chunk.find with an argument bytes string STR0 , substitute the result for header_end .	header_end = chunk . find ( STR0 )
4349	do nothing .	pass
13871	call the function patch_response with response and cache_timeout decremented by integer 1 as arguments .	patch_response_headers ( response , cache_timeout = - 1 )
17404	want_unicode is boolean False .	want_unicode = False
17663	call the function unicodedata.normalize with 2 arguments : string STR0 and self._wrapped , substitute the result for text .	text = unicodedata . normalize ( STR0 , self . _wrapped )
155	define the private method __contains__ with self class instance and key as arguments .	def __contains__ ( self , key ) :
1944	take all but the length of path_info last elements of script_url , substitute it for script_name .	script_name = script_url [ : - len ( path_info ) ]
15105	call the method self.configure_root with an argument root .	self . configure_root ( root )
5625	substitute DjangoJSONEncoder for DateTimeAwareJSONEncoder .	DateTimeAwareJSONEncoder = DjangoJSONEncoder
14578	with an argument self.data.year decremented by 1 , evaluates to true , week_number is integer 53 .	week_number = 53
15560	_format_cache is an empty dictionary .	_format_cache = { }
10877	remove all occurrences of newline character from constant_string .	constant_string = constant_string . replace ( STR0 , STR )
2868	call the function supports_color , if evaluates to False ,	if not supports_color ( ) :
4251	for every refto and refs in return value of references.items method .	for refto , refs in references . items ( ) :
4431	call the method self.stdout.write with an argument : string STR0 , where STR1 is replaced with now , STR2 is replaced with return value of the method self.get_version , STR3 is replaced with settings.SETTINGS_MODULE , STR4 is replaced with self.addr if self._raw_ipv6 is true , or with self.addr if it is false , STR5 is replaced with self.port and STR6 is replaced with quit_command .	self . stdout . write ( ( STR0 ) % { STR1 : now , STR2 : self . get_version ( ) , STR3 : settings . SETTINGS_MODULE , STR4 : STR7 % self . addr if self . _raw_ipv6 else self . addr , STR5 : self . port , STR6 : quit_command , } )
637	call the method self._cache.disconnect_all .	self . _cache . disconnect_all ( )
2942	get the value under the key STR0 of the options dictionary , substitute it for locale .	locale = options . get ( STR0 )
1074	if self.size is greater than chunk_size , return boolean True , otherwise return boolean False .	return self . size > chunk_size
10062	get the value under the STR0 key of the self.META dictionary , if it equals string STR1 , return boolean True , otherwise return boolean False .	return self . META . get ( STR0 ) == STR1
8501	Meta is an instance of class with name STR0 , parent base class and fields attrs .	Meta = type ( str ( STR0 ) , parent , attrs )
4003	if LookupError exception is caught ,	except LookupError :
12698	substitute last element of bits for asvar .	asvar = bits [ - 1 ]
6148	import module base64 .	import base64
1024	evaluate the function smart_text with argument self.name , if exists , or an empty string , if not , return the result .	return smart_text ( self . name or STR )
14134	define the method _iterkeys with an argument self .	def _iterkeys ( self ) :
16001	if not ,	else :
4831	call the method __init__ form the base class of the Command class .	super ( Command , self ) . __init__ ( )
16069	try ,	try :
11206	substitute compile_function for self.tags dictionary value under the name key .	self . tags [ name ] = compile_function
2404	if mimetype is None ,	if mimetype is None :
13825	if not ,	else :
12774	if not ,	else :
15616	append iso_input to val .	val . append ( iso_input )
4533	define the method add_arguments with 2 arguments self and parser .	def add_arguments ( self , parser ) :
4265	if self.verbosity is greater or equal than integer 1 ,	if self . verbosity >= 1 :
7797	if field is contained in self.cleaned_data ,	if field in self . cleaned_data :
1599	define the method handle_raw_input with arguments : self , input_data , META , content_length , boundary and encoding set to None .	def handle_raw_input ( self , input_data , META , content_length , boundary , encoding = None ) :
17182	derive class _LazyModule from the types.ModuleType base class .	class _LazyModule ( types . ModuleType ) :
6441	substitute namespaces for the value under language_code key of the self._namespace_dict dictionary .	self . _namespace_dict [ language_code ] = namespaces
13252	substitute bp for lbp .	lbp = bp
12067	decorator function register.filter with 2 arguments string STR0 and is_safe set to boolean True .	@ register . filter ( STR0 , is_safe = True )
15959	call the function escape with an argument text , return the result .	return escape ( text )
10319	substitute content_type for value under the STR0 key of the self dictionary .	self [ STR0 ] = content_type
12724	if as_ is not equal to string STR0 ,	if as_ != STR0 :
5795	call the self.xml.endDocument method .	self . xml . endDocument ( )
3451	define the method get_field_type with 4 arguments : self , connection , table_name and row .	def get_field_type ( self , connection , table_name , row ) :
6857	otherwise if char is contained in string STR0 ,	elif char in STR0 :
899	context_extras is an empty dictionary .	context_extras = { }
17377	if not ,	else :
3750	call the function dropwhile with 2 arguments : function len and msgs spit into parts at newlines , join the result into a string , separated by newline , substitute it for msgs .	msgs = STR0 . join ( dropwhile ( len , msgs . split ( STR1 ) ) )
4455	import module os .	import os
14879	substitute self for result.parent .	result . parent = self
2302	content_subtype is a string STR0 .	content_subtype = STR0
18026	call the function is_aware with an argument value , if it evaluates to true ,	if is_aware ( value ) :
11611	decorator function register.filter with an argument string STR0 .	@ register . filter ( STR0 )
3006	if length of tablenames is greater than zero ,	if len ( tablenames ) :
264	call the method base64.b64encode with argument pickled , substitute the result for b64encoded .	b64encoded = base64 . b64encode ( pickled )
13212	define the method is_rendered with an argument self .	def is_rendered ( self ) :
1401	try ,	try :
2733	raise an exception .	raise
14564	define the method U with an argument self .	def U ( self ) :
15753	if klass is not contained in cls.__dispatch ,	if klass not in cls . __dispatch :
11034	if not ,	else :
2305	define the method __init__ with 10 arguments : self , subject set to an empty string , body set to an empty string ,	def __init__ ( self , subject = STR , body = STR , from_email = None , to = None , bcc = None , connection = None , attachments = None , headers = None , cc = None ) :
10537	return response .	return response
11505	call the method self.create_token with 3 arguments : self.template_string list elements from upto index to start index , tuple with 2 elements : upto and start and boolean False , append the result to result .	result . append ( self . create_token ( self . template_string [ upto : start ] , ( upto , start ) , False ) )
3891	for every dirpath , dirnames and filenames in the result , for every dirname in list dirnames ,	for dirname in dirnames [ : ] :
6544	replace all the occurrences of the STR0 string for STR1 , append result to the previous result , substitute it for candidate_pat .	candidate_pat = prefix_norm . replace ( STR0 , STR1 ) + result
3237	changed is boolean False .	changed = False
14997	define the method configure_custom with 2 arguments : self and config .	def configure_custom ( self , config ) :
4713	if self.interactive is true ,	if self . interactive :
5948	call the method self.setFeature with 2 arguments : handler.feature_external_pes and boolean False .	self . setFeature ( handler . feature_external_pes , False )
16520	return an raw string 'STR ' .	return 'STR'
9425	get the value under the STR0 key of the self.attrs dictionary , substitute it for id_ if the key exists , if not id_ is None .	id_ = self . attrs . get ( STR0 , None )
3815	call the method self.stdout.write with an argument string STR0 ,	self . stdout . write ( STR0 % get_text_list ( list ( self . extensions ) , STR1 ) )
365	from django.core.cache.backends.base import BaseCache and DEFAULT_TIMEOUT into default name space .	from django . core . cache . backends . base import BaseCache , DEFAULT_TIMEOUT
14850	try ,	try :
12883	call the method block_context.pop with an argument self.name , assign the result to push and block .	push = block = block_context . pop ( self . name )
2766	finally perform ,	finally :
17227	call the method Module_six_moves_urllib_request with an argument : string STR0 appended to __name__ , assign the result to the value under the string STR1 appended to __name__ key of the sys.modules dictionary , and to the value under the string STR2 appended to __name__ key of the sys.modules dictionary .	sys . modules [ __name__ + STR0 ] = sys . modules [ __name__ + STR1 ] = Module_six_moves_urllib_parse ( __name__ + STR2 )
1761	try ,	try :
5419	raise a SerializerDoesNotExist exception with an argument format .	raise SerializerDoesNotExist ( format )
4726	call the method operations.extend with an argument smigration.operations .	operations . extend ( smigration . operations )
5167	if not ,	else :
3228	if field.rel.through._meta.auto_created is true ,	if field . rel . through . _meta . auto_created :
18015	call the method datetime.utcnow , on the result call the method replace with an argument tzinfo set to utc , return the result .	return datetime . utcnow ( ) . replace ( tzinfo = utc )
14314	call the method __getitem__ from the base class of the class MultiValueDict , with an argument key , return the result..	return super ( MultiValueDict , self ) . __getitem__ ( key )
7060	call the method validators.MaxLengthValidator with max_length converted into an integer , append the result to list self.validators .	self . validators . append ( validators . MaxLengthValidator ( int ( max_length ) ) )
1649	from django.db import connections and transaction into default name space .	from django . db import connections , transaction
1106	substitute StringIO for stream_class if content is an instance of six.text_type , otherwise substitute BytesIO for stream_class .	stream_class = StringIO if isinstance ( content , six . text_type ) else BytesIO
10059	define the method is_secure with an argument self .	def is_secure ( self ) :
11654	append STR0 to digits .	digits . append ( STR0 )
12441	substitute var for value under the name key of the self.extra_context dictionary .	self . extra_context [ name ] = var
2371	call the method self._create_attachments with argument msg , return the result .	return self . _create_attachments ( msg )
15473	call the method handler.addQuickElement with 2 arguments : string STR0 and value under the STR1 key of the item dictionary .	handler . addQuickElement ( STR0 , item [ STR1 ] )
11265	define the method render with 2 arguments self and context .	def render ( self , context ) :
1972	return evaluated result of the method connection.send_messages with messages as argument .	return connection . send_messages ( messages )
1543	from django.core.files.uploadedfile import TemporaryUploadedFile and InMemoryUploadedFile into default name space .	from django . core . files . uploadedfile import TemporaryUploadedFile , InMemoryUploadedFile
3982	from django.db.migrations.writer import MigrationWriter into default name space .	from django . db . migrations . writer import MigrationWriter
9029	from django.utils.encoding import force_text and python_2_unicode_compatible into default name space .	from django . utils . encoding import force_text , python_2_unicode_compatible
159	call the method self.set with arguments key , value , timeout set to timeout , version set to version .	self . set ( key , value , timeout = timeout , version = version )
2444	return self._fqdn .	return self . _fqdn
8552	return self._queryset .	return self . _queryset
14479	define the method h with an argument self .	def h ( self ) :
11919	increment i by integer 1 .	i += 1
9014	call the function _ with an argument string STR0 , substitute the result for message .	message = _ ( STR0 )
15657	call the method value.strftime with an argument format , return the result .	return value . strftime ( format )
9152	return attrs .	return attrs
2387	if basetype equals a string STR0 ,	if basetype == STR0 :
6122	daemonize is boolean True .	daemonize = True
6769	call the function validate_ipv6_address with an argument value .	validate_ipv6_address ( value )
13749	if sys.platform starts with string STR0 ,	if sys . platform . startswith ( STR0 ) :
14312	define the method getlist with 3 arguments : self , key and default set to None .	def getlist ( self , key , default = None ) :
14507	define the method u with an argument self .	def u ( self ) :
11435	return flat .	return flat
5135	skip this loop iteration ,	continue
14740	call the method func.__get__ with 2 arguments : self and type of self object , call the result with 2 arguments : unpacked list args2 and unpacked dictionary kwargs2 , return the result .	return func . __get__ ( self , type ( self ) ) ( * args2 , ** kwargs2 )
10922	if VariableDoesNotExist exception is caught ,	except VariableDoesNotExist :
15452	define the method add_item_elements with 3 arguments : self , handler and item .	def add_item_elements ( self , handler , item ) :
3834	substitute all_locales for locales .	locales = all_locales
14765	call the function middleware_class with 2 arguments : unpacked list m_args and unpacked dictionary m_kwargs , substitute the middleware .	middleware = middleware_class ( * m_args , ** m_kwargs )
8842	define the method _get_queryset with an argument self .	def _get_queryset ( self ) :
16850	ESCAPE_MAPPINGS is an dictionary with 10 initial entries : None for STR0 , None for STR , None for STR1 , STR2 for STR3 , STR4 for STR5 , STR for STR6 , STR7 for STR8 , STR9 for STR10 , STR11 for STR12 and None for STR13 .	ESCAPE_MAPPINGS = { STR0 : None , STR : None , STR1 : None , STR2 : STR3 , STR4 : STR5 , STR6 : STR , STR7 : STR8 , STR9 : STR10 , STR11 : STR12 , STR13 : None , }
8593	seen_data is an empty set .	seen_data = set ( )
10117	call the method self.parse_file_upload with arguments self.META and data , assign the result to self._post and self._files .	self . _post , self . _files = self . parse_file_upload ( self . META , data )
9383	call the function format_html with 2 arguments : string STR1 and self.id_for_label , substitute the result for label_for .	label_for = format_html ( STR1 , self . id_for_label )
16277	endless loop ,	while True :
3386	extend comment_notes list with field_notes .	comment_notes . extend ( field_notes )
2055	call the os.path.abspath with argument self.file_path , substitute the result for self.file_path .	self . file_path = os . path . abspath ( self . file_path )
5270	return a tuple containing 3 entries : output , result of the function force_text , called with 3 arguments : errors , DEFAULT_LOCALE_ENCODING and strings_only set to boolean True and p.returncode .	return ( output , force_text ( errors , DEFAULT_LOCALE_ENCODING , strings_only = True ) , p . returncode )
1036	if self.file has an attribute STR0 ,	if hasattr ( self . file , STR0 ) :
2452	from django.apps import apps into default name space .	from django . apps import apps
8365	derive the class ModelFormMetaclass from the DeclarativeFieldsMetaclass base class .	class ModelFormMetaclass ( DeclarativeFieldsMetaclass ) :
2921	define the function has_bom with fn as argument .	def has_bom ( fn ) :
7249	define the method _set_regex with arguments self and regex .	def _set_regex ( self , regex ) :
8494	if help_texts is not None ,	if help_texts is not None :
9718	if chunk is None ,	if chunk is None :
3953	for every domain in domains ,	for domain in domains :
11890	convert second item to an iterable ,	iter ( second_item )
18505	call the method blankout with 2 arguments : part and STR0 , write the result to out .	out . write ( blankout ( part , STR0 ) )
5539	self.m2m_data is None .	self . m2m_data = None
7174	call the function force_text with arguments value and strings_only set to boolean True , substitute the result for unicode_value .	unicode_value = force_text ( value , strings_only = True )
6849	if escaped is true ,	if escaped :
6709	convert value into an integer .	int ( value )
7553	return boolean False .	return False
10754	call the method self.next_token , substitute the result for token .	token = self . next_token ( )
5675	define the function Deserializer with arguments object_list and unpacked dictionary options .	def Deserializer ( object_list , ** options ) :
3425	call the method new_name.find , with an argument string STR0 , if it evaluates to greater or equal than integer 0 ,	if new_name . find ( STR0 ) >= 0 :
12411	substitute max_width for self.max_width .	self . max_width = max_width
13250	define the function infix with 2 arguments bp and func .	def infix ( bp , func ) :
167	substitute STR0 in string STR1 with key ,	warnings . warn ( STR0 % ( key , MEMCACHE_MAX_KEY_LENGTH ) , CacheKeyWarning )
1349	call the function os.path.dirname with argument full_path , substitute the result for directory .	directory = os . path . dirname ( full_path )
5362	substitute paginator for self.paginator .	self . paginator = paginator
15533	call the method handler.endElement with an argument string STR0 .	handler . endElement ( STR0 )
9991	self.FILES is an instance of MultiValueDict class .	self . FILES = MultiValueDict ( )
12205	if i is equal to integer 0 , value under the STR0 key of the loop_dict dictionary is boolean True , otherwise it is False .	loop_dict [ STR0 ] = ( i == 0 )
13958	import module hmac .	import hmac
1042	get the position of the self.file file pointer , substitute it for pos .	pos = self . file . tell ( )
1526	define the method open with arguments self and mode set to None .	def open ( self , mode = None ) :
2497	call the function os.path.basename with first element of self.argv as an argument , substitute the result for self.prog_name .	self . prog_name = os . path . basename ( self . argv [ 0 ] )
3156	skip this loop iteration .	continue
524	raise an ValueError exception with string STR0 as argument , substitute STR1 with key converted into a string .	raise ValueError ( STR0 % key )
12552	call the method parser.parse with an argument tuple with an element end_tag , substitute the result for nodelist_false .	nodelist_false = parser . parse ( ( end_tag , ) )
18464	inplural is boolean False .	inplural = False
5817	define the method handle_fk_field with arguments self , obj and field .	def handle_fk_field ( self , obj , field ) :
18625	convert priority into a floating point integer , substitute it for priority .	priority = float ( priority )
6612	call the function get_resolver.cache_clear .	get_resolver . cache_clear ( )
7770	define the method as_p with an argument self .	def as_p ( self ) :
5392	from django.conf import settings into default name space .	from django . conf import settings
6168	define the function get_cookie_signer with an argument salt set to string STR0 .	def get_cookie_signer ( salt = STR0 ) :
15701	substitute func for self.func .	self . func = func
13548	import module signal .	import signal
9924	derive the class Parser from the base class object .	class Parser ( object ) :
13647	call the method notifier.check_events with argument timeout set to None .	notifier . check_events ( timeout = None )
2750	from django.utils import translation into default namespace .	from django . utils import translation
7748	if field.help_text is true ,	if field . help_text :
15289	evaluate the method six.text_type ( s ) , on the result call the method encode with the arguments encoding and errors , return the result .	return six . text_type ( s ) . encode ( encoding , errors )
16876	otherwise if ch equals a string STR0 ,	elif ch == STR0 :
18557	if imatch is true ,	if imatch :
8515	define the method initial_form_count with an argument self .	def initial_form_count ( self ) :
10988	if ValueError exception is caught ,	except ValueError :
13451	if cls is false ,	if not cls :
4659	get executor.loader.graph.nodes list item at the index of the first element of targets list , get the value under the STR0 key of options dictionary , put previous two elements is a tuple , tuple is contained in a plan list .	plan = [ ( executor . loader . graph . nodes [ targets [ 0 ] ] , options [ STR0 ] ) ]
835	description is a string STR0 with STR1 replaced by value of receiver.__class__.__name__ .	description = STR0 % receiver . __class__ . __name__
7922	if only_initial is false ,	if not only_initial :
7451	if data is None ,	if data is None :
13367	from django.utils.encoding import force_text into default name space .	from django . utils . encoding import force_text
7349	call the method clean with an argument data from the base class of the class URLField , return the result .	return super ( URLField , self ) . clean ( value )
106	convert max_entries into a string , substitute it for self._max_entries .	self . _max_entries = int ( max_entries )
339	define the method delete with 3 arguments : self , key , and version set to None .	def delete ( self , key , version = None ) :
16295	if LookupError or BinasciiError , renamed to e , exceptions are caught .	except ( LookupError , BinasciiError ) as e :
17517	try ,	try :
681	define the method __init__ with self , server and params as arguments .	def __init__ ( self , server , params ) :
10989	if var starts with STR0 and var ends with STR1 ,	if var . startswith ( STR0 ) and var . endswith ( STR1 ) :
3837	locales is a difference between the locales and exclude sets .	locales = set ( locales ) - set ( exclude )
11056	yield self .	yield self
4664	from django.core.management.base import AppCommand into default name space .	from django . core . management . base import AppCommand
2271	call the method fp.getvalue , return the result .	return fp . getvalue ( )
186	from datetime import datetime into default name space .	from datetime import datetime
6542	skip this loop iteration ,	continue
2117	if use_ssl is None substitute settings.EMAIL_USE_SSL for self.username , if not substitute use_ssl for self.use_ssl .	self . use_ssl = settings . EMAIL_USE_SSL if use_ssl is None else use_ssl
17929	if not ,	else :
18286	if self.__language equals settings.LANGUAGE_CODE or self.__language equals a string STR0 ,	if self . __language == settings . LANGUAGE_CODE or self . __language == STR0 :
2908	app_configs is None .	app_configs = None
10764	try ,	try :
9698	for every handler in handlers ,	for handler in handlers :
4240	call the emit_pre_migrate_signal with create_models , self.verbosity , self.interactive . connection.alias as arguments .	emit_pre_migrate_signal ( create_models , self . verbosity , self . interactive , connection . alias )
11255	call the function dec with an argument func , return the result .	return dec ( func )
721	try ,	try :
13126	return a tuple with 2 elements : resource and string STR0 , where STR1 is replaced with app_config.name and pkg_name , respective .	return ( resource , STR0 % ( app_config . name , pkg_name ) )
14934	try ,	try :
6873	if not ,	else :
8061	get the element with minimal value between the value under the TOTAL_FORM_COUNT key of self.management_form.cleaned_data dictionary , and self.absolute_max , return the result .	return min ( self . management_form . cleaned_data [ TOTAL_FORM_COUNT ] , self . absolute_max )
12885	substitute self for block .	block = self
10386	multiply delta.days with an integer 86400 add to the result delta.seconds , if the result is greater than integer 0 , substitute it for max_age , if not , max_age is integer 0 .	max_age = max ( 0 , delta . days * 86400 + delta . seconds )
7941	if self.form.is_bound is false ,	if not self . form . is_bound :
16834	substitute str_number and an empty string for int_part and dec_part .	int_part , dec_part = str_number , STR
2113	if port exists substitute it for self.host , if not substitute settings.EMAIL_PORT for self.port .	self . port = port or settings . EMAIL_PORT
9598	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
17982	otherwise if timezone is an instance of six.string_types and pytz is not None ,	elif isinstance ( timezone , six . string_types ) and pytz is not None :
1471	return self .	return self
18691	from django.utils.deprecation import RemovedInDjango19Warning into default name space .	from django . utils . deprecation import RemovedInDjango19Warning
10281	return boolean False .	return False
3742	append work_file to string STR0 , substitute it for old .	old = STR0 + work_file [ 2 : ]
17721	convert tagname to lowercase , substitute it for tagname .	tagname = tagname . lower ( )
14703	call the function _findall with 2 arguments : s2 and sum of year and integer 28 , converted into a string , substitute the result for sites2 .	sites2 = _findall ( s2 , str ( year + 28 ) )
3761	msgattrib_options is an list with elements : string STR0 .	msgattrib_options = [ STR0 ]
2374	if self.encoding exists substitute it for encoding , if not substitute settings.DEFAULT_CHARSET for encoding .	encoding = self . encoding or settings . DEFAULT_CHARSET
12803	if loader is not None ,	if loader is not None :
3860	for every path in self.locale_paths ,	for path in self . locale_paths :
14781	call the method middleware.process_exception with 2 arguments : request and e , substitute the result for result .	result = middleware . process_exception ( request , e )
1279	import module itertools .	import itertools
11310	substitute func.__doc__ for compile_func.__doc__ .	compile_func . __doc__ = func . __doc__
2650	define the method __getattr__ with arguments self and name .	def __getattr__ ( self , name ) :
14354	call the method self.itervalues , return list of results .	return list ( self . itervalues ( ) )
501	if pickle.PickleError exception is caught ,	except pickle . PickleError :
9759	define the method tell with an argument self .	def tell ( self ) :
14505	call the method self.format with an argument string STR0 , substitute the result for name .	name = self . format ( STR0 )
9418	substitute choices for self.choices .	self . choices = choices
13741	if return value of the code_changed function is true ,	if code_changed ( ) :
16206	call the function re.compile with an argument raw string STR0 formated with __D , __M , __Y and __T , substitute the result for RFC1123_DATE .	RFC1123_DATE = re . compile ( STR0 % ( __D , __M , __Y , __T ) )
2661	args is an empty string .	args = STR
2078	if self.stream is None :	if self . stream is None :
3199	try ,	try :
3178	call the method serializers.get_serializer with an argument format .	serializers . get_serializer ( format )
14239	if key is not contained in self ,	if key not in self :
2768	call the method translation.activate with an argument saved_locale .	translation . activate ( saved_locale )
4214	if fake is true ,	if fake :
8586	call the method self.get_unique_error_message with an argument unique_check , append the result to errors .	errors . append ( self . get_unique_error_message ( unique_check ) )
4567	call the method parser.add_argument with 3 arguments : string STR1 , default set to DEFAULT_DB_ALIAS , and help set to a string STR2 .	parser . add_argument ( STR1 , default = DEFAULT_DB_ALIAS , help = STR2 )
16694	define the function cache_info .	def cache_info ( ) :
17254	substitute _urllib_robotparser_moved_attributes for Module_six_moves_urllib_robotparser._moved_attributes .	Module_six_moves_urllib_robotparser . _moved_attributes = _urllib_robotparser_moved_attributes
17589	convert role to uppercase .	role = role . upper ( )
7879	define the method hidden_fields with an argument self .	def hidden_fields ( self ) :
7649	from django.utils.translation import ugettext as _ into default name space .	from django . utils . translation import ugettext as _
4097	if ValueError exception is caught ,	except ValueError :
3408	yield string STR0 , where STR1 is replaced with field_desc .	yield STR0 % field_desc
10666	append bit to split .	split . append ( bit )
10387	if not ,	else :
9515	call the method __deepcopy__ from the base class of the class MultiWidget , with an argument memo , substitute the result for obj .	obj = super ( MultiWidget , self ) . __deepcopy__ ( memo )
13370	substitute WindowsError for WindowsError .	WindowsError = WindowsError
9205	if id_ ,	if id_ :
10952	otherwise if obj is an instance of EscapeData ,	elif isinstance ( obj , EscapeData ) :
2224	if encoding does not exists substitute it for settings.DEFAULT_CHARSET .	encoding = encoding or settings . DEFAULT_CHARSET
16077	if autoescape is true and safe_input is false ,	if autoescape and not safe_input :
18325	if t is not None	if t is not None :
15649	call the function number_format with an argument value , return the result .	return number_format ( value )
5000	define the function _split_statements with an argument content .	def _split_statements ( content ) :
2545	filter all the subcommands element through the lambda function with an argument x , that evaluates the method x.startswith , with an argument curr , sort the result and join it in a list separated with blank spaces , print it to the standard output .	print ( STR . join ( sorted ( filter ( lambda x : x . startswith ( curr ) , subcommands ) ) ) )
1058	closed is a property object with _get_closed as a getter method .	closed = property ( _get_closed )
7932	call the method self.as_widget with 3 arguments : instance of a class TextInput , attrs and unpacked dictionary kwargs , return the result .	return self . as_widget ( TextInput ( ) , attrs , ** kwargs )
17175	try ,	try :
1019	get STR0 attribute from the file object , if it doesnt exists use None , substitute it for name .	name = getattr ( file , STR0 , None )
2263	call the method fp.getvalue , return the result .	return fp . getvalue ( )
14425	from django.utils.encoding import force_text into default name space .	from django . utils . encoding import force_text
7516	call the function self.compress with empty list as an argument , return the result .	return self . compress ( [ ] )
11639	if ValueError , OverflowError or InvalidOperation exceptions are caught ,	except ( ValueError , OverflowError , InvalidOperation ) :
17922	call the method self._isdst with an argument dt , if it evaluates to true ,	if self . _isdst ( dt ) :
15876	call the method self._setupfunc , substitute the result for self._wrapped .	self . _wrapped = self . _setupfunc ( )
15638	call the function number_format with 2 arguments : value and use_l10 as use_l10n , return the result .	return number_format ( value , use_l10n = use_l10n )
17912	derive the class ReferenceLocalTimezone from the tzinfo base class .	class ReferenceLocalTimezone ( tzinfo ) :
14953	call the method m.end , slice list rest from previous result as starting index to the end , substitute the result for rest .	rest = rest [ m . end ( ) : ]
14100	call the function warnings.warn with 3 arguments : string STR0 , RemovedInDjango19Warning and integer 2 .	warnings . warn ( STR0 , RemovedInDjango19Warning , 2 )
8763	if not ,	else :
15746	define the method __promise__ with 4 arguments : cls , klass , funcname and method .	def __promise__ ( cls , klass , funcname , method ) :
15648	otherwise if value is an instance of decimal.Decimal , float or six.integer_types ,	if isinstance ( value , ( decimal . Decimal , float ) + six . integer_types ) :
15566	_format_modules_cache is an empty dictionary .	_format_modules_cache = { }
15696	substitute result for value under the mem_args key of the cache dictionary .	cache [ mem_args ] = result
16142	otherwise , if first and the last character of attrvalue are STRspecial charter or first and last character of attrvalue are STR character ,	elif ( attrvalue [ : 1 ] == 'STR' == attrvalue [ - 1 : ] or attrvalue [ : 1 ] == STR == attrvalue [ - 1 : ] ) :
9090	try ,	try :
15599	if lang is None ,	if lang is None :
7220	define the method to_python with arguments self and value .	def to_python ( self , value ) :
11865	decorator function register.filter with 2 arguments string STR0 and is_safe set to boolean True .	@ register . filter ( STR0 , is_safe = True )
17890	call the function timedelta with an argument integer 0 , substitute the result for ZERO .	ZERO = timedelta ( 0 )
2663	can_import_settings is boolean True .	can_import_settings = True
17244	for every attr in _urllib_response_moved_attributes ,	for attr in _urllib_response_moved_attributes :
11059	if self is an instance of nodetype ,	if isinstance ( self , nodetype ) :
4108	from importlib import import_module into default name space .	from importlib import import_module
18493	append t.contents to comment .	comment . append ( t . contents )
16962	otherwise if ch equals a string STR0 ,	elif ch == STR0 :
17690	call the method self._text_words with 2 arguments length and truncate , return the result .	return self . _text_words ( length , truncate )
17433	substitute space for end .	end = newline
12373	substitute view_name for self.view_name .	self . view_name = view_name
17829	call the function six.unichr with value under the text key of the html_entities.name2codepoint dictionary , return the result .	return six . unichr ( html_entities . name2codepoint [ text ] )
14394	substitute complain for __setitem__ .	__setitem__ = complain
17024	if elt is an instance of Choice or NonCapture classes ,	if isinstance ( elt , ( Choice , NonCapture ) ) :
4858	define the method handle with 3 arguments : self , unpacked list test_labels and unpacked dictionary options .	def handle ( self , * test_labels , ** options ) :
10997	call the method var.split with an argument VARIABLE_ATTRIBUTE_SEPARATOR , convert the result to a tuple and substitute it for self.lookups .	self . lookups = tuple ( var . split ( VARIABLE_ATTRIBUTE_SEPARATOR ) )
3122	split string pks by STR0 , substitute the result for primary_keys .	primary_keys = pks . split ( STR0 )
12660	register.tag decorator ,	@ register . tag
15249	call the function six.text_type with s , encoding and errors as the arguments , substitute the result for s .	s = six . text_type ( s , encoding , errors )
8080	define the method _construct_form with 3 arguments : self , i and unpacked dictionary kwargs .	def _construct_form ( self , i , ** kwargs ) :
7062	if value in self.empty_values ,	if value in self . empty_values :
7975	split extra_classes into words , by whitespaces , substitute the result for extra_classes .	extra_classes = extra_classes . split ( )
15681	from django.utils import six into default name space .	from django . utils import six
15880	if not ,	else :
2688	call the function warnings.warn with 2 arguments : string STR0 and RemovedInDjango20Warning .	warnings . warn ( STR0 , RemovedInDjango20Warning )
11666	decorator function register.filter with 2 arguments is_safe set to boolean True and needs_autoescape set to boolean True .	@ register . filter ( is_safe = True , needs_autoescape = True )
12143	derive the class FilterNode from Node base class .	class FilterNode ( Node ) :
12781	if loader is an instance of six.string_types ,	if isinstance ( loader , six . string_types ) :
6098	otherwise if value under the STR0 key of optins dictionary equals to string STR1 or STR2 ,	elif options [ STR0 ] in ( STR1 , STR2 ) :
15085	increment i by integer 1 , substitute the result for i .	i = i + 1
17997	call the method activate with an argument self.timezone .	activate ( self . timezone )
18305	call the function translation with an argument language , substitute the result for _active.value .	_active . value = translation ( language )
16031	if UnicodeError exception is caught ,	except UnicodeError :
12923	for every node in compiled_parent.nodelist ,	for node in compiled_parent . nodelist :
3124	primary_keys is an empty list .	primary_keys = [ ]
5761	if stream_or_string is an instance of bytes ,	if isinstance ( stream_or_string , bytes ) :
2213	pid is integer 1 .	pid = 1
12791	call the function warnings.warn with an argument string STR0 , where STR1 is replaced with loader .	warnings . warn ( STR0 % loader )
13260	if Exception exception is caught ,	except Exception :
3700	call the function io.open with orig_file and encoding set to settings.FILE_CHARSET , with the result renamed to fp ,	with io . open ( orig_file , encoding = settings . FILE_CHARSET ) as fp :
1188	_anonymous_ is a list containing one string : STR0 .	_anonymous_ = [ STR0 ]
16539	from django.conf import settings into default name space .	from django . conf import settings
639	call the method self.make_key with key and version set to version as arguments , substitute the result for key .	key = self . make_key ( key , version = version )
6294	if not ,	else :
8053	form is an instance of ManagementForm class , created with 3 arguments : self.data , auto_id as self.auto_id and prefix as self.prefix .	form = ManagementForm ( self . data , auto_id = self . auto_id , prefix = self . prefix )
12034	if bytes is smaller than KB ,	if bytes < KB :
12014	if ValueError exception is caught ,	except ValueError :
13848	convert to integer the value of dictionary cc under the key STR0 , and return it	return int ( cc [ STR0 ] )
17522	with self.mutex perform ,	with self . mutex :
4043	writer is an instance of MigrationWriter class , created with an argument migration .	writer = MigrationWriter ( migration )
8039	call the method self.as_table , return the result .	return self . as_table ( )
8529	pk_key is a string STR0 , where STR1 is replaced with : result of the method self.add_prefix called with an argument i , and self.model._meta.pk.name .	pk_key = STR0 % ( self . add_prefix ( i ) , self . model . _meta . pk . name )
11155	otherwise if param is contained in kwargs ,	elif param in kwargs :
17866	for every i and tuple containing 2 elements : seconds and name , in enumerated chunks ,	for i , ( seconds , name ) in enumerate ( chunks ) :
12907	define the method get_parent with 2 arguments self and context .	def get_parent ( self , context ) :
18224	_supported is None .	_supported = None
13351	PATTERN is a string STR0 .	PATTERN = STR0
5622	convert o to an string , return it .	return str ( o )
15622	get format_type attribute of the settings object , return it .	return getattr ( settings , format_type )
14284	call the method __setitem__ from the base class of the class MultiValueDict , with 2 arguments key and list containing element value .	super ( MultiValueDict , self ) . __setitem__ ( key , [ value ] )
5171	call the method path.normpath with an argument expanded_template , substitute it for expanded_template .	expanded_template = path . normpath ( expanded_template )
342	define the method get_many with 3 arguments : self , keys , and version set to None .	def get_many ( self , keys , version = None ) :
9766	return nothing .	return
17217	concatenate __name__ , string STR0 and attr.name together , use it as an key to get the value from the sys.modules dictionary , substitute attr for the obtained value .	sys . modules [ __name__ + STR0 + attr . name ] = attr
17623	call the function allow_lazy with 3 arguments : capfirst and six.text_type .	capfirst = allow_lazy ( capfirst , six . text_type )
13722	if value under the STR0 key of the os.environ dictionary equals to string STR1 ,	if os . environ . get ( STR0 ) == STR1 :
18677	if not ,	else :
18150	raise an KeyError with an argument string STR0 , where STR1 is replaced with lang_code , and generic_lang_code .	raise KeyError ( STR0 % ( lang_code , generic_lang_code ) )
8102	property decorator ,	@ property
14998	remove config dictionary element under STR0 key , substitute it for c .	c = config . pop ( STR0 )
7917	if self.field.localize is true ,	if self . field . localize :
15989	define the method get_data with an argument self .	def get_data ( self ) :
4332	if shown is an empty set ,	if not shown :
14745	call the function update_wrapper with 2 arguments : _wrapper and dummy .	update_wrapper ( _wrapper , dummy )
16055	if middle starts with opening ,	if middle . startswith ( opening ) :
288	call the ops.quote_name method with argument self._table on the object under the db key of connections dictionary , substitute the result for table .	table = connections [ db ] . ops . quote_name ( self . _table )
6892	if value is an instance of six.string_types ,	if isinstance ( value , six . string_types ) :
811	derive the class Critical from base class CheckMessage .	class Critical ( CheckMessage ) :
10899	raise an TemplateSyntaxError exception with an argument STR0 , replace STR1 with token .	raise TemplateSyntaxError ( STR0 % token )
315	evaluate the method connections [ db ] .ops.cache_key_culling_sql , evaluate the result by table modulus , call the method cursor.execute , with previous result and list containing cull_num , respectively as arguments .	cursor . execute ( connections [ db ] . ops . cache_key_culling_sql ( ) % table , [ cull_num ] )
2655	append ending to msg .	msg += ending
8220	for every form in self call the form.as_ul method , join the results in a string , separated by an empty string .	forms = STR . join ( form . as_ul ( ) for form in self )
409	remove file tmp_path .	os . remove ( tmp_path )
14898	substitute key for result.key .	result . key = key
18525	filemsg is a string STR0 , where STR1 is replaced with origin .	filemsg = STR0 % origin
16626	return first element of key .	return key [ 0 ]
12131	if self.variable_name is true .	if self . variable_name :
16642	define the function wrapper with 2 arguments : unpacked list args and unpacked dictionary kwds .	def wrapper ( * args , ** kwds ) :
2401	define the method _create_attachment with 4 arguments : self , filename , content and mimetype set to None .	def _create_attachment ( self , filename , content , mimetype = None ) :
2603	call the method django.get_version append new line to it , write it to sys.stdout .	sys . stdout . write ( django . get_version ( ) + STR0 )
3719	and encoding set to string STR0 as arguments , with the result renamed to fp , perform the following : call the method fp.write with an argument content .	fp . write ( content )
11924	increment i by 1 .	i += 1
8962	output is an empty list .	output = [ ]
17270	if AttributeError exception is caught ,	except AttributeError :
551	call self.clear method .	self . clear ( )
33	remove STR0 key from kwargs dictionary and put it into location , or use an empty string if key doesnt exists .	location = params . pop ( STR0 , STR )
18436	if accept_lang equals STR0 ,	if accept_lang == STR0 :
16076	call the function trim_url with an argument middle , substitute the result for trimmed .	trimmed = trim_url ( middle )
11624	if UnicodeEncodeError exception is caught ,	except UnicodeEncodeError :
17600	if opts is true ,	if opts :
1277	import module os .	import os
9510	for every w in self.widgets ,	for w in self . widgets :
11780	decorator function register.filter with 2 arguments string STR0 and is_safe set to boolean True .	@ register . filter ( STR0 , is_safe = True )
17900	derive the class FixedOffset from the tzinfo base class .	class FixedOffset ( tzinfo ) :
15826	define the method __delattr__ with 2 arguments self and name .	def __delattr__ ( self , name ) :
7010	raise an ValidationError with 2 arguments : value under the STR0 key of the self.error_messages dictionary and code set to string STR1 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 )
3213	call the method app_config.get_models , substitute the result fr model_list .	model_list = app_config . get_models ( )
3805	if extensions is false , substitute it for exts , otherwise exts is a list containing 2 elements : string STR0 and string STR1 .	exts = extensions if extensions else [ STR0 , STR1 ]
10037	raise an exception .	raise
11871	append None to bits .	bits . append ( None )
13321	define the method next_token with an argument self .	def next_token ( self ) :
7722	define the method add_prefix with 2 arguments : self and field_name .	def add_prefix ( self , field_name ) :
8679	get STR0 attribute from form object , if it exists substitute it for meta , if not meta is None .	meta = getattr ( form , STR0 , None )
18540	count occurrences of STR0 in t.contents , add the result to t.lineno , substitute the result for cur_lineno .	cur_lineno = t . lineno + t . contents . count ( STR0 )
16928	remove the first element from result .	result . pop ( )
16501	for every match in the result , substitute match.lastgroup for name .	name = match . lastgroup
14275	try ,	try :
14674	if d is an instance of real_datetime class ,	if isinstance ( d , real_datetime ) :
7862	if ValidationError exception is caught ,	except ValidationError :
18430	try ,	try :
15076	sort elements of list existing .	existing . sort ( )
4436	if socket.error , renamed to e , exception is caught ,	except socket . error as e :
9952	is an even number , call the method s.find with 2 arguments : bytes string STR0 and end incremented by one , substitute the result for end .	end = s . find ( STR0 , end + 1 )
3926	if errors is true ,	if errors :
2723	if not ,	else :
898	from django.utils import translation into default name space .	from django . utils import translation
10793	remove first element from self.tokens , return removed element .	return self . tokens . pop ( 0 )
10752	define the method skip_past with 2 arguments : self and endtag .	def skip_past ( self , endtag ) :
12989	if option equals a string STR0 ,	if option == STR0 :
17119	if PY3 is true ,	if PY3 :
1744	call the function debug.technical_404_response with request and e as arguments , assign the result to response .	response = debug . technical_404_response ( request , e )
16029	try ,	try :
17516	call the method self.reader_enters .	self . reader_enters ( )
6034	return the first element of self.client_address .	return self . client_address [ 0 ]
6293	return lookup_view	return lookup_view
2524	if KeyError exception is caught ,	except KeyError :
874	substitute registry.tag_exists for tag_exists .	tag_exists = registry . tag_exists
5812	if field.name attribute of obj is not None ,	if getattr ( obj , field . name ) is not None :
12713	call the method parser.parse with an argument tuple with an element string STR0 , substitute the result for nodelist .	nodelist = parser . parse ( ( STR0 , ) )
15188	if level is not None ,	if level is not None :
11135	if bits is true and kwarg_format is false ,	if bits and not kwarg_format :
13026	if template_dirs is false ,	if not template_dirs :
3934	if self.invoked_for_django is false ,	if not self . invoked_for_django :
10846	if i is greater than , or equal to subject ,	if i >= len ( subject ) :
14857	if level is not contained in logging._levelNames ,	if level not in logging . _levelNames :
10600	return self.msg formatted with a tuple , with elements generated from return value of the function force_text with 2 arguments : p and errors set to string STR0 , for p in self.params .	return self . msg % tuple ( force_text ( p , errors = STR0 ) for p in self . params )
9040	if media is true ,	if media :
9097	if extend is true ,	if extend :
11596	convert args into a list , substitute it for args .	args = list ( args )
13715	args is a list containing arg surrounded by double quotes for every arg in args .	args = [ STR1 % arg for arg in args ]
8203	if self.forms is true ,	if self . forms :
9129	is_localized is boolean False .	is_localized = False
3093	derive the class Command from the BaseCommand base class .	class Command ( BaseCommand ) :
2512	for every app in sorted return value of the commands_dict.keys function ,	for app in sorted ( commands_dict . keys ( ) ) :
4337	from django.utils.deprecation import RemovedInDjango19Warning into default name space .	from django . utils . deprecation import RemovedInDjango19Warning
17611	from io import BytesIO into default name space .	from io import BytesIO
9601	import module cgi .	import cgi
10839	define the next_space_index with 2 arguments : subject and i .	def next_space_index ( subject , i ) :
13493	define the method list with 3 arguments : self and unpacked list args and unpacked dictionary kwargs .	self . _archive . list ( * args , ** kwargs )
9214	input_type is a string STR0 .	input_type = STR0
2965	locations is an empty list .	locations = [ ]
2818	call the self.handle_app_config method with app_config and options as arguments , substitute the result for app_output .	app_output = self . handle_app_config ( app_config , ** options )
11553	if e doesnt have an STR0 attribute ,	if not hasattr ( e , STR0 ) :
13982	define the function constant_time_compare with 2 arguments : length set to integer 12 ,	def get_random_string ( length = 12 , allowed_chars = STR0 ) :
11683	decorator stringfilter ,	@ stringfilter
11673	concatenate string STR1 , width and string STR0 , format the previous string with i incremented by 1 and line , substitute the result for i-th element of lines .	lines [ i ] = ( STR0 + width + STR1 ) % ( i + 1 , line )
6499	If you see valid patterns in the file then the issue is probably caused by a circular import . '' raise an ImproperlyConfigured exception with an argument : return value of the method msg.format , called with an argument name set to self.urlconf_name .	raise ImproperlyConfigured ( msg . format ( name = self . urlconf_name ) )
18711	return self.__name .	return self . __name
3836	if locale is not false or None , substitute it for locales , otherwise substitute all_locales for locales .	locales = locale or all_locales
6738	return nothing .	return
4213	otherwise if action equals to string STR0 ,	elif action == STR0 :
12427	if ZeroDivisionError exception is caught ,	except ZeroDivisionError :
9813	define the method __iter__ with an argument self .	def __iter__ ( self ) :
1099	raise an ValueError exception with string STR0 as an argument .	raise ValueError ( STR0 )
15708	derive the class Promise from the object base class .	class Promise ( object ) :
8838	define the method __deepcopy__ with 2 arguments : self and memo .	def __deepcopy__ ( self , memo ) :
3962	lines is an empty list .	lines = [ ]
11988	if value is false ,	if not value :
6860	none_value is a tuple containing 2 elements : integer 0 and string STR0 .	none_value = ( 0 , STR0 )
4926	call the method pending_references.setdefault with 2 arguments : refto and an empty list , extend the result with refs .	pending_references . setdefault ( refto , [ ] ) . extend ( refs )
17367	import StringIO .	import StringIO
7949	call the method self.field.prepare_value with an argument data , return the result .	return self . field . prepare_value ( data )
1697	substitute settings.ROOT_URLCONF for urlconf .	urlconf = settings . ROOT_URLCONF
4898	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
316	call the method cursor.execute with string STR0 as argument , substitute the STR1 with table and list containing first element of cursor.fetchone method , respectively .	cursor . execute ( STR0 % table , [ cursor . fetchone ( ) [ 0 ] ] )
15409	mime_type is a string STR0 .	mime_type = STR0
15022	try ,	try :
16173	if self.cdata_tag is not None ,	if self . cdata_tag is not None :
11108	return an empty string .	return STR
12261	define the method _get_context_stack_frame with 2 arguments : self and context .	def _get_context_stack_frame ( self , context ) :
18753	try ,	try :
5659	if related is true ,	if related :
451	call the self._delete method with argument fname .	self . _delete ( fname )
41	define the __getitem__ method with self and alias arguments .	def __getitem__ ( self , alias ) :
10809	define the function next_space_index with 2 arguments : self and subject .	def __init__ ( self , subject ) :
13656	substitute stat.st_mtime for mtime .	mtime = stat . st_mtime
13737	define the function jython_reloader with main_func , args and kwargs as arguments .	def jython_reloader ( main_func , args , kwargs ) :
18629	priority is floating point number 1.0 .	priority = 1.0
6842	from django.conf import settings into default name space .	from django . conf import settings
4942	try ,	try :
6275	derive the class Resolver404 with Http404 as base class .	class Resolver404 ( Http404 ) :
1100	define the method close with argument self .	def close ( self ) :
3118	get the value under the STR0 key of the options dictionary , substitute the result for use_natural_primary_keys .	use_natural_primary_keys = options . get ( STR0 )
3314	from django.db import connections and DEFAULT_DB_ALIAS into default name space .	from django . db import connections , DEFAULT_DB_ALIAS
9047	append name to string STR0 use it as the name of the attribute to get from object self , call the result as an function , with an argument : value under the name key of the media_attrs dictionary , if it exists , if not use None as an argument .	getattr ( self , STR0 + name ) ( media_attrs . get ( name , None ) )
15614	if val is an instance of tuple ,	if isinstance ( val , tuple ) :
8956	call the method json.dumps with a dictionary generate with an expression as an argument , return value of the function e.get_json_data , with an argument escape_html for f , for every f and e in list of tuples of self dictionary key , pair entries , return the result .	return json . dumps ( { f : e . get_json_data ( escape_html ) for f , e in self . items ( ) } )
9517	return obj .	return obj
8651	define the method add_fields with 2 arguments : self , form and index .	def add_fields ( self , form , index ) :
1955	from django.conf import settings into default name space .	from django . conf import settings
7652	define the function pretty_name with an argument name .	def pretty_name ( name ) :
12161	define the method __init__ with 6 arguments : self , loopvars , sequence , is_reversed , nodelist_loop and nodelist_empty set to None .	def __init__ ( self , loopvars , sequence , is_reversed , nodelist_loop , nodelist_empty = None ) :
1357	call the os.umask function with argument old_umask .	os . umask ( old_umask )
2636	if not ,	else :
5340	substitute the return value of the method self.object_list.count for self._count .	self . _count = self . object_list . count ( )
9690	strip the content_type of the whitespaces , substitute it for content_type .	content_type = content_type . strip ( )
17729	if not ,	else :
1573	define the method new_file with arguments : self , field_name , file_name , content_type , content_length , charset set to None ,	def new_file ( self , field_name , file_name , content_type , content_length , charset = None , content_type_extra = None ) :
15715	substitute args for self.__args .	self . __args = args
17202	substitute old_attr for new_attr .	new_attr = old_attr
18153	call strip s of the surrounding whitespaces , substitute every occurrence of the whitespace in the trim_whitespace_re with previous result , return the result .	return trim_whitespace_re . sub ( STR , s . strip ( ) )
8093	call the method self.form with unpacked dictionary defaults as an argument , substitute it for form .	form = self . form ( ** defaults )
14198	return iterable self.keyOrder .	return iter ( self . keyOrder )
6665	if flags is not None ,	if flags is not None :
10382	call the method timezone.make_naive with arguments : expires , timezone.utc , substitute the result for expires .	expires = timezone . make_naive ( expires , timezone . utc )
11383	derive the class BaseContext from the object base class .	class BaseContext ( object ) :
4480	call the function ip .	ip ( )
1843	call the sio.readline method with size as an argument , substitute the result for line .	line = sio . readline ( size )
3726	if errors is true ,	if errors :
11554	substitute node.source for e.django_template_source .	e . django_template_source = node . source
11199	if name is callable object ,	if callable ( name ) :
8663	if not ,	else :
18164	define the function pgettext with 2 arguments : context and message .	def pgettext ( context , message ) :
12258	otherwise if self.nodelist_false is true ,	elif self . nodelist_false :
10019	append string STR0 to msg .	msg += STR0
7362	if initial equals a string STR0 ,	if initial == STR0 :
4980	output is an empty list .	output = [ ]
13162	do nothing .	pass
4441	convert e to a string , substitute it for error_text .	error_text = str ( e )
3811	settings.USE_I18N is boolean True .	settings . USE_I18N = True
10056	if value under the header key of the self.META dictionary is equal to value ,	if self . META . get ( header , None ) == value :
16278	increment factor by one .	factor += 1
5777	from django.core.serializers import base into default name space .	from django . core . serializers import base
6332	property decorator ,	@ property
4665	from django.core.management.sql import check_for_migrations into default name space .	from django . core . management . sql import check_for_migrations
9501	return id_ .	return id_
4476	call the method start_ipython with an argument argv as an empty list .	start_ipython ( argv = [ ] )
16558	derive the class AdminEmailHandler from logging.Handler base class .	class AdminEmailHandler ( logging . Handler ) :
5106	split file by STR0 character , apply on its every element a lambda function which takes an argument x , and returns x striped of the surrounding whitespaces , extend the extra_files with the mapped list .	extra_files . extend ( map ( lambda x : x . strip ( ) , file . split ( STR0 ) ) )
745	or model._meta.app_config is contained in app_configs , for every field in model._meta.local_fields , # ANNOTATION only if field is an instance of models.BooleanField and field.has_default ( ) evaluates to False . call the Warning function with 4 arguments : string STR0 ,	return [ Warning ( STR0 , hint = ( STR1 ) , obj = field , id = STR2 , ) for field in problem_fields ]
10609	return self.name .	return self . name
1309	call the itertools.count function with argument integer 1 , substitute the result for count .	count = itertools . count ( 1 )
7669	derive the class DeclarativeFieldsMetaclass from the base class MediaDefiningClass .	class DeclarativeFieldsMetaclass ( MediaDefiningClass ) :
16455	subtract length of hextet from 4 , create a string with previous result number of character STR0 , append hextet to it , convert the result into a lowercase , append it to ret_ip .	ret_ip . append ( ( STR0 * ( 4 - len ( hextet ) ) + hextet ) . lower ( ) )
14510	if self.timezone is true ,	if not self . timezone :
18443	skip this loop iteration .	continue
13171	define the method __getstate__ with an argument self .	def __getstate__ ( self ) :
18346	substitute gettext for ugettext .	ugettext = gettext
15127	if string STR0 is contained in config ,	if STR0 in config :
9715	substitute length of chunk for chunk_length .	chunk_length = len ( chunk )
8310	if qs._result_cache is not None ,	if qs . _result_cache is not None :
1740	with name of the class type of the middleware_method instance , use it as the argument for call to the ValueError exception raise . call the response.render ( ) method and assign the return to the response .	response = response . render ( )
9819	define the method __iter__ with an argument self .	def __iter__ ( self ) :
8967	define the method __str__ with an argument self .	def __str__ ( self ) :
1817	return empty bytes string .	return STR
14872	return result .	return result
16809	close file_ file descriptor .	file_ . close ( )
8734	if self.fk.rel.field_name is not equal to self.fk.rel.to._meta.pk.name ,	if self . fk . rel . field_name != self . fk . rel . to . _meta . pk . name :
9358	call the method self.render_options with 2 arguments : choices and value , substitute the result for options .	options = self . render_options ( choices , value )
666	define the function delete_many with self , keys and version set to None as arguments .	def delete_many ( self , keys , version = None ) :
1793	import module warnings .	import warnings
15083	substitute length of prefixed for pflen .	pflen = len ( prefixed )
15770	call the method other.__cast , substitute the result for other .	other = other . __cast ( )
16053	sum punctuation and trail , substitute the result for trail .	trail = punctuation + trail
8744	define the function _get_foreign_key with 4 arguments : parent_model , model , fk_name set to None and can_fail set to boolean False .	def _get_foreign_key ( parent_model , model , fk_name = None , can_fail = False ) :
1546	__all__ is a string containing strings : STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 and STR7 .	__all__ = [ STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 , STR7 ]
17670	if html is true ,	if html :
3249	if changed is false ,	if not changed :
13149	read file fp , call the method decode on the result with an argument settings.FILE_CHARSET , return tuple containing 2 elements , previous result and filepath .	return ( fp . read ( ) . decode ( settings . FILE_CHARSET ) , filepath )
7836	call the method self.add_error with 2 arguments None and e .	self . add_error ( None , e )
16781	substitute the value under the entry key of the sys.path_importer_cache dictionary for finder .	finder = sys . path_importer_cache [ entry ]
1365	endless loop ,	while True :
14987	match value string with regex self.CONVERT_PATTERN , substitute the result for m .	m = self . CONVERT_PATTERN . match ( value )
16979	get the next element of the iterable pattern_iter , assign the result for ch and escaped , respectively .	ch , escaped = next ( input_iter )
8857	if self.to_field_name is true ,	if self . to_field_name :
14163	define the method __str__ with an argument self .	def __str__ ( self ) :
9834	raise an InputStreamExhausted exception ,	raise InputStreamExhausted ( )
11151	if kwarg is true ,	if kwarg :
4937	append string STR0 to the final_output .	final_output . append ( STR0 )
18023	if timezone has an attribute STR0 ,	if hasattr ( timezone , STR0 ) :
15142	try ,	try :
17037	append i_args to args , append new_args with the result .	new_args . append ( args [ : ] + i_args )
5570	substitute a tuple with 2 elements : characters STR0 and STR1 for value under the STR2 key of the self.json_kwargs dictionary .	self . json_kwargs [ STR0 ] = ( STR1 , STR2 )
12886	convert self to a tuple , call the result with 2 arguments : block.name and block.nodelist , substitute the result for block .	block = type ( self ) ( block . name , block . nodelist )
4680	join statements into a string , separated by newline characters , return it .	return STR0 . join ( statements )
3773	call the method parser.add_argument with 5 arguments : string STR1 , action set to string STR2 , dest set to string STR3 , default as boolean False and help as a string STR0 .	parser . add_argument ( STR1 , action = STR2 , dest = STR3 , default = False , help = STR0 )
4864	delete the value under the STR0 key of the options dictionary .	del options [ STR0 ]
16210	call the function quote with 2 arguments : result of the function force_str called with an argument url , and result of the function force_str called with an argument safe , use the result as an argument for the call to the function force_text , return the result .	return force_text ( quote ( force_str ( url ) , force_str ( safe ) ) )
6570	define the function reverse with 6 arguments : viewname , urlconf set to None , args set to None , kwargs set to None , prefix set to None , current_app set to None .	def reverse ( viewname , urlconf = None , args = None , kwargs = None , prefix = None , current_app = None ) :
9837	return self .	return self
4686	from django.db.migrations.writer import MigrationWriter into default name space .	from django . db . migrations . writer import MigrationWriter
8237	from collections import OrderedDict into default name space .	from collections import OrderedDict
11467	define the function get_standard_processors .	def get_standard_processors ( ) :
2827	if not ,	else :
12840	append first element of e.args to not_found list .	not_found . append ( e . args [ 0 ] )
3731	if command.verbosity is greater than integer 0 ,	elif command . verbosity > 0 :
15214	from decimal import Decimal into default name space .	from decimal import Decimal
4331	add plan_node to the shown set .	shown . add ( plan_node )
6476	append list containing pattern to tried .	tried . append ( [ pattern ] )
16102	if tuple current_version elements are greater or equal to ( 3 , 4 ) , respectively ,	if current_version >= ( 3 , 4 ) :
16432	return boolean False .	return False
2570	call the function sys.exit with an integer 1 as an argument .	sys . exit ( 1 )
14117	return value under key key of self dictionary	return self [ key ]
16456	join elements of ret_ip into a string separated with STR0 , return it .	return STR0 . join ( ret_ip )
10427	derive the class HttpResponse from the HttpResponseBase base class .	class HttpResponse ( HttpResponseBase ) :
14274	define the method __getitem__ with 2 arguments : self and key .	def __getitem__ ( self , key ) :
1177	LOCK_SH is a integer 0 .	LOCK_SH = 0
16474	substitute Tok.num for self.id .	self . id = Tok . num
13704	while RUN_RELOADER is true .	while RUN_RELOADER :
12006	define the function yesno with 2 arguments value and arg set to None .	def yesno ( value , arg = None ) :
5274	delete all the whitespaces from ext , split it by STR0 character , extend ext_list with the result .	ext_list . extend ( ext . replace ( STR , STR ) . split ( STR0 ) )
9226	template_with_clear is a string STR1 .	template_with_clear = STR1
14969	if TypeError exception is caught ,	except TypeError :
1556	if not ,	else :
10333	if six.PY3 is true ,	if six . PY3 :
7053	derive the class CharField from the base class Field class .	class CharField ( Field ) :
2284	call the method payload.decode with 2 arguments : string STR0 and string STR1 , substitute the result for self._payload .	self . _payload = payload . decode ( STR0 , STR1 )
1320	raise an NotImplementedError exception with argument string STR0 .	raise NotImplementedError ( STR0 )
6054	if threading is true ,	if threading :
2002	import module threading .	import threading
5514	define the method getvalue with an argument self .	def getvalue ( self ) :
9581	add key to the self.bad_cookies set .	self . bad_cookies . add ( key )
18137	for every s in strings , call the function force_text with an argument s , join the results in a string , return the result .	return STR . join ( force_text ( s ) for s in strings )
14447	substitute obj.tzinfo for self.timezone .	self . timezone = obj . tzinfo
8977	define the method as_text with an argument self .	def as_data ( self ) :
13991	if lengths of val1 and val2 are not equal ,	if len ( val1 ) != len ( val2 ) :
14984	value is an instance of ConvertingTuple class , created with an argument value .	value = ConvertingTuple ( value )
14105	get the type of self object , call its method __bool__ with an argument self , return the result .	return type ( self ) . __bool__ ( self )
11471	processors is an empty list .	processors = [ ]
18087	call the function func with unpacked dictionary kwargs as an argument , substitute the result for translated .	translated = func ( ** kwargs )
12889	call the method block.nodelist.render with an argument context , substitute the result for result .	result = block . nodelist . render ( context )
12725	raise an TemplateSyntaxError exception with an argument string STR0 .	raise TemplateSyntaxError ( STR0 )
4836	get the length of the options , use it as a starting index for the slicing arg list , substitute it for self.test_runner .	self . test_runner = arg [ len ( option ) : ]
18158	if number equals integer 1 ,	if number == 1 :
7764	append str_hidden to output .	output . append ( str_hidden )
18	define the function _create_cache with backend and dictionary pair of elements kwargs as arguments .	def _create_cache ( backend , ** kwargs ) :
12410	substitute max_expr for self.max_expr .	self . max_expr = max_expr
17506	call the method self.can_read.acquire .	self . can_read . acquire ( )
18204	from django.utils.encoding import force_text into default name space .	from django . utils . encoding import force_text
3281	if ImportError exception is caught ,	except ImportError :
2268	fp is a instance of a class six.BytesIO .	fp = six . BytesIO ( )
17341	return s .	return s
6735	try ,	try :
11079	for every node in self ,	for node in self :
15261	if not ,	else :
8731	if not ,	else :
10999	if self.lookups is not None ,	if self . lookups is not None :
14276	call the method __getitem__ from the base class of the class MultiValueDict , with an argument key , substitute the result for list_ .	list_ = super ( MultiValueDict , self ) . __getitem__ ( key )
6480	call the method sub_match_dict.update with an argument sub_match.kwargs .	sub_match_dict . update ( sub_match . kwargs )
13882	if return value of function response.has_header with string STR0 as argument is boolean False ,	if not response . has_header ( STR0 ) :
12548	append first element of bits to STR0 . substitute the result for end_tag .	end_tag = STR0 + bits [ 0 ]
10231	if not ,	else :
11374	derive the class ContextDict from the dict base class .	class ContextDict ( dict ) :
15878	if self._wrapped is empty ,	if self . _wrapped is empty :
5052	call the method models.signals.post_syncdb.send with 6 arguments : sender set to app_config.models_module ,	models . signals . post_syncdb . send ( sender = app_config . models_module , app = app_config . models_module , created_models = created_models , verbosity = verbosity , interactive = interactive , db = db )
13475	common_prefix is None .	common_prefix = None
14592	decrement week_number by integer 1 .	week_number -= 1
5998	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
1057	if self.file is false or self.file.closed is true , return boolean true , otherwise return boolean false .	return not self . file or self . file . closed
11406	define the method __setitem__ with 3 arguments : self , key and value .	def __setitem__ ( self , key , value ) :
15485	call the method self.add_root_elements with an argument handler .	self . add_root_elements ( handler )
9855	raise an StopIteration exception .	raise StopIteration ( )
8623	return an empty list .	return [ ]
10299	REASON_PHRASES is a dictionary containing 59 initial entries : STR0 for 100 , STR1 for 101 , STR2 for 102 , STR3 for 200 , STR4 for 201 , STR5 for 202 , STR6 for 203 , STR7 for 204 , STR8 for 205 , STR9 for 206 , STR10 for 207 , STR11 for 208 , STR12 for 226 , STR13 for 300 , STR14 for 301 , STR15 for 302 , STR16 for 303 , STR17 for 304 , STR18 for 305 , STR19 for 306 , STR20 for 307 , STR21 for 308 , STR22 for 400 , STR23 for 401 , STR24 for 402 , STR25 for 403 , STR26 for 404 , STR27 for 405 , STR28 for 406 , STR29 for 407 , STR30 for 408 , STR31 for 409 , STR32 for 410 , STR33 for 411 , STR34 for 412 , STR35 for 413 , STR36 for 414 , STR37 for 415 , STR38 for 416 , STR39 for 417 , STR40M A TEAPOT STR41UNPROCESSABLE ENTITY STR42LOCKED STR43FAILED DEPENDENCY STR44UPGRADE REQUIRED STR45PRECONDITION REQUIRED STR46TOO MANY REQUESTS STR47REQUEST HEADER FIELDS TOO LARGE STR48INTERNAL SERVER ERROR STR49NOT IMPLEMENTED STR50BAD GATEWAY STR51SERVICE UNAVAILABLE STR52GATEWAY TIMEOUT STR53HTTP VERSION NOT SUPPORTED STR54VARIANT ALSO NEGOTIATES STR55INSUFFICIENT STORAGE STR56LOOP DETECTED STR57NOT EXTENDED STR58NETWORK AUTHENTICATION REQUIRED ' for 511 .	REASON_PHRASES = { 100 : STR1 , 101 : STR2 , 102 : STR3 , 200 : STR4 , 201 : STR5 , 202 : STR6 , 203 : STR7 , 204 : STR8 , 205 : STR9 , 206 : STR10 , 207 : STR11 , 208 : STR12 , 226 : STR13 , 300 : STR14 , 301 : STR15 , 302 : STR16 , 303 : STR17 , 304 : STR18 , 305 : STR19 , 306 : STR20 , 307 : STR21 , 308 : STR22 , 400 : STR23 , 401 : STR24 , 402 : STR25 , 403 : STR26 , 404 : STR27 , 405 : STR28 , 406 : STR29 , 407 : STR30 , 408 : STR31 , 409 : STR32 , 410 : STR33 , 411 : STR34 , 412 : STR35 , 413 : STR36 , 414 : STR37 , 415 : STR38 , 416 : STR39 , 417 : STR40 , 418 : STR0 , 422 : STR41 , 423 : STR42 , 424 : STR43 , 426 : STR44 , 428 : STR45 , 429 : STR46 , 431 : STR47 , 500 : STR48 , 501 : STR49 , 502 : STR50 , 503 : STR51 , 504 : STR52 , 505 : STR53 , 506 : STR54 , 507 : STR55 , 508 : STR56 , 510 : STR57 , 511 : STR58 , }
3276	get the value STR0 key of the options dictionary , if it exists substitute it for inhibit_post_migrate , otherwise inhibit_post_migrate is boolean False .	inhibit_post_migrate = options . get ( STR0 , False )
4142	substitute connections element at the index of the value db for connections .	connection = connections [ db ]
5721	value under the field.attname key of the data dictionary is None .	data [ field . attname ] = None
10099	return self._body .	return self . _body
12413	define the method render with 2 arguments : self and context .	def render ( self , context ) :
17656	if string STR0 is contained in truncate ,	if STR0 in truncate :
3745	call the function write_pot_file with 2 arguments : potfile and msgs .	write_pot_file ( potfile , msgs )
3549	define the method load_label with self and fixture_label as arguments .	def load_label ( self , fixture_label ) :
8587	call the method self.error_class with an argument list with a element : result of the method self.get_form_error , substitute the result for value under the NON_FIELD_ERRORS key of the form._errors dictionary .	form . _errors [ NON_FIELD_ERRORS ] = self . error_class ( [ self . get_form_error ( ) ] )
17720	call the method tag.groups , substitute the result for closing_tag , tagname and self_closing , respectively .	closing_tag , tagname , self_closing = tag . groups ( )
1776	if settings.DEBUG is True ,	if settings . DEBUG :
4683	from django.db import connections , DEFAULT_DB_ALIAS and migrations into default name space .	from django . db import connections , DEFAULT_DB_ALIAS , migrations
8426	append f.name to exclude .	exclude . append ( f . name )
8057	form is an instance of ManagementForm class , created with 3 arguments : auto_id as self.auto_id , prefix as self.prefix , and initial as a dictionary with 4 entries : result of self.total_form_count method for TOTAL_FORM_COUNT , result of self.initial_form_count method for INITIAL_FORM_COUNT , self.min_num for MIN_NUM_FORM_COUNT and self.max_num for MAX_NUM_FORM_COUNT .	form = ManagementForm ( auto_id = self . auto_id , prefix = self . prefix , initial = { TOTAL_FORM_COUNT : self . total_form_count ( ) , INITIAL_FORM_COUNT : self . initial_form_count ( ) , MIN_NUM_FORM_COUNT : self . min_num , MAX_NUM_FORM_COUNT : self . max_num } )
13419	finally perform ,	finally :
15376	update dictionary item with an argument kwargs .	item . update ( kwargs )
1428	call the urljoin function with arguments : self.base_url and result of the call to the function filepath_to_uri with argument name , return the result .	return urljoin ( self . base_url , filepath_to_uri ( name ) )
9790	if bytes is false ,	if not bytes :
15453	call the method handler.addQuickElement with 2 arguments : string STR0 and value under the STR1 key of the item dictionary .	handler . addQuickElement ( STR0 , item [ STR1 ] )
7279	if self.max_length is not None and length of file_name is grater than self.max_length ,	if self . max_length is not None and len ( file_name ) > self . max_length :
18289	call the method self.add_fallback with an argument default_translation .	self . add_fallback ( default_translation )
18258	call the method gettext_module.translation with 5 arguments : domain set to string STR0 , localedir set to localedir , languages set to a list with an element self.__locale , codeset set to a string STR1 and fallback set to use_null_fallback , substitute the result for translation .	translation = gettext_module . translation ( domain = STR0 , localedir = localedir , languages = [ self . __locale ] , codeset = STR1 , fallback = use_null_fallback )
12600	define the function ifchanged with 2 arguments : parser and token .	def ifchanged ( parser , token ) :
6196	if decompress is true ,	if decompress :
15454	call the method handler.addQuickElement with 2 arguments : string STR0 and value under the STR1 key of the item dictionary .	handler . addQuickElement ( STR0 , item [ STR1 ] )
14500	define the method T with an argument self .	def T ( self ) :
15642	call the function date_format with 2 arguments : value and use_l10n as use_l10n , return the result .	return date_format ( value , use_l10n = use_l10n )
2785	sorted_issues is a list of tuples with 5 entries : criticals and STR0 , errors and STR1 , warnings and STR2 ,	sorted_issues = [ ( criticals , STR0 ) , ( errors , STR1 ) , ( warnings , STR2 ) , ( infos , STR3 ) , ( debugs , STR4 ) , ]
2174	call the function sanitize_address with arguments email_message.from_email and email_message.encoding , substitute the result for from_email .	from_email = sanitize_address ( email_message . from_email , email_message . encoding )
18088	try ,	try :
13338	substitute self.current_token for t .	t = self . current_token
16778	return boolean True .	return True
3187	if use_base_manager is true ,	if use_base_manager :
10783	if parse_until is true ,	if parse_until :
14289	memo is an empty dictionary .	memo = { }
11134	call the method parser.compile_filter with an argument value , substitute the result for value under the key key of kwargs dictionary .	kwargs [ key ] = parser . compile_filter ( value )
16181	return j .	return j
16537	import module sys .	import sys
108	self._max_entries is integer 300 .	self . _max_entries = 300
7991	return self.html_name .	return self . html_name
4944	if Exception exception is caught ,	except Exception :
14883	remove value under key key of self dictionary , if it doesnt exists return default , substitute the result for value .	value = dict . pop ( self , key , default )
3793	get the value under the STR0 key of the options dictionary , if it is true ,	if options . get ( STR0 ) :
5142	if filename ends with extensions or filename is contained in extra_files ,	if filename . endswith ( extensions ) or filename in extra_files :
13014	if app_config.path is true ,	if not app_config . path :
174	call the self.get method with arguments key and version set to version , substitute the result for value .	value = self . get ( key , version = version )
10419	do nothing .	pass
406	renamed is boolean True .	renamed = True
97	if timeout is not None ,	if timeout is not None :
10166	call the method mutable substitute for self._mutable .	self . _mutable = mutable
16827	sign is a string STR0 .	sign = STR0
5032	for every sql_file in sql_files ,	for sql_file in sql_files :
16382	if best_doublecolon_len is greater than integer 1 ,	if best_doublecolon_len > 1 :
11168	if IndexError exception is caught ,	except IndexError :
15728	call the method cls.__promise__ with 3 arguments : resultclass , k and v , substitute the result for meth .	meth = cls . __promise__ ( resultclass , k , v )
3150	split label by STR0 , assign the result to app_label and model_label , respectively .	app_label , model_label = label . split ( STR0 )
18488	if not ,	else :
6492	property decorator ,	@ property
17599	opts is a tuple created out of elements s , for every s in styles is s is in the keys of the opt_dict dictionary .	opts = tuple ( s for s in styles if s in opt_dict . keys ( ) )
10149	append to a list elements of the iterator self , return the resulting list .	return list ( iter ( self ) )
11821	return an empty string .	return STR
6278	do nothing .	pass
6694	if ValidationError , renamed to e , is caught ,	except ValidationError as e :
7578	append a tuple with 2 elements : f and f with first occurrence of the path replaced with an empty string , to self.choices .	self . choices . append ( ( f , f . replace ( path , STR , 1 ) ) )
9364	if data is an instance of MultiValueDict or MergeDict ,	if isinstance ( data , ( MultiValueDict , MergeDict ) ) :
4339	help is a string STR0 .	help = STR0
12189	if values has an attribute STR0 ,	if not hasattr ( values , STR0 ) :
3444	in string STR0 , replace STR1 with new_name and STR2 with num , while the result is contained in used_column_names ,	while STR0 % ( new_name , num ) in used_column_names :
6355	substitute name for self.name .	self . name = name
17472	if sys.platform starts with a string STR0 ,	if sys . platform . startswith ( STR0 ) :
15924	return cls .	return cls
2072	if self._fname is None :	if self . _fname is None :
1220	define the function unlock with argument f .	def unlock ( f ) :
7800	if code is None ,	if code is None :
4260	evaluate the method connection.introspection.table_name_converter with model._meta.db_table as argument , append it to tables .	tables . append ( connection . introspection . table_name_converter ( model . _meta . db_table ) )
11731	return value .	return value
4946	try ,	try :
433	divide num_entries by self._cull_frequency , convert the result to an integer , call the random.sample function with filelist and previous result as arguments , substitute the result for filelist .	filelist = random . sample ( filelist , int ( num_entries / self . _cull_frequency ) )
3283	call the method sql_flush with 5 arguments : self.style , connection , only_django set to boolean True , reset_sequences set to reset_sequences , allow_cascade set to allow_cascade , substitute the result for sql_list .	sql_list = sql_flush ( self . style , connection , only_django = True , reset_sequences = reset_sequences , allow_cascade = allow_cascade )
13902	call the function _i18n_cache_key_suffix with request and cache_key as arguments , return the result .	return _i18n_cache_key_suffix ( request , cache_key )
9679	substitute raw_data for data .	data = raw_data
761	DEBUG is integer 10 .	DEBUG = 10
5844	call the method self.xml.startElement with an argument string STR0 .	self . xml . endElement ( STR0 )
2028	call the method self.stream.flush .	self . stream . flush ( )
7644	from django.forms.widgets import Media , MediaDefiningClass , TextInput and Textarea into default name space .	from django . forms . widgets import Media , MediaDefiningClass , TextInput , Textarea
18051	get attribute real_name from the trans object , return it .	return getattr ( trans , real_name )
10718	call the method self.extend_nodelist with 3 arguments : nodelist , instance of TextNode class , created with an argument token.contents , and token .	self . extend_nodelist ( nodelist , TextNode ( token . contents ) , token )
12708	if not ,	else :
6234	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
10599	define the method __str__ with an argument self .	def __str__ ( self ) :
12314	value under the self.var_name key of the context dictionary is an empty list .	context [ self . var_name ] = [ ]
12536	call the method parser.parse with an argument tuple with 2 elements strings STR0 and STR1 , substitute the result for nodelist_loop .	nodelist_loop = parser . parse ( ( STR0 , STR1 , ) )
12957	if block_name is contained in parser.__loaded_blocks ,	if block_name in parser . __loaded_blocks :
18368	if six.PY3 is true ,	if six . PY3 :
6336	if self.regex is not an instance of six.string_types ,	if isinstance ( self . _regex , six . string_types ) :
8167	if self.can_delete is true ,	if self . can_delete :
17703	end_text_pos is equal to integer 0 .	end_text_pos = 0
3826	call the function os.path.abspath with an argument STR0 , append the result to self.locale_paths .	self . locale_paths . append ( os . path . abspath ( STR0 ) )
11910	sublist is an empty string .	sublist = STR
14633	if value under the STR0 key of the kw dictionary is true ,	if kw [ STR0 ] :
5965	define the method __repr__ with an argument self .	def __repr__ ( self ) :
14954	call the method m.groups , use the first element of the result as key for obtaining value from self.config dictionary , substitute it for d .	d = self . config [ m . groups ( ) [ 0 ] ]
10057	return string STR0 .	return STR0
1189	_fields_ is a list containing 2 tuples : first tuple contains : string STR0 and _OFFSET , second contains : string STR1 and PVOID .	_fields_ = [ ( STR0 , _OFFSET ) , ( STR1 , PVOID ) ]
5821	if self.use_natural_foreign_keys is true and field.rel.to has an attribute STR0 ,	if self . use_natural_foreign_keys and hasattr ( field . rel . to , STR0 ) :
7361	define the method _has_changed with arguments self , initial and data .	def _has_changed ( self , initial , data ) :
14746	call the function update_wrapper with 2 arguments : _wrapper and func .	update_wrapper ( _wrapper , func )
14216	for every key in self.keyOrder ,	for key in self . keyOrder :
12787	raise an ImproperlyConfigured exception with an argument string STR0 , where STR1 is replaced with loader .	raise ImproperlyConfigured ( STR0 % loader )
4261	finally , perform ,	finally :
14403	derive the class DictWrapper from the dict base class .	class DictWrapper ( dict ) :
2511	call the color_style function , substitute the result for style .	style = color_style ( )
14733	raise an AttributeError exception with an argument string STR0 .	raise AttributeError ( STR0 )
17363	define the function indexbytes with 2 arguments buf and i .	def indexbytes ( buf , i ) :
3424	append string STR0 to field_notes .	field_notes . append ( STR0 )
15547	substitute Rss201rev2Feed for DefaultFeed .	DefaultFeed = Rss201rev2Feed
4737	for every migration in migrations_to_squash ,	for migration in migrations_to_squash :
16932	append ch to result .	result . append ( ch )
9648	if self._content_length equals integer 0 ,	if self . _content_length == 0 :
8844	define the method _set_queryset with 2 arguments : self and queryset .	def _set_queryset ( self , queryset ) :
1787	import module cgi .	import cgi
1503	substitute the first 255 elements of ext for ext .	ext = ext [ : 255 ]
10158	if six.PY3 is true ,	if six . PY3 :
15759	define the method __bytes_cast with an argument self .	def __bytes_cast ( self ) :
162	call the delete method with key and version set to version as arguments .	self . delete ( key , version = version )
2836	call the method parser.add_argument with 3 arguments : string STR0 , metavar set to self.label and nargs set to STR1 .	parser . add_argument ( STR0 , metavar = self . label , nargs = STR1 )
2779	if all_issues is true ,	if all_issues :
10076	define the method upload_handlers with an argument self .	def upload_handlers ( self ) :
1034	if self.file has an attribute STR0 ,	if hasattr ( self . file , STR0 ) :
10828	while i is lesser than length of subject and i-th element of subject is not an empty space or tab character ,	while i < len ( subject ) and subject [ i ] not in ( STR , STR0 ) :
5040	skip this loop iteration ,	continue
17115	__author__ is a string STR0 .	__author__ = STR0
15951	for every z in range of integers from 0 to 31 , update _js_escapes dictionary with STR0 formated with z , or integer representation of z converted into a string .	_js_escapes . update ( ( ord ( STR0 % z ) , STR1 % z ) for z in range ( 32 ) )
3933	with the result renamed to fp , perform the following : read file fp and substitute the result for msgs .	msgs = fp . read ( )
7327	substitute URLInput for widget .	widget = URLInput
15807	empty is an instance of object class .	empty = object ( )
17996	if not ,	else :
15793	call the function __proxy__ with 2 arguments : args and kw , return the result .	return __proxy__ ( args , kw )
10916	substitute filters for self.filters .	self . filters = filters
7500	f.required is boolean False .	f . required = False
7381	if initial is not equal to data , return boolean True , if it is return boolean False .	return initial != data
16736	return attr .	return attr
5176	if not ,	else :
16298	call the method ETAG_MATCH.findall with an argument etag_str , substitute the result for etags .	etags = ETAG_MATCH . findall ( etag_str )
11990	try ,	try :
6017	if ImportError , rename it to e , exception is caught ,	except ImportError as e :
18545	if origin is true ,	if origin :
5929	raise an base.DeserializationError exception with an argument string STR0 , where STR1 is replaced with node.nodeName and attr .	raise base . DeserializationError ( STR0 % ( node . nodeName , attr ) )
5585	write new line to the self.stream file stream .	self . stream . write ( STR0 )
15477	call the method handler.addQuickElement with 2 arguments : string STR0 and cat .	handler . addQuickElement ( STR0 , cat )
11503	call the method match.span , substitute the result for start an end , respectively .	start , end = match . span ( )
202	self.verbose_name is a string STR0 .	self . verbose_name = STR0
6829	from django.forms.widgets import everything into default name space .	from django . forms . widgets import *
12696	remove first two elements from bits .	bits = bits [ 2 : ]
5979	substitute name for self.name .	self . name = name
900	substitute settings.LANGUAGES for the value under the STR0 key of the context_extras dictionary .	context_extras [ STR0 ] = settings . LANGUAGES
10215	call the method popitem from the base class of the class QueryDict , return the result .	return super ( QueryDict , self ) . popitem ( )
1872	if exception ValueError or TypeError is caught ,	except ( ValueError , TypeError ) :
16942	define the function next_char with an argument input_iter .	def next_char ( input_iter ) :
16720	if ValueError exception is caught ,	except ValueError :
16585	replace every occurrence of STR0 in subject with STR1 and replace every occurrence of STRspecial in subject with STR2 , substitute the result for formatted_subject .	formatted_subject = subject . replace ( STR0 , STR1 ) . replace ( STRspecial , STR2 )
2797	append string STR0 to msg , replace first STR4 for : string STR1 , if visible_issue_count equals to integer 0 , or for string STR2 if visible_issue_count equals integer 1 , or for string STR3 , with STR5 replaced by visible_issue_count , subtract visible_issue_count from length of all_issues , and substitute it for second STR6 in the stirting string .	msg += STR0 % ( STR1 if visible_issue_count == 0 else STR2 if visible_issue_count == 1 else STR3 % visible_issue_count , len ( all_issues ) - visible_issue_count , )
12918	call the method self.get_parent with an argument context , substitute the result for compiled_parent .	compiled_parent = self . get_parent ( context )
6743	call the self.domain_regex.match method with an argument domain_part , if it evaluates to true ,	if self . domain_regex . match ( domain_part ) :
7017	call the function v with an argument value .	v ( value )
2326	substitute connection for self.connection .	self . connection = connection
18701	call the function timedelta with an argument minutes set to offset , substitute the result for self.__offset .	self . __offset = timedelta ( minutes = offset )
2526	call the method sys.stderr.write with an argument string STR0 , where STR1 is replaced with subcommand and STR2 is replaced with self.prog_name .	sys . stderr . write ( STR0 % ( subcommand , self . prog_name ) )
11087	define the method __repr__ with an argument self .	def __repr__ ( self ) :
18214	CONTEXT_SEPARATOR is a string STR0 .	CONTEXT_SEPARATOR = STR0
11778	call the function mark_safe with an argument value , return the result .	return mark_safe ( value )
16916	instantiate a class Group with 2 arguments : string STR0 formated with param , and param , append it to result .	result . append ( Group ( ( ( STR0 % param ) , param ) ) )
18383	define the function check_for_language with an argument lang_code .	def check_for_language ( lang_code ) :
3818	self.default_locale_path is None .	self . default_locale_path = None
17053	if six.PY3 is true ,	if six . PY3 :
6629	if _urlconfs has an attribute STR0 ,	if hasattr ( _urlconfs , STR0 ) :
15774	call the method other.__cast , substitute the result for other .	other = other . __cast ( )
14816	derive the class RenameMethodsBase from type base class .	class RenameMethodsBase ( type ) :
971	substitute list containing element self for self.error_list .	self . error_list = [ self ]
4645	call the add_argument method on the parser object with string STR0 , asction set to STR1 , dest set to STR2 , default set to False and help set to string STR3 as arguments .	parser . add_argument ( STR0 , action = STR1 , dest = STR2 , default = False , help = STR3 )
15505	if value under the STR0 key of the self.feed dictionary is not None ,	if self . feed [ STR0 ] is not None :
8105	call the method self.add_fields with arguments form and None .	self . add_fields ( form , None )
6428	call the method normalize with sum of parent_pat and pat as an argument , substitute the result for new_matches .	new_matches = normalize ( parent_pat + pat )
14938	get frag attribute from found object , substitute it for found .	found = getattr ( found , frag )
12375	substitute kwargs for self.kwargs .	self . kwargs = kwargs
3428	convert col_name to lowercase , on the result call the method find with an argument string STR0 , if the result is greater of equal to integer 0 ,	if col_name . lower ( ) . find ( STR0 ) >= 0 :
4640	help is a string STR0	help = STR0
16738	from django.apps import apps .	from django . apps import apps
17660	append truncate to text , return the result .	return STR0 % ( text , truncate )
3659	import module re .	import re
6491	return self._urlconf_module .	return self . _urlconf_module
17543	contextlib.contextmanager decorator ,	@ contextlib . contextmanager
13438	cls is None .	cls = None
16515	call the method __init__ with 2 arguments : self.states and string STR0 from the base class of the class JsLexer .	super ( JsLexer , self ) . __init__ ( self . states , STR0 )
1532	return boolean False .	return False
7585	if self.allow_files is true and full_file is a file , or if self.allow_folders is true and full_file is an directory , and only if self.match is None or return value of the method self.match_re.search called with an argument f is true .	if ( ( ( self . allow_files and os . path . isfile ( full_file ) ) or ( self . allow_folders and os . path . isdir ( full_file ) ) ) and ( self . match is None or self . match_re . search ( f ) ) ) :
17168	if not ,	else :
14677	compile the regex from the raw string STR0 , substitute the result for _illegal_formatting .	_illegal_formatting = re . compile ( STR0 )
13177	delete entry under the attr key of obj_dict dictionary .	del obj_dict [ attr ]
5454	for every format in settings.SERIALIZATION_MODULES ,	for format in settings . SERIALIZATION_MODULES :
14193	call the method __setitem__ from the base class of the class SortedDict , with 2 arguments key and value .	super ( SortedDict , self ) . __setitem__ ( key , value )
10979	self.message_context is None .	self . message_context = None
2726	call the method parser.parse_args with argv , without the first 2 elements , substitute the result for options and args .	options , args = parser . parse_args ( argv [ 2 : ] )
11478	convert processors elements into a tuple , substitute it for _standard_context_processors .	_standard_context_processors = tuple ( processors )
12456	call the method parser.parse with an argument tuple with an element string STR0 , substitute the result for nodelist .	nodelist = parser . parse ( ( STR0 , ) )
12703	if match is true ,	if not match :
13039	read file fp , call the method decode on the result with an argument settings.FILE_CHARSET , return tuple containing 2 elements , previous result and filepath .	return ( fp . read ( ) . decode ( settings . FILE_CHARSET ) , filepath )
5999	import module socket .	import socket
17907	return self.__offset .	return self . __offset
2260	fp is a instance of a class six.StringIO .	fp = six . StringIO ( )
18247	substitute language for self.__language .	self . __language = language
2301	derive the class EmailMessage from the object base class .	class EmailMessage ( object ) :
17529	define the method writer_leaves with an argument self .	def writer_leaves ( self ) :
17950	if pytz is true , substitute pytz.utc for utc , otherwise substitute result of the function UTC for utc .	utc = pytz . utc if pytz else UTC ( )
8437	return self.cleaned_data .	return self . cleaned_data
16742	if register_to is true ,	if register_to :
17863	multiply delta.days , integer 24 , integer 60 and integer 60 add delta.seconds to it , substitute the result for since .	since = delta . days * 24 * 60 * 60 + delta . seconds
10156	substitute settings.DEFAULT_CHARSET for encoding .	encoding = settings . DEFAULT_CHARSET
10924	obj is None ,	obj = None
12551	if token.contents equals a string STR0 ,	if token . contents == STR0 :
12340	if self.parsed is true ,	if self . parsed :
17797	call the method s.decode with an argument string STR0 , substitute the result for s .	s = s . decode ( STR0 )
12992	raise an TemplateSyntaxError exception with an argument string STR1 , where STR2 is replaced with first element of bits .	raise TemplateSyntaxError ( STR1 % bits [ 0 ] )
10447	if not ,	else :
345	call the method self.make_key with key and version set to version as arguments , substitute it for key .	key = self . make_key ( key , version = version )
5940	call the function getInnerText with an argument child , use the result as an argument for the call to the method inner_text.extend .	inner_text . extend ( getInnerText ( child ) )
18461	out is an instance of StringIO class , created with an empty string as an argument .	out = StringIO ( STR )
3878	for every path in self.locale_paths ,	for path in self . locale_paths :
11893	old_style_list is boolean True .	old_style_list = True
18313	if t is not None ,	if t is not None :
862	for every check in checks ,	for check in checks :
15304	define function filepath_to_uri with path as the argument .	def filepath_to_uri ( path ) :
2098	call the method message.message .	message . message ( )
7724	define the method add_initial_prefix with 2 arguments : self and field_name .	def add_initial_prefix ( self , field_name ) :
8689	define the method __init__ with 8 arguments : self , data set to None , files set to None , instance set to None , save_as_new set to boolean False , prefix set to None , queryset set to None and unpacked dictionary kwargs .	def __init__ ( self , data = None , files = None , instance = None , save_as_new = False , prefix = None , queryset = None , ** kwargs ) :
11797	call the function normalize_newlines with an argument value , substitute the result for value .	value = normalize_newlines ( value )
3466	append string STR0 to field_notes .	field_notes . append ( STR0 )
15053	delete logging._handlerList list .	del logging . _handlerList [ : ]
8538	try ,	try :
9451	call the method __init__ from the base class of the class RendererMixin , with 2 arguments : unpacked list args , and unpacked dictionary kwargs .	super ( RendererMixin , self ) . __init__ ( * args , ** kwargs )
16121	substitute _html_parser.interesting_normal for self.interesting .	self . interesting = _html_parser . interesting_normal
8011	TOTAL_FORM_COUNT is a string STR0 .	TOTAL_FORM_COUNT = STR0
7359	if value is false and self.required is true ,	if not value and self . required :
16784	call the method imp.find_module with 2 arguments : module_name and list containing element entry , assign the result to file_ , _ , and _ , respectively .	file_ , _ , _ = imp . find_module ( module_name , [ entry ] )
10018	if not ,	else :
12008	call the function ugettext with string STR0 as an argument , substitute the result for arg .	arg = ugettext ( STR0 )
13615	if filename ends with string STR0 ,	if filename . endswith ( STR0 ) :
10052	try ,	try :
15833	raise an NotImplementedError exception with an argument sting STR0 .	raise NotImplementedError ( STR0 )
6800	call the function _ with an argument string STR0 , substitute the result for message .	message = _ ( STR0 )
7098	if self.max_value is not None ,	if self . max_value is not None :
14570	call the method self.data.weekday , increment the result by an integer 1 , divide it with integer 7 , return the reminder of the division .	return ( self . data . weekday ( ) + 1 ) % 7
9414	define the method __init__ with 5 arguments : self , name , value , attrs and choices .	def __init__ ( self , name , value , attrs , choices ) :
4147	if conflicts is true ,	if conflicts :
962	self.error_list is an empty list .	self . error_list = [ ]
6370	call the method kwargs.update with an argument self.default_args .	kwargs . update ( self . default_args )
18319	define the function get_language_bidi .	def get_language_bidi ( ) :
11343	append templatetag_module to _templatetags_modules .	_templatetags_modules . append ( templatetag_module )
8398	raise an ValueError with an argument string STR0 .	raise ValueError ( STR0 )
7460	if STR0 key of the kwargs dictionary exists remove it and substitute its value for self.coerce , if not , self.coerce is an identity lambda function with an argument val .	self . coerce = kwargs . pop ( STR0 , lambda val : val )
2789	if e.is_serious method evaluates to true , call the function color_style , on the result call the method ERROR with result of the force_str called with an argument e , if not call the function color_style on the result call the method ERROR with result of the force_str called with an argument e , for every e in issues , formatted is a tuple containing the previous result .	formatted = ( color_style ( ) . ERROR ( force_str ( e ) ) if e . is_serious ( ) else color_style ( ) . WARNING ( force_str ( e ) ) for e in issues )
6281	if lookup_view is a callable object ,	if callable ( lookup_view ) :
17027	inner_result and inner_args are empty lists .	inner_result , inner_args = [ ] , [ ]
4471	call the method instance of TerminalIPythonApp class , substitute the result for app .	app = TerminalIPythonApp . instance ( )
11813	decorator stringfilter ,	@ stringfilter
9010	call the method timezone.get_current_timezone , substitute the result for current_timezone .	current_timezone = timezone . get_current_timezone ( )
1111	substitute length of content for self.size .	self . size = len ( content )
7955	call the method format_html with 3 arguments : string STR0 , contents and label_suffix , substitute the result for contents .	contents = format_html ( STR0 , contents , label_suffix )
3506	get the value under the STR0 key of the options dictionary , substitute it for self.ignore .	self . ignore = options . get ( STR0 )
14272	define the method __repr__ with an argument self .	def __repr__ ( self ) :
4661	for every statements in sql_statements :	for statement in sql_statements :
14690	call the method strftime with an argument fmt , from the base class of the type of dt class .	return super ( type ( dt ) , dt ) . strftime ( fmt )
2457	from django.utils import lru_cache into default name space .	from django . utils import lru_cache
14497	return a string STR0 formated with self.data.month .	return STR0 % ( self . f ( ) , self . a ( ) )
17110	return an instance of EscapeText , created with an argument s .	return EscapeText ( s )
12690	if length of bits is lesser than integer 2 ,	if len ( bits ) < 2 :
11109	call the function render_value_in_context with 2 arguments output and context , return the result .	return render_value_in_context ( output , context )
834	if not ,	else :
13579	_mtimes is an empty dictionary .	_mtimes = { }
10384	call the method datetime.timedelta with an argument seconds set to integer 1 , increment delta by it .	delta = delta + datetime . timedelta ( seconds = 1 )
2280	call the method MIMEText.__init__ with 4 arguments : self , text , subtype and None .	MIMEText . __init__ ( self , text , subtype , None )
18090	if TypeError exception is caught ,	except TypeError :
16980	append ch to quant .	quant . append ( ch )
16332	call the method package.rindex with 3 arguments : string STR0 , integer 0 and dot , substitute the result for dot .	dot = package . rindex ( STR0 , 0 , dot )
7043	if ValidationError exception is caught ,	except ValidationError :
8582	row_data is an generator object that returns value under the field key of form.cleaned_data dictionary , for every field in unique_check , if field is contained in form.cleaned_data .	row_data = ( form . cleaned_data [ field ] for field in unique_check if field in form . cleaned_data )
2564	append tuple containing 2 elements : k and v to a list , for every k and v in options , only if k starts with curr , sort the result and substitute it for options .	options = sorted ( ( k , v ) for k , v in options if k . startswith ( curr ) )
1929	for every c in return value of the method response.cookies.values ,	for c in response . cookies . values ( ) :
8331	if widgets is true and f.name is contained in widgets ,	if widgets and f . name in widgets :
13997	if not ,	else :
9802	substitute flo for self.flo .	self . flo = flo
9545	call the function http_cookies.SimpleCookie , on the return value call the value_encode method , with the argument character STR1 , if the tuple result equals to tuple containing character STR2 and string STR3 , respectively , assign _cookie_encodes_correctly the boolean True value , otherwise assign it False .	_cookie_encodes_correctly = http_cookies . SimpleCookie ( ) . value_encode ( STR1 ) == ( STR2 , STR3 )
3586	call the method serializers.get_public_serializer_formats , substitute the result for ser_fmts if ser_fmt is None , otherwise ser_fmts is a list containing ser_fmt .	ser_fmts = serializers . get_public_serializer_formats ( ) if ser_fmt is None else [ ser_fmt ]
15056	try ,	try :
2861	substitute sys.platform for plat .	plat = sys . platform
6175	define the method loads with arguments self and data .	def loads ( self , data ) :
6368	if not ,	else :
2379	for every attachment in self.attachments ,	for attachment in self . attachments :
15496	if value under the STR0 key of the self.feed dictionary is not None ,	if self . feed [ STR0 ] is not None :
12132	substitute value for value under the self.variable_name key of the context dictionary .	context [ self . variable_name ] = value
8195	value under the ORDERING_FIELD_NAME key of the form.fields is an instance of IntegerField class , created with 3 arguments : label set to return value of the function _ called with an string STR0 , initial set to index incremented by 1 , and required as boolean False .	form . fields [ ORDERING_FIELD_NAME ] = IntegerField ( label = _ ( STR0 ) , initial = index + 1 , required = False )
7473	define the method clean with arguments self and value .	def clean ( self , value ) :
5461	derive the class SerializerDoesNotExist from the KeyError base class .	class SerializerDoesNotExist ( KeyError ) :
13221	raise an ContentNotRenderedError exception with an sring STR0 .	raise ContentNotRenderedError ( STR0 )
4380	call the function get_internal_wsgi_application , return the result .	return get_internal_wsgi_application ( )
1378	call the function os.fdopen with arguments fd and mode , substitute it for _file .	_file = os . fdopen ( fd , mode )
2215	if idstring is None ,	if idstring is None :
12094	derive the class AutoEscapeControlNode from Node base class .	class AutoEscapeControlNode ( Node ) :
17315	return unbound.im_func .	return unbound . im_func
13307	and element of tokens at i incremented by 1 index equals a string STR0 , token is a string STR1 .	token = STR0
11994	decorator function register.filter with an argument is_safe set to boolean False .	@ register . filter ( is_safe = False )
11641	if m is false and p is lesser than integer 0 ,	if not m and p < 0 :
1618	initialize the object of a InMemoryUploadedFile class with arguments : file set to self.file , field_name set to self.field_name , name set to self.file_name , content_type set to self.content_type , size set to file_size , charset set to self.charset , and content_type_extra set to self.content_type_extra , return it .	return InMemoryUploadedFile ( file = self . file , field_name = self . field_name , name = self . file_name , content_type = self . content_type , size = file_size , charset = self . charset , content_type_extra = self . content_type_extra )
13888	if eather one of settings.USE_I18N or settings.USE_L10N is True ,	if settings . USE_I18N or settings . USE_L10N :
13455	return self .	return self
6539	matches is boolean False .	matches = False
8243	from django.forms.utils import ErrorList into default name space .	from django . forms . utils import ErrorList
4374	define the method add_arguments with 2 arguments self and parser .	def add_arguments ( self , parser ) :
1975	return nothing .	return
4278	if exception of class Exception , as e , is caught ,	except Exception as e :
10225	call the method self.__deepcopy__ with an empty dictionary as an argument .	return self . __deepcopy__ ( { } )
57	define the method __getattr__ with self and name as arguments .	def __getattr__ ( self , name ) :
7552	and data , if it evaluates to true , return boolean True .	return True
13582	_cached_modules is an empty set .	_cached_modules = set ( )
7352	define the method to_python with arguments self and value .	def to_python ( self , value ) :
15125	return result .	return result
418	if e.errno does not equals to errno.ENOENT ,	if e . errno != errno . ENOENT :
5921	call the method n.getAttribute with string STR0 as argument , use the result as an argument for the call to the field.rel.to._meta.pk.to_python method , substitute the result for obj_pk .	obj_pk = field . rel . to . _meta . pk . to_python ( n . getAttribute ( STR0 ) )
11130	if length of bits is lesser than integer 3 or second element of bits is not equal to string STR0 ,	if len ( bits ) < 3 or bits [ 1 ] != STR0 :
12610	return an instance of a class IfChangedNode , created with 3 arguments : nodelist_true , nodelist_false and unpacked list values .	return IfChangedNode ( nodelist_true , nodelist_false , * values )
9005	if error is an instance of ValidationError ,	if isinstance ( error , ValidationError ) :
9730	call the function exhaust with an argument self._input_data .	exhaust ( self . _input_data )
13159	from django.template import loader , Context and RequestContext into default name space .	from django . template import loader , Context , RequestContext
16250	call the method m.group with an argument string STR0 , convert the result into a string , substitute it for sec .	sec = int ( m . group ( STR0 ) )
8938	from django.utils import timezone into default name space .	from django . utils import timezone
5120	call the method settings.configure .	settings . configure ( )
2168	if new_conn_created is true ,	if new_conn_created :
2710	do nothing	pass
9305	define the method render with 5 arguments : self , name , value , attrs set to None and choices set to an empty tuple .	def render ( self , name , value , attrs = None , choices = ( ) ) :
16256	try ,	try :
5963	substitute self.external_entity_ref_handler for parser.ExternalEntityRefHandler .	parser . ExternalEntityRefHandler = self . external_entity_ref_handler
7111	if ValueError or TypeError exceptions are caught ,	except ( ValueError , TypeError ) :
13461	call the method self._archive.list .	self . _archive . list ( )
6083	if string STR0 is contained in options ,	if STR0 in options :
10606	define the method reload with an argument self .	def reload ( self ) :
6633	define the function is_valid_path with arguments path and urlconf set to None .	def is_valid_path ( path , urlconf = None ) :
2976	evaluate function has_bom with po_path as argument .	if has_bom ( po_path ) :
13895	ctx is an hashlib object , for calculating hash function with md5 algorithm .	ctx = hashlib . md5 ( )
15744	substitute cls.__bytes_cast for cls.__str__ .	cls . __str__ = cls . __bytes_cast
3801	raise an CommandError exception with an argument string STR0 .	raise CommandError ( STR0 )
16005	call the function _strip_once with an argument value , substitute the result for new_value .	new_value = _strip_once ( value )
8163	forms_valid is True .	forms_valid = True
15931	from django.utils import six into default name space .	from django . utils import six
13573	close fd file descriptor .	os . close ( fd )
12119	call the function warnings.warn with an argument string STR0 .	warnings . warn ( STR0 )
3485	from django.core.management.color import no_style into default name space .	from django . core . management . color import no_style
4729	optimizer is an instance of MigrationOptimizer class .	optimizer = MigrationOptimizer ( )
18658	define the method __bool__ with an argument self .	def __bool__ ( self ) :
15080	if name is contained in existing ,	if name in existing :
11674	if not ,	else :
5317	convert number into an integer and substitute it for number	number = int ( number )
1328	raise an NotImplementedError exception with argument string STR0 .	raise NotImplementedError ( STR0 )
11843	call the function mark_safe with an argument data , return the result .	return mark_safe ( data )
6997	messages is an empty dictionary .	messages = { }
6112	if value under the STR0 key of the options dictionary is true and values under the STR1 and STR2 keys of the options dictionary are false ,	elif options [ STR0 ] and not options [ STR1 ] and not options [ STR2 ] :
14159	substitute has_key for __contains__ .	__contains__ = has_key
12083	from django.conf import settings into default name space .	from django . conf import settings
11542	define the method compile_filter_error with 3 arguments : self , token and e .	def compile_filter_error ( self , token , e ) :
10776	define the method enter_command with 3 arguments : self , token and msg .	def error ( self , token , msg ) :
16706	call the function update_wrapper with 2 arguments : wrapper and user_function , return the result .	return update_wrapper ( wrapper , user_function )
1137	define the function get_image_dimension with file_or_path and close set to boolean False as the arguments .	def get_image_dimensions ( file_or_path , close = False ) :
11448	define the method __copy__ with an argument self .	def __copy__ ( self ) :
929	do nothing .	pass
10563	from django.utils.timezone import template_localtime into default name space .	from django . utils . timezone import template_localtime
13342	define the method create_var with 2 arguments : self and value .	def create_var ( self , value ) :
6440	substitute lookups for the value under language_code key of the self._reverse_dict dictionary .	self . _reverse_dict [ language_code ] = lookups
13877	vary_headers is an empty list .	vary_headers = [ ]
6045	otherwise if second element of args equals a string STR0 ,	elif args [ 1 ] == STR0 :
8132	substitute i-th element of self.forms for form .	form = self . forms [ i ]
10701	substitute self.lineno for token.lineno .	token . lineno = self . lineno
10323	for every key and value in return value of the self._headers.values method , call the function to_bytes with 2 arguments : key , and string STR0 and call the function to_bytes with 2 arguments : value and string STR1 , join the previous 2 results into a string , separated by STR2 , append it to a list , substitute the resulting list for headers .	headers = [ ( STR0 . join ( [ to_bytes ( key , STR1 ) , to_bytes ( value , STR2 ) ] ) ) for key , value in self . _headers . values ( ) ]
4795	from django.utils.six.moves import input into default name space .	from django . utils . six . moves import input
88	if key_func is not of None type ,	if key_func is not None :
1763	call the function middleware_method with request and response as the arguments , substitute the result for response .	response = middleware_method ( request , response )
5591	if stream_or_string is not an instance of bytes or six.string_types ,	if not isinstance ( stream_or_string , ( bytes , six . string_types ) ) :
13359	decorated is an instance of class Node , created with 3 arguments : syms.decorated , list with 2 arguments : decorator and klass , and prefix as node.prefix .	decorated = Node ( syms . decorated , [ decorator , klass ] , prefix = node . prefix )
11816	decorator function register.filter with an argument is_safe set to boolean False .	@ register . filter ( is_safe = False )
5836	if self.use_natural_foreign_keys is true and field.rel.to has an attribute STR0 ,	if self . use_natural_foreign_keys and hasattr ( field . rel . to , STR0 ) :
3630	if length of parts is greater than integer 1 and last element of parts is contained in self.compression_formats ,	if len ( parts ) > 1 and parts [ - 1 ] in self . compression_formats :
9518	property decorator ,	@ property
7876	if field.widget.needs_multipart_form is true ,	if field . widget . needs_multipart_form :
6795	define the method __eq__ with arguments self and other .	def __eq__ ( self , other ) :
13075	call the function loader with arguments name and dirs , assign the result to template and display_name , respectively .	template , display_name = loader ( name , dirs )
11231	if filter_func has an attribute STR0 ,	if hasattr ( filter_func , STR0 ) :
15734	if cls._delegate_bytes and cls._delegate_text are both false , raise an error , with an argument string STR0 .	assert not ( cls . _delegate_bytes and cls . _delegate_text ) , STR0
13846	if cc contains item STR0 ,	if STR0 in cc :
13017	if template_dir is directory ,	if os . path . isdir ( template_dir ) :
11161	if not ,	else :
9406	for every v in self.value call the function force_text with an argument v , add the result to a set , substitute set of the results for self.value .	self . value = set ( force_text ( v ) for v in self . value )
4333	call the self.stdout.write method with string STR0 and self.style.MIGRATE_FAILURE as arguments .	self . stdout . write ( STR0 , self . style . MIGRATE_FAILURE )
14693	raise an TypeError exception with an argument : result of the method illegal_formatting.group called with an argument , integer 0 , appended to a string STR0 .	raise TypeError ( STR0 + illegal_formatting . group ( 0 ) )
6157	derive the class BadSignature from the Exception base class .	class BadSignature ( Exception ) :
8136	skip this loop iteration ,	continue
16956	nesting is integer 0 .	nesting = 0
1513	call the method __init__ from the base class of the TemporaryUploadedFile class with arguments : file , name , content_type , size , charset and content_type_extra .	super ( TemporaryUploadedFile , self ) . __init__ ( file , name , content_type , size , charset , content_type_extra )
9381	define the method render with 5 arguments : self , name set to None , value set to None , attrs set to None and choices set to an empty tuple .	def render ( self , name = None , value = None , attrs = None , choices = ( ) ) :
6489	if AttributeError exception is caught .	except AttributeError :
17245	set attr.name attribute of Module_six_moves_urllib_response object to attr .	setattr ( Module_six_moves_urllib_response , attr . name , attr )
10953	call the function mark_for_escaping with an argument new_obj , substitute the result for obj .	obj = mark_for_escaping ( new_obj )
18664	define the method _prepare_data with 2 arguments : self and data .	def _prepare_data ( self , data ) :
8191	for every form in self call the method form.has_changed if any of the results evaluates to true , return boolean True , if not return boolean False .	return any ( form . has_changed ( ) for form in self )
3191	call the method objects.using with an argument using , call the method order_by on the result with an argument model._meta.pk.name , substitute the result for queryset .	queryset = objects . using ( using ) . order_by ( model . _meta . pk . name )
6728	call the function force_text with an argument value , substitute the result for value .	value = force_text ( value )
18440	try ,	try :
8337	if help_texts is true and f.name is contained in help_texts ,	if help_texts and f . name in help_texts :
9394	property decorator ,	@ property
9189	value is None .	value = None
225	return default .	return default
8721	if commit is true ,	if commit :
9956	strip f of whitespaces and append it to plist .	plist . append ( f . strip ( ) )
15419	define the method rss_attributes with an argument self .	def rss_attributes ( self ) :
1425	define the method url with arguments self and name .	def url ( self , name ) :
1053	define the method _set_size with arguments self and size .	def _set_size ( self , size ) :
17343	if second element of sys.version_info is smaller than or equal to integer 1 ,	if sys . version_info [ 1 ] <= 1 :
18518	singular is an empty list .	singular = [ ]
4036	call the method self.write_migration_files with an argument changes .	self . write_migration_files ( changes )
15999	if HTMLParseError or UnboundLocalError exceptions are caught ,	except ( HTMLParseError , UnboundLocalError ) :
6248	from django.utils.regex_helper import normalize into default name space .	from django . utils . regex_helper import normalize
13064	join template_dirs elements into a string , separated by STR0 , use it as an argument for the call to the function force_bytes , use the result as the argument for the call to the function hashlib.sha1 , call the hexdigest method on the result , join template_name and previous final result into a string , separated with STR1 , return it .	return STR0 . join ( [ template_name , hashlib . sha1 ( force_bytes ( STR1 . join ( template_dirs ) ) ) . hexdigest ( ) ] )
4432	call the method translation.activate with an argument settings.LANGUAGE_CODE .	translation . activate ( settings . LANGUAGE_CODE )
5737	from django.core.serializers.python import Serializer as PythonSerializer into default name space .	from django . core . serializers . python import Serializer as PythonSerializer
11977	define the function timesince_filter with 2 arguments value and arg set to None .	def timesince_filter ( value , arg = None ) :
1736	for every middleware_method in self._template_response_middleware ,	for middleware_method in self . _template_response_middleware :
17058	derive the class SafeData from object base class .	class SafeData ( object ) :
14075	if not ,	else :
9334	append string STR0 to output .	output . append ( STR0 )
1239	call the os.utime function with arguments dst and tuple containing 2 elements : st.st_atime and st.st_mtime .	os . utime ( dst , ( st . st_atime , st . st_mtime ) )
17764	call the method zfile.write with an argument s .	zfile . write ( s )
1576	substitute content_type for self.content_type .	self . content_type = content_type
10594	python_2_unicode_compatible decorator ,	@ python_2_unicode_compatible
13885	existing_headers is a set containing lowercase strings header for every header in vary_headers .	existing_headers = set ( header . lower ( ) for header in vary_headers )
16864	try ,	try :
11023	get the bit attribute of current object , substitute it for current .	current = getattr ( current , bit )
6820	from django.core.handlers.wsgi import WSGIHandler into default name space .	from django . core . handlers . wsgi import WSGIHandler
8683	raise an ImproperlyConfigured with an argument string STR0	raise ImproperlyConfigured ( STR0 )
6955	import module sys .	import sys
14621	define the function parse_time with an argument value .	def parse_time ( value ) :
12594	call the method parser.parse with an argument tuple with an element string STR0 , substitute the result for nodelist .	nodelist = parser . parse ( ( STR0 , ) )
4675	return nothing .	return
1769	call to the self.handle_uncaught_exception method with request , resolver and value of the evaluated function sys.exec_info , as the arguments , substitute the result for response .	response = self . handle_uncaught_exception ( request , resolver , sys . exc_info ( ) )
1950	return value if six.PY2 is true , if not return value.encode ( ISO_8859_1 ) .	return value if six . PY2 else value . encode ( ISO_8859_1 )
17242	derive class Module_six_moves_urllib_response from the _LazyModule base class .	class Module_six_moves_urllib_response ( _LazyModule ) :
5005	call the method comment_re.sub with an arguments : raw string STR0 and line , strip the whitespaces surrounding the result , return it .	cleaned_line = comment_re . sub ( STR0 , line ) . strip ( )
5190	define the method download with arguments self and url .	def download ( self , url ) :
5365	define the method __len__ with an argument self .	def __len__ ( self ) :
12732	substitute bits without the first element for remaining_bits .	remaining_bits = bits [ 1 : ]
17698	define the method _truncate_html with 6 arguments : self , length , truncate , text , truncate_len and words .	def _truncate_html ( self , length , truncate , text , truncate_len , words ) :
3430	if new_name starts with a string STR0 ,	if new_name . startswith ( STR0 ) :
6859	derive the class SelectDateWidget for the Widget base class .	class SelectDateWidget ( Widget ) :
14449	if self.data.hour is greater than integer 11 ,	if self . data . hour > 11 :
11175	return args and kwargs .	return args , kwargs
194	from django.db.backends.utils import typecast_timestamp into default name space .	from django . db . backends . utils import typecast_timestamp
8722	call the method obj.save .	obj . save ( )
16868	otherwise if ch equals a string STR0 ,	elif ch == STR0 :
6652	call a function _ with a string STR0 as an argument , substitute the result for message .	message = _ ( STR0 )
723	increment weight by integer 2 .	weight += 2
16803	skip this loop iteration ,	continue
10070	delete self._get .	del self . _get
15912	define the function total_ordering with an argument cls .	def total_ordering ( cls ) :
1159	raise an exception .	raise
12930	derive the class IncludeNode from the Node base class .	class IncludeNode ( Node ) :
17906	define the method utcoffset with 2 arguments : self and dt .	def utcoffset ( self , dt ) :
4395	raise an CommandError exception with an argument string STR1 , where STR2 is replaced with value under the STR3 key of the options dictionary .	raise CommandError ( STR1 % options [ STR2 ] )
12911	if self.parent_name.filters is true or self.parent_name.var is an instance of Variable .	if self . parent_name . filters or isinstance ( self . parent_name . var , Variable ) :
2353	define the method send with arguments self and fail_silently set to boolean False .	def send ( self , fail_silently = False ) :
18391	define the function get_supported_language_variant with 2 arguments : lang_code and strict set to boolean False .	def get_supported_language_variant ( lang_code , strict = False ) :
1050	return self._size .	return self . _size
8834	substitute queryset for self.queryset .	self . queryset = queryset
779	define private method __str__ with argument self .	def __str__ ( self ) :
15669	if settings.USE_THOUSAND_SEPARATOR is true ,	if settings . USE_THOUSAND_SEPARATOR :
3936	substitute STR1 in string STR0 with self.domain , replace all the occurrences of previous string in msgs for an empty string , substitute the result for msgs .	msgs = msgs . replace ( STR0 % self . domain , STR )
9932	define the function parse_header with an argument line .	def parse_header ( line ) :
195	from django.utils import timezone and six into default name space .	from django . utils import timezone , six
5879	if self.ignore is true and field_name is not contained in model_fields ,	if self . ignore and field_name not in model_fields :
10049	property decorator .	@ property
14628	call the method datetime.time with an argument unpacked dictionary kw , return the result .	return datetime . time ( ** kw )
18457	call the function re.compile with an argument raw string STR0 , substitute the result for one_percent_re .	one_percent_re = re . compile ( STR0 )
8705	call the method initial_form_count from the base class of the class BaseInlineFormSet , return the result .	return super ( BaseInlineFormSet , self ) . initial_form_count ( )
8918	return boolean True .	return True
3392	append string STR0 to comment_notes .	comment_notes . append ( STR0 )
2849	call the function warnings.warn with 2 arguments : string STR0 and RemovedInDjango20Warning .	warnings . warn ( STR0 , RemovedInDjango20Warning )
10120	raise an exception .	raise
15718	call the method self.__prepare_class__ .	self . __prepare_class__ ( )
6290	call the function import_module with an argument mod_name .	mod = import_module ( mod_name )
5050	replace STR1 in string STR0 with app_config.label , print it to the standard output .	print ( STR0 % app_config . label )
4107	from collections import OrderedDict into default name space .	from collections import OrderedDict
6337	substitute self._regex for regex .	regex = self . _regex
13592	subtract _cached_modules from module_values , assign the result to new_modules .	new_modules = module_values - _cached_modules
790	if self.hint exists , replace STR1 in a string STR0 with value of self.hint , substitute it for hint , otherwise hint is an empty string .	hint = STR0 % self . hint if self . hint else STR
10933	if not ,	else :
730	call the function settings.is_overridden with argument string STR0 , if it evaluates to boolean True ,	if settings . is_overridden ( STR0 ) :
14870	substitute self for result.parent .	result . parent = self
7390	call the method copy.deepcopy with arguments self._choices and memo , substitute the result for result._choices .	result . _choices = copy . deepcopy ( self . _choices , memo )
17074	if not ,	else :
2712	call the method self.create_parser with arguments prog_name and subcommand .	parser = self . create_parser ( prog_name , subcommand )
16622	create a tuple out of types of v , for every v in args , extend key tuple with the result .	key += tuple ( type ( v ) for v in args )
13155	error_msg is a string STR0 .	error_msg = STR0
14901	remove idx-th element from self list .	value = list . pop ( self , idx )
6594	substitute first element of app_list for ns .	ns = app_list [ 0 ]
17617	from django.utils.six.moves import html_entities into default name space .	from django . utils . six . moves import html_entities
8010	__all__ is a tuple containing strings STR0 , STR1 and STR2 .	__all__ = ( STR0 , STR1 , STR2 )
3312	import module re .	import re
8913	if initial is None ,	if initial is None :
890	define the function debug with an argument request .	def debug ( request ) :
18152	define the function trim_whitespace with an argument s .	def trim_whitespace ( s ) :
8653	assign self.model._meta.pk to self._pk_field and pk .	self . _pk_field = pk = self . model . _meta . pk
7798	delete the entry of self.cleaned_data dictionary under the key field .	del self . cleaned_data [ field ]
11473	extend collect list with _builtin_context_processors .	collect . extend ( _builtin_context_processors )
4792	from django.core.management import call_command into default name space .	from django . core . management import call_command
6416	substitute pattern.regex.pattern for p_pattern .	p_pattern = pattern . regex . pattern
77	from django.core.exceptions import ImproperlyConfigured and DjangoRuntimeWarning into default name space .	from django . core . exceptions import ImproperlyConfigured , DjangoRuntimeWarning
367	from django.utils.encoding import force_bytes into default name space .	from django . utils . encoding import force_bytes
17733	if current_len is smaller than or equal to length ,	if current_len <= length :
1614	define the function file_complete with arguments self and file_size .	def file_complete ( self , file_size ) :
13054	property decorator .	@ property
13109	from django.apps import apps into default name space .	from django . apps import apps
6201	call the function force_str with an argument sep , substitute the result for self.sep .	self . sep = force_str ( sep )
10580	SINGLE_BRACE_START is a string STR0 .	SINGLE_BRACE_START = STR0
13484	return boolean True .	return True
15398	for every date_key in date_keys ,	for date_key in date_keys :
4072	call the method loader.graph.forwards_plan with argument a tuple , with 2 elements : app_label and migration_name , substitute the result for migration.ancestry .	migration . ancestry = loader . graph . forwards_plan ( ( app_label , migration_name ) )
3138	raise CommandError with an argument string STR0 , where STR1 is replaced with exclude .	raise CommandError ( STR0 % exclude )
8660	try ,	try :
5882	if field.rel is true and field.rel is an instance of models.ManyToManyRel ,	if field . rel and isinstance ( field . rel , models . ManyToManyRel ) :
1392	if not ,	else :
12053	return an empty string .	return STR
5021	append old_app_dir to app_dirs .	app_dirs . append ( old_app_dir )
6802	decorator deconstructible ,	@ deconstructible
6745	evaluate method self.literal_regex.match with an argument domain_part , substitute the result for literal_match .	literal_match = self . literal_regex . match ( domain_part )
17521	define the method writer_enters with an argument self .	def writer_enters ( self ) :
15004	if props is true ,	if props :
2931	return boolean True .	return True
10459	call the __init__ method from the base class of the StreamingHttpResponse class , called with arguments : unpacked list args , and unpacked dictionary kwargs .	super ( StreamingHttpResponse , self ) . __init__ ( * args , ** kwargs )
14734	call the method __get__ with 2 arguments : instance and owner , from the base class of the classonlymethod class , return the result .	return super ( classonlymethod , self ) . __get__ ( instance , owner )
12596	call the method parser.next_token , substitute the result for token .	token = parser . next_token ( )
18618	return an empty list .	return [ ]
9550	if http_cookies.CookieError exception is caught ,	except http_cookies . CookieError :
5676	remove the value under the STR0 key from the options dictionary , assign it to the db , if the entry doesnt exists , substitute DEFAULT_DB_ALIAS for db .	db = options . pop ( STR0 , DEFAULT_DB_ALIAS )
9858	if boundary is true ,	if boundary :
7971	call the function conditional_escape with an argument contents , substitute the result for contents .	contents = conditional_escape ( contents )
10429	define the method __init__ with 4 arguments : self , content set to an empty list , unpacked list args and unpacked dictionary kwargs .	def __init__ ( self , content = STR , * args , ** kwargs ) :
6684	call the __init__ method of the base class of the class URLValidator , with unpacked dictionary kwargs as argument .	super ( URLValidator , self ) . __init__ ( ** kwargs )
16765	import imp .	import imp
11472	collect is an empty list .	collect = [ ]
1624	define lambda function that returns self.file.flush field , use it as an argument for property function , put the result in flush .	flush = property ( lambda self : self . file . flush )
3052	from django.core.management.base import BaseCommand and CommandError into default name space .	from django . core . management . base import BaseCommand , CommandError
17039	substitute new_args for result_args .	result_args = new_args
5276	if ext doesnt start with STR0 character ,	if not ext . startswith ( STR0 ) :
8141	return a tuple with 2 elements : integer 0 and second element of k .	return ( 0 , k [ 1 ] )
5327	return number .	return number
7840	define the method _post_clean with an argument self .	def _post_clean ( self ) :
17403	write data to fp .	fp . write ( data )
17675	s_len is integer 0 .	s_len = 0
12612	define the function ssi with 2 arguments : parser and token .	def ssi ( parser , token ) :
6147	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
9445	renderer is None .	renderer = None
16221	define the function urlencode with 2 arguments query and doseq set to integer 0 .	def urlencode ( query , doseq = 0 ) :
11838	for every v in value call the function conditional_escape with an argument v , append the result in a list , substitute the resulting list for value .	value = [ conditional_escape ( v ) for v in value ]
16866	if escaped is true ,	if escaped :
14419	import module re .	import re
4847	raise an RuntimeError exception with an argument string STR0	raise RuntimeError ( STR0 )
17112	import module opera .	import operator
7335	raise an ValidationError with 2 arguments : value under the STR0 key of the self.error_messages dictionary and code set to STR1 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 )
15921	substitute opname for opfunc.__name__ .	opfunc . __name__ = opname
16296	raise an ValueError exception with an argument e .	raise ValueError ( e )
9253	return boolean upload .	return upload
8406	update object_data dictionary with initial .	object_data . update ( initial )
15850	return result .	return result
9954	substitute length of s for end .	end = len ( s )
4429	if six.PY2 is true ,	if six . PY2 :
15000	call the method self.resolve with an argument c , substitute the result for c .	c = self . resolve ( c )
7494	define the method __init__ with arguments self , fields set to an empty ilst , unpacked list args and unpacked dictionary kwargs .	def __init__ ( self , fields = ( ) , * args , ** kwargs ) :
14076	define the function become_daemon with 4 argument : our_home_dir set to STR0 , out_log set to None , err_log set to None ,	def become_daemon ( our_home_dir = STR0 , out_log = None , err_log = None , umask = 022 ) :
3126	excluded_models is an empty set .	excluded_models = set ( )
1033	define the method _get_size_from_underlying_file with argument self .	def _get_size_from_underlying_file ( self ) :
18126	define the function to_locale with an argument language .	def to_locale ( language ) :
10881	define the function __init__ with 3 arguments : self , token and parser .	def __init__ ( self , token , parser ) :
12662	call the method token.split_contents , substitute the result for bits .	bits = token . split_contents ( )
7982	property decorator ,	@ property
7860	try ,	try :
5441	define the function serializer with 3 arguments : format , queryset and unpacked dictionary options .	def serialize ( format , queryset , ** options ) :
16134	find the first subgroup of the matched string from the match object , convert it to lowercase , substitute it for tag and self.lasttag .	self . lasttag = tag = match . group ( 1 ) . lower ( )
16716	from django.utils.deprecation import RemovedInDjango19Warning into default name space .	from django . utils . deprecation import RemovedInDjango19Warning
7520	try ,	try :
11477	append func to processors .	processors . append ( func )
2231	convert name to lower case , if it is contained in ADDRESS_HEADERS , s	if name . lower ( ) in ADDRESS_HEADERS :
15101	logger.disabled is boolean True .	logger . disabled = True
7760	format string normal_row with an dictionary containing 5 entries : an empty string for STR0 , empty string for STR1 , empty string for STR2 , empty string for STR3 and html_class_attr for html_class_attr .	last_row = ( normal_row % { STR0 : STR , STR1 : STR , STR2 : STR , STR3 : STR , STR4 : html_class_attr } )
9293	if name is not contained in data ,	if name not in data :
16814	return boolean False .	return False
5205	try ,	try :
15820	if name equals string STR0 ,	if name == STR0 :
7916	substitute self.field.widget for widget .	widget = self . field . widget
7716	define the method errors with an argument self .	def errors ( self ) :
18651	define the method __deepcopy__ with 2 arguments : self and memodict .	def __deepcopy__ ( self , memodict ) :
7225	if value is an instance of datetime.date ,	if isinstance ( value , datetime . date ) :
12909	if parent is false ,	if not parent :
8471	if ValidationError , renamed to e , exception is caught ,	except ValidationError as e :
4346	try ,	try :
9763	if size is None substitute self._remaining for remaining , if not , substitute size for remaining .	remaining = self . _remaining if size is None else size
4723	return nothing .	return
18412	call the method regex_match.group with an argument integer 1 , substitute the result for lang_code .	lang_code = regex_match . group ( 1 )
17806	if quote_double_quotes is true ,	if quote_double_quotes :
12226	try ,	try :
17302	substitute klass.__dict__ for next .	next = advance_iterator
18043	derive the class Trans from the object base class .	class Trans ( object ) :
10671	substitute origin for self.origin .	self . origin = origin
2061	if OSError , renamed to err , is caught ,	except OSError as err :
10782	define the method invalid_block_tag with 4 arguments : self , token , command and parse_until as None .	def invalid_block_tag ( self , token , command , parse_until = None ) :
5383	define the method start_index with an argument self .	def start_index ( self ) :
9623	raise an MultiPartParserError with an argument string STR0 , where STR1 is replaced with content_type .	raise MultiPartParserError ( STR0 % content_type )
18513	for every part in singular ,	for part in singular :
13020	append template_dir to app_template_dirs .	app_template_dirs . append ( template_dir )
12134	return an empty string ,	return STR
3026	substitute connection.ops.quote_name for qn .	qn = connection . ops . quote_name
4501	call the method self.run_shell with an argument shell set to value under the STR0 key of the options dictionary .	self . run_shell ( shell = options [ STR0 ] )
10197	define the method setlist with 3 arguments : self , key and list_ .	def setlist ( self , key , list_ ) :
6788	define the method __init__ with self and limit_value as arguments .	def __init__ ( self , limit_value ) :
3702	call the function prepare_js_for_gettext with an argument src_data , substitute it for src_data .	src_data = prepare_js_for_gettext ( src_data )
9434	substitute self.choice_input_class for sub_ul_renderer.choice_input_class .	sub_ul_renderer . choice_input_class = self . choice_input_class
3149	try ,	try :
7004	define the method prepare_value with arguments : self and value .	def prepare_value ( self , value ) :
13798	call the BaseConverter function with BASE2_ALPHABET as argument , store the result in base2 .	base2 = BaseConverter ( BASE2_ALPHABET )
14739	define the function bound_func with 2 arguments : unpacked list args2 and unpacked dictionary kwargs2 .	def bound_func ( * args2 , ** kwargs2 ) :
16683	substitute value under the KEY key of the root dictionary for oldkey .	oldkey = root [ KEY ]
7277	if AttributeError exception is caught ,	except AttributeError :
14923	substitute __import__ for importer .	importer = __import__
17378	define the function exec with 3 arguments : _code_ , _globs_ set to None and _locs_ set to None .	def exec_ ( _code_ , _globs_ = None , _locs_ = None ) :
14174	call the function warnings.warn with 3 arguments : string STR0 , RemovedInDjango19Warning and stacklevel set to integer 2 .	warnings . warn ( STR0 , RemovedInDjango19Warning , stacklevel = 2 )
16461	return boolean True .	return True
11403	if length of self.dicts is equal to an integer 1 ,	if len ( self . dicts ) == 1 :
2635	call the method error with an argument message , from the base class of the class CommandParser .	super ( CommandParser , self ) . error ( message )
2432	if self.body is true ,	if self . body :
10676	result is an empty list .	result = [ ]
11903	define the function _helper with 2 arguments list and tabs set to integer 1 .	def _helper ( list_ , tabs = 1 ) :
8724	call the method form.save_m2m .	form . save_m2m ( )
11339	add string STR0 to a list , where STR1 is replaced with app_config.name , for every app_config in result of the method apps.get_app_configs , append the resulting list to templatetags_modules_candidates .	templatetags_modules_candidates += [ STR0 % app_config . name for app_config in apps . get_app_configs ( ) ]
6502	replace STR0 in the string STR1 with view_type , use it as an name of the attribute to get from the self.urlconf_module , substitute it for callback , if the attribute doesnt exists , callback is None .	callback = getattr ( self . urlconf_module , STR0 % view_type , None )
492	call the method self.make_key with key and version set to version as arguments , substitute the result for key .	key = self . make_key ( key , version = version )
2176	call the function email_message.message , substitute the result for message .	message = email_message . message ( )
17938	derive the class LocalTimezone from the ReferenceLocalTimezone base class .	class LocalTimezone ( ReferenceLocalTimezone ) :
6609	call the function lazy with arguments reverse and str , substitute the results for reverse_lazy .	reverse_lazy = lazy ( reverse , str )
14172	return instance .	return instance
2854	call the self.handle_noargs method with with unpacked dictionary options as argument , return the result .	return self . handle_noargs ( ** options )
2678	define the method get_version with an arguments self .	def get_version ( self ) :
11331	if AttributeError exception is caught ,	except AttributeError :
5589	call the getvalue method from the base class of the class PythonSerializer , return the result .	return super ( PythonSerializer , self ) . getvalue ( )
17309	define the function get_unbound_function with an argument unbound .	def get_unbound_function ( unbound ) :
8231	valid is boolean True .	valid = True
2714	define the method run_from_argv with arguments self and argv .	def run_from_argv ( self , argv ) :
12255	if compare_to is not equal to value under the self key of state_frame .	if compare_to != state_frame [ self ] :
14550	call the method return self.format with an argument string STR0 , return the result .	return self . format ( STR0 )
173	substitute self.version for version .	version = self . version
7655	replace all the occurrences of character STR0 in name with a whitespace , capitalize the first letter and return the result .	return name . replace ( STR0 , STR ) . capitalize ( )
14782	if result is not None ,	if result is not None :
5572	define the method end_serialization with an argument self .	def end_serialization ( self ) :
2266	if not ,	else :
931	do nothing .	pass
10542	from django.template.base import Library , add_to_builtins , builtins , get_library , get_templatetags_modules , get_text_list , import_library and libraries .	from django . template . base import ( Library , add_to_builtins , builtins , get_library , get_templatetags_modules , get_text_list , import_library , libraries )
3596	call the method os.path.basename with an argument fixture_name , substitute the result for fixture_name .	fixture_name = os . path . basename ( fixture_name )
15354	call the method urlparse with an argument url , substitute the result for bits .	bits = urlparse ( url )
5865	call the method self.event_stream.expandNode with an argument node .	self . event_stream . expandNode ( node )
13948	define the function luhn with an argument candidate .	def luhn ( candidate ) :
1844	if not ,	else :
6142	call the function runfastcgi with an argument all the elements , except the first from the sys.argv list .	runfastcgi ( sys . argv [ 1 : ] )
7801	if field is contained in self.errors return boolean True , if not , return boolean False .	return field in self . errors
2327	define the method get_connection with arguments self and fail_silently set to boolean False .	def get_connection ( self , fail_silently = False ) :
9236	if value is true and value has an attribute STR0 ,	if value and hasattr ( value , STR0 ) :
8865	try ,	try :
8576	all_unique_checks is union of all_unique_checks set and unique_checks set .	all_unique_checks = all_unique_checks . union ( set ( unique_checks ) )
1564	define the method __init__ with arguments self and request defaulting to None .	def __init__ ( self , request = None ) :
14991	remove self.value_converters dictionary element under prefix key , if it exists substitute it for converter , if not , converter is None .	converter = self . value_converters . get ( prefix , None )
17283	_itervalues is a string STR0 .	_itervalues = STR0
17454	get the value under the STR0 key of the orig_vars dictionary , substitute it for slots .	slots = orig_vars . get ( STR0 )
2397	attachment is an instance of a class MIMEBase , created with the arguments basetype and subtype .	attachment = MIMEBase ( basetype , subtype )
18173	define the function gettext with an argument message .	def gettext ( message ) :
4931	call the method pending_references.keys , put the result into a set and substitute it for not_installed_models .	not_installed_models = set ( pending_references . keys ( ) )
18285	define the method _add_fallback with an argument self .	def _add_fallback ( self ) :
14537	define the method L with an argument self .	def L ( self ) :
10974	define the method __init__ with 2 arguments self and var .	def __init__ ( self , var ) :
10408	call the function bytes with an argument value , return the result .	return bytes ( value )
7561	if not ,	else :
12365	derive the class TemplateTagNode from Node base class .	class TemplateTagNode ( Node ) :
16877	remove first element from non_capturing_groups , substitute it for start .	start = non_capturing_groups . pop ( )
12785	if not ,	else :
14463	call the method self.data.tzinfo.tzname with an argument self.data , if it is true , return it , otherwise return an empty string .	return self . data . tzinfo . tzname ( self . data ) or STR
3420	if not ,	else :
17290	_func_code is a string STR0 .	_func_code = STR0
5064	import module django .	import django
8372	for every opt in list containing 3 elements : strings STR0 , STR1 and STR2 ,	for opt in [ STR0 , STR1 , STR2 ] :
12421	raise an TemplateSyntaxError exception with an argument string STR0 .	raise TemplateSyntaxError ( STR0 )
1524	call the method __init__ from the base class of the InMemoryUploadedFile base class , with 6 arguments : file , name , content_type , size , charset , content_type_extra .	super ( InMemoryUploadedFile , self ) . __init__ ( file , name , content_type , size , charset , content_type_extra )
15311	call the method lookup with the encoding as the argument .	codecs . lookup ( encoding )
15720	return a tuple wit 2 elements : _lazy_proxy_unpickle and tuple with 3 elements : func , self.__args , self.__kw and resultclasses .	return ( _lazy_proxy_unpickle , ( func , self . __args , self . __kw ) + resultclasses )
7341	if second element of url_fields is false ,	if not url_fields [ 1 ] :
14770	call the method middleware.process_request with an argument request , substitute the result for result .	result = middleware . process_request ( request )
16238	raise an ValueError exception with an argument string STR0 formated with date .	raise ValueError ( STR0 % date )
6812	code is a string STR0	code = STR0
15690	decorator function wraps with an argument func .	@ wraps ( func )
4286	write string STR0 to the standard output .	self . stdout . write ( STR0 )
4422	write string STR0 to self.stdout stream .	self . stdout . write ( STR0 )
15637	otherwise if value is an instance of decimal.Decimal , float or six.integer_types ,	elif isinstance ( value , ( decimal . Decimal , float ) + six . integer_types ) :
12098	substitute context.autoescape for old_setting .	old_setting = context . autoescape
1801	from django.utils.encoding import force_str and force_text into default name space .	from django . utils . encoding import force_str , force_text
10213	define the method popitem with an argument self .	def popitem ( self ) :
16879	append list with element inner to list containing first start elements of result , substitute it for result .	result = result [ : start ] + [ inner ]
11010	return an string STR0 , where STR1 is replaced with self.__class__.__name__ and self.var , respectively .	return STR0 % ( self . __class__ . __name__ , self . var )
10587	invalid_var_format_string is None .	invalid_var_format_string = None
15	call the _create_cache with backend and dictionary kwargs as arguments , substitute the result for cache .	cache = _create_cache ( backend , ** kwargs )
11677	call the method mark_safe with lines joined into a string , separated by newlines as argument , return the result .	return mark_safe ( STR0 . join ( lines ) )
1442	import module tempfile .	import tempfile
664	substitute value for value under the key key of safe_data dictionary .	safe_data [ key ] = value
7892	call the method form.add_initial_prefix with an argument self.auto_id , substitute the result for self.html_initial_id .	self . html_initial_id = form . add_initial_prefix ( self . auto_id )
3739	append work_file to string STR0 , substitute it for old .	old = STR0 + work_file
4955	for every model in app_models ,	for model in app_models :
12979	define the function do_include with 2 arguments parser and token .	def do_include ( parser , token ) :
7551	call the method field._has_changed with 2 arguments : return value of the function field.to_python called with an argument initial ,	if field . _has_changed ( field . to_python ( initial ) , data ) :
11803	define the function safe with an argument value .	def safe ( value ) :
8474	if self.instance.pk is None ,	if self . instance . pk is None :
8366	define the method __new__ with 4 arguments : mcs , name , bases and attrs .	def __new__ ( mcs , name , bases , attrs ) :
16598	define the method filter with 2 arguments : self and record .	def filter ( self , record ) :
18482	for every lineno and line is enumerated result of the method content.splitlines , called with an argument boolean True ,	for lineno , line in enumerate ( content . splitlines ( True ) ) :
3857	if except UnicodeDecodeError exception is caught ,	except UnicodeDecodeError :
4279	call the self.stderr.write method with string STR0 as argument , with all occurrences of STR1 replaced with app_name and model._meta.object_name and e , respectively .	self . stderr . write ( STR0 % ( app_name , model . _meta . object_name , e ) )
3379	if rel_to is contained in known_models ,	if rel_to in known_models :
13301	substitute length of tokens for l .	l = len ( tokens )
6622	delete _prefixes.values .	del _prefixes . value
8404	call the method model_to_dict with 3 arguments : instance , opts.fields , opts.exclude and substitute the result for object_data .	object_data = model_to_dict ( instance , opts . fields , opts . exclude )
10634	call the method context.render_context.push .	context . render_context . push ( )
17052	do nothing .	pass
8315	call the method f.value_from_object with an argument instance , substitute the result for value under the f.name key of the data dictionary .	data [ f . name ] = f . value_from_object ( instance )
4750	write string STR0 to self.stdout .	self . stdout . write ( STR0 )
6496	call the function iter with an argument patterns .	iter ( patterns )
8496	if error_messages is not None ,	if error_messages is not None :
13907	define the function get_cache_key , with request key_prefix set to None , method set to STR0 and cache set to None as arguments .	def get_cache_key ( request , key_prefix = None , method = STR0 , cache = None ) :
59	define the method __setattr__ with self , name and value as arguments .	def __setattr__ ( self , name , value ) :
297	call the function datetime.utcnow , substitute the result for now .	now = datetime . utcnow ( )
18622	return an empty list .	return [ ]
14269	derive the class MultiValueDict from the dict base class .	class MultiValueDict ( dict ) :
2871	get the value under the key STR0 of os.environ dictionary , if key doesnt exists return empty string , assign the result to DJANGO_COLORS .	DJANGO_COLORS = os . environ . get ( STR0 , STR )
6143	from django.dispatch import Signal into default name space .	from django . dispatch import Signal
10900	if not ,	else :
9042	if not ,	else :
1139	p is image parser object , set by calling the PillowImageFile.Parser method .	p = PillowImageFile . Parser ( )
9828	substitute stream for self._stream .	self . _stream = stream
16137	if m is not False , None is considered False ,	if not m :
1416	return directories and files .	return directories , files
60	set the attribute name from value under the DEFAULT_CACHE_ALIAS key of caches dictionary to value , return it .	return setattr ( caches [ DEFAULT_CACHE_ALIAS ] , name , value )
1823	add self.buffer and self._read_limited method return value together , store it in result .	result = self . buffer + self . _read_limited ( )
5904	if field.rel.to._meta.pk.rel is true ,	if field . rel . to . _meta . pk . rel :
14509	define the method Z with an argument self .	def Z ( self ) :
15352	append STR0 to time_str , return the result .	return time_str + STR0
5043	call the method models.signals.pre_migrate.send with 5 arguments : sender set to app_config , app_config set to app_config , verbosity set to verbosity , interactive set to interactive and using set to db .	models . signals . pre_migrate . send ( sender = app_config , app_config = app_config , verbosity = verbosity , interactive = interactive , using = db )
17646	yield line .	yield line
17237	for every attr in _urllib_request_moved_attributes ,	for attr in _urllib_request_moved_attributes :
16453	ret_ip is an empty list .	ret_ip = [ ]
7487	define the method clean with arguments self and value .	def clean ( self , value ) :
12152	substitute variables for self.vars .	self . vars = variables
5272	ext_list is an empty list ,	ext_list = [ ]
2489	create dictionary out of the unpacked dictionary options , using defaults._get_kwargs as a mapping function , substitute the result for defaults .	defaults = dict ( defaults . _get_kwargs ( ) , ** options )
4894	concatenate CheckCommand.help to string STR1 , substitute it for help .	help = STR1 + CheckCommand . help
6581	call the method viewname.split , with an argument STR0 , substitute the result for parts .	parts = viewname . split ( STR0 )
3975	from django.apps import apps into default name space .	from django . apps import apps
9833	if unused_char is false ,	if not unused_char :
8602	create a tuple out of elements under the key field of the form.cleaned_data dictionary , add elements of date_data to it , substitute it for data .	data = ( form . cleaned_data [ field ] , ) + date_data
2352	add together self.to , self.cc and self.bcc , return the result .	return self . to + self . cc + self . bcc
10821	remove the first element from self.backout , substitute the result for self.pointer .	self . pointer = self . backout . pop ( )
6066	__version__ is a string STR0 .	__version__ = STR0
12884	if block is None ,	if block is None :
10327	if not ,	else :
3175	value under the app_config key of the app_list is None .	app_list [ app_config ] = None
16379	if not ,	else :
11516	return token .	return token
9254	derive the class Textarea from the Widget base class .	class Textarea ( Widget ) :
1902	_get_post is a getter function and _set_post is a setter function for POST attribute of this class .	POST = property ( _get_post , _set_post )
4617	call the sql_flush function with self.style , connections under the key with the value of options dictionary under the STR0 key ,	return STR0 . join ( sql_flush ( self . style , connections [ options [ STR1 ] ] , only_django = True ) )
1179	LOCK_EX is a hexadecimal 2 .	LOCK_EX = 2
7106	return None .	return None
12736	if remaining_bits is true ,	if remaining_bits :
8432	if f.blank is false and form_field.required is false and field_value is contained in form_field.empty_values ,	if not f . blank and not form_field . required and field_value in form_field . empty_values :
3817	self.locale_paths is an empty list .	self . locale_paths = [ ]
3619	if self.app_label is true and app_config.label is not equal to self.app_label ,	if self . app_label and app_config . label != self . app_label :
7611	default_validators is an list containing validators.validate_ipv4_address .	default_validators = [ validators . validate_ipv4_address ]
11305	if csrf_token is not None ,	if csrf_token is not None :
8149	call the method self.full_clean .	self . full_clean ( )
8109	call the method self.is_valid , if it evaluates to false ,	if not self . is_valid ( ) :
1586	derive the class TemporaryFileUploadHandler from the FileUploadHandler base class .	class TemporaryFileUploadHandler ( FileUploadHandler ) :
9398	input_type is a string STR0 .	input_type = STR0
18384	call the method language_code_re.search with an argument lang_code , if it evaluates to false ,	if not language_code_re . search ( lang_code ) :
14625	if value under the STR0 key of the kw dictionary is true ,	if kw [ STR0 ] :
8119	substitute i-th element of self.forms for form .	form = self . forms [ i ]
18606	call the function blankout with 2 arguments : p and STR0 , write the result to out .	out . write ( blankout ( p , STR0 ) )
8986	call the method self.get_json_data with an argument escape_html , use the result as an argument for the call to the json.dumps function , return the result .	return json . dumps ( self . get_json_data ( escape_html ) )
8546	substitute self.queryset for qs .	qs = self . queryset
16433	if ValueError exception is caught .	except ValueError :
4771	from django.core.management.templates import TemplateCommand into default name space .	from django . core . management . templates import TemplateCommand
15610	try ,	try :
16869	append string STR0 to result .	result . append ( STR0 )
18799	from xml.sax.saxutils import XMLGenerator into default name space .	from xml . sax . saxutils import XMLGenerator
6941	get the value under the STR0 key of the attrs dictionary , substitute the return value field of the self object for id_ .	id_ = self . attrs [ STR0 ]
15775	call the method self.__cast , if the result equals other , return boolean True , otherwise return boolean False .	return self . __cast ( ) == other
9278	format_key is a string STR0 .	format_key = STR0
9389	define the method tag with an argument self .	def tag ( self ) :
18356	define the function locale with an argument locale .	def gettext_noop ( message ) :
266	call the method b64encoded.decode with string STR0 as argument , substitute the result for b64encoded .	b64encoded = b64encoded . decode ( STR0 )
1117	evaluate the method type ( self ) .__bool__ with argument self , return the result .	return type ( self ) . __bool__ ( self )
6773	define the function ip_address_validators with arguments protocol and unpack_ipv4 .	def ip_address_validators ( protocol , unpack_ipv4 ) :
14624	call the method match.groupdict , substitute the result for kw .	kw = match . groupdict ( )
14248	self.keyOrder is an empty list .	self . keyOrder = [ ]
13672	try ,	try :
13912	set cache to the value of the dictionary caches under the key settings.CACHE_MIDDLEWARE_ALIAS .	cache = caches [ settings . CACHE_MIDDLEWARE_ALIAS ]
18647	return string STR0 , formated with self.connector and string created by joining c into a string , separated by STR1 , for every c in self.children .	return STR0 % ( self . connector , STR1 . join ( [ str ( c ) for c in self . children ] ) )
7851	call the method self.add_prefix with an argument name , substitute the result for prefixed_name .	prefixed_name = self . add_prefix ( name )
250	call the method cursor.execute with string STR0 as argument , substitute the STR1 with table .	cursor . execute ( STR0 % table )
15772	define the method __ne__ with 2 arguments : self and other .	def __eq__ ( self , other ) :
13053	self._cached_loaders is an empty list .	self . _cached_loaders = [ ]
12867	try ,	try :
919	derive the class AppRegistryNotReady from the Exception base class .	class AppRegistryNotReady ( Exception ) :
3500	STR0 define the method add_arguments with 2 arguments : self and parser .	def add_arguments ( self , parser ) :
2400	return attachment .	return attachment
7521	substitute i-th element of value for field_value .	field_value = value [ i ]
13795	increment res by element of to_digit at the digit index .	res = to_digits [ digit ] + res
6279	method lru_cache.lru_cache with an argument maxsize set to None , as a decorator ,	@ lru_cache . lru_cache ( maxsize = None )
13062	define the method cache_key with 3 arguments : self , template_name and template_dirs .	def cache_key ( self , template_name , template_dirs ) :
11101	substitute filter_expression for self.filter_expression .	self . filter_expression = filter_expression
9539	from django.http.utils import fix_location_header and conditional_content_removal into default name space .	from django . http . utils import fix_location_header , conditional_content_removal
13257	define the method eval with 2 arguments self and context .	def eval ( self , context ) :
3931	if not ,	else :
15218	from django.utils.six.moves.urllib.parse import quote into default name space .	from django . utils . six . moves . urllib . parse import quote
10669	define the method __init__ with 3 arguments : self , template_string and origin .	def __init__ ( self , template_string , origin ) :
4769	from importlib import import_module into default name space .	from importlib import import_module
6217	raise an BadSignature exception with an argument string STR1 , where STR2 is replaced by sig .	raise BadSignature ( STR1 % sig )
2560	and evaluated boolean expression s_opt.nargs doesnt equal to integer 0 , for every s_opt in parser._actions , only if s_opt.option_strings is true , if not ,	else :
4676	get the value under the STR0 key of the options dictionary , use the result as a key to get the value from the connections dictionary , substitute the result for connection .	connection = connections [ options . get ( STR0 ) ]
10362	convert header to lowercase , use it as the key to get the value from the self._headers dictionary , return the second element of the result .	return self . _headers [ header . lower ( ) ] [ 1 ]
16579	reporter is an instance of ExceptionReporter class , created with 3 arguments : request , is_email as boolean True , unpacked list exc_info .	reporter = ExceptionReporter ( request , is_email = True , * exc_info )
2669	if self has an STR0 attribute , has_new_option is boolean True , otherwise it is boolean False .	has_new_option = hasattr ( self , STR0 )
13740	endless loop ,	while True :
1753	if settings.DEBUG is True ,	if settings . DEBUG :
10380	if expires is an instance of datetime.datetime class ,	if isinstance ( expires , datetime . datetime ) :
7534	if ValidationError , renamed to e , is caught ,	except ValidationError as e :
11697	decorator stringfilter ,	@ stringfilter
17108	return an instance of EscapeBytes , created with an argument s .	return EscapeBytes ( s )
17681	if end_index is None and s_len is greater than truncate_len ,	if end_index is None and s_len > truncate_len :
1092	close the file self .	self . close ( )
3262	from django.utils import six into default name space .	from django . utils import six
9222	call the function ugettext_lazy with an argument string STR0 , substitute the result for initial_text .	initial_text = ugettext_lazy ( STR0 )
16404	split ip_str into 2 parts from right , return second element of the result .	return ip_str . rsplit ( STR0 , 1 ) [ 1 ]
5834	if field.rel.through._meta.auto_created is true ,	if field . rel . through . _meta . auto_created :
9965	from itertools import chain into default name space .	from itertools import chain
15527	call the method handler.endElement with 2 arguments : string STR0 and an empty dictionary .	handler . startElement ( STR0 , { } )
361	import module random .	import random
12305	define the method __init__ with 4 arguments : self , target , expression and var_name .	def __init__ ( self , target , expression , var_name ) :
8861	call the method prepare_value from the base class of the class ModelChoiceField , with an argument value , return the result .	return super ( ModelChoiceField , self ) . prepare_value ( value )
17296	_iterlists is a string STR0 .	_iterlists = STR0
14414	call the method __getitem__ with an argument key from the base class of the class DictWrapper , substitute the result for value .	value = super ( DictWrapper , self ) . __getitem__ ( key )
2172	call the email_message.recipients method , if it evaluates to false ,	if not email_message . recipients ( ) :
11569	if context.autoescape is true and output is not an instance of SafeData class or output is an instance of EscapeData class ,	if ( context . autoescape and not isinstance ( output , SafeData ) ) or isinstance ( output , EscapeData ) :
16065	otherwise if call the method simple_url_2_re.match with an argument middle evaluates to true ,	elif simple_url_2_re . match ( middle ) :
12522	register.tag decorator function with an argument STR0 ,	@ register . tag ( STR0 )
3195	yield obj , as an return value of the generator .	yield obj
8383	for every k and v in return value of the function six.iteritems called with an argument fields , if n is false , append it to a list , substitute the resulting list for none_model_fields .	none_model_fields = [ k for k , v in six . iteritems ( fields ) if not v ]
4646	define the method handle with self class instance , list of arguments args and options dictionary as the arguments .	def handle ( self , * args , ** options ) :
9983	derive the class HttpRequest from the object base class .	class HttpRequest ( object ) :
8340	substitute value under the f.name key of the error_messages dictionary for value under the STR0 key of kwargs dictionary .	kwargs [ STR0 ] = error_messages [ f . name ]
18181	find position of STR0 in the index of the language , substitute the result for p .	p = language . find ( STR0 )
1896	call get_str_from_wsgi function with self.environ , string STR0 and empty string as arguments , substitute it for raw_cookie .	raw_cookie = get_str_from_wsgi ( self . environ , STR0 , STR )
6912	for every field in return value of the function _parse_date_fmt ,	for field in _parse_date_fmt ( ) :
11139	return kwargs .	return kwargs
17858	if now equals to boolean True and now is not an instance of datetime.datetime ,	if now and not isinstance ( now , datetime . datetime ) :
7501	substitute fields for self.fields .	self . fields = fields
3980	from django.db.migrations.questioner import MigrationQuestioner and InteractiveMigrationQuestioner into default name space .	from django . db . migrations . questioner import MigrationQuestioner , InteractiveMigrationQuestioner
10349	convert STR0 to a string , if it is contained in value or STR1 converted to an string is contained in value ,	if str ( STR0 ) in value or str ( STR1 ) in value :
2483	substitute app_namefor command .	command = app_name
15674	reverse order of parts , join them into a string , separated with STR0 , substitute the result for value .	value = STR0 . join ( reversed ( parts ) )
14083	open err_log file in append mode with buffering size of the input buffer , substitute the result for sys.stderr .	sys . stderr = open ( err_log , STR0 , buffering )
7529	get the value under the STR0 key of the field.error_messages dictionary , if it is not contained in errors ,	if field . error_messages [ STR0 ] not in errors :
13135	if template_dirs is false ,	if not template_dirs :
14150	define the method keys with an argument self .	def keys ( self ) :
18338	call the function translation with an argument settings.LANGUAGE_CODE , substitute the result for _default .	_default = translation ( settings . LANGUAGE_CODE )
10174	substitute value for self._encoding .	self . _encoding = value
7076	if STR0 key of the kwargs dictionary doesnt exists assign it widget field of the base class of the IntegerField class value .	kwargs . setdefault ( STR0 , super ( IntegerField , self ) . widget )
13088	get the value under the template_name key of the self.cache_key dictionary , if it exists , substitute it for key , if not , substitute template_dirs for key .	key = self . cache_key ( template_name , template_dirs )
16540	from django.core import mail into default name space .	from django . core import mail
2765	call the method connection.ops.end_transaction_sql , use the result as the argument for the call to the method self.style.SQL_KEYWORD , append the result to the STR0 string , write it to self.stdout .	self . stdout . write ( STR0 + self . style . SQL_KEYWORD ( connection . ops . end_transaction_sql ( ) ) )
5568	remove the entry under the STR0 key of the self.json_kwargs dictionary .	self . json_kwargs . pop ( STR0 , None )
4382	from django.conf import settings into default namespace .	from django . conf import settings
2419	call the method __init__ from the base class of the EmailMultiAlternatives class , with 9 arguments : subject , body , from_email , to , bcc , connection , attachments , headers and cc .	super ( EmailMultiAlternatives , self ) . __init__ ( subject , body , from_email , to , bcc , connection , attachments , headers , cc )
15727	for every k and v in result of the call to the method type_.__dict__.items ,	for ( k , v ) in type_ . __dict__ . items ( ) :
1795	from django.conf import settings into default name space .	from django . conf import settings
16427	if ValidationError exception is caught ,	except ValidationError :
13344	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
7363	initial is boolean False .	initial = False
18248	call the function to_language with an argument language , substitute it for self.__to_language .	self . __to_language = to_language ( language )
1016	define the method __init__ with self class instance , file , and name defaulting to None as arguments .	def __init__ ( self , file , name = None ) :
9471	substitute CheckboxFieldRenderer for renderer .	renderer = CheckboxFieldRenderer
14809	substitute new_method_name for new_method_name .	self . new_method_name = new_method_name
1371	call the os.open function with full_path , flags and octal number 666 as arguments , substitute the result for fd .	fd = os . open ( full_path , flags , 666 )
3174	skip this loop iteration .	continue
7746	if not ,	else :
11867	try ,	try :
10054	if ValueError exception is caught ,	except ValueError :
7635	call the clean method wiht value argument from the base class of the SlugField class , return the result .	return super ( SlugField , self ) . clean ( value )
10081	define the method upload_handlers with arguments : self and upload_handlers .	def upload_handlers ( self , upload_handlers ) :
14302	call the method self.setlist with 2 arguments : k and v .	self . setlist ( k , v )
16577	exc_info is an tuple with 3 elements : None , result of method record.getMessage and None .	exc_info = ( None , record . getMessage ( ) , None )
3227	for every field in model._meta.many_to_many ,	for field in model . _meta . many_to_many :
1293	derive the class Storage from the object base class .	class Storage ( object ) :
17882	import module time as _time .	import time as _time
2088	from django.core import mail into default name space .	from django . core import mail
10879	call the function re.compile with 2 arguments : filter_raw_string and result for bitwise OR on 2 operands re.UNICODE and re.VERBOSE , substitute the result for filter_re .	filter_re = re . compile ( filter_raw_string , re . UNICODE | re . VERBOSE )
11789	decorator stringfilter ,	@ stringfilter
54	get attribute STR0 from the self._caches if exists , otherwise get an empty dictionary , call the values method on the return value , return it .	return getattr ( self . _caches , STR0 , { } ) . values ( )
14976	define the method convert with 2 arguments : self and value .	def convert ( self , value ) :
3892	join dirpath and dirname into a file path , use is as an argument for the call to the function os.path.join ,	if is_ignored ( os . path . normpath ( os . path . join ( dirpath , dirname ) ) , norm_patterns ) :
18425	if request has an attribute STR0 ,	if hasattr ( request , STR0 ) :
3989	call the method parser.add_argument with 5 arguments : string STR1 , action as a string STR2 , dest as a string STR3 , default set to boolean False and help set to a string STR0 .	parser . add_argument ( STR1 , action = STR2 , dest = STR3 , default = False , help = STR0 )
8594	substitute date_check elements to uclass , lookup , field and unique_for , respectively .	uclass , lookup , field , unique_for = date_check
13892	call the method tz_name.encode with the arguments STR0 and STR1 , call the method decode on the result with STR2 as argument , in the resulting string replace all occurrences of STR with STR3 and append it to the end of cache_key .	cache_key += STR0 % tz_name . encode ( STR1 , STR2 ) . decode ( STR3 ) . replace ( STR , STR4 )
18454	call the function re.compile with an argument raw string STR0 , substitute the result for endblock_re .	endblock_re = re . compile ( STR0 )
11548	derive the class DebugNodeList from the NodeList base class .	class DebugNodeList ( NodeList ) :
11751	call the function _urlize with 4 arguments : value , trim_url_limit as limit converted into an integer , nofollow as boolean True , and autoescape as autoescape , use the result as an argument for the call to the function mark_safe , return the result .	return mark_safe ( _urlize ( value , trim_url_limit = int ( limit ) , nofollow = True , autoescape = autoescape ) )
6623	if AttributeError exception is caught ,	except AttributeError :
370	if ImportError exception is caught ,	except ImportError :
14099	define the method __init__ with 2 arguments : self and unpacked list dicts .	def __init__ ( self , * dicts ) :
15685	define the function _curried with 2 arguments : unpacked list moreargs and unpacked dictionary morekwargs .	def _curried ( * moreargs , ** morekwargs ) :
7016	try	try :
1593	call the method self.file.write with argument raw_data .	self . file . write ( raw_data )
8377	if opts.model is true ,	if opts . model :
14415	if use_func is true ,	if use_func :
938	derive the class MiddlewareNotUsed from the Exception base class .	class MiddlewareNotUsed ( Exception ) :
7835	if ValidationError renamed to e , exception is caught ,	except ValidationError as e :
11680	define the function lower with an argument value .	def lower ( value ) :
10514	derive the class JsonResponse from the HttpResponse base class .	class JsonResponse ( HttpResponse ) :
344	define the method has_key with 3 arguments : self , key , and version set to None .	def has_key ( self , key , version = None ) :
9342	define the method render with 5 arguments : self , name , value , attrs set to None and choices set to an empty tuple .	def render ( self , name , value , attrs = None , choices = ( ) ) :
519	call the self._lock.writer method , with the result perform the following ,	with self . _lock . writer ( ) :
14966	try ,	try :
5048	skip this loop iteration ,	continue
11742	substitute safe for value under the STR0 key of kwargs dictionary .	kwargs [ STR0 ] = safe
4137	get the value from the options dictionary under the key STR0 , or False if the key dont exists , substitute it for self.test_database .	self . test_database = options . get ( STR0 , False )
14606	define the function time_format with 2 arguments : value and format_string .	def time_format ( value , format_string ) :
11768	decorator function register.filter with an argument is_safe set to boolean True .	@ register . filter ( is_safe = True )
6426	for every name in pattern.reverse_dict ,	for name in pattern . reverse_dict :
16208	call the function re.compile with an argument raw string STR0 formated with __M , __D2 , __T and __Y , substitute the result for ASCTIME_DATE .	ASCTIME_DATE = re . compile ( STR0 % ( __M , __D2 , __T , __Y ) )
8657	if form.is_bound is true ,	if form . is_bound :
473	__caches is an empty dictionary .	_caches = { }
15104	try ,	try :
9319	if option_value is contained in selected_choices ,	if option_value in selected_choices :
13278	call the function OPERATORS.items , for every key and op in result ,	for key , op in OPERATORS . items ( ) :
17437	call the function write with an argument arg .	write ( arg )
9195	call the method __init__ from the base class of the class MultipleHiddenInput , called with an argument attrs .	super ( MultipleHiddenInput , self ) . __init__ ( attrs )
18800	derive the class SimplerXMLGenerator form the XMLGenerator base class .	class SimplerXMLGenerator ( XMLGenerator ) :
3992	define the method handle with 3 arguments : self , unpacked list app_labels and unpacked dictionary options .	def handle ( self , * app_labels , ** options ) :
16190	import module sys .	import sys
6715	code is a string STR0 .	code = STR0
1716	if response is True ,	if response :
10487	derive the class HttpResponseNotModified from the HttpResponse base class .	class HttpResponseNotModified ( HttpResponse ) :
7300	return data .	return data
4553	if app_config.models_module is None ,	if app_config . models_module is None :
575	import module time .	import time
10084	substitute upload_handlers for self._upload_handlers .	self . _upload_handlers = upload_handlers
18495	if t.token_type equals TOKEN_BLOCK ,	if t . token_type == TOKEN_BLOCK :
13256	return self .	return self
13517	if extracted is true ,	if extracted :
2244	call the encode function on the Header class instance , created with arguments nm and encoding , substitute the result for nm .	nm = Header ( nm , encoding ) . encode ( )
5663	if not ,	else :
16921	call the function get_quantifier with 2 arguments : ch and pattern_iter , substitute the result for count and ch , respectively .	count , ch = get_quantifier ( ch , pattern_iter )
1071	define the method __multiple_chunks__ with arguments self and chunk_size defaulting to None .	def multiple_chunks ( self , chunk_size = None ) :
17676	end_index is None .	end_index = None
8161	if self.is_bound is false ,	if not self . is_bound :
16728	call the function six.reraise with 3 arguments : ImportError , instance of ImportError class created with an argument msg , and third element of result of the function sys.exc_info .	six . reraise ( ImportError , ImportError ( msg ) , sys . exc_info ( ) [ 2 ] )
15340	append string STR0 to time_str , return the result .	return time_str + STR0
2806	derive the AppCommand class from the BaseCommand base class .	class AppCommand ( BaseCommand ) :
10575	VARIABLE_TAG_START is a string STR0 .	VARIABLE_TAG_START = STR0
16460	split ip_str into parts by STR0 , for every x in the result , calculate length of x , if any is smaller than integer 4 ,	if any ( len ( x ) < 4 for x in ip_str . split ( STR0 ) ) :
8599	date_data is a tuple with 3 elements : date.year , date.month and date.day .	date_data = ( date . year , date . month , date . day )
9704	if transfer_encoding equals string STR0 ,	if transfer_encoding == STR0 :
17945	if OverflowError or ValueError , renamed to exc , exceptions are caught ,	except ( OverflowError , ValueError ) as exc :
5662	value is None .	value = None
12966	call the method parser.invalid_block_tag with 3 arguments : endblock , STR0 and acceptable_endblocks .	parser . invalid_block_tag ( endblock , STR0 , acceptable_endblocks )
14340	yield value under key key of self dictionary .	yield self [ key ]
18157	define the function ngettext with 3 arguments : singular , plural and number .	def ngettext ( singular , plural , number ) :
6008	from django.utils.six.moves import socketserver into default name space .	from django . utils . six . moves import socketserver
2345	call the make_msgid function , substitute it for value under the STR0 key of msg dictionary .	msg [ STR0 ] = make_msgid ( )
6327	return callback split into two lists at the dot index , without the element at the dot index .	return callback [ : dot ] , callback [ dot + 1 : ]
2365	define the method attach_file with arguments self , path and mimetype set to None .	def attach_file ( self , path , mimetype = None ) :
3273	substitute value under the STR0 key of the options dictionary for interactive .	interactive = options . get ( STR0 )
14520	define the method d with an argument self .	def d ( self ) :
15805	call the function lazy with 2 arguments : func and unpacked list resultclasses , call the result with 2 arguments : unpacked list args , and unpacked dictionary kwargs , return the result .	return lazy ( func , * resultclasses ) ( * args , ** kwargs )
3289	try ,	try :
4021	if app_labels is false ,	if not app_labels :
4057	call the method writer.as_string , substitute the result for migration_string .	migration_string = writer . as_string ( )
10175	define the method _assert_mutable with an argument self .	def _assert_mutable ( self ) :
4474	define the method _ipython with an argument self .	def _ipython ( self ) :
7911	property decorator ,	@ property
3503	call the method parser.add_argument with 5 arguments : string STR0 , action as a string STR1 , dest as a string STR2 , default set to None , help is a string STR3 .	parser . add_argument ( STR0 , action = STR1 , dest = STR2 , default = None , help = STR3 )
12041	call the function ugettext with an argument string STR0 , substitute STR1 with the result of the call to the function , filesize_number_format with result of division of bytes by GB as an argument , substitute the result for value .	value = ugettext ( STR0 ) % filesize_number_format ( bytes / GB )
642	try ,	try :
11872	if not ,	else :
18491	comment is an empty list .	comment = [ ]
11215	define the function dec with an argument func ,	def dec ( func ) :
815	from itertools import chain into default name space .	from itertools import chain
15415	call the method self.add_root_elements with an argument handler .	self . add_root_elements ( handler )
2905	if app_labels is true ,	if app_labels :
8003	from django.forms.widgets import HiddenInput into default name space .	from django . forms . widgets import HiddenInput
13201	append callback to self._post_render_callbacks list .	self . _post_render_callbacks . append ( callback )
17672	call the method self._text_chars with 4 arguments : length , truncate , text and truncate_len , return the result .	return self . _text_chars ( length , truncate , text , truncate_len )
5573	if value under the STR0 key of the self.options dictionary is true ,	if self . options . get ( STR0 ) :
17125	substitute sys.maxsize for MAXSIZE .	MAXSIZE = sys . maxsize
7555	define the method __init__ with 13 arguments : self , path , match set to None , recursive set to boolean False , allow_files set to boolean True , allow_folders set to boolean False , required set to boolean True , widget set to None , label set to None , initial set to None , help_text set to an empty string , unpacked list args , unpacked dictionary kwargs .	def __init__ ( self , path , match = None , recursive = False , allow_files = True , allow_folders = False , required = True , widget = None , label = None , initial = None , help_text = STR , * args , ** kwargs ) :
3364	comment_notes is an empty list .	comment_notes = [ ]
6107	append flup_module to string STR0 , print it to the standard output .	print ( STR0 + flup_module )
15275	return s .	return s
10873	append self.pointer to self.backout .	self . backout . append ( self . pointer )
7269	remove the value under STR0 key from the kwargs dictionary and if the key exists , substitute it for self.allow_empty_file , if not self.allow_empty_file is boolean False .	self . allow_empty_file = kwargs . pop ( STR0 , False )
1274	if OSError , renamed to e , is caught ,	except OSError as e :
14263	define the method __contains__ with 2 arguments : self and item .	def __contains__ ( self , item ) :
11722	if ValueError exception is caught ,	except ValueError :
7274	try ,	try :
12229	if e doesnt have an STR0 attribute ,	if not hasattr ( e , STR0 ) :
14519	call the method self.data.isoformat , return the result .	return self . data . isoformat ( )
5319	raise an exception PageNotAnInteger with string STR0 as an argument .	raise PageNotAnInteger ( STR0 )
946	define the method __init__ with 4 arguments : self , message , code set to None and params set to None .	def __init__ ( self , message , code = None , params = None ) :
8608	if errors is true ,	if errors :
5637	self.objects is an empty list .	self . objects = [ ]
14462	is self.data has an attribute STR0 and self.data.tzinfo is true ,	if hasattr ( self . data , STR0 ) and self . data . tzinfo :
1287	from django.utils.module_loading import import_string into default name space .	from django . utils . module_loading import import_string
14768	define the function _wrapped_view with 3 arguments : request , unpacked list args and unpacked dictionary kwargs .	def _wrapped_view ( request , * args , ** kwargs ) :
5179	call the method self.extract with an argument absolute_path , return the result .	return self . extract ( absolute_path )
15195	call the method self.add_handlers with 2 arguments : logger and handlers .	self . add_handlers ( logger , handlers )
16772	try ,	try :
9735	if retval is true ,	if retval :
4766	in not ,	else :
3978	from django.db.migrations.loader import MigrationLoader into default name space .	from django . db . migrations . loader import MigrationLoader
1247	if exception OSError occurred ,	except OSError :
6867	substitute years for self.years .	self . years = years
3397	value under the STR0 key of the extra_params dictionary is boolean True .	extra_params [ STR0 ] = True
12195	if self.is_reversed is true ,	if self . is_reversed :
650	call the method self.make_key with key and version set to version as arguments , substitute the result for key .	key = self . make_key ( key , version = version )
12807	try ,	try :
15055	for every name in formatters ,	for name in formatters :
9354	if value is None ,	if value is None :
9217	call the method render from the base class of the class FileInput , called with 3 arguments : name , None and attrs as attrs .	return super ( FileInput , self ) . render ( name , None , attrs = attrs )
15474	if value under the STR0 key of the item dictionary is not None ,	if item [ STR0 ] is not None :
11137	return kwargs .	return kwargs
4016	return nothing .	return
3895	replace STR0 in string STR1 with dirname , write it to self.stdout stream .	self . stdout . write ( STR0 % dirname )
13697	call the method signal.signal with signal.SIGTTOU and old_handler , as arguments .	signal . signal ( signal . SIGTTOU , old_handler )
1075	define the method __iter__ with argument self .	def __iter__ ( self ) :
15295	if not ,	else :
8207	property decorator ,	@ property
7616	if value is contained in self.empty_values ,	if value in self . empty_values :
4595	help is an string STR0 .	help = STR0
2645	substitute out for self._out .	self . _out = out
2310	self.to is an empty list .	self . to = [ ]
4	from django.core import signals into default name space .	from django . core import signals
2171	define the method _send with arguments self and email_message .	def _send ( self , email_message ) :
16431	if hextet converted to hexadecimal number is smaller than hexadecimal 0 , or hextet converted to hexadecimal number is smaller than hexadecimal FFFF ,	if int ( hextet , 16 ) < 0 or int ( hextet , 16 ) > FFFF :
13673	call the function fn with list of arguments args and dictionary of argument values kwargs .	fn ( * args , ** kwargs )
13393	paths is a list containing results of the function force_text called with an argument p , for every p in paths .	paths = [ force_text ( p ) for p in paths ]
12534	raise an TemplateSyntaxError exception with an argument string STR0 , where STR1 is replaced with token.contents .	raise TemplateSyntaxError ( STR0 % token . contents )
15874	call the function _super with 2 arguments : class SimpleLazyObject and self , call the method __init__ on the result .	_super ( SimpleLazyObject , self ) . __init__ ( )
606	if timeout is greater than integer 2592000 ,	if timeout > 2592000 :
14889	return result .	return result
6936	if not ,	else :
16324	from django.utils.deprecation import RemovedInDjango19Warning into default name space .	from django . utils . deprecation import RemovedInDjango19Warning
8782	if self.to_field is true ,	if self . to_field :
17644	if line ends with a new line character substitute width incremented by integer 1 for max_width , if not substitute width for max_width .	max_width = min ( ( line . endswith ( STR0 ) and width + 1 or width ) , width )
12991	if value is true ,	if not value :
7039	try ,	try :
3548	call the method self.stdout.write with an argument string STR0 , substitute STR1 with self.loaded_object_count , self.fixture_object_count and self.fixture_count .	self . stdout . write ( STR0 % ( self . loaded_object_count , self . fixture_object_count , self . fixture_count ) )
17601	substitute opts for value under the STR0 key of definition dictionary .	definition [ STR0 ] = opts
8271	define the function save_instance with 7 arguments : form , instance , fields set to None , fail_message as string STR0 ,	def save_instance ( form , instance , fields = None , fail_message = STR0 , commit = True , exclude = None , construct = True ) :
875	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
2613	import module sys .	import sys
6799	compare is a lambda function with arguments self , a and b , return value is boolean true if a is greater than b , otherwise is false .	compare = lambda self , a , b : a > b
11277	return an instance of AssignmentNode class created with 4 arguments : takes_context , args , kwargs and target_var .	return AssignmentNode ( takes_context , args , kwargs , target_var )
1339	substitute settings.MEDIA_URL for base_url .	base_url = settings . MEDIA_URL
2593	call the method django.setup .	django . setup ( )
9218	define the method value_from_datadict with 4 arguments : self , data , files and name .	def value_from_datadict ( self , data , files , name ) :
3802	if self.domain equals to string STR0 ,	if self . domain == STR0 :
14747	return _wrapper .	return _wrapper
12232	if not ,	else :
14720	define the function deconstruct with an argument obj .	def deconstruct ( obj ) :
3488	from django.utils.encoding import force_text into default name space .	from django . utils . encoding import force_text
8488	if widgets is not None ,	if widgets is not None :
11001	if else ,	else :
912	return an dictionary containing 1 entry : request for STR0 .	return { STR0 : request }
7593	default_error_messages is an dictionary with 2 entries : return value of the function _ called with an string STR0 , for STR1 and return value of the function _ called with an string STR2 , for 'invalid_time .	default_error_messages = { STR0 : _ ( STR1 ) , STR2 : _ ( STR3 ) , }
10699	if not ,	else :
474	__expire_info is an empty dictionary .	_expire_info = { }
6318	method lru_cache.lru_cache with an argument maxsize set to None , as a decorator ,	@ lru_cache . lru_cache ( maxsize = None )
18392	use global variable _supported .	global _supported
13876	if not ,	else :
4190	call the self.sync_apps method with connection and executor.loader.unmigrated_apps as arguments , substitute it for created_models .	created_models = self . sync_apps ( connection , executor . loader . unmigrated_apps )
1354	try ,	try :
4509	if not ,	else :
2875	do nothing .	pass
3809	from django.conf import settings into default namespace .	from django . conf import settings
1730	if callback is of instance types.FunctionType ,	if isinstance ( callback , types . FunctionType ) :
7612	define the method __init__ with 3 arguments : self , unpacked list args and unpacked dictionary kwargs .	def __init__ ( self , * args , ** kwargs ) :
9694	if IndexError , TypeError or ValueError exception is caught ,	except ( IndexError , TypeError , ValueError ) :
18673	if self.connector equals conn_type ,	if self . connector == conn_type :
12978	decorator method register.tag with an argument STR0 ,	@ register . tag ( STR0 )
2148	if ssl.SSLError or smtplib.SMTPServerDisconnected exception occurred ,	except ( ssl . SSLError , smtplib . SMTPServerDisconnected ) :
2876	style is an instance of the dummy class .	style = dummy ( )
10137	try ,	try :
7407	for every k and v in self.choices ,	for k , v in self . choices :
13339	call the method self.next_token , substitute the result for self.current_token .	self . current_token = self . next_token ( )
7767	return the result of the method self._html_output , called with 5 arguments : normal_row to a string , STR2 , error_row set to a a string , STR3 , row_ender set to a string STR4 , help_text_html set to a string , STR5 and errors_on_separate_row set to boolean False .	return self . _html_output ( normal_row = STR2 , error_row = STR3 , row_ender = STR4 , help_text_html = STR5 , errors_on_separate_row = False )
5934	define the function getInnerText with an argument node .	def getInnerText ( node ) :
2214	call the function random.randrange with argument integer 100000 , substitute the result for randint .	randint = random . randrange ( 100000 )
14477	define the method G with an argument self .	def G ( self ) :
7406	call the function force_text with an argument value , substitute the result for text_value .	text_value = force_text ( value )
4031	otherwise if length of app_labels is greater than integer 1 ,	elif len ( app_labels ) > 1 :
8990	call the function format_html with 3 arguments : string STR1 , self.error_class and return value of the function , format_html_join , called with 3 arguments : empty string , string STR2 , tuple containing results of the function , force_text with an argument e , for every e in self , return the result .	return format_html ( STR1 , self . error_class , format_html_join ( STR , STR2 , ( ( force_text ( e ) , ) for e in self ) ) )
866	return errors .	return errors
13534	get the directory name of filename , substitute the result for dirname .	dirname = os . path . dirname ( filename )
3973	import module os .	import os
16169	return integer -1 .	return - 1
17592	remove first element from styles , split it by the STR0 character , substitute the result for colors .	colors = styles . pop ( ) . split ( STR0 )
2355	return an integer 0 .	return 0
17947	call the function exc_type with an argument string STR0 , replace STR1 with dt , substitute the result for exc_value .	exc_value = exc_type ( STR0 % dt )
3206	raise an exception .	raise
4065	questioner is an instance of a InteractiveMigrationQuestioner class .	questioner = InteractiveMigrationQuestioner ( )
14952	if not ,	else :
16020	define the function strip_spaces_between_tags with an argument value .	def strip_spaces_between_tags ( value ) :
2385	define the method _create_mime_attachment with arguments self , content and mimetype .	def _create_mime_attachment ( self , content , mimetype ) :
6301	try ,	try :
165	define the method validate_key with self class instance and key as arguments .	def validate_key ( self , key ) :
13940	define function _to_tuple with s as an argument .	def _to_tuple ( s ) :
11341	try ,	try :
13265	substitute bp for lbp .	lbp = bp
12625	define the function load with 2 arguments : parser and token .	def load ( parser , token ) :
12727	raise an TemplateSyntaxError exception with an argument string STR0 .	raise TemplateSyntaxError ( STR0 )
4660	call method executor.collect_sql with plan as the argument , substitute the result for sql_statements .	sql_statements = executor . collect_sql ( plan )
737	increment weight by integer 2 .	weight += 1
10805	return the value under the filter_name key of the self.filters dictionary .	return self . filters [ filter_name ]
7183	raise an ValidationError with 2 arguments : value under the STR0 key of the self.error_messages dictionary and code set to STR1 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 )
12401	return url .	return url
699	call the hashlib.md5 fuction with force_bytes ( key ) as argument .	args = hashlib . md5 ( force_bytes ( key ) )
16677	do nothing .	pass
2654	if ending is true and msg doesnt end with ending ,	if ending and not msg . endswith ( ending ) :
9505	join rendered_widgets into a string , return it .	return STR . join ( rendered_widgets )
17392	remover STR0 key from the kwargs dictionary , if it exists substitute it for fp , if not substitute sys.stdout for fp .	fp = kwargs . pop ( STR0 , sys . stdout )
15082	append STR0 to name , substitute the result for prefixed .	prefixed = name + STR0
8308	if not ,	else :
11370	_standard_context_processors is None .	_standard_context_processors = None
5170	call the method path.expanduser with an argument template , substitute it for expanded_template .	expanded_template = path . expanduser ( template )
12090	from django.utils.html import format_html into default name space .	from django . utils . html import format_html
4761	call the method self.validate_name with 2 arguments : app_name and string STR0 .	self . validate_name ( app_name , STR0 )
18159	return singular .	return singular
11570	call the function escape with an argument output .	return escape ( output )
12602	call the method parser.parse with an argument tuple with 2 elements strings : STR0 and STR1 , substitute the result for nodelistelse .	nodelist_true = parser . parse ( ( STR0 , STR1 ) )
14177	call the method __init__ from the base class of the class SortedDict , called with an argument data .	super ( SortedDict , self ) . __init__ ( data )
10089	property decorator ,	@ property
8030	if prefix is true , substitute it for self.prefix , otherwise call the method self.get_default_prefix , and substitute the result for self.prefix .	self . prefix = prefix or self . get_default_prefix ( )
18308	delete _active.value .	del _active . value
4232	pending_references is a empty dictionary .	pending_references = { }
18004	if value is an instance of datetime and settings.USE_TZ if use_tz is None else use_tz and call to the function is_naive , with an argument value evaluates to false , and if STR0 attribute of value object doesnt exists , or is it does is boolean True , should_convert is boolean True , otherwise is boolean False .	should_convert = ( isinstance ( value , datetime ) and ( settings . USE_TZ if use_tz is None else use_tz ) and not is_naive ( value ) and getattr ( value , STR0 , True ) )
4411	substitute value under the STR0 key of the options dictionary for use_reloader .	use_reloader = options . get ( STR0 )
16150	evaluate the self.getpos ( ) and assign the result to the lineno and offset respectfully .	lineno , offset = self . getpos ( )
14964	substitute value under idx key of dictionary d for d .	d = d [ idx ]
18129	call the function _trans.get_language_from_request with 2 arguments : request and check_path , return the result .	return _trans . get_language_from_request ( request , check_path )
18665	return data .	return data
16578	message is an string STR0 formated with the result of the metod self.format with an argument record , and request_repr , respectively .	message = STR0 % ( self . format ( record ) , request_repr )
751	call the function _check_middleware_classes with dictionary kwargs as argument , use the result as an argument for the call to the function errors.extend .	errors . extend ( _check_middleware_classes ( ** kwargs ) )
16570	subject is an string STR0 formated with record.levelname and result of the method record.getMessage , respectively .	subject = STR0 % ( record . levelname , record . getMessage ( ) )
3027	for every f in fields ,	for f in fields :
555	call the method self._delete with argument k .	self . _delete ( k )
15387	do nothing .	pass
3849	if self.keep_pot is false ,	if not self . keep_pot :
10086	self.upload_handlers is an instance of ImmutableList , created with 2 arguments : self.upload_handlers , and warning as a string STR0 .	self . upload_handlers = ImmutableList ( self . upload_handlers , warning = STR0 )
12566	define the method __init__ with 3 arguments : self , value and text .	def __init__ ( self , value , text ) :
9280	if v is boolean False or v is None or v is an empty string , return boolean False , otherwise return boolean True .	return not ( v is False or v is None or v == STR )
7364	convert initial and data into boolean , if they are not equal return boolean True , if they are return boolean False .	return bool ( initial ) != bool ( data )
11234	return filter_func .	return filter_func
4494	if ImportError exception is caught ,	except ImportError :
12824	call the function get_template with 2 arguments : template_name and dirs , substitute the result for t .	t = get_template ( template_name , dirs )
6986	call the function widget , substitute the result for widget .	widget = widget ( )
13353	substitute value under the STR0 key of the results dictionary for unifunc .	unifunc = results [ STR0 ]
5145	call the method template.render with an argument context , substitute it for content .	content = template . render ( context )
5595	try ,	try :
3938	with the result renamed to fp , perform the following : write msgs to fp .	fp . write ( msgs )
5453	if setting has an STR0 attribute ,	if hasattr ( settings , STR0 ) :
4978	define the function sql_custom with 3 arguments : app_config , style and connection .	def sql_custom ( app_config , style , connection ) :
6983	substitute label_suffix for self.label_suffix .	self . label_suffix = label_suffix
449	return nothing .	return
18183	append STR0 to string created from first p elements of languages converted to lowercase , convert slice of language string from ( p+1 ) -th index to the end to uppercase , append it to the previous result , return the resulting string .	return language [ : p ] . lower ( ) + STR0 + language [ p + 1 : ] . upper ( )
111	convert cull_frequency into an integer and substitute it for self._cull_frequency .	self . _cull_frequency = int ( cull_frequency )
10790	define the method compile_function_error with 3 arguments : self , token and e .	def compile_function_error ( self , token , e ) :
18163	call the function ngettext with 3 arguments : singular , plural and number , use the result as an argument for the call to the force_text , return the result .	return force_text ( ngettext ( singular , plural , number ) )
8819	define the method choice with 2 arguments : self and obj .	def choice ( self , obj ) :
4310	invalid_apps is an empty list .	invalid_apps = [ ]
14657	import module re .	import re
13793	while x is greater than zero ,	while x > 0 :
4892	from django.utils.deprecation import RemovedInDjango19Warning into default name space .	from django . utils . deprecation import RemovedInDjango19Warning
943	do nothing .	pass
7329	default_validators is a list with an element , return value of the validators.URLValidator method .	default_validators = [ validators . URLValidator ( ) ]
3871	otherwise if self.verbosity is greater than integer 0 ,	elif self . verbosity > 0 :
7604	raise an ValidationError with 2 arguments : value under the STR0 key of the self.error_messages dictionary and code set to string STR1 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 )
9906	return tuple containing 3 elements : RAW , an empty dictionary and stream .	return ( RAW , { } , stream )
11588	from django.utils import six into default name space .	from django . utils import six
16825	call the function six.text_type with an argument number , substitute the result for str_number .	str_number = six . text_type ( number )
8264	if f is an instance of models.FileField ,	if isinstance ( f , models . FileField ) :
8618	call the function ugettext with an argument string STR0 , return the result .	return ugettext ( STR0 )
4540	call the function sql_create with 3 arguments : app_config , self.style and connection , substitute the result for statements .	statements = sql_create ( app_config , self . style , connection )
10087	parser is an instance of MultiPartParser class , created with 4 arguments : META , post_data , self.upload_handlers and self.encoding .	parser = MultiPartParser ( META , post_data , self . upload_handlers , self . encoding )
8749	if length of fks_to_parent equals integer 1 .	if len ( fks_to_parent ) == 1 :
11617	divide 10 to the power of 400 by 10 to the power of 400 , substitute the result for nan .	nan = ( 1e200 * 1e200 ) // ( 1e200 * 1e200 )
11131	return kwargs .	return kwargs
1802	from django.utils.functional import cached_property into default name space .	from django . utils . functional import cached_property
10344	if mime_encode is true ,	if mime_encode :
13022	call the function calculate_app_template_dirs , substitute the result for app_template_dirs .	app_template_dirs = calculate_app_template_dirs ( )
6832	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
12366	mapping is an dictionary with 8 initial entries : BLOCK_TAG_START for STR0 , BLOCK_TAG_END for STR1 , VARIABLE_TAG_START for STR2 , VARIABLE_TAG_END for STR3 , SINGLE_BRACE_START for STR4 , SINGLE_BRACE_END STR5 , COMMENT_TAG_START STR6 and COMMENT_TAG_END for STR7 .	mapping = { STR0 : BLOCK_TAG_START , STR1 : BLOCK_TAG_END , STR2 : VARIABLE_TAG_START , STR3 : VARIABLE_TAG_END , STR4 : SINGLE_BRACE_START , STR5 : SINGLE_BRACE_END , STR6 : COMMENT_TAG_START , STR7 : COMMENT_TAG_END , }
2108	from django.core.mail.message import sanitize_address into default name space .	from django . core . mail . message import sanitize_address
13350	BM_compatible is boolean True .	BM_compatible = True
11037	if TypeError exception is caught ,	except TypeError :
1187	derive the class _OFFSET_UNION from the Union base class .	class _OFFSET_UNION ( Union ) :
11689	call the function _slugify with an argument value , return the result .	return _slugify ( value )
10578	COMMENT_TAG_END is a string STR0 .	COMMENT_TAG_END = STR0
12388	split settings.SETTINGS_MODULE by STR0 character , substitute the first element of the result for project_name .	project_name = settings . SETTINGS_MODULE . split ( STR0 ) [ 0 ]
12299	if not ,	else :
11915	otherwise if i is smaller than list_length decremented by one ,	elif i < list_length - 1 :
12914	if parent has an attribute STR0 ,	if hasattr ( parent , STR0 ) :
5115	if not ,	else :
14744	do nothing .	pass
11214	if name is None and filter_func is None ,	if name is None and filter_func is None :
17693	split self._wrapped into words , substitute the result for words .	words = self . _wrapped . split ( )
16527	tok is a string STR1 ,	tok = STR1
16219	call the function force_str with an argument quoted_url , use the result as an argument for the call to the function unquote_plus , use the result as an argument for the call to the function force_text , return the result .	return force_text ( unquote_plus ( force_str ( quoted_url ) ) )
5220	if ext is true ,	if ext :
6089	call the method sys.stderr.write with an argument string STR0 .	sys . stderr . write ( STR0 )
16597	derive the class RequireDebugTrue from logging.Filter base class .	class RequireDebugTrue ( logging . Filter ) :
15418	call the method handler.endElement with an argument string STR0 .	handler . endElement ( STR0 )
7697	if initial is true , substitute it for self.initial , if not self.files is an empty dictionary .	self . initial = initial or { }
11774	define the function cut with 2 arguments value and arg .	def cut ( value , arg ) :
11734	decorator stringfilter ,	@ stringfilter
2941	define the handle method with self class instance and dictionary **options as arguments .	def handle ( self , ** options ) :
6628	if not ,	else :
1838	if chunk is empty ,	if not chunk :
18594	incomment is boolean True .	incomment = True
10801	define the function compile_filter with 2 arguments : self and token .	def compile_filter ( self , token ) :
16128	substitute self.rawdata for rawdata .	rawdata = self . rawdata
944	NON_FIELD_ERRORS is an string STR0 .	NON_FIELD_ERRORS = STR0
12313	if obj_list is None ,	if obj_list is None :
1592	define the method receive_data_chunk with arguments : self , raw_data and start .	def receive_data_chunk ( self , raw_data , start ) :
14798	import module inspect .	import inspect
4503	import code .	import code
12825	if context_instance is false ,	if not context_instance :
4877	call parser.add_argument method with STR0 , metavar set to string STR1 , nargs set to string STR2 and help set to string STR3 .	parser . add_argument ( STR0 , metavar = STR1 , nargs = STR2 , help = STR3 )
7157	self.max_digits and self.decimal_places , raise an ValidationError with 3 arguments : value under the STR0 key of the self.error_messages dictionary , code set to string STR1 and params set to a dictionary with an entry : difference of the self.max_digits and self.decimal_places , for STR2 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 , params = { STR2 : ( self . max_digits - self . decimal_places ) } , )
11667	decorator stringfilter ,	@ stringfilter
11029	if current is callable object ,	if callable ( current ) :
176	raise an exception of the class ValueError with string STR0 as argument , STR1 is substituted for key .	raise ValueError ( STR0 % key )
13426	import module zipfile .	import zipfile
15665	call the function get_format with an argument string STR0 , substitute the result for decimal_separator .	decimal_separator = get_format ( STR0 )
1355	call the os.makedirs function with directory and self.directory_permissions_mode as arguments .	os . makedirs ( directory , self . directory_permissions_mode )
2532	return klass .	return klass
9282	define the method __init__ with 3 arguments : self , attrs set to None and check_test set to None .	def __init__ ( self , attrs = None , check_test = None ) :
6311	return view_func .	return view_func
13932	continue with the next iteration of the for loop .	continue
12288	yield node as an return value of a generator .	yield node
14375	derive the class ImmutableList from the tuple base class .	class ImmutableList ( tuple ) :
13597	join app_config.path and STR0 into a valid directory path , separated by STR1 , append it to basedirs .	basedirs . append ( os . path . join ( app_config . path , STR0 ) )
2348	skip this loop execution ,	continue
13480	otherwise if common_prefix is None ,	elif common_prefix is None :
1306	define the method get_available_name with arguments self and name .	def get_available_name ( self , name ) :
10214	call the method self._assert_mutable .	self . _assert_mutable ( )
4999	use the app_config , style and connection as arguments for the call to the sql_create , sql_custom and sql_indexes functions , append the results respectively , return the result .	return sql_create ( app_config , style , connection ) + sql_custom ( app_config , style , connection ) + sql_indexes ( app_config , style , connection )
16914	join elements of name into a string , substitute it for param .	param = STR . join ( name )
10235	for every v in list_ append to a list result of the function encode , called with arguments : k and result of the function force_bytes , called with arguments v and self.encoding , extend the output with the result .	output . extend ( [ encode ( k , force_bytes ( v , self . encoding ) ) for v in list_ ] )
16583	call the function get_connection with 2 arguments : backend set to self.email_backend and fail_silently set to boolean True .	return get_connection ( backend = self . email_backend , fail_silently = True )
8144	classmethod decorator ,	@ classmethod
8099	property decorator ,	@ property
13313	call the method self.next_token , substitute the result for self.current_token .	self . current_token = self . next_token ( )
1301	call the method self.get_available_name with argument name , substitute it for name .	name = self . get_available_name ( name )
6836	from django.utils import datetime_safe into default name space .	from django . utils import datetime_safe
6902	if match is true ,	if match :
6604	if not ,	else :
12490	call the function parser.compile_filter with an argument arg for every arg in args from the index 1 to the index -2 , append the results into a list , substitute it for value .	values = [ parser . compile_filter ( arg ) for arg in args [ 1 : - 2 ] ]
17199	if old_attr is None ,	if old_attr is None :
12637	substitute value under the name key of the lib.tags dictionary for value under the name key of the temp_lib.tags dictionary .	temp_lib . tags [ name ] = lib . tags [ name ]
11884	if list_ is not an instance of tuple or list types and length of list_ is not equal to integer 2 ,	if not isinstance ( list_ , ( tuple , list ) ) or len ( list_ ) != 2 :
17174	raise an AttributeError with an argument attr .	raise AttributeError ( attr )
7037	define the method _has_changed with arguments self , initial and data .	def _has_changed ( self , initial , data ) :
12896	under the BLOCK_CONTEXT_KEY key of render_context dictionary dictionary evaluates to be not equal to None , call the method self.render with an argument self.context , use it as an argument for the call to the mark_safe function , return the result .	return mark_safe ( self . render ( self . context ) )
1223	define the function lock with arguments f and flags .	def lock ( f , flags ) :
7212	derive the class DateTimeField from the base class BaseTemporalField class .	class DateTimeField ( BaseTemporalField ) :
4538	return nothing .	return
4566	call the method add_arguments from the base class of the class Command , with an argument parser .	super ( Command , self ) . add_arguments ( parser )
14803	do nothing .	pass
8988	if self.data is false ,	if not self . data :
16007	break from the loop execution .	break
18626	if ValueError exception is caught ,	except ValueError :
7954	if label_suffix and contents are both true and last element of contents is not contained in the result of the function _ , called with an argument string STR0 .	if label_suffix and contents and contents [ - 1 ] not in _ ( STR0 ) :
14999	if c doesnt have an attribute STR0 and types has an STR1 attribute and type of c is not equal to types.ClassType ,	if not hasattr ( c , STR0 ) and hasattr ( types , STR1 ) and type ( c ) != types . ClassType :
2146	try ,	try :
5369	raise a TypeError exception ,	raise TypeError
4806	call the method apps.get_model with 2 arguments : string STR0 and string STR1 .	apps . get_model ( STR0 , STR1 )
1686	call the function transaction.atomic , with using set to db.alias as the argument , return value is a function which is called , with the argument view , store the result in the view .	view = transaction . atomic ( using = db . alias ) ( view )
5962	substitute self.unparsed_entity_decl for parser.UnparsedEntityDeclHandler .	parser . UnparsedEntityDeclHandler = self . unparsed_entity_decl
15405	define the method __init__ with 4 arguments : self , url , length and mime_type .	def __init__ ( self , url , length , mime_type ) :
13920	substitute settings.CACHE_MIDDLEWARE_KEY_PREFIX for key_prefix .	key_prefix = settings . CACHE_MIDDLEWARE_KEY_PREFIX
13783	neg is integer 1 .	neg = 1
833	description is a string STR0 replaced by value of receiver.__name__ .	description = STR0 % receiver . __name__
8674	if not ,	else :
5480	for every obj in queryset ,	for obj in queryset :
15242	return s .	return s
4658	target is a list containing tuple with two elements app_label and migration.name .	targets = [ ( app_label , migration . name ) ]
9107	if not ,	else :
16987	if ch equals a string STR0 ,	if ch == STR0 :
9757	substitute length for self._remaining .	self . _remaining = length
10712	if parse_until is None ,	if parse_until is None :
8103	define the method empty_form with an argument self .	def empty_form ( self ) :
13134	define the method get_template_source with 3 arguments : self , template_name , template_dirs set to None .	def get_template_sources ( self , template_name , template_dirs = None ) :
7443	if self.required is true and value is false ,	if self . required and not value :
7867	return self._changed_data .	return self . _changed_data
6498	msg is a string STR The included urlconf STR0 does not appear to have any patterns in it .	msg = ( STR0 )
2715	self._called_from_command_line is boolean True .	self . _called_from_command_line = True
22	if KeyError exception is caught ,	except KeyError :
5923	if not ,	else :
10170	substitute settings.DEFAULT_CHARSET for self._encoding .	self . _encoding = settings . DEFAULT_CHARSET
17084	remove kwargs dictionary element under the STR0 key , substitute it for method .	method = kwargs . pop ( STR0 )
12784	func is an instance of TemplateLoader class , created with unpacked list args .	func = TemplateLoader ( * args )
10844	while i is lesser than length of subject and i-th element of subject is not equal to c ,	while i < len ( subject ) and subject [ i ] != c :
9877	substitute greater element between integer 0 and end decremented by one for last .	last = max ( 0 , end - 1 )
1230	from django.core.files import locks into default name space .	from django . core . files import locks
11707	return value .	return value
5378	call the method self.has_previous , if it evaluate to false , call the self.has_next method , return the result .	return self . has_previous ( ) or self . has_next ( )
4359	import module re .	import re
5331	sum bottom and self.per_page , substitute the result for top .	top = bottom + self . per_page
5547	do nothing .	pass
8833	call the method Field.__init__ with 8 arguments : self , required , widget , label , initial , help_text , unpacked list args , and unpacked dictionary kwargs .	Field . __init__ ( self , required , widget , label , initial , help_text , * args , ** kwargs )
9772	decrement remaining by length of emitting .	remaining -= len ( emitting )
5104	and ignored as an empty tuple , convert the result into a tuple and substitute it for extensions . extra_files is an empty list .	extra_files = [ ]
7988	if auto_id is true and STR0 is contained in result of the call to the function smart_text with an argument auto_id ,	if auto_id and STR0 in smart_text ( auto_id ) :
13270	define the method evalu with 2 arguments self and context .	def eval ( self , context ) :
12266	derive the class IfEqualNode from Node base class .	class IfEqualNode ( Node ) :
3684	define the method __eq__ with self and other arguments :	def __eq__ ( self , other ) :
9157	derive the class Input from the Widget base class .	class Input ( Widget ) :
5762	call the method stream_or_string.decode with string STR0 as argument , substitute the result for stream_or_string .	stream_or_string = stream_or_string . decode ( STR0 )
17868	if count does not equals to integer 0 ,	if count != 0 :
6338	if not ,	else :
5132	remove dirname key from dirs .	dirs . remove ( dirname )
11238	get STR0 attribute from func object , if it exists substitute __name__ field of the result for name , if not , substitute func.__name__ for name .	name = getattr ( func , STR0 , func ) . __name__
5371	convert self.object_list to a list .	self . object_list = list ( self . object_list )
7351	substitute CheckboxInput for widget .	widget = CheckboxInput
18633	import module copy .	import copy
14365	if not ,	else :
13166	substitute template for self.template_name .	self . template_name = template
10276	for every pattern in allowed_hosts :	for pattern in allowed_hosts :
15175	if level is not None ,	if level is not None :
741	return an empty list .	return [ ]
6848	for every char in fmt ,	for char in fmt :
17399	get STR0 attribute from fp object , substitute it for errors if it exists , if not errors is None .	errors = getattr ( fp , STR0 , None )
4318	for every app_name in app_names .	for app_name in app_names :
15043	raise an ValueError exception with an argument string STR0 formated with name and e .	raise ValueError ( STR0 % ( name , e ) )
1252	return nothing .	return
16480	for every c in choices split into words , concatenate prefix , result of the function re.escape with an argument c and suffix , and join the results into a string , separated with STR0 character , return the result .	return STR0 . join ( prefix + re . escape ( c ) + suffix for c in choices . split ( ) )
12251	if not ,	else :
769	if level is not an integer raise an error with message string STR0 .	assert isinstance ( level , int ) , STR0
8411	if formfield has an attribute STR0 ,	if hasattr ( formfield , STR0 ) :
11984	if TypeError or ValueError exceptions are caught ,	except ( ValueError , TypeError ) :
4805	try ,	try :
13612	skip this loop iteration ,	continue
16549	define the function configure_logging with 2 arguments : logging_config and logging_settings .	def configure_logging ( logging_config , logging_settings ) :
9061	if settings.STATIC_URL is None ,	if settings . STATIC_URL is None :
17515	define the method reader with an argument self .	def reader ( self ) :
2898	call the method parser.add_argument with 3 arguments : string STR0 , metavar set to string STR1 and nargs set to STR2 .	parser . add_argument ( STR0 , metavar = STR1 , nargs = STR2 )
3476	import module glob .	import glob
12122	define the method __init__ with 4 arguments : self , cyclevars , variable_name set to None and silent set to boolean False .	def __init__ ( self , cyclevars , variable_name = None , silent = False ) :
9661	if old_field_name is true ,	if old_field_name :
452	define the method _is_expired with self and f as arguments .	def _is_expired ( self , f ) :
716	return errors .	return errors
18762	call the get_complete_version function with version as argument , store the result in version .	version = get_complete_version ( version )
8241	from django.forms.forms import DeclarativeFieldsMetaclass and BaseForm into default name space .	from django . forms . forms import DeclarativeFieldsMetaclass , BaseForm
1386	if OSError , renamed to e , is caught ,	except OSError as e :
15531	if value under the STR0 key of the item dictionary is not None ,	if item [ STR0 ] is not None :
3029	if f.null is false , append string append STR0 to field_output , otherwise append STR1 to field_output .	field_output . append ( STR0 % ( STR1 if not f . null else STR ) )
2852	if args is true ,	if args :
5056	import module os .	import os
5840	for every key_value in natural ,	for key_value in natural :
5188	message is a string STR0 .	message = STR0
12106	derive the class CommentNode from Node base class .	class CommentNode ( Node ) :
14124	return an empty list .	return [ ]
13041	do nothing .	pass
1404	if e.errno equals to errno.EEXIST ,	if e . errno != errno . ENOENT :
8665	if IndexError exception is caught ,	except IndexError :
5707	otherwise if field.rel is true and field.rel is an instance of the models.ManyToOneRel object ,	elif field . rel and isinstance ( field . rel , models . ManyToOneRel ) :
14298	return obj_dict .	return obj_dict
15673	append value to parts .	parts . append ( value )
4368	from django.core.exceptions import ImproperlyConfigured into default name space .	from django . core . exceptions import ImproperlyConfigured
12751	define the method __call__ with 3 arguments : self , template_name and template_dirs set to None .	def __call__ ( self , template_name , template_dirs = None ) :
6840	from django.utils.formats import get_format into default name space .	from django . utils . formats import get_format
6613	call the function get_ns_resolver.cache_clear .	get_ns_resolver . cache_clear ( )
15182	try ,	try :
18197	import module warnings .	import warnings
1886	call the get_bytes_from_wsgi function with self.environ , string STR0 and empty string as arguments , substitute the return value for raw_query_string .	raw_query_string = get_bytes_from_wsgi ( self . environ , STR0 , STR )
9419	define the method __getitem__ with 2 arguments : self and idx .	def __getitem__ ( self , idx ) :
12165	if nodelist_empty is None ,	if nodelist_empty is None :
760	from django.utils.encoding import python_2_unicode_compatible and force_st into default name space .	from django . utils . encoding import python_2_unicode_compatible , force_str
3592	if not ,	else :
3752	replace every occurrence of string STR0 for string STR1 in msgs , substitute the result for msgs .	msgs = msgs . replace ( STR0 , STR1 )
2844	define the method handle_label with 3 arguments : self , label and unpacked dictionary options .	def handle_label ( self , label , ** options ) :
8117	self._deleted_form_indexes is an empty list .	self . _deleted_form_indexes = [ ]
18586	inplural is boolean False .	inplural = False
9007	call the function force_text with an argument error , return the result .	return force_text ( error )
5355	return all the integers from the integer 1 to the self.num_pages .	return range ( 1 , self . num_pages + 1 )
8139	if second element of k is None ,	if k [ 1 ] is None :
6940	if STR0 is contained in self.attrs ,	if STR0 in self . attrs :
17310	return unbound .	return unbound
16542	from django.utils.deprecation import RemovedInNextVersionWarning into default name space .	from django . utils . deprecation import RemovedInNextVersionWarning
5320	if number is lesser than integer 1 ,	if number < 1 :
5100	ge the absolute path of the return value of the function path.expanduser with the argument target , substitute it for top_dir .	top_dir = os . path . abspath ( path . expanduser ( target ) )
8026	python_2_unicode_compatible decorator ,	@ python_2_unicode_compatible
5944	derive the class DefusedExpatParser from the _ExpatParser base class .	class DefusedExpatParser ( _ExpatParser ) :
1009	from django.utils.encoding import smart_text into default name space .	from django . utils . encoding import smart_text
15030	try ,	try :
17848	call the method re_camel_case.sub with 2 arguments : raw string STR0 and value , strip the result of whitespaces from both ends ,	return re_camel_case . sub ( STR0 , value ) . strip ( ) . lower ( )
4273	call the self.stdout.write method with string STR0 as argument , with all occurrences of STR1 replaced with app_name and model._meta.object_name , respectively .	self . stdout . write ( STR0 % ( app_name , model . _meta . object_name ) )
4270	call the method custom_sql_for_model with model , no_style ( ) and connection as arguments , substitute the result for custom_sql .	custom_sql = custom_sql_for_model ( model , no_style ( ) , connection )
262	call the method self._cull with db , cursor and now as arguments .	self . _cull ( db , cursor , now )
10210	define the method pop with 3 arguments : self , key and unpacked list args .	def pop ( self , key , * args ) :
15608	if KeyError exception is caught ,	except KeyError :
8616	call the function ugettext with an argument string STR0 , where STR1 is replaced with third element of data_check , STR2 is replaced with fourth element of date_check and STR3 is replaced with result of the function , six.text_type called with second element of date_check as an argument , return the result .	return ugettext ( STR0 ) % { STR1 : date_check [ 2 ] , STR2 : date_check [ 3 ] , STR3 : six . text_type ( date_check [ 1 ] ) , }
5360	substitute object_list for self.object_list .	self . object_list = object_list
412	define the method _delete with self and fname as arguments .	def _delete ( self , fname ) :
613	call the method self._cache.add with key , value , self.get_backend_timeout ( timeout ) as arguments .	return self . _cache . add ( key , value , self . get_backend_timeout ( timeout ) )
3999	bad_app_labels is an empty set .	bad_app_labels = set ( )
7660	if with_base_fields is true ,	if with_base_fields :
758	return an empty list .	return [ ]
8238	import module warnings .	import warnings
11608	decorator stringfilter ,	@ stringfilter
5385	return integer 0 .	return 0
18542	if t.token_type is not equal to TOKEN_COMMENT ,	if t . token_type != TOKEN_COMMENT :
7467	for every choice in value ,	for choice in value :
16337	from importlib import import_module .	from importlib import import_module
10492	HttpResponse.content.setter property ,	@ HttpResponse . content . setter
1870	try ,	try :
7035	call the method self.limit_choices_to , return the result ,	return self . limit_choices_to ( )
4959	if f.rel and f.rel.to are not contained in to_delete ,	if f . rel and f . rel . to not in to_delete :
7753	if top_errors is true ,	if top_errors :
9899	try ,	try :
14017	if digest is false ,	if not digest :
1934	call the function get_bytes_from_wsgi with environ , string STR0 and character STR1 as arguments , substitute the result for path_info .	path_info = get_bytes_from_wsgi ( environ , STR0 , STR1 )
12518	call the method token.split_contents , substitute the result without the first element for bits .	bits = token . split_contents ( ) [ 1 : ]
10493	define the method content with self and value .	def content ( self , value ) :
17048	do nothing .	pass
17566	if o is contained in opt_dict ,	if o in opt_dict :
9058	if path starts with string STR0 or string STR1 or with string STR2 ,	if path . startswith ( ( STR0 , STR1 , STR2 ) ) :
16546	from logging.config import dictConfig .	from logging . config import dictConfig
5848	for every relobj in iterator generated from the field.name attribute of the obj object .	for relobj in getattr ( obj , field . name ) . iterator ( ) :
12273	return an string STR0 .	return STR0
9235	call the method render from the base class of the class ClearableFileInput , called with 3 arguments : name , value and attrs , substitute the result for value under the STR0 key of the substitutions dictionary .	substitutions [ STR0 ] = super ( ClearableFileInput , self ) . render ( name , value , attrs )
5523	substitute stream_or_string for self.stream .	self . stream = stream_or_string
1959	__all__ is a list of strings , STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 , STR7 , STR8 , STR9 , STR10 , STR11 , STR12 , STR13 and STR14 .	__all__ = [ STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 , STR7 , STR8 , STR9 , STR10 , STR11 , STR12 , STR13 , STR14 , ]
9883	return end ans next .	return end , next
5605	if o is an instance of datetime.datetime object .	if isinstance ( o , datetime . datetime ) :
16651	increment stats dictionary value under the HITS key by integer 1 .	stats [ HITS ] += 1
10092	if self._read_started is true ,	if self . _read_started :
10592	derive the class TemplateEncodingError form the base class Exception .	class TemplateEncodingError ( Exception ) :
18185	convert language to lowercase and return it .	return language . lower ( )
4334	import module argparse .	import argparse
15235	return s .	return s
6458	call the method get_language , substitute the result for language_code .	language_code = get_language ( )
17949	call the function six.reraise with 3 arguments : exc_type , exc_value and third element of the result of the method sys.exc_info .	six . reraise ( exc_type , exc_value , sys . exc_info ( ) [ 2 ] )
10637	finally perform ,	finally :
1067	call the self.read method with argument chunk_size , substitute the result for data .	data = self . read ( chunk_size )
14035	define the function F with an argument i .	def F ( i ) :
3594	if os.path.sep is contained in fixture_name ,	if os . path . sep in fixture_name :
6972	STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 , STR7 , STR8 , STR9 , STR10 , STR11 , STR12 , STR13 , STR14 , STR15 , STR16 , STR17 , STR18 . derive the class Field from the base class object .	class Field ( object ) :
12276	call the method self.var2.resolve with 2 arguments : context and boolean True , substitute the result for val2 .	val2 = self . var2 . resolve ( context , True )
7931	define the method as_text with 3 arguments : self , attrs set to None and unpacked dictionary kwargs .	def as_text ( self , attrs = None , ** kwargs ) :
872	substitute registry.register for register .	register = registry . register
18290	define the method merge with 2 arguments self and other .	def merge ( self , other ) :
1673	if mw_instance has an attribute named STR0 .	if hasattr ( mw_instance , STR0 ) :
13527	call the method self._archive.namelist , substitute the result for namelist .	namelist = self . _archive . namelist ( )
13173	if self._is_rendered is false ,	if not self . _is_rendered :
8778	substitute parent_instance for self.parent_instance .	self . parent_instance = parent_instance
2978	call os.path.splitext function with po_path as argument , substitute the first element of the result for base_path .	base_path = os . path . splitext ( po_path ) [ 0 ]
4293	call the self.stderr.write method with string STR0 as argument , with all occurrences of STR1 replaced with app_name and model._meta.object_name , respectively .	self . stdout . write ( STR0 % ( app_name , model . _meta . object_name ) )
13571	if fd is greater or equal to integer 0 .	if fd >= 0 :
13268	self.second is None .	self . second = None
9818	substitute boundary for self.boundary .	self . _boundary = boundary
17632	call the method text.splitlines with an argument boolean True , for every line in the result ,	for line in text . splitlines ( True ) :
5550	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
13389	call the method path.encode with an argument fs_encoding , return the result .	return path . encode ( fs_encoding )
9420	substitute idx-th element of self.choices for choice .	choice = self . choices [ idx ]
12097	define the method render with 2 arguments : self and context .	def render ( self , context ) :
16321	import module warnings .	import warnings
8701	call the method __init__ from the base class of the class BaseInlineFormSet , with 5 arguments : data , files , prefix set to prefix , queryset set to qs and unpacked dictionary kwargs .	super ( BaseInlineFormSet , self ) . __init__ ( data , files , prefix = prefix , queryset = qs , ** kwargs )
3335	yield string STR0 as the result .	yield STR0
5898	if field.rel.to._default_manager has an atttribute STR0 ,	if hasattr ( field . rel . to . _default_manager , STR0 ) :
13176	if attr is contained in obj_dict ,	if attr in obj_dict :
18096	call the function lazy_number with 5 arguments : ngettext , str , singular set to singular , plural set to plural , and number set to number , return the result .	return lazy_number ( ngettext , str , singular = singular , plural = plural , number = number )
5382	call the method self.paginator.validate_number with self.number decremented by 1 as argument , return the result .	return self . paginator . validate_number ( self . number - 1 )
17741	return out .	return out
5364	return the string STR0 , with occurrences of STR1 replaced by self.number and self.paginator.num_pages , respectively .	return STR0 % ( self . number , self . paginator . num_pages )
9317	option_value is an empty string .	option_value = STR
39	define the __init__ method with argument self .	def __init__ ( self ) :
13238	id is None .	id = None
13690	perform binary or for operands : fourth element of_attr_list and termios.ECHO , store the result in fourth element of attr_list .	attr_list [ 3 ] |= termios . ECHO
7842	define the method clean with an argument self .	def clean ( self ) :
8370	return new_class .	return new_class
14562	define the method t with an argument self .	def t ( self ) :
3342	yield string STR0 as the result .	yield STR0
175	if value is None ,	if value is None :
10749	if parse_until is true ,	if parse_until :
6165	call the method base64.urlsafe_b64decode with sum of s and pad as argument .	return base64 . urlsafe_b64decode ( s + pad )
17559	format string STR0 with RESET , return the result .	return STR0 % RESET
17424	if want_unicode is true ,	if want_unicode :
15154	remove config dictionary element under STR0 key , use it as an argument for the call to the method self.resolve , substitute the result for klass .	klass = self . resolve ( config . pop ( STR0 ) )
3096	call the method parser.add_argument with 4 arguments : string STR0 , metavar set to string STR1 , nargs set to STR2 and help is a string STR3 .	parser . add_argument ( STR0 , metavar = STR1 , nargs = STR2 , help = STR3 )
15422	for every item in self.items ,	for item in self . items :
2325	if headers exists substitute it for self.extra_headers , if not extra_headers is an empty dictionary .	self . extra_headers = headers or { }
17311	substitute Iterator for create_bound_method .	create_bound_method = types . MethodType
2187	import module random .	import random
6540	break from this loop execution .	break
2519	join usage elements in a string separated by newline characters , return it .	return STR0 . join ( usage )
13865	if call to the function response.has_header with string STR0 as an argument returns boolean False ,	if not response . has_header ( STR0 ) :
1919	try ,	try :
16681	substitute result for value under the RESULT key of the oldroot dictionary .	oldroot [ RESULT ] = result
1046	return size .	return size
12601	call the method token.split_contents , substitute the result for bits .	bits = token . split_contents ( )
10097	call the function six.reraise with 3 arguments : UnreadablePostError , UnreadablePostError instantiated with unpacked list e.args , third element of the result of the function sys.exc_info .	six . reraise ( UnreadablePostError , UnreadablePostError ( * e . args ) , sys . exc_info ( ) [ 2 ] )
15243	if the boolean return vale of the call to the function is_protected_type ( s ) and string_onlys are boolean True ,	if strings_only and is_protected_type ( s ) :
13622	define the function reset_translation .	def reset_translations ( ) :
10397	if secure is true ,	if secure :
5404	if serializers is None and _serializers is false ,	if serializers is None and not _serializers :
14691	call the method _illegal_formatting.search with an argument fmt , substitute the result for illegal_formatting .	illegal_formatting = _illegal_formatting . search ( fmt )
9850	if bytes is false ,	if not bytes :
12742	from django.template.base import Origin , Template , Context and TemplateDoesNotExist into default name space .	from django . template . base import Origin , Template , Context , TemplateDoesNotExist
11355	append taglib_module to tried_modules .	tried_modules . append ( taglib_module )
4399	if self.addr is true ,	if self . addr :
260	call the exp.replace with microsecond set to integer 0 , substitute the result for exp .	exp = exp . replace ( microsecond = 0 )
11892	return list_ and boolean False .	return list_ , False
11936	return an empty string .	return STR
10748	call the method self.exit_command .	self . exit_command ( )
1999	define the method send_messages with arguments self and email_messages .	def send_messages ( self , email_messages ) :
16938	do nothing .	pass
15629	if use_l10n is true , or use_l10n is None and settings.USE_L10N is true ,	if use_l10n or ( use_l10n is None and settings . USE_L10N ) :
3545	otherwise if self.fixture_object_count equals self.loaded_object_count ,	elif self . fixture_object_count == self . loaded_object_count :
3536	if sequence_sql is true ,	if sequence_sql :
3449	substitute col_name for value under the STR0 key of the field_params dictionary .	field_params [ STR0 ] = col_name
2670	if has_old_option is true ,	if has_old_option :
6468	for every pattern in self.url_patterns ,	for pattern in self . url_patterns :
179	sum version and delta together , return the result .	return version + delta
2149	call the method self.connection.close .	self . connection . close ( )
13945	__all__ is an list with an element STR0 .	__all__ = [ STR0 ]
15029	if not ,	else :
222	call the method cursor.execute with string STR0 as argument , substitute the STR1 with table and list containing key , respectively .	cursor . execute ( STR0 % table , [ key ] )
18693	call the function warnings.warn with 3 arguments : string STR0 , RemovedInDjango19Warning and stacklevel set to 2 .	warnings . warn ( STR0 , RemovedInDjango19Warning , stacklevel = 2 )
10883	call the method filter_re.finditer with an argument token , substitute the result for matches .	matches = filter_re . finditer ( token )
1020	substitute name for self.name .	self . name = name
16212	define the function urlquote_plus with 2 arguments : url and safe set to an empty string .	def urlquote_plus ( url , safe = STR ) :
2550	append tuple containing two entries : k and integer 1 to options , for every k in FASTCGI_OPTIONS .	options += [ ( k , 1 ) for k in FASTCGI_OPTIONS ]
15922	get opname attribute from int object , substitute its field __doc__ for opfunc.__doc__ .	opfunc . __doc__ = getattr ( int , opname ) . __doc__
11044	if Exception , renamed to e , exception is caught ,	except Exception as e :
16293	try ,	try :
6670	call the re.compile function with self.regex and self.flags as arguments , substitute the result for self.regex .	self . regex = re . compile ( self . regex , self . flags )
6266	join func.__class__.__module__ and func.__class__.__name__ into a string , separated by character STR0 , substitute it for self._func_path .	self . _func_path = STR0 . join ( [ func . __class__ . __module__ , func . __class__ . __name__ ] )
4210	if action equals to string STR0 ,	if action == STR0 :
1774	raise an exception .	raise
14544	return self.data.month .	return self . data . month
423	with call to the io.open function with fname and string STR0 as arguments , renamed to f ,	with io . open ( fname , STR0 ) as f :
6150	import module time .	import time
17420	for every arg in args ,	for arg in args :
11245	call the method self.get_resolved_arguments with an argument context , substitute the result for resolved_args and resolved_kwargs .	resolved_args , resolved_kwargs = self . get_resolved_arguments ( context )
628	call the method self._cache.get_multi with argument new_keys , substitute the result for ret .	ret = self . _cache . get_multi ( new_keys )
7267	define the method __init__ with 3 arguments : self , unpacked list args and unpacked dictionary kwargs .	def __init__ ( self , * args , ** kwargs ) :
3614	return fixture_files .	return fixture_files
4254	call the connection.creation.sql_for_pending_references method with refto , no_style ( ) and pending_references as arguments , use the result as the argument for the call to the sql.extend method .	sql . extend ( connection . creation . sql_for_pending_references ( refto , no_style ( ) , pending_references ) )
8067	otherwise if total_forms is grater than self.max_num is grater or equal to integer 0 ,	elif total_forms > self . max_num >= 0 :
17934	tt is a tuple with 9 elements : dt.year , dt.month , dt.day , dt.hour , dt.minute , dt.second , result of the method dt.weekday , ingeter 0 and integer 0 .	tt = ( dt . year , dt . month , dt . day , dt . hour , dt . minute , dt . second , dt . weekday ( ) , 0 , 0 )
1758	otherwise if any other exception is caught ,	except :
16446	split first and second element of hextet into parts by STR0 , sum their lengths , substitute the result for sep .	sep = len ( hextet [ 0 ] . split ( STR0 ) ) + len ( hextet [ 1 ] . split ( STR1 ) )
8611	if length of unique_check equals integer 1 ,	if len ( unique_check ) == 1 :
7667	call the method six.iteritems with an argument base.declared_fields , convert it to a list and append fields to it , substitute the result for fields .	fields = list ( six . iteritems ( base . declared_fields ) ) + fields
16756	define the function module_has_submodule with 2 arguments : package and module_name .	def module_has_submodule ( package , module_name ) :
1953	return value if six.PY2 is true , if not return value.encode ( ISO_8859_1 ) .decode ( UTF_8 ) .	return value if six . PY2 else value . encode ( ISO_8859_1 ) . decode ( UTF_8 )
1747	if exception PermissionDenied is caught ,	except PermissionDenied :
4715	while answer is false or answer is not contained in string STR0 , perform the following ,	while not answer or answer not in STR0 :
15756	return __wrapper__ .	return __wrapper__
3919	make basedir directory ,	os . makedirs ( basedir )
1848	derive the class WSGIRequest from base class http.HttpRequest .	class WSGIRequest ( http . HttpRequest ) :
3258	from django.core.management.base import BaseCommand and CommandError into default name space .	from django . core . management . base import BaseCommand , CommandError
7015	for every v in self.validators ,	for v in self . validators :
10630	yield subnode .	yield subnode
10289	from django.core import signals into default name space .	from django . core import signals
14241	call the method setdefault from the base class of the class SortedDict , with 2 arguments key and default , return the result .	return super ( SortedDict , self ) . setdefault ( key , default )
13605	if only_new is True ,	if only_new :
4341	call the method parser.add_argument with 3 arguments : string STR0 , nargs set to argparse.REMAINDER and help as a string STR1	parser . add_argument ( STR0 , nargs = argparse . REMAINDER , help = STR1 )
10714	call the method self.create_nodelist , substitute the result for nodelist .	nodelist = self . create_nodelist ( )
12985	while remaining_bits is true ,	while remaining_bits :
14111	do nothing .	pass
8464	call the method self._update_errors with an argument e .	self . _update_errors ( e )
6549	get the attribute STR0 from the getattr , if it exists substitute it for m , if not , m is None .	n = getattr ( lookup_view , STR0 , None )
18207	from django.utils import six and lru_cache into default name space .	from django . utils import six , lru_cache
16801	break from the loop execution ,	break
14141	substitute _iteritems for items .	items = _iteritems
15400	if item_date is true ,	if item_date :
9275	derive the class DateTimeInput from the DateTimeBaseInput base class .	class DateTimeInput ( DateTimeBaseInput ) :
11727	define the function truncatewords_html with 2 arguments value and arg .	def truncatewords_html ( value , arg ) :
6635	call the function resolve with arguments path and urlconf .	resolve ( path , urlconf )
13695	call the method termios.tcsetattr with fd , termios.TCSANOW and attr_list , as arguments .	termios . tcsetattr ( fd , termios . TCSANOW , attr_list )
5448	define the function _load_serializers .	def _load_serializers ( ) :
12376	substitute asvar for self.asvar .	self . asvar = asvar
3631	substitute the last element of parts for cmp_fmt .	cmp_fmt = parts [ - 1 ]
541	if KeyError exception is caught ,	except KeyError :
63	define the method __contains__ with self and key as arguments .	def __contains__ ( self , key ) :
6686	substitute schemes for self.schemes .	self . schemes = schemes
3741	if not ,	else :
11298	otherwise if file_name is not an instance of six.string_types and call to the function is_iterable with an argument file_name ,	elif not isinstance ( file_name , six . string_types ) and is_iterable ( file_name ) :
8563	substitute save_m2m for self.save_m2m .	self . save_m2m = save_m2m
4721	convert first element of answer to lowercase and substitute it for answer .	answer = answer [ 0 ] . lower ( )
18235	convert fist p elements of language to lowercase , append STR0 to it , covert to uppercase language elements from ( p+1 ) -th index to the end , append it to the previous result , return it .	return language [ : p ] . lower ( ) + STR0 + language [ p + 1 : ] . upper ( )
9528	call the function to_current_timezone with an argument , substitute the result for value .	value = to_current_timezone ( value )
15227	if field PY2 of the module six is boolean True ,	if six . PY2 :
16092	call the function allow_lazy with 2 arguments : urlize , six.text_type , substitute the result for urlize .	urlize = allow_lazy ( urlize , six . text_type )
7072	default_error_messages is an dictionary with an initial entry : result of the function _ called with an argument string , STR0 for STR1 .	default_error_messages = { STR0 : _ ( STR1 ) , }
6740	do nothing .	pass
6227	call the result.rsplit method with arguments self.sep and integer 1 , substitute the result for value and timestamp , respectively .	value , timestamp = result . rsplit ( self . sep , 1 )
17432	if end is None	if end is None :
11756	decorator function register.filter with an argument is_safe set to boolean True .	@ register . filter ( is_safe = True )
5645	define the method get_dump_object with arguments self and obj .	def get_dump_object ( self , obj ) :
11400	define the method push with 3 arguments : self , unpacked list args and unpacked dictionary kwargs .	def push ( self , * args , ** kwargs ) :
14697	sum year and off , substitute the result for year .	year = year + off
6087	if ImportError , renamed to e , exception is caught ,	except ImportError as e :
11668	define the function linenumbers with 2 arguments value and autoescape set to None .	def linenumbers ( value , autoescape = None ) :
4206	call the executor.migrate method with , targets , plan and fake set to the value under the STR0 key of options dictionary , if the STR1 key doesnt exists set fake to boolean False , as arguments .	executor . migrate ( targets , plan , fake = options . get ( STR0 , False ) )
17344	define the function int2byte with an argument i .	def int2byte ( i ) :
15587	if ImportError exception is caught ,	except ImportError :
12046	call the function avoid_wrapping with an argument value , return the result .	return avoid_wrapping ( value )
13459	call the method self._archive.extract with an argument to_path .	self . _archive . extract ( to_path )
11419	return boolean False .	return False
16920	otherwise if ch is contained in string STR0 ,	elif ch in STR0 :
5357	substitute Paginator for QuerySetPaginator .	QuerySetPaginator = Paginator
10425	define the method tell with an argument self .	def tell ( self ) :
15661	return value .	return value
5592	call the stream_or_string.read function , substitute the result for stream_or_string .	stream_or_string = stream_or_string . read ( )
5807	call the method self.indent with argument integer 1 .	self . indent ( 1 )
7759	if last_row doesnt ends with row_ender ,	if not last_row . endswith ( row_ender ) :
743	from django.db import models into default name space .	from django . db import models
13893	return cache_key .	return cache_key
4908	define the function check_for_migrations with 2 arguments : app_config and connection .	def check_for_migrations ( app_config , connection ) :
6200	define the method __init__ with 4 arguments : self , key set to None , sep set to STR0 and salt set to None .	def __init__ ( self , key = None , sep = STR0 , salt = None ) :
3090	from django.core import serializers into default name space .	from django . core import serializers
10290	from django.core import signing into default name space .	from django . core import signing
2535	return nothing .	return
8322	if f is an instance of ModelFiled , for every f in opts.virtual_fields , append f to a list , substitute the resulting list for sortable_virtual_fields .	sortable_virtual_fields = [ f for f in opts . virtual_fields if isinstance ( f , ModelField ) ]
1081	increment line by buffer_ .	line = buffer_ + line
11195	define the method tag with 3 arguments : self , name set to None and compile_function set to None .	def tag ( self , name = None , compile_function = None ) :
7634	call the self.to_python method with an argument value , strip the result of the whitespaces from the sides , substitute the result for value .	value = self . to_python ( value ) . strip ( )
3769	call the method parser.add_argument with 6 arguments : string STR0 , string STR1 , action as a string STR2 , dest as a string STR3 , default as boolean False and help as a string STR4 .	parser . add_argument ( STR0 , STR1 , action = STR2 , dest = STR3 , default = False , help = STR4 )
16457	define the function _is_shorthand_ip with an argument ip_str .	def _is_shorthand_ip ( ip_str ) :
10863	increment i by integer 1 ,	i += 1
8541	do nothing .	pass
1606	if self.activated is boolean True ,	if self . activated :
9255	define the method __init__ with 2 arguments : self and attrs set to None .	def __init__ ( self , attrs = None ) :
11839	try ,	try :
224	if row is None ,	if row is None :
4630	return nothing .	return
5011	statement is an empty list .	statement = [ ]
8169	skip this loop iteration ,	continue
15003	call the function c with an argument unpacked dictionary kwargs , substitute the result for result .	result = c ( ** kwargs )
15196	get value under the STR0 key of the config dictioanry , if it exists substitute it for filters , if not filters is None .	filters = config . get ( STR0 , None )
11736	convert value to uppercase , return the result .	return value . upper ( )
16147	find the ending position of the regular expression match of the object match , substitute the result for k .	k = m . end ( )
8077	define the method forms with an argument self .	def forms ( self ) :
7305	derive the class ImageField from the base class FileField class .	class ImageField ( FileField ) :
9296	values is an dictionary with 2 arguments : boolean False for STR0 and boolean True for STR1 .	values = { STR0 : True , STR1 : False }
12827	if dictionary is false ,	if not dictionary :
3735	call the method msgs.decode with an argument string STR0 , substitute the result for msgs .	msgs = msgs . decode ( STR0 )
16188	import module datetime .	import datetime
3841	try ,	try :
12265	return context.render_context .	return context . render_context
3242	otherwise add boolean False , for every candidate in the result perform following , if candidate is false ,	if not candidate :
5691	for every field_name and field_value in return value of the function six.iteritems called with value under the STR0 key of dictionary d ,	for ( field_name , field_value ) in six . iteritems ( d [ STR0 ] ) :
17891	derive the class UTC from the tzinfo base class .	class UTC ( tzinfo ) :
18021	if value.tzinfo is None and call to the method value.tzinfo.utcoffset called with an argument value evaluates to None , return boolean True , otherwise return boolean False .	return value . tzinfo is None or value . tzinfo . utcoffset ( value ) is None
8381	opts.fields is None .	opts . fields = None
969	substitute code for self.code .	self . code = code
13083	return result	return result
4458	help is a string STR0 .	help = STR0
1982	return nothing .	return
11781	decorator stringfilter ,	@ stringfilter
11812	decorator function register.filter with an argument is_safe set to boolean True .	@ register . filter ( is_safe = True )
303	if exists return next entry from the database that cursor points at .	return cursor . fetchone ( ) is not None
13970	using_sysrandom is boolean False .	using_sysrandom = False
6378	derive the class RegexURLResolver with LocaleRegexProvider as base class .	class RegexURLResolver ( LocaleRegexProvider ) :
1912	if self._request_middleware is None ,	if self . _request_middleware is None :
12929	call the method compiled_parent._render with an argument context , return the result .	return compiled_parent . _render ( context )
7522	if IndexError exception is caught ,	except IndexError :
1312	return name .	return name
15444	_version is a string STR0 .	_version = STR0
3165	if ValueError exception is caught ,	except ValueError :
14369	if TypeError exception is caught ,	except TypeError :
12177	define the method render with 2 arguments : self and context .	def render ( self , context ) :
3585	call the method self.compression_formats.keys , convert it to list , substitute it for cmp_fmts if cmp_fmt is None , otherwise cmp_fmts is a list containing cmp_fmt .	cmp_fmts = list ( self . compression_formats . keys ( ) ) if cmp_fmt is None else [ cmp_fmt ]
8643	if function form.has_changed evaluates to false ,	if not form . has_changed ( ) :
12532	for every var in loopvars ,	for var in loopvars :
5839	call the method self.xml.startElement with argument string STR0 and an empty dictionary .	self . xml . startElement ( STR0 , { } )
1940	if script_url is false ,	if not script_url :
767	derive class CheckMessage from object base class .	class CheckMessage ( object ) :
18203	from django.utils.deprecation import RemovedInDjango19Warning into default name space .	from django . utils . deprecation import RemovedInDjango19Warning
10334	if value is an instance of str type ,	if isinstance ( value , str ) :
8932	from collections import UserList into default namespace .	from collections import UserList
8989	return an empty string .	return STR
10378	substitute value for self.cookies dictionary value under the key key .	self . cookies [ key ] = value
10490	call the __init__ method from the base class of the HttpResponseNotModified class , called with arguments : unpacked list args , and unpacked dictionary kwargs .	super ( HttpResponseNotModified , self ) . __init__ ( * args , ** kwargs )
14801	do nothing .	pass
4928	call the method connection.creation.sql_for_pending_references with 3 arguments : refo , style and pending_references , use the result as an argument for the call to the method final_output.extend .	final_output . extend ( connection . creation . sql_for_pending_references ( refto , style , pending_references ) )
15574	if format_module_path is an instance of six.string_types ,	if isinstance ( format_module_path , six . string_types ) :
2429	if self.alternatives is true ,	if self . alternatives :
11300	if not ,	else :
1514	define the method temporary_file_path with argument self .	def temporary_file_path ( self ) :
13317	if KeyError and TypeError exceptions are caught ,	except ( KeyError , TypeError ) :
1819	decrement self.remaining by length of result .	self . remaining -= len ( result )
1083	if last element of line is newline or carriage return character ,	if line [ - 1 : ] in ( STR0 , STR1 ) :
17709	if m is false ,	if not m :
8458	and field _state.adding of value under the name key of self.cleaned_data dictionary is true , append name to construct_instance_exclude list .	construct_instance_exclude . append ( name )
682	import pylibmc .	import pylibmc
5472	remove the STR0 key from the options dictionary and substitute it for self.selected_fields , if the key doesnt exists substitute None for self.selected_fields .	self . selected_fields = options . pop ( STR0 , None )
11788	decorator function register.filter with 3 arguments string STR0 , is_safe set to boolean True and needs_autoescape set to True .	@ register . filter ( STR0 , is_safe = True , needs_autoescape = True )
17440	define the function with_metaclass with 2 arguments meta and unpacked list bases .	def with_metaclass ( meta , * bases ) :
9700	call the method handler.new_file with 6 arguments : field_name , file_name , content_type , content_length , charset and content_type_extra .	handler . new_file ( field_name , file_name , content_type , content_length , charset , content_type_extra )
18418	use global variable _supported .	global _supported
9620	define the method __init__ wiht 5 arguments : self , META , input_data , upload_handlers and encoding set to None .	def __init__ ( self , META , input_data , upload_handlers , encoding = None ) :
7289	raise an ValidationError with 2 arguments : value under the STR0 key of the self.error_messages dictionary and code set to STR1 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 )
11900	if old_style_list is true ,	if old_style_list :
6831	__all__ is an list containing string STR0 .	__all__ = [ STR0 ]
2056	if self.file_path file path exists and it is not a directory ,	if os . path . exists ( self . file_path ) and not os . path . isdir ( self . file_path ) :
1250	define the function file_move_safe with 4 arguments : old_file_name , new_file_name , chunk_size set to multiple of integers 1024 and 64 ,	def file_move_safe ( old_file_name , new_file_name , chunk_size = 1024 * 64 , allow_overwrite = False ) :
10549	import module warnings .	import warnings
15508	if value under the STR0 key of the self.feed dictionary is not None ,	if self . feed [ STR0 ] is not None :
17152	substitute name for self.name .	self . name = name
18014	if settings.USE_TZ is true ,	if settings . USE_TZ :
12196	reverse elements order of values .	values = reversed ( values )
15367	self.items is an empty list .	self . feed . update ( kwargs )
8212	return self.empty_form.media .	return self . empty_form . media
8074	if self.initial is true , substitute the length of self.initial for initial_forms , if not , initial_forms is integer 0 .	initial_forms = len ( self . initial ) if self . initial else 0
6364	if match is true ,	if match :
4897	call the handle function with dictionary pair of elements options from the base class of the class Command .	super ( Command , self ) . handle ( ** options )
9578	if http_cookies.CookieError exception is raised .	except http_cookies . CookieError :
1055	size is a property object with _get_size as getter method and _set_size as setter method .	size = property ( _get_size , _set_size )
4724	operations is an empty list .	operations = [ ]
9619	derive the class MultiPartParser from the object base class .	class MultiPartParser ( object ) :
1551	define the method __init__ with arguments self and connection_reset defaulting to boolean False .	def __init__ ( self , connection_reset = False ) :
12977	return an instance of ExtendsNode with 2 arguments nodelist and parent_name .	return ExtendsNode ( nodelist , parent_name )
2552	try ,	try :
13441	if not ,	else :
5575	write STR0 to the self.stream file stream .	self . stream . write ( STR0 )
13400	substitute fist and second element of exc_info for exctype and value , respectively .	exctype , value = exc_info [ : 2 ]
6862	day_field is a string STR0 .	day_field = STR0
17186	define the method __dir__ with an argument self .	def __dir__ ( self ) :
669	define the method clear with argument self .	def clear ( self ) :
9805	try ,	try :
480	call the _expire_info.setdefault method with name and empty dictionary as arguments , substitute the result for self_expire_info .	self . _expire_info = _expire_info . setdefault ( name , { } )
18585	intrans is boolean True .	intrans = True
17184	call the method __init__ with an argument name form the base class of the class _LazyModule .	super ( _LazyModule , self ) . __init__ ( name )
15687	return _curried .	return _curried
3920	convert self.domain into a string and append string STR0 to it , join basedir and result in file path , substitute it for pofile .	pofile = os . path . join ( basedir , STR0 % str ( self . domain ) )
2776	call the method checks.run_checks with 2 arguments : app_configs set to app_configs , tags set t tags , substitute the result for all_issues .	all_issues = checks . run_checks ( app_configs = app_configs , tags = tags )
14962	call the method m.groups , substitute the first element of the result for idx .	idx = m . groups ( ) [ 0 ]
10045	call the function urljoin with arguments current_uri and location , substitute the result for location .	location = urljoin ( current_uri , location )
15831	delete name attribute from self._wrapped object .	delattr ( self . _wrapped , name )
18758	import module datetime .	import datetime
15967	call the function normalize_newlines with an argument value , substitute the result for value .	value = normalize_newlines ( value )
11225	otherwise if name is not None and filter_func is not None ,	elif name is not None and filter_func is not None :
11914	title is an empty string .	title = STR
8891	otherwise if self.required is false and value is false ,	elif not self . required and not value :
4644	call the add_argument method on the parser object , with string STR0 , default set to DEFAULT_DB_ALIAS and help set to string STR1 as arguments .	parser . add_argument ( STR1 , default = DEFAULT_DB_ALIAS , help = STR2 )
3651	call the method zipfile.ZipFile.read with 2 arguments : self and first element of the result of the self.namelist method .	return zipfile . ZipFile . read ( self , self . namelist ( ) [ 0 ] )
15827	if name equals string STR0 ,	if name == STR0 :
14516	define the method b with an argument self .	def b ( self ) :
11144	if not ,	else :
15484	call the method handler.startElement with 2 arguments : string STR0 and result of the method self.root_attributes .	handler . startElement ( STR0 , self . root_attributes ( ) )
4615	call the add_argument method on parser object , use string STR1 , default set to DEFAULT_DB_ALIAS and help set to string , STR2 as the arguments .	parser . add_argument ( STR1 , default = DEFAULT_DB_ALIAS , help = STR2 )
442	raise an EnvironmentError exception with string STR0 as argument , substitute STR1 with self._dir converted to a string .	raise EnvironmentError ( STR0 % self . _dir )
4397	call the method self.port.isdigit , if it evaluates to false ,	if not self . port . isdigit ( ) :
2068	call the as_bytes method on the return value of the message.message method append to it STR0 character , use it as the argument for the call to the self.stream.write method .	self . stream . write ( message . message ( ) . as_bytes ( ) + STR0 )
12880	substitute self for value under the STR0 key of context dictionary .	context [ STR0 ] = self
1672	append mw_instance.process_request at the end of request_middleware .	request_middleware . append ( mw_instance . process_request )
3691	define the method process with 3 arguments : self , command and domain .	def process ( self , command , domain ) :
16952	define the function walk_to_end with 2 arguments ch and input_iter .	def walk_to_end ( ch , input_iter ) :
17159	delete self.name attribute from the obj.__class__ object .	delattr ( obj . __class__ , self . name )
6649	decorator deconstructible ,	@ deconstructible
2869	substitute return value of function no_style for style .	style = no_style ( )
7511	if value is false or value is not an instance of list or tuple types ,	if not value or isinstance ( value , ( list , tuple ) ) :
14411	key is a list with elements of list key from length of self.prefixes index to the end ,	key = key [ len ( self . prefix ) : ]
3646	define the method __init__ with 3 arguments : self , unpacked list args and unpacked dictionary kwargs .	def __init__ ( self , * args , ** kwargs ) :
14208	define the method popitem with an argument self .	def popitem ( self ) :
11447	call the the method __init__ from the base class of the class Context .	super ( Context , self ) . __init__ ( dict_ )
2468	decorator lru_cache.lru_cache with an argument maxsize set to None .	@ lru_cache . lru_cache ( maxsize = None )
8928	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
7702	self._changed_data is None .	self . _changed_data = None
6479	sub_match_dict is a dictionary created from self.default_kwargs dictionary using mapping function match.groupdict .	sub_match_dict = dict ( match . groupdict ( ) , ** self . default_kwargs )
15889	derive the class lazy_property from the property base class .	class lazy_property ( property ) :
425	return boolean False .	return False
7831	call the method self.add_error with 2 arguments name and e .	self . add_error ( name , e )
6515	call the method self._populate ,	self . _populate ( )
5157	if self.verbosity is greater or equal to integer 2 ,	if self . verbosity >= 2 :
4569	if app_config.models_module is None ,	if app_config . models_module is None :
4149	raise CommandError exception , with STR0 , with STR1 substituted for name_str , as argument .	raise CommandError ( STR0 % name_str )
6776	try ,	try :
9683	otherwise if item_type equals FILE ,	elif item_type == FILE :
9702	break the loop execution .	break
5430	convert _serializers into a list , return it .	return list ( _serializers )
7357	call the method to_python with an argument data from the base class of the class BooleanField , return the result .	return super ( BooleanField , self ) . to_python ( value )
14577	if jan1_weekday equals integer 5 , or if jan1_weekday equals integer 6 and call to the function calendar.isleap ,	if jan1_weekday == 5 or ( jan1_weekday == 6 and calendar . isleap ( self . data . year - 1 ) ) :
4148	for every app and names in key , value tuple pairs of conflicts dictionary join names into a string separated by commas , in STR0 substitute STR1 with names string and app , respective , join all the previous pairs into a string separated by STR2 , substitute it for name_str .	name_str = STR0 . join ( STR1 % ( STR2 . join ( names ) , app ) for app , names in conflicts . items ( ) )
3427	replace all the occurrences of STR0 with STR1 in new_name .	new_name = new_name . replace ( STR0 , STR1 )
17436	call the function write with an argument sep .	write ( sep )
5350	get greater value between integer 1 and result of subtraction of self.orphans from self.count , substitute it for hits .	hits = max ( 1 , self . count - self . orphans )
16365	if ipv4_unpacked is true ,	if ipv4_unpacked :
1984	if html_message is true ,	if html_message :
11904	indent contain tabs number of tab character .	indent = STR0 * tabs
17884	import pytz .	import pytz
3065	from django.core.management.base import BaseCommand into default name space .	from django . core . management . base import BaseCommand
11426	return otherwise .	return otherwise
5456	substitute serializers for _serializers .	_serializers = serializers
2939	call the method parser.add_argument with string STR0 , string STR1 , dest set to string STR2 , action set to string STR3 , default as an empty list and help as an string STR4 .	parser . add_argument ( STR0 , STR1 , dest = STR2 , action = STR3 , default = [ ] , help = STR4 )
9422	define the method __str__ with an argument self .	def __str__ ( self ) :
2987	if not ,	else :
7340	first element of url_fields is string STR0 .	url_fields [ 0 ] = STR0
12350	derive the class LoadNode from Node base class .	class LoadNode ( Node ) :
16271	raise an ValueError exception with an argument string STR0 .	raise ValueError ( STR0 )
16393	return ip_str .	return ip_str
9530	return list containing 2 elements : None and None .	return [ None , None ]
4706	if KeyError exception is caught ,	except KeyError :
10306	self._headers is an empty dictionary .	self . _headers = { }
1625	define lambda function that returns self.file.isatty field , use it as an argument for property function , put the result in isatty .	isatty = property ( lambda self : self . file . isatty )
14900	define the method pop with 2 arguments : self and idx set to negative integer 1 .	def pop ( self , idx = - 1 ) :
13499	if leading is true ,	if leading :
12771	define the function make_origin with 4 arguments : display_name , loader , name and dirs .	def make_origin ( display_name , loader , name , dirs ) :
15573	if format_module_path is true ,	if format_module_path :
5303	do nothing .	pass
6075	call the method FASTCGI_OPTIONS.copy , substitute the result for options .	options = FASTCGI_OPTIONS . copy ( )
6222	call the force_str function with an argument value , substitute the result for value .	value = force_str ( value )
13668	if filename ends with string STR0 return I18N_MODIFIED , otherwise return FILE_MODIFIED .	return I18N_MODIFIED if filename . endswith ( STR0 ) else FILE_MODIFIED
16564	try ,	try :
3872	write errors to self.stdout .	self . stdout . write ( errors )
1714	for every middleware_method in self._view_middleware ,	for middleware_method in self . _view_middleware :
13996	perform bitwise exclusive OR on 2 operands x and y , perform bitwise OR with 2 operands : previous result and result , substitute the result for result .	result |= x ^ y
15678	from functools import wraps into default name space .	from functools import wraps
10470	if value has an attribute STR0 ,	if hasattr ( value , STR0 ) :
10182	call the method __setitem__ from the base class of the QueryDict class , with arguments key and value .	super ( QueryDict , self ) . __setitem__ ( key , value )
17055	if not ,	else :
6920	define the method id_for_label with arguments self , data , files and name .	def value_from_datadict ( self , data , files , name ) :
13223	content.setter decorator ,	@ content . setter
14058	close the process with an argument 1 .	sys . exit ( 1 )
14176	if data is true , substitute it for data , otherwise data is an empty list .	data = data or [ ]
3633	if not ,	else :
12621	raise an TemplateSyntaxError exception with an argument string STR0 , where STR1 is replaced with first element of bits .	raise TemplateSyntaxError ( STR0 % bits [ 0 ] )
16112	call the initialization method _html_parser.HTMLParser.__init__ ( self ) for the base class .	_html_parser . HTMLParser . __init__ ( self )
18433	do nothing .	pass
10436	if not ,	else :
12478	if length of args is greater than 4 .	if len ( args ) > 4 :
3270	substitute value under the STR0 key of the options dictionary for database .	database = options . get ( STR0 )
4943	call the method connection.cursor , substitute the result for cursor .	cursor = connection . cursor ( )
10589	do nothing .	pass
15546	call the method handler.addQuickElement with 2 arguments : string STR0 and value under the STR1 key of the item dictionary .	handler . addQuickElement ( STR0 , item [ STR1 ] )
3996	get the value under the STR0 key of the options dictionary , if the key exists substitute it for self.merge , if not , self.merge is boolean False .	self . merge = options . get ( STR0 , False )
1348	substitute result of the self.path function with argument name for full_path .	full_path = self . path ( name )
2053	if self.file_path is not an instance of six.string_types ,	if not isinstance ( self . file_path , six . string_types ) :
4091	for every operation in migration.merged_operations ,	for operation in migration . merged_operations :
5294	for every ext in pathext ,	for ext in pathext :
14092	do nothing .	pass
14126	seen is an empty set .	seen = set ( )
15646	return value .	return value
13638	call the method pyinotify.Notifier with wm and EventHandler ( ) as arguments , assign the result to notifier .	notifier = pyinotify . Notifier ( wm , EventHandler ( ) )
9274	format_key is a string STR0 .	format_key = STR0
10479	raise an DisallowedRedirect exception with an argument string STR0 , where STR1 is replaced with parsed.scheme .	raise DisallowedRedirect ( STR0 % parsed . scheme )
9256	default_attrs is an dictionary with 2 initial entries : string STR0 for STR1 and string STR2 for STR3 .	default_attrs = { STR0 : STR1 , STR2 : STR3 }
2706	call the method parser.add_argument with 2 arguments : string STR0 and nargs set to STR1 .	parser . add_argument ( STR0 , nargs = STR1 )
1420	if ValueError exception is caught ,	except ValueError :
17398	if fp is an instance of file and data is an instance of unicode and fp.encoding is not None ,	if ( isinstance ( fp , file ) and isinstance ( data , unicode ) and fp . encoding is not None ) :
18296	define the function translation with an argument language .	def translation ( language ) :
16608	__slots__ is a string STR0 .	__slots__ = STR0
10221	call the method bytes_to_text with 2 arguments : key and self.encoding , substitute the result for key .	key = bytes_to_text ( key , self . encoding )
6220	call the method baseconv.base62.encode with result of the time.time function converted to an integer , as an argument , return the result .	return baseconv . base62 . encode ( int ( time . time ( ) ) )
5746	define the method represent_decimal with arguments self and data .	def represent_decimal ( self , data ) :
3077	output is an empty string .	output = [ ]
17832	call the method re.compile with an argument raw string STR0 , substitute the result for _entity_re .	_entity_re = re . compile ( STR0 )
150	add value and delta together , substitute the result for new_value .	new_value = value + delta
5156	if self.paths_to_remove is true ,	if self . paths_to_remove :
4130	call the method parser.add_argument with string STR0 , action containing string STR1 , dest set to string STR2 , default set to False , help containing string STR3 as arguments .	parser . add_argument ( STR0 , action = STR1 , dest = STR2 , default = False , help = STR3 )
4403	self._raw_ipv6 is boolean True .	self . _raw_ipv6 = True
10379	if expires is not None ,	if expires is not None :
2150	if smtplib.SMTPException exception is caught ,	except smtplib . SMTPException :
18644	return obj .	return obj
9402	derive the class CheckboxChoiceInput from the ChoiceInput base class .	class CheckboxChoiceInput ( ChoiceInput ) :
5452	call the function register_serializer with 3 arguments : format , value under the format key of the BUILTIN_SERIALIZERS dictionary and serializers .	register_serializer ( format , BUILTIN_SERIALIZERS [ format ] , serializers )
17562	append value under the key v of foreground dictionary to code_list .	code_list . append ( foreground [ v ] )
17385	otherwise if _locs_ is None ,	elif _locs_ is None :
8676	value under the self._pk_field.name key of form.fields dictionary is an instance of ModelChoiceField class , created with 4 arguments : qs , initial as pk_value , required as boolean False and widget as widget .	form . fields [ self . _pk_field . name ] = ModelChoiceField ( qs , initial = pk_value , required = False , widget = widget )
11770	define the function center with 2 arguments value and arg .	def center ( value , arg ) :
8070	define the method initial_form_count with an argument self .	def initial_form_count ( self ) :
3656	import module glob .	import glob
15862	call the function new_method_proxy with an argument operator.eq , substitute the result for __eq__ .	__eq__ = new_method_proxy ( operator . eq )
8234	valid is boolean False .	valid = False
5224	call the function shutil.move with arguments the_path and guessed_path .	shutil . move ( the_path , guessed_path )
8823	define the method __init__ with 13 arguments : self , queryset , empty_label set to a string STR0 , cache_choices set to None , required set to boolean True , widget set to None , label set to None , initial set to None , help_text set to an empty string , to_field_name set to None , limit_choices_to set to None , unpacked list args and unpacked dictionary kwargs .	def __init__ ( self , queryset , empty_label = STR0 , cache_choices = None , required = True , widget = None , label = None , initial = None , help_text = STR , to_field_name = None , limit_choices_to = None , * args , ** kwargs ) :
6068	FASTCGI_OPTIONS is a dictionary containing 16 initial entries : STR0 for STR1 , None for STR2 , None for STR3 ,	FASTCGI_OPTIONS = { STR0 : STR1 , STR2 : None , STR3 : None , STR4 : None , STR5 : STR6 , STR7 : None , STR8 : STR9 , STR10 : None , STR11 : 5 , STR12 : 2 , STR13 : 50 , STR14 : 0 , STR15 : None , STR16 : None , STR17 : None , STR18 : None , }
3086	import module warnings .	import warnings
10499	derive the class HttpResponseNotFound from the HttpResponse base class .	class HttpResponseNotFound ( HttpResponse ) :
15523	call the method handler.addQuickElement with 2 arguments : string STR0 and result of the function rfc3339_date , called with an argument value under the STR1 key of the item dictionary .	handler . addQuickElement ( STR0 , rfc3339_date ( item [ STR1 ] ) )
12655	call the method token.split_contents , substitute the result for bits .	bits = token . split_contents ( )
8081	defaults is an dictionary with 3 initial entries : self.auto_id for STR0 , result of the call to the method self.add_prefix , with an argument i , for STR1 and self.error_class for STR2 .	defaults = { STR0 : self . auto_id , STR1 : self . add_prefix ( i ) , STR2 : self . error_class , }
5346	if self._num_pages is None ,	if self . _num_pages is None :
9197	define the method render with 5 arguments : self , name , value , attrs set to None and choices set to an empty tuple .	def render ( self , name , value , attrs = None , choices = ( ) ) :
12939	get STR0 attribute of template object , if it is callable ,	if not callable ( getattr ( template , STR0 , None ) ) :
17662	convert num to an integer , substitute it for length .	length = int ( num )
14386	if self.warning is an instance of Exception class ,	if isinstance ( self . warning , Exception ) :
4983	call the function custom_sql_for_model with 3 arguments : model , style and connection , extend the output with the result .	output . extend ( custom_sql_for_model ( model , style , connection ) )
8685	call the function formset_factory with 10 arguments : form , formset , extra as extra , min_num as min_num , max_num as max_num , can_order as can_order , can_delete as can_delete , validate_min as validate_min , validate_max as validate_max , substitute the result for form .	FormSet = formset_factory ( form , formset , extra = extra , min_num = min_num , max_num = max_num , can_order = can_order , can_delete = can_delete , validate_min = validate_min , validate_max = validate_max )
18475	call the function trim_whitespace with an argument message , substitute the result for message .	message = trim_whitespace ( message )
14283	define the method __setitem__ with 3 arguments : self , key and value .	def __setitem__ ( self , key , value ) :
16162	call the method self.set_cdata_mode with tag as the argument .	self . set_cdata_mode ( tag )
414	return nothing .	return
2461	try ,	try :
4949	if not ,	else :
4734	if not ,	else :
9299	return value converted into a boolean .	return bool ( value )
2256	call the encode function on the Header class instance , created with arguments addr and encoding , substitute the result for addr .	addr = Header ( addr , encoding ) . encode ( )
1048	define the method _get_size with argument self .	def _get_size ( self ) :
1295	call the self._open method with name and mode arguments , return the result .	return self . _open ( name , mode )
2437	import module socket .	import socket
3363	for every i and row in enumerated result of the method connection.introspection.get_table_description called with arguments : cursor and table_name ,	for i , row in enumerate ( connection . introspection . get_table_description ( cursor , table_name ) ) :
12779	if not ,	else :
6913	get the value under the field key of the html dictionary , append it to output .	output . append ( html [ field ] )
9848	if bytes_read is greater than rollback ,	if bytes_read > rollback :
11	if DEFAULT_CACHE_ALIAS is not contained in settings.CACHES ,	if DEFAULT_CACHE_ALIAS not in settings . CACHES :
5462	do nothing .	pass
8479	save.alters_data is boolean True .	save . alters_data = True
934	derive the class PermissionDenied from the Exception base class .	class PermissionDenied ( Exception ) :
14669	call the function data with 3 arguments : self.year , self.month and self.day , return the result .	return date ( self . year , self . month , self . day )
12431	if self.asvar is true ,	if self . asvar :
13121	call the function resource_string with 2 arguments app_config.name and pkg_name , substitute the result for resource .	resource = resource_string ( app_config . name , pkg_name )
953	if not ,	else :
2660	help is an empty string .	help = STR
295	call the ops.quote_name method with argument self._table on the object under the db key of connections dictionary , substitute the result for table .	table = connections [ db ] . ops . quote_name ( self . _table )
10541	from django.template.base import compile_string , resolve_variable , unescape_string_literal and generic_tag_compiler .	from django . template . base import ( compile_string , resolve_variable , unescape_string_literal , generic_tag_compiler )
4718	substitute STR0 for answer .	answer = STR0
2682	if self.help is true ,	if self . help :
7336	call the method to_python with an argument data from the base class of the class URLField , substitute the result for value .	value = super ( URLField , self ) . to_python ( value )
16528	otherwise if name starts with a string STR0 ,	elif name == STR0 :
2491	call the method parser.parse_args with an arguments args set to an empty list , assign the result for defaults and _ , respectively .	defaults , _ = parser . parse_args ( args = [ ] )
10768	raise TemplateSyntaxError ( STR0 , where STR1 is replaced with node .	raise TemplateSyntaxError ( STR0 % node )
14846	match string s with regex IDENTIFIER , substitute the result for m .	m = IDENTIFIER . match ( s )
2270	call the method g.flatten with arguments self and unixfrom set to unixfrom .	g . flatten ( self , unixfrom = unixfrom )
7708	get the value under the name key of the self dictionary , yield it as the return value of the generator .	yield self [ name ]
4467	shell is an instance of IPShell class , created with an argument argv as an empty list .	shell = IPShell ( argv = [ ] )
8937	from django.utils.html import format_html , format_html_join and escape into default name space .	from django . utils . html import format_html , format_html_join , escape
2799	raise an CommandError with argument msg ,	raise CommandError ( msg )
12943	call the method context.new with an argument values , use it as an argument for the call to the method template.render , return the result .	return template . render ( context . new ( values ) )
13108	resource_string is None .	resource_string = None
6138	open the file whose name is stored in the value under the STR0 key of options dictionary and mode STR1 , with the file descriptor as fp ,	with open ( options [ STR0 ] , STR1 ) as fp :
10897	var_obj is None .	var_obj = None
14980	otherwise if vale is not an instance of ConvertingList and value is an instance of list type ,	elif not isinstance ( value , ConvertingList ) and isinstance ( value , list ) :
3568	if DatabaseError or IntegrityError , renamed to e , exceptions are caught ,	except ( DatabaseError , IntegrityError ) as e :
15507	call the method handler.endElement with an argument string STR0 .	handler . endElement ( STR0 )
9922	call the method stream.unget with an argument chunk .	stream . unget ( chunk )
3260	from django.core.management.sql import sql_flush and emit_post_migrate_signal into default name space .	from django . core . management . sql import sql_flush , emit_post_migrate_signal
13101	define the method reset with an argument self .	def reset ( self ) :
6815	compare is a lambda function with arguments self , a and b , return value is boolean true if a is greater than b , otherwise is false .	compare = lambda self , a , b : a > b
16715	from django.utils import six into default name space .	from django . utils import six
8887	return a list containing return values of the function to_py called with an argument val , for every val in value .	return [ to_py ( val ) for val in value ]
15655	call the method datetime_safe.new_date with an argument value , substitute the result for value .	value = datetime_safe . new_date ( value )
8454	convert exclude elements to list , substitute it for construct_instance_exclude .	construct_instance_exclude = list ( exclude )
12160	child_nodelists is an tuple with 2 elements : strings STR0 and STR1 .	child_nodelists = ( STR0 , STR1 )
11189	resolved_kwargs is dictionary with elements : return value of the method v.resolve called with an argument context , for k , for every k and v in return value of the method self.kwargs.items .	resolved_kwargs = dict ( ( k , v . resolve ( context ) ) for k , v in self . kwargs . items ( ) )
10796	define the method delete_first_token with an argument self .	def delete_first_token ( self ) :
16838	add decimal_sep and dec_part , substitute the result for dec_part .	dec_part = decimal_sep + dec_part
2438	derive class CachedDnsName from the object base class .	class CachedDnsName ( object ) :
9349	get the value under the name key of the data dictionary , if it exists substitute it for value , if not , value is None .	value = data . get ( name , None )
18576	call the method constant_re.findall with an argument t.contents , for every fmatch in the result ,	for fmatch in constant_re . findall ( t . contents ) :
14533	define the method j with an argument self .	def j ( self ) :
9589	call the load method on the c class instance , with the cookie argument .	c . load ( cookie )
5414	substitute module for the value under the format key of the serializers dictionary .	serializers [ format ] = module
11649	subtract third element of tupl from length of second element of tupl , substitute the result for units .	units = len ( tupl [ 1 ] ) - tupl [ 2 ]
3368	call the method self.normalize_col_name with 3 arguments column_name , used_column_names , is_relation , assign the result to att_name , params and notes , respectively .	att_name , params , notes = self . normalize_col_name ( column_name , used_column_names , is_relation )
302	call the method cursor.execute with string STR0 as argument , substitute the STR1 with table and list containing return value of the method call ops.value_to_db_datetime with argument now on the object under the db key of connections dictionary , respectively .	cursor . execute ( STR0 % table , [ key , connections [ db ] . ops . value_to_db_datetime ( now ) ] )
5130	for dirname in dirs ,	for dirname in dirs [ : ] :
14692	if illegal_formatting is true ,	if illegal_formatting :
12483	silent is boolean True .	silent = True
17158	set self.name attribute of the obj object to result .	setattr ( obj , self . name , result )
9535	widget.input_type is a string STR0 .	widget . input_type = STR0
11759	call the method wrap with 2 arguments , value and arg converted into a integer , return the result .	return wrap ( value , int ( arg ) )
17531	decrement self.active_writers by integer 1 ,	self . active_writers -= 1
1851	call the get_path_info function with environ as argument , substitute the result for path_info .	path_info = get_path_info ( environ )
11423	for every d in reversed list self.dicts ,	for d in reversed ( self . dicts ) :
13148	open the file named filepath in read mode , with file descriptor renamed to fp perform ,	with open ( filepath , STR0 ) as fp :
4066	if not ,	else :
8368	call the method __new__ from the base class of the class ModelFormMetaclass , with 4 arguments : mcs , name , bases and attrs , substitute the result for new_class .	new_class = super ( ModelFormMetaclass , mcs ) . __new__ ( mcs , name , bases , attrs )
3235	while model_dependencies is true ,	while model_dependencies :
4716	call the method six.moves.input with an argument string STR0 , substitute the result for answer .	answer = six . moves . input ( STR0 )
9853	self._done is boolean True .	self . _done = True
16557	call the function logging_config_func with an argument logging_settings .	logging_config_func ( logging_settings )
7613	call the function warnings.warn with 2 arguments string STR0 , and RemovedInDjango19Warning .	warnings . warn ( STR0 , RemovedInDjango19Warning )
13949	if candidate is not an instance of six.string_types ,	if not isinstance ( candidate , six . string_types ) :
7750	if not ,	else :
8031	substitute auto_id for self.auto_id .	self . auto_id = auto_id
369	from django.utils.six.moves import cPickle as pickle into default name space .	from django . utils . six . moves import cPickle as pickle
13833	convert to integer value of dictionary cc under the key STR0 , if it is smaller than the value of dictionary kwargs under the key STR1 , substitute kwargs value under the key STR2 by it .	kwargs [ STR0 ] = min ( int ( cc [ STR1 ] ) , kwargs [ STR2 ] )
3530	call the method connection.check_constraints with an arguments table_names set to table_names .	connection . check_constraints ( table_names = table_names )
10320	define the method serialize_headers with an argument self .	def serialize_headers ( self ) :
14867	if value is not contained in result ,	if value is not result :
16732	call the function import_string with an argument dotted_path , substitute the result for attr .	attr = import_string ( dotted_path )
17686	define the method words with 4 arguments : self , num , truncate set to None , html set to boolean False .	def words ( self , num , truncate = None , html = False ) :
9647	substitute self._upload_handlers for handlers .	handlers = self . _upload_handlers
10685	if self.verbatim is true and block_content equals self.verbatim ,	if self . verbatim and block_content == self . verbatim :
5417	call the function _load_serializers .	_load_serializers ( )
15167	call the function factory with an argument unpacked dictionary kwargs , substitute the result for result .	result = factory ( ** kwargs )
6051	call the sys.stderr.write function with an argument msg .	sys . stderr . write ( msg )
2703	call the method parser.add_option with 3 arguments : string STR0 , action set to a string STR1 , and help set to string STR2 .	parser . add_argument ( STR0 , action = STR1 , help = STR2 )
10792	define the method next_token with an argument self .	def next_token ( self ) :
12919	if BLOCK_CONTEXT_KEY is not contained in context.render_context ,	if BLOCK_CONTEXT_KEY not in context . render_context :
6854	yield string STR0 as an return value of the generator .	yield STR0
10856	increment i by integer 1 ,	i += 1
1462	if OSError exception was raised ,	except ( OSError ) :
1302	call the method self._save with arguments name and content , substitute it for name .	name = self . _save ( name , content )
14610	import module re .	import re
220	call the ops.quote_name method with argument self._table on the value under the db key of connections dictionary , substitute the result for table .	table = connections [ db ] . ops . quote_name ( self . _table )
6948	call the method s.render with 3 arguments : field string formated with name , val and local_attrs , substitute the result for select_html .	select_html = s . render ( field % name , val , local_attrs )
13023	derive the class Loader from the BaseLoader base class .	class Loader ( BaseLoader ) :
15414	call the method handler.startElement with 2 arguments : string STR0 and result of the method self.root_attributes .	handler . startElement ( STR0 , self . root_attributes ( ) )
5027	once split at the STR0 value under the STR1 key of the connection.settings_dict dictionary , substitute last element of the result for backend_name .	backend_name = connection . settings_dict [ STR0 ] . split ( STR1 ) [ - 1 ]
3925	call the method msgs.decode with an argument string STR0 , substitute the result for msgs .	msgs = msgs . decode ( STR0 )
7828	get STR0 , where STR1 is replaced with name ' attribute of the self object , call the result as an function , substitute the result for value .	value = getattr ( self , STR0 % name ) ( )
16935	if not ,	else :
7531	skip this loop iteration ,	continue
7160	call the method widget_attrs with an argument widget , from the base class of the DecimalField class , substitute the result for attrs .	attrs = super ( DecimalField , self ) . widget_attrs ( widget )
9324	selected_html is an empty string .	selected_html = STR
6007	from django.utils.module_loading import import_string into default name space .	from django . utils . module_loading import import_string
8912	define the method _has_changed with 3 arguments : self , initial and data .	def _has_changed ( self , initial , data ) :
8885	return an empty list .	return [ ]
11470	if _standard_context_processors is None ,	if _standard_context_processors is None :
569	call the method self._delete with argument key .	self . _delete ( key )
8068	substitute self.max_num for total_forms .	total_forms = self . max_num
4035	return nothing .	return
6028	call the self.setup_environ method .	self . setup_environ ( )
6382	if urlconf_name is not an instance of six.string_types class ,	if not isinstance ( urlconf_name , six . string_types ) :
1721	call the function wrapped_callback with request , list or arguments callback_args and dictionary arguments callback_kwargs , as the arguments , substitute the result for response .	response = wrapped_callback ( request , * callback_args , ** callback_kwargs )
4103	call the method writer.as_string , write the result to fh file .	fh . write ( writer . as_string ( ) )
4696	get the value under the STR0 key of the options dictionary , substitute it for self.verbosity .	self . verbosity = options . get ( STR0 )
12000	return arg .	return arg
14122	if key is contained in dict_ ,	if key in dict_ :
5924	m2m_convert is an lambda function with an argument n , return value is the return value of the method field.rel.to._meta.pk.to_python , called with n.getAttribute ( STR0 ) method .	m2m_convert = lambda n : field . rel . to . _meta . pk . to_python ( n . getAttribute ( STR0 ) )
5548	return obj .	return obj
11039	call the function getcallargs with an argument current ,	getcallargs ( current )
14128	call the function six.iteritems with an argument dict_ , for every item in the result ,	for item in six . iteritems ( dict_ ) :
6945	insert none_value at the beginning of the choices list .	choices . insert ( 0 , none_value )
8343	otherwise if formfield_callback is not callable object ,	elif not callable ( formfield_callback ) :
5635	define the method start_serialization with an argument self .	def start_serialization ( self ) :
4996	return output .	return output
15769	if other is an instance of Promise class ,	if isinstance ( other , Promise ) :
9893	do nothing .	pass
15266	return s .	return s
13707	call the function sys.exit with argument integer 3 .	sys . exit ( 3 )
10905	call the method match.group with 2 arguments : strings STR0 and STR1 , substitute the result for constant_arg , and var_arg , respectively .	constant_arg , var_arg = match . group ( STR0 , STR1 )
2199	from django.core.mail.utils import DNS_NAME into default name space .	from django . core . mail . utils import DNS_NAME
8522	return the value under the pk key of self._object_dict dictionary .	return self . _object_dict . get ( pk )
2758	if self.output_transaction is true ,	if self . output_transaction :
11307	call the method self.nodelist.render with an argument new_context , return the result .	return self . nodelist . render ( new_context )
3395	field_type is a string STR0	field_type = STR0
12057	return plural_suffix .	return plural_suffix
7894	call the method pretty_name with an argument name , substitute the result for self.label .	self . label = pretty_name ( name )
13298	derive the class IfParser from the object base class .	class IfParser ( object ) :
663	call the method self.make_key with key and version set to version as arguments , substitute the result for key .	key = self . make_key ( key , version = version )
1010	from django.core.files.utils import FileProxyMixin into default name space .	from django . core . files . utils import FileProxyMixin
1806	ISO_8859_1 is a string STR0 , UTF_8 is a string STR1 .	ISO_8859_1 , UTF_8 = str ( STR0 ) , str ( STR1 )
15290	if not ,	else :
8941	from django.core.exceptions import ValidationError into default name space .	from django . core . exceptions import ValidationError
12384	call the function reverse with 4 arguments : view_name , args as args , kwargs as kwargs and current_app as context.current_app , substitute the result for url .	url = reverse ( view_name , args = args , kwargs = kwargs , current_app = context . current_app )
17431	substitute space for sep .	sep = space
13322	if self.pos is greater than or equal to self.tokens ,	if self . pos >= len ( self . tokens ) :
18092	return translated .	return translated
1990	define the method open with argument self .	def open ( self ) :
8204	call the method is_multipart on the first element of self.forms , return it .	return self . forms [ 0 ] . is_multipart ( )
6919	convert if into a string append to it a string STR0 , return the result .	return STR0 % id_
14776	return result .	return result
10674	define the method tokenize with an argument self .	def tokenize ( self ) :
12369	define the method render with 2 arguments : self and context .	def render ( self , context ) :
18750	import module warnings .	import warnings
17483	call the function MovedModule with 2 arguments : strings STR0 and STR1 , use the result as an argument for the call to the add_move function .	add_move ( MovedModule ( STR0 , STR1 ) )
17816	call the method match.group with an argument integer 1 , substitute the result for text .	text = match . group ( 1 )
13247	define the method __repr__ with an argument self .	def __repr__ ( self ) :
13007	from django.utils._os import safe_join into default name space .	from django . utils . _os import safe_join
972	property getter decorator ,	@ property
10498	status_code is an integer 400 .	status_code = 400
2380	if attachment is an instance of MIMEBase ,	if isinstance ( attachment , MIMEBase ) :
10251	if Exception exception is caught ,	except Exception :
5458	from django.db import models into default name space .	from django . db import models
8876	call the method self.prepare_value with an argument initial_value , use it as the argument for the call to the function force_text , if the result is equal to the result of the call to the function force_text with data_value as an argument , return boolean True , otherwise return boolean False .	return force_text ( self . prepare_value ( initial_value ) ) != force_text ( data_value )
2900	call the method parser.add_argument with 4 arguments : string STR0 , action set to string STR1 , dest set to string STR2 and help set to string STR3 .	parser . add_argument ( STR0 , action = STR1 , dest = STR2 , help = STR3 )
1517	try ,	try :
3217	get STR0 attribute of the model.natural_key , substitute it for deps , if the attribute doesnt exist , deps in an empty list .	deps = getattr ( model . natural_key , STR0 , [ ] )
18299	_translations dictionary value , under the language key is an instance of DjangoTranslation class , created with an argument language .	_translations [ language ] = DjangoTranslation ( language )
7810	return nothing .	return
1640	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
7815	call the method self._clean_form .	self . _clean_form ( )
12055	try ,	try :
3458	append a string STR0 to field_notes .	field_notes . append ( STR0 )
5288	pathext is an list containing an empty string .	pathext = [ STR ]
9466	return id_ .	return id_
1124	derive class ImageFile from the base class File .	class ImageFile ( File ) :
190	import pickle .	import pickle
4284	call the self.stderr.write method with string STR0 as argument , with all occurrences of STR1 replaced with app_name and model._meta.object_name , respectively .	self . stdout . write ( STR0 % ( app_name , model . _meta . object_name ) )
1933	define the get_path_info function with environ as the argument .	def get_path_info ( environ ) :
7320	call the method Image.open with an argument file , on the result call the verify method	Image . open ( file ) . verify ( )
9964	from io import BytesIO into default name space .	from io import BytesIO
15957	call the method text.__html__ , return the result .	return text . __html__ ( )
16782	if finder is None ,	if finder is None :
17060	return self .	return self
14995	call the function converter with an argument suffix , substitute the result for value .	value = converter ( suffix )
10096	if IOError , renamed to e , exception is caught ,	except IOError as e :
4247	call the self.stdout.write method with string STR0 as argument , with all occurrences of STR1 replaced with , app_name and model._meta.object_name , respectively .	self . stdout . write ( STR0 % ( app_name , model . _meta . object_name ) )
17279	_func_code is a string STR0 .	_func_code = STR0
3783	get the value under the STR0 key of the options dictionary , substitute it for self.symlinks .	self . symlinks = options . get ( STR0 )
15357	call the function datetime_safe.new_datetime with an argument date , on the result call the method strftime with an argument , string STR0 , convert the result into a string and append it to STR1 , substitute the result for d .	d = STR0 % datetime_safe . new_datetime ( date ) . strftime ( STR1 )
12813	define the function get_template with 2 : template_name and dirs set to None .	def get_template ( template_name , dirs = None ) :
10422	raise an Exception exception with an argument string STR0 , where STR1 is replaced with self.__class__.__name__ .	raise Exception ( STR0 % self . __class__ . __name__ )
13789	if x equals to integer 0 ,	if x == 0 :
577	from django.core.cache.backends.base import BaseCache and DEFAULT_TIMEOUT into default name space .	from django . core . cache . backends . base import BaseCache , DEFAULT_TIMEOUT
15670	call the function get_format with an argument string STR0 , substitute the result for thousand_sep .	thousand_sep = get_format ( STR0 )
4581	define method add_arguments with class instance self and parser as the input arguments .	def add_arguments ( self , parser ) :
4102	open writer.path file in write mode , with the file descriptor as fh , perform the following ,	with open ( writer . path , STR0 ) as fh :
13859	substitute integer 0 for cache_timeout .	cache_timeout = 0
5736	from django.core.serializers.base import DeserializationError into default name space .	from django . core . serializers . base import DeserializationError
13541	open filename file in write mode , with the file descriptor renamed to outfile , perform ,	with open ( filename , STR0 ) as outfile :
18767	if git_changeset is true ,	if git_changeset :
470	import pickle .	import pickle
7814	call the method self._clean_fields .	self . _clean_fields ( )
7946	call the method data.replace with an argument microsecond set to integer 0 , substitute the result for data .	data = data . replace ( microsecond = 0 )
272	substitute the second element of result for current_expires .	current_expires = result [ 1 ]
5816	call the method self.xml.endElement with an argument string STR0	self . xml . endElement ( STR0 )
15719	define the method __reduce__ with an argument self .	def __reduce__ ( self ) :
2485	call the function load_command_class with arguments : app_name and name , substitute the result for command .	command = load_command_class ( app_name , name )
3749	if potfile fie exists ,	if os . path . exists ( potfile ) :
16746	is exception is caught ,	except :
3889	all_files is an empty list .	all_files = [ ]
15042	if StandardError , renamed to e , exception is caught ,	except StandardError as e :
7427	raise an ValidationError with 3 arguments : value under the STR0 key of the self.error_messages dictionary , code set to an string STR1 and dictionary params with an entry : value for STR2 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 , params = { STR2 : value } , )
18442	if LookupError exception is caught ,	except LookupError :
11952	if vale is None or an empty string ,	if value in ( None , STR ) :
7296	call the method clean with an argument data from the base class of the class FileField , return the result .	return super ( FileField , self ) . clean ( data )
15013	define the method configure with an argument self .	def configure ( self ) :
12	raise an exception ImproperlyConfigured with string STR0 as argument , with STR1 replaced with DEFAULT_CACHE_ALIAS converted into a string .	raise ImproperlyConfigured ( STR0 % DEFAULT_CACHE_ALIAS )
8165	for every i in sequence of integers , from 0 to the result of the method self.total_form_count ,	for i in range ( 0 , self . total_form_count ( ) ) :
8596	if form.cleaned_data is true and value under the field key of form.cleaned_data dictionary is not None ,	if ( form . cleaned_data and form . cleaned_data [ field ] is not None and form . cleaned_data [ unique_for ] is not None ) :
1724	call the middleware_method with request and e as the arguments , substitute the result for response .	response = middleware_method ( request , e )
2479	call the function get_commands , substitute the value under the name key of the return value , for app_name .	app_name = get_commands ( ) [ name ]
12717	define the function widthratio with 2 arguments : parser and token .	def widthratio ( parser , token ) :
12927	call the method block_context.add_blocks with an argument blocks .	block_context . add_blocks ( blocks )
14171	instance.keyOrder is an empty list .	instance . keyOrder = [ ]
16892	call the function walk_to_end with 2 arguments : ch and pattern_iter .	walk_to_end ( ch , pattern_iter )
2600	if not ,	else :
10516	if safe is true and data is not an instance of dict type .	if safe and not isinstance ( data , dict ) :
10159	if query_string is an instance of bytes ,	if isinstance ( query_string , bytes ) :
12913	raise an TemplateSyntaxError exception with an argument error_msg .	raise TemplateSyntaxError ( error_msg )
7606	raise an ValidationError with 2 arguments : value under the STR0 key of the self.error_messages dictionary and code set to string STR1 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 )
17480	get _assertRaisesRegex attribute of the self object , call the result with 2 arguments : unpacked list args , and unpacked dictionary kwargs , return the result .	return getattr ( self , _assertRaisesRegex ) ( * args , ** kwargs )
16617	sort elements of kwds , substitute the result for sorted_items .	sorted_items = sorted ( kwds . items ( ) )
995	if error.params is true ,	if error . params :
8033	if data is true , substitute it for self.files , otherwise self.files is an empty dictionary .	self . files = files or { }
13591	return _cached_filenames .	return _cached_filenames
14068	open STR0 file in read mode , substitute the result for si .	si = open ( STR0 , STR1 )
1445	if module os field name equals to string STR0 ,	if os . name == STR0 :
12135	call the function render_value_in_context with 2 arguments : value and context , return the result .	return render_value_in_context ( value , context )
13478	if prefix is false ,	if not prefix :
10941	call the function mark_safe with an argument arg , append it to arg_vals .	arg_vals . append ( mark_safe ( arg ) )
6025	call the __init__ method from the base class of the WSGIServer class , with 2 arguments : unpacked list args and unpacked dictionary kwargs .	super ( WSGIServer , self ) . __init__ ( * args , ** kwargs )
2621	from django.utils.deprecation import RemovedInDjango19Warning and RemovedInDjango20Warning into default name space .	from django . utils . deprecation import RemovedInDjango19Warning , RemovedInDjango20Warning
10522	if STR0 is contained in response and function request.get_host evaluates to True ,	if STR0 in response and request . get_host ( ) :
8633	call the method obj.delete .	obj . delete ( )
8341	if formfield_callback is None ,	if formfield_callback is None :
2259	define the method as_string with arguments self and unixfrom set to boolean False .	def as_string ( self , unixfrom = False ) :
7141	call the method validate with an argument value from the base class of the DecimalField class .	super ( DecimalField , self ) . validate ( value )
16580	if self.include_html is true , call the method reporter.get_traceback_html and substitute the result for html_message , otherwise html_message is None .	html_message = reporter . get_traceback_html ( ) if self . include_html else None
4342	define the method handle with 3 arguments : self , unpacked list args and unpacked dictionary options .	def handle ( self , * args , ** options ) :
18136	define the function _string_concat with an argument unpacked list strings .	def _string_concat ( * strings ) :
7899	if self.field.show_hidden_initial is true ,	if self . field . show_hidden_initial :
13845	cc is a dictionary populated with items by calling function _to_tuple with el as an argument , for every el in split string cc_delim_re , with delimiter being the value of dictionary response under the key STR0 .	cc = dict ( _to_tuple ( el ) for el in cc_delim_re . split ( response [ STR0 ] ) )
13337	while rbp is smaller than self.current_token.lbp ,	while rbp < self . current_token . lbp :
3879	join into a file path : path and string STR0 , where STR1 is replaced with self.domain converted into a string , substitute the result for pot_path .	pot_path = os . path . join ( path , STR0 % str ( self . domain ) )
18122	define the function get_language_bidi .	def get_language_bidi ( ) :
4856	if value under the STR0 key of the options dictionary is greater than zero ,	if options [ STR0 ] > 0 :
15099	logger.propagate is boolean True .	logger . propagate = True
1908	define private method __call__ with self class instance , environ and start_response as the arguments .	def __call__ ( self , environ , start_response ) :
6658	substitute regex for self.regex .	self . regex = regex
3900	join dirpath and filename into path , use it as an argument for the call to the function os.path.normpath , substitute it for file_path .	file_path = os . path . normpath ( os . path . join ( dirpath , filename ) )
15742	substitute cls.__bytes_cast for cls.__bytes__ .	cls . __bytes__ = cls . __bytes_cast
5271	define the function handle_extensions with 2 arguments : extensions set to tuple containing string STR0 and ignored set to tuple containing string STR1 .	def handle_extensions ( extensions = ( STR0 , ) , ignored = ( STR1 , ) ) :
8221	join return value of the function six.text_type called with an argument self.management_form and forms into a string , separated by newline , use it as an argument for the call to the function mark_safe , return the result .	return mark_safe ( STR0 . join ( [ six . text_type ( self . management_form ) , forms ] ) )
13732	call the function os.kill with os.getpid ( ) and negative exit_code as arguments .	os . kill ( os . getpid ( ) , - exit_code )
1694	call the method self.handle_uncaught_exception with request , resolver and return value of the function sys.exec_info as the arguments .	response = self . handle_uncaught_exception ( request , resolver , sys . exc_info ( ) )
6354	if default_args exists substitute it for self.default_args , if not , self.default_args is an empty dictionary .	self . default_args = default_args or { }
6204	define the method signature with arguments self and value .	def signature ( self , value ) :
13557	if imoportError exception is caught ,	except ImportError :
12009	split arg by STR0 , substitute the result for bits .	bits = arg . split ( STR0 )
10733	call the method self.empty_block_tag with an argument token .	self . empty_block_tag ( token )
7939	call the method self.field.widget.value_from_datadict with 3 arguments : self.form.data , self.form.files , self.html_name , return the result .	return self . field . widget . value_from_datadict ( self . form . data , self . form . files , self . html_name )
12948	raise an exception ,	raise
16167	search anywhere in the rawdata string starting from the ( i+1 ) -th element for the _html_parser.endendeag , replace the result for match .	match = _html_parser . endendtag . search ( rawdata , i + 1 )
3816	substitute STR0 with return value of the function get_text_list called with 2 arguments : self.extensions converted into a list and string STR1 . self.invoked_for_django is boolean False .	self . invoked_for_django = False
4557	join statements into a string , separated by newlines , return it .	return STR0 . join ( statements )
15482	handler is an instance of SimplerXMLGenerator class , created with 2 arguments : outfile and encoding .	handler = SimplerXMLGenerator ( outfile , encoding )
16848	from django.utils import six into default name space .	from django . utils import six
6219	define the method timestamp with an argument self .	def timestamp ( self ) :
5345	define the method _get_num_pages with an argument self .	def _get_num_pages ( self ) :
16196	from django.utils import six into default name space .	from django . utils import six
8211	if not ,	else :
18347	if not ,	else :
13442	try ,	try :
9669	get the value under the STR0 key of the disposition meta_data , substitute it for transfer_encoding .	transfer_encoding = meta_data . get ( STR0 )
15490	return a dictionary with 2 entries : value under the STR2 key of the self.feed dictionary for STR0 , and self.ns for STR1 .	return { STR0 : self . ns , STR1 : self . feed [ STR2 ] }
16613	return self.hashvalue .	return self . hashvalue
5137	join top_dir , relative_dir and return value of the function filename.replace called with 2 arguments : base_name and name , into a file path , substitute it for new_path .	new_path = path . join ( top_dir , relative_dir , filename . replace ( base_name , name ) )
14863	derive the class ConvertingDict from dict base class .	class ConvertingDict ( dict ) :
15228	if string STR0 is not contained in __dict__ field of klass ,	if STR0 not in klass . __dict__ :
6117	call the fastcgi_help function with an argument string STR0 , return it .	return fastcgi_help ( STR0 )
14475	subtract integer 12 from self.data.hour , return the result .	return self . data . hour - 12
950	substitute message.error_dict for message .	message = message . error_dict
6460	call the method self._populate .	self . _populate ( )
6526	call the function urlquote with an argument _prefix , use the result as an argument for the call to the normalize function , substitute the fitst element of the result for prefix_norm and prefix_args , respectively .	prefix_norm , prefix_args = normalize ( urlquote ( _prefix ) ) [ 0 ]
2982	extend self.program list with self.program_options , string STR0 ,	args = [ self . program ] + self . program_options + [ STR0 , npath ( base_path + STR1 ) , npath ( base_path + STR2 ) ]
3654	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
2163	num_sent is an integer 0 .	num_sent = 0
7803	call the method self.errors.as_data , for every error for value under the filed key of the returned dictionary ,	for error in self . errors . as_data ( ) [ field ] :
34	call the import_string with argument backend , substitute it for backend_cls .	backend_cls = import_string ( backend )
4900	import module os .	import os
2066	call the __init__ method of the base class of the EmailBackend class with arguments : unpacked list args and unpacked dictionary kwargs .	super ( EmailBackend , self ) . __init__ ( * args , ** kwargs )
17488	except ImportError .	except ImportError :
14413	use_func is boolean False .	use_func = False
14066	call the method sys.stderr.write with an argument string STR0 , formated with e.errno and e.strerror .	sys . stderr . write ( STR0 % ( e . errno , e . strerror ) )
14359	raise an TypeError with an argument string STR0 formated with length of args .	raise TypeError ( STR0 % len ( args ) )
7631	derive the class SlugField from the base class CharField class .	class SlugField ( CharField ) :
6040	call the self.style.HTTP_INFO with an argument msg , substitute it for msg .	msg = self . style . HTTP_INFO ( msg )
16366	return ipv4_unpacked .	return ipv4_unpacked
9605	from django.utils.datastructures import MultiValueDict into default name space .	from django . utils . datastructures import MultiValueDict
12260	return an empty string ,	return STR
8208	define the method media with an argument self .	def media ( self ) :
18611	if not ,	else :
12952	call the method token.contents.split , substitute the result for bits .	bits = token . contents . split ( )
2944	get the value under the key STR0 of the options dictionary , convert it to an integer , substitute it for exclude .	self . verbosity = int ( options . get ( STR0 ) )
8733	kwargs is a dictionary with an entry : attribute STR0 of the object under the name key of the form.fields dictionary for STR1 , if it doesnt exists return value of the function capfirst with an argument self.fk.verbose_name for STR2 .	kwargs = { STR0 : getattr ( form . fields . get ( name ) , STR1 , capfirst ( self . fk . verbose_name ) ) }
12501	return an instance of CsrfTokenNode class .	return CsrfTokenNode ( )
17800	replace every occurrence of STRspecial in s with '\\\STR .	s = s . replace ( STRspecial , STR0 )
11243	derive the class SimpleNode form the base class TagHelperNode .	class SimpleNode ( TagHelperNode ) :
9333	call the method self.render_option with 2 arguments : selected_choices and unpacked list option , append the result to output .	output . append ( self . render_option ( selected_choices , * option ) )
1105	if six.PY3 is boolean True ,	if six . PY3 :
16794	if KeyError exception is caught ,	except KeyError :
1998	call the method self.close .	self . close ( )
4967	call the method cursor.close ,	cursor . close ( )
1937	if settings.FORCE_SCRIPT_NAME is not None ,	if settings . FORCE_SCRIPT_NAME is not None :
2992	from django.core.cache.backends.db import BaseDatabaseCache into default name space .	from django . core . cache . backends . db import BaseDatabaseCache
5618	if o.microsecond is true ,	if o . microsecond :
15816	define the method __init__ with an argument self .	def __init__ ( self ) :
4917	STR0 . call the method app_config.get_models with an argument include_auto_created set to boolean True , substitute it for app_models .	app_models = app_config . get_models ( include_auto_created = True )
8658	substitute form.instance.pk for pk_value .	pk_value = form . instance . pk
4070	for every migration_name in migration_names ,	for migration_name in migration_names :
7264	derive the class FileField from the base class Field class .	class FileField ( Field ) :
3890	call the function os.walk with 3 arguments : root , topdown set to boolean True , followlinks set to self.symlinks ,	for dirpath , dirnames , filenames in os . walk ( root , topdown = True , followlinks = self . symlinks ) :
981	define the method update_error_dict with arguments self and error_dict .	def update_error_dict ( self , error_dict ) :
1926	substitute self.__class__ for response._handler_class .	response . _handler_class = self . __class__
4652	try ,	try :
2801	write msg to self.stderr stream .	self . stderr . write ( msg )
589	if not ,	else :
7665	for every base in reversed order of bases ,	for base in bases [ : : - 1 ] :
11938	define the function get_digit with 2 arguments value and arg .	def get_digit ( value , arg ) :
10203	call the method self._assert_mutable .	self . _assert_mutable ( )
3611	extend fixture_files list with fixture_files_in_dir .	fixture_files . extend ( fixture_files_in_dir )
7706	define the method __iter__ with an argument self .	def __iter__ ( self ) :
15297	substitute force_bytes for force_str .	force_str = force_bytes
10709	for every lib in builtins ,	for lib in builtins :
12702	call the method kwarg_re.match with an argument bit , substitute it for match .	match = kwarg_re . match ( bit )
6452	call the method get_language , substitute the result for language_code .	language_code = get_language ( )
2211	call the function os.getpid , substitute it for pid .	pid = os . getpid ( )
15553	from django.conf import settings into default name space .	from django . conf import settings
16398	join first 5 elements of hextets into a string , separated by STR0 , substitute the result for result .	result = STR0 . join ( hextets [ 0 : 6 ] )
1810	substitute limit for self.remaining .	self . remaining = limit
1962	call the klass method with fail_silently set to fail_silently and dictionary arguments kwds as arguments , return the result .	return klass ( fail_silently = fail_silently , ** kwds )
3171	if LookupError exception is caught ,	except LookupError :
16475	increment Tok.num with an integer 1 .	Tok . num += 1
17016	substitute second element of elt for param .	param = elt [ 1 ]
14250	define the method __init__ with 2 arguments : self and iterable set to None .	def __init__ ( self , iterable = None ) :
11777	if safe is true and arg is not equal to string STR0 ,	if safe and arg != STR0 :
4292	if self.verbosity is greater or equal to integer 2 ,	if self . verbosity >= 2 :
13843	if the result to the method call response.has_header , with string STR0 as an argument is boolean False ,	if not response . has_header ( STR0 ) :
6076	call the options.update method with an argument kwargs .	options . update ( kwargs )
1610	if self.activated is boolean True ,	if self . activated :
2307	if to is not an six.string_types instance raise an error with message string STR1 .	assert not isinstance ( to , six . string_types ) , STR1
8693	substitute instance for self.instance .	self . instance = instance
11870	if length of x is equal to integer 0 ,	if len ( x ) == 0 :
8456	if field is an instance of InlineForeignKeyField class ,	if isinstance ( field , InlineForeignKeyField ) :
14215	define the method _iterkeys with an argument self .	def _iterkeys ( self ) :
9139	substitute obj for the value of the memo dictionary at the identity of the self object key .	memo [ id ( self ) ] = obj
15582	split locale by STR0 , append the first element of the result to locales .	locales . append ( locale . split ( STR0 ) [ 0 ] )
1166	close file file .	file . close ( )
10202	define the method setlistdefault with 3 arguments : self , key and default_list set to None .	def setlistdefault ( self , key , default_list = None ) :
10800	update self.filters dictionary with lib.filters .	self . filters . update ( lib . filters )
8277	define the function save_m2m .	def save_m2m ( ) :
4071	call the method loader.get_migration with arguments app_label and migration_name , substitute the result for migration .	migration = loader . get_migration ( app_label , migration_name )
2464	return an empty list .	return [ ]
17339	call the method e.encode with an argument string STR0 .	return s . encode ( STR0 )
18304	call the method call the function warnings.warn with 3 arguments : msg formatted with language and value under the language key , of the _DJANGO_DEPRECATED_LOCALES dictionary , RemovedInDjango19Warning and stacklevel set to integer 2 .	warnings . warn ( msg % ( language , _DJANGO_DEPRECATED_LOCALES [ language ] ) , RemovedInDjango19Warning , stacklevel = 2 )
13538	if filename path doesnt exists ,	if not os . path . exists ( filename ) :
12986	remove first element from remaining_bits , substitute the result for option .	option = remaining_bits . pop ( 0 )
14665	decorator classmethod ,	@ classmethod
4809	call the function get_user_model , substitute the result for UserModel .	UserModel = get_user_model ( )
15858	call the function new_method_proxy with an argument unicode , substitute the result for __unicode__ .	__unicode__ = new_method_proxy ( unicode )
13332	return retval .	return retval
16744	for every module_to_search in args ,	for module_to_search in args :
8098	call the self.initial_form_count method , return the sublist of self.forms from the beginning to the previous result as the end index .	return self . forms [ : self . initial_form_count ( ) ]
6874	substitute MONTHS for self.months .	self . months = MONTHS
2488	call the method parser.parse_args with an argument args set to args , substitute the result for defaults .	defaults = parser . parse_args ( args = args )
16275	if i is greater than sys.maxint ,	if i > sys . maxint :
4979	call the method check_for_migrations with arguments : app_config and connection .	check_for_migrations ( app_config , connection )
11970	call the method formats.time_format with 2 arguments : value and arg , return the result .	return formats . time_format ( value , arg )
12076	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
10518	if STR0 key doesnt exist in kwargs , set its value to STR1 .	kwargs . setdefault ( STR0 , STR1 )
8868	if ValueError or self.queryset.model.DoesNotExist exception is caught ,	except ( ValueError , self . queryset . model . DoesNotExist ) :
756	call the Warning function with 4 arguments : string STR0 , hint tuple containing one string , STR1 , obj set to None , and id set to a string STR2 , put the result into a list and return it .	return [ Warning ( STR0 , hint = ( STR1 ) , obj = None , id = STR2 , ) ]
4183	if element of targets in first row and second column is None ,	if targets [ 0 ] [ 1 ] is None :
2551	otherwise if first element of cwords is contanied in tuple with 8 entries : STR0 , STR1 , STR2 , STR3 , STR4 ,	elif cwords [ 0 ] in ( STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 , STR7 ) :
12832	if template_name_list is false ,	if not template_name_list :
7821	if field is an instance of FileField ,	if isinstance ( field , FileField ) :
2913	call the method self.check with arguments : app_configs set to app_configs , tags set to tags , display_num_errors set to boolean True .	self . check ( app_configs = app_configs , tags = tags , display_num_errors = True )
14526	define the method F with an argument self .	def F ( self ) :
17871	if i incremented by 1 is lesser than length of chunks ,	if i + 1 < len ( chunks ) :
17704	current_len is equal to integer 0 .	current_len = 0
2839	for every label in labels ,	for label in labels :
11918	substitute next_item for sublist_item .	sublist_item = next_item
8573	for every form in valid_forms ,	for form in valid_forms :
9993	self.path_info is an empty string .	self . path_info = STR
13618	append filename to filenames .	filenames . append ( filename )
8571	substitute self.deleted_forms for forms_to_delete .	forms_to_delete = self . deleted_forms
11126	return kwargs .	return kwargs
5469	define the method serialize with 3 arguments : self , queryset and unpacked dictionary options .	def serialize ( self , queryset , ** options ) :
17761	define the function compress_string with an argument s .	def compress_string ( s ) :
15929	from django.utils.functional import allow_lazy into default name space .	from django . utils . functional import allow_lazy
4141	get the value under the key STR0 of the options dictionary , substitute it for db .	db = options . get ( STR0 )
18343	define the function gettext with an argument message .	def gettext ( message ) :
10403	call the method self.set_cookie with 3 arguments : key , value and unpacked dictionary kwargs , return the result .	return self . set_cookie ( key , value , ** kwargs )
4470	from IPython.frontend.terminal.ipapp import TerminalIPythonApp into default namespace .	from IPython . frontend . terminal . ipapp import TerminalIPythonApp
14773	if middleware has an attribute STR0 ,	if hasattr ( middleware , STR0 ) :
1267	write current_chunk to file fd .	os . write ( fd , current_chunk )
119	substitute self.default_timeout for timeout .	timeout = self . default_timeout
2252	instantiate Header class with localpart and encoding , convert it to a string , substitute the result for localpart .	localpart = str ( Header ( localpart , encoding ) )
2919	from django.core.management.utils import find_command and popen_wrapper into default name space .	from django . core . management . utils import find_command , popen_wrapper
1877	define the method _get_scheme with self class instance as argument .	def _get_scheme ( self ) :
17342	substitute chr for unichr .	unichr = chr
9110	derive the class MediaDefiningClass from the type base class .	class MediaDefiningClass ( type ) :
4267	for every app_name and mode_list in return value of manifest.items method ,	for app_name , model_list in manifest . items ( ) :
18306	define the function deactivate .	def deactivate ( ) :
2160	call the method self.open , substitute the result for the new_conn_created .	new_conn_created = self . open ( )
16214	call the function allow_lazy with 2 arguments : urlquote_plus and six.text_type , substitute the result for urlquote_plus .	urlquote_plus = allow_lazy ( urlquote_plus , six . text_type )
16057	sum lead and opening , substitute the result for lead .	lead = lead + opening
8799	return self.parent_instance .	return self . parent_instance
11251	return func .	return func
105	try ,	try :
15949	call the function allow_lazy with 2 arguments : escape , six.text_type , substitute the result for escape .	escape = allow_lazy ( escape , six . text_type )
16025	call the function allow_lazy with 2 arguments : strip_entities , six.text_type , substitute the result for strip_entities .	strip_entities = allow_lazy ( strip_entities , six . text_type )
13752	substitute python_reloader for reloader .	reloader = python_reloader
3361	indexes is an empty dictionary .	indexes = { }
15503	if value under the STR0 key of the self.feed dictionary is not None ,	if self . feed [ STR0 ] is not None :
1235	define the function copystat with arguments src and dst .	def copystat ( src , dst ) :
14412	if not ,	else :
16764	if not ,	else :
14762	if fh has an attribute a , for every a in WRAPPER_ASSIGNMENTS , put a into a tuple , return the resulting tuple .	return tuple ( a for a in WRAPPER_ASSIGNMENTS if hasattr ( fn , a ) )
16159	if not ,	else :
6814	derive the class MaxLengthValidator form the BaseValidator base class .	class MaxLengthValidator ( BaseValidator ) :
9706	if over_bytes is true ,	if over_bytes :
16824	sign is an empty string .	sign = STR
9323	if not ,	else :
11267	call the function func with 2 arguments : unpacked list resolved_args and unpacked dictionary resolved_kwargs , substitute the result for value under the self.target_var key of the context dictionary .	context [ self . target_var ] = func ( * resolved_args , ** resolved_kwargs )
14808	substitute old_method_name for self.old_method_name .	self . old_method_name = old_method_name
8647	call the method self.save_new with 2 arguments : form and commit as commit , append the result to self.new_objects .	self . new_objects . append ( self . save_new ( form , commit = commit ) )
7330	define the method to_python with arguments self and data .	def to_python ( self , value ) :
8181	if self.validate_max is true , and length of self.deleted_forms subtracted from the return value of the method self.total_form_count , is greater than self.max_num , or if value under the TOTAL_FORM_COUNT key of the self.management_form.cleaned_data dictionary , is grater than self.absolute_max ,	if ( self . validate_max and self . total_form_count ( ) - len ( self . deleted_forms ) > self . max_num ) or self . management_form . cleaned_data [ TOTAL_FORM_COUNT ] > self . absolute_max :
4657	raise a exception of CommandError class , with string STR0 , replace all the STR1 occurrences with migration_name and app_label , respectively .	raise CommandError ( STR0 % ( migration_name , app_label ) )
9078	for every path in paths ,	for path in paths :
1130	get property attribute _get_height , and substitute it for width .	height = property ( _get_height )
14904	if type of result is ConvertingDict , ConvertingList or ConvertingTuple ,	if type ( result ) in ( ConvertingDict , ConvertingList , ConvertingTuple ) :
359	import module io .	import io
10584	call the function re.compile with an argument string STR0 , substitute all occurrences of STR1 with , return value of the function re.escape called with an argument BLOCK_TAG_START , return value of the function re.escape called with an argument BLOCK_TAG_END , return value of the function re.escape called with an argument VARIABLE_TAG_START , return value of the function re.escape called with an argument VARIABLE_TAG_END , return value of the function re.escape called with an argument COMMENT_TAG_START , and return value of the function re.escape called with an argument COMMENT_TAG_END , substitute the result for tag_re .	tag_re = ( re . compile ( STR0 % ( re . escape ( BLOCK_TAG_START ) , re . escape ( BLOCK_TAG_END ) , re . escape ( VARIABLE_TAG_START ) , re . escape ( VARIABLE_TAG_END ) , re . escape ( COMMENT_TAG_START ) , re . escape ( COMMENT_TAG_END ) ) ) )
2702	call the method parser.add_option with 2 arguments : string STR1 and help set to a string STR2	parser . add_argument ( STR1 , help = STR2 )
2377	if self.body is true ,	if self . body :
10075	property decorator ,	@ property
286	call the method self.validate_key with argument key .	self . validate_key ( key )
10140	call the function six.reraise with 3 arguments : UnreadablePostError , UnreadablePostError instantiated with unpacked list e.args , third element of the result of the function sys.exc_info .	six . reraise ( UnreadablePostError , UnreadablePostError ( * e . args ) , sys . exc_info ( ) [ 2 ] )
15786	call the function six.text_type with an argument self , divide the result with rhs and return the reminder of the division .	return six . text_type ( self ) % rhs
17537	substitute self.waiting_readers for t .	t = self . waiting_readers
12050	append arg to STR0 , substitute the result for arg .	arg = STR0 + arg
5108	call the method self.stdout.write , with an argument string STR0 , where STR1 is replaced with app_or_project and extensions joined into a string , separated by a string STR2 .	self . stdout . write ( STR0 % ( app_or_project , STR1 . join ( extensions ) ) )
8636	call the method self.save_existing with 3 arguments : form , obj and commit as commit , append the result to saved_instances .	saved_instances . append ( self . save_existing ( form , obj , commit = commit ) )
6292	if can_fail is true ,	if can_fail :
7232	if first and second elements of value are contained in self.empty_values ,	if value [ 0 ] in self . empty_values and value [ 1 ] in self . empty_values :
896	return context_extras .	return context_extras
12231	raise an exception .	raise
4354	return FASTCGI_HELP .	return FASTCGI_HELP
7463	define the method _coerce with arguments self and value .	def _coerce ( self , value ) :
16096	import module re .	import re
17931	define the method tzname with 2 arguments : self and dt .	def tzname ( self , dt ) :
16841	for every cnt and digit in enumerated list int_part with reversed ordering of elements ,	for cnt , digit in enumerate ( int_part [ : : - 1 ] ) :
2178	call the method self.connection.sendmail with arguments : from_email , recipients and return value of the function message.as_bytes .	self . connection . sendmail ( from_email , recipients , message . as_bytes ( ) )
4588	call the function sql_custom with app_config , self.style and connection as the arguments , substitute the result for statements .	statements = sql_custom ( app_config , self . style , connection )
16510	derive the class JsLexer from the Lexer base class .	class JsLexer ( Lexer ) :
6459	if language_code is not containsed in self._app_dict	if language_code not in self . _app_dict :
5895	call the method node.getElementsByTagName with an argument string STR0 , if it evaluates to true ,	if node . getElementsByTagName ( STR0 ) :
15699	derive the class cached_property from the object base class .	class cached_property ( object ) :
10376	convert header to lowercase , use it to as a key to get the value of the self._headers dictionary , if it exists return the second element of the result , if not , return alternate .	return self . _headers . get ( header . lower ( ) , ( None , alternate ) ) [ 1 ]
11382	remove the first element from the self.context .	self . context . pop ( )
18060	call the method _trans.ngettext with 3 arguments singular , plural and number .	return _trans . ngettext ( singular , plural , number )
17320	call the function type with an argument self , on the result call the method __next__ with an argument self , return the result .	return type ( self ) . __next__ ( self )
3960	if self.verbosity is greater than integer 1 ,	if self . verbosity > 1 :
3707	append command.xgettext_options to the list containing 10 elements : string STR0 , string STR1 , domain , string STR2 , string STR3 , string STR4 , string STR5 , string STR6 , string STR7 and string STR8 , substitute it for args .	args = [ STR0 , STR1 , domain , STR2 , STR3 , STR4 , STR5 , STR6 , STR7 , STR8 ] + command . xgettext_options
14719	return obj .	return obj
8615	define the method get_date_error_message with 2 arguments : self and date_check .	def get_date_error_message ( self , date_check ) :
18262	return translation .	return translation
5643	call the self.get_dum_object method with an argument obj , use the result as an argument for the self.objects.append method .	self . objects . append ( self . get_dump_object ( obj ) )
4157	targets is a list containing tuple with two elements , app_label and None .	targets = [ ( app_label , None ) ]
8810	if self.field.choice_cache is None ,	if self . field . choice_cache is None :
12868	get value under the self.blocks dictionary under the name key , return the last element .	return self . blocks [ name ] [ - 1 ]
2332	define the method message with argument self .	def message ( self ) :
18132	define the function templatize with 2 arguments : src and origin set to None .	def templatize ( src , origin = None ) :
825	from django.db import models into default name space .	from django . db import models
1875	self._read_started is boolean False .	self . _read_started = False
840	from django.utils.itercompat import is_iterable into default name space .	from django . utils . itercompat import is_iterable
15397	for every item in self.items ,	for item in self . items :
10993	call the function unescape_string_literal with an argument var , use it as an argument for the call to the function mark_safe , substitute the result for self.literal .	self . literal = mark_safe ( unescape_string_literal ( var ) )
15517	call the method self.add_item_elements with 2 arguments : handler and item .	self . add_item_elements ( handler , item )
7006	define the method to_python with arguments self and value .	def to_python ( self , value ) :
18805	if contents is not None ,	if contents is not None :
17661	define the method chars with 4 arguments : self , num , truncate set to None , html set to boolean False .	def chars ( self , num , truncate = None , html = False ) :
7251	call the function re.compile with 2 arguments regex , re.UNICODE and substitute the result for regex .	regex = re . compile ( regex , re . UNICODE )
9183	input_type is a string STR0 .	input_type = STR0
6656	define the method __init__ with 6 arguments : self , regex set to None , message set to None , code set to None , inverse_match set to None and flags set to None .	def __init__ ( self , regex = None , message = None , code = None , inverse_match = None , flags = None ) :
8230	define the function all_valid with an argument formsets .	def all_valid ( formsets ) :
9639	bring integer 2 to the power of 31 , subtract the result by 4 , put the result into a list , append possible_sizes to it , substitute minimal element of the resulting list for self._chunk_size .	self . _chunk_size = min ( [ 2 ** 31 - 4 ] + possible_sizes )
5476	remove the STR0 key from the options dictionary and substitute it for self.use_natural_foreign_keys ,	self . use_natural_foreign_keys = options . pop ( STR0 , False ) or self . use_natural_keys
12665	call the method parser.compile_filter with an argument first element of bits , substitute the result for target .	target = parser . compile_filter ( bits [ 1 ] )
18361	if t is not None ,	if t is not None :
15120	call the method self.configure_custom with an argument config , substitute the result for result .	result = self . configure_custom ( config )
14435	get attribute piece of the self object , call it and use the result as an argument for the call to the function force_text , append the result to pieces .	pieces . append ( force_text ( getattr ( self , piece ) ( ) ) )
979	call the operator.add on the values of the self object converted into a dictionary , until it is reduced to a single value , return it .	return reduce ( operator . add , dict ( self ) . values ( ) )
11908	while i is smaller than list_length ,	while i < list_length :
14534	return self.data.day .	return self . data . day
11993	return an empty string .	return STR
553	for every i and k in enumerated values of self._cache , if i is divisible by self._cull_frequency , append k to doomed list .	doomed = [ k for ( i , k ) in enumerate ( self . _cache ) if i % self . _cull_frequency == 0 ]
11460	yield d .	yield d
9043	substitute kwargs for media_attrs .	media_attrs = kwargs
4704	if AmbiguityError exception is caught ,	except AmbiguityError :
12237	call the function mark_safe with an arguments : for every n in nodelist results of the function force_text called with an argument n , joined in a string , return the result .	return mark_safe ( STR . join ( force_text ( n ) for n in nodelist ) )
16559	define the method __init__ with 3 arguments : self , include_html set to boolean False and email_backend set to None .	def __init__ ( self , include_html = False , email_backend = None ) :
18314	try ,	try :
3269	define the method handle with arguments self and unpacked dictionary options .	def handle ( self , ** options ) :
14233	define the method values with an argument self .	def values ( self ) :
1340	otherwise if base_url does not ends with STR0 character ,	elif not base_url . endswith ( STR0 ) :
4224	if not ,	else :
4781	if ImportError exception is caught ,	except ImportError :
10882	substitute token for self.token .	self . token = token
16493	define the method lex with 2 arguments self and text .	def lex ( self , text ) :
5702	if not ,	else :
1078	evaluate the function BytesIO with argument chunk , substitute it for chunk_buffer .	chunk_buffer = BytesIO ( chunk )
1202	call the OVERLAPPED function , substitute the result for overlapped .	overlapped = OVERLAPPED ( )
3766	call the method parser.add_argument with 5 arguments : string STR1 , string STR2 , default as a string STR3 , dest set to string STR4 and help as a string STR5 .	parser . add_argument ( STR1 , STR2 , default = STR3 , dest = STR4 , help = STR5 )
17937	if tt.tm_isdst is greater than integer 0 , return the result .	return tt . tm_isdst > 0
16459	return boolean True .	return True
2672	if has_old_option and has_new_option are both true ,	if has_old_option and has_new_option :
13405	change access mode of path to stat.S_IWRITE mode .	os . chmod ( path , stat . S_IWRITE )
10414	define the method close with an argument self .	def close ( self ) :
15221	assign obj to the obj field of self instance of this class .	self . obj = obj
11057	define the method get_nodes_by_type with 2 arguments : self and nodetype .	def get_nodes_by_type ( self , nodetype ) :
14761	if not ,	else :
18042	do nothing .	pass
11852	try ,	try :
18378	return result .	return result
14985	substitute self for value.configurator .	value . configurator = self
14587	week_number is integer 1 .	week_number = 1
18483	call the method line.lstrip , if the result starts with TRANSLATOR_COMMENT_MARK ,	if line . lstrip ( ) . startswith ( TRANSLATOR_COMMENT_MARK ) :
6888	try ,	try :
12527	assign the string STR0 to is_reversed and bits last elements .	is_reversed = bits [ - 1 ] == STR0
11656	if sign is true ,	if sign :
6897	substitute v.year , v.month and v.day for year_val , month_val and day_val , respectively .	year_val , month_val , day_val = v . year , v . month , v . day
16302	return etags .	return etags
3544	do nothing .	pass
15570	if format_module_path is None .	if format_module_path is None :
4837	break the loop execution .	break
15039	for every name in loggers ,	for name in loggers :
5603	define the class DjangoJSONEncoder from the json.JSONEncoder base class .	class DjangoJSONEncoder ( json . JSONEncoder ) :
16270	if i is smaller than integer 0 ,	if i < 0 :
2644	define the method __init__ with 4 arguments : self , out , style , func set to None and endings set to newline character .	def __init__ ( self , out , style_func = None , ending = STR0 ) :
10244	if not ,	else :
12775	return None .	return None
18268	use_null_fallback is boolean False .	use_null_fallback = False
4579	help is a string , STR0 .	help = STR0
9023	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
18783	if fourth element of version does not equals to string STR0 or STR1 or STR2 or STR3 , raise an exception .	assert version [ 3 ] in ( STR0 , STR1 , STR2 , STR3 )
5906	if not ,	else :
8943	boolean_attrs is an empty list .	boolean_attrs = [ ]
8725	return obj .	return obj
4512	call the method readline.parse_and_bind with an argument string STR0 .	readline . parse_and_bind ( STR0 )
12173	for every node in self.nodelist_loop ,	for node in self . nodelist_loop :
7678	call the method __new__ from the base class of the class DeclarativeFieldsMetaclass , with 4 arguments : mcs , name , bases and attrs .	new_class = ( super ( DeclarativeFieldsMetaclass , mcs ) . __new__ ( mcs , name , bases , attrs ) )
8624	saved_instances is an empty list .	saved_instances = [ ]
15037	raise an ValueError exception with an argument string STR0 formated with name and e .	raise ValueError ( STR0 % ( name , e ) )
5003	statement is an empty list .	statement = [ ]
12493	parser._namedCycleNodes is an empty dictionary .	parser . _namedCycleNodes = { }
2547	call the method self.fetch_command with first element of cwords as an argument , substitute it for subcommand_cls .	subcommand_cls = self . fetch_command ( cwords [ 0 ] )
8835	substitute limit_choices_to for self.limit_choices_to .	self . limit_choices_to = limit_choices_to
7217	if value is an instance of datetime.datetime ,	if isinstance ( value , datetime . datetime ) :
975	convert object self to a dictionary , return it .	return dict ( self )
14797	return _make_decorator .	return _make_decorator
487	evaluate self._has_expired with argument key , if the result is True ,	if self . _has_expired ( key ) :
4249	add model to seen_models set .	seen_models . add ( model )
14467	define the method f with an argument self .	def f ( self ) :
17033	new_args is an empty list .	new_args = [ ]
12332	return string STR0 .	return STR0
6797	decorator deconstructible ,	@ deconstructible
3013	all the method self.create_table with arguments : db and cache._table .	self . create_table ( db , cache . _table )
14333	define the method _iteritems with an argument self .	def _iteritems ( self ) :
18212	_default is None .	_default = None
15662	define the function sanitize_separators with an argument value .	def sanitize_separators ( value ) :
1154	feed data to the parser p .	p . feed ( data )
1276	raise an exception .	raise
4789	from django.apps import apps into default name space .	from django . apps import apps
2008	call the method threading.RLock , substitute the result for self._lock .	self . _lock = threading . RLock ( )
78	from django.utils.module_loading import import_string into default name space .	from django . utils . module_loading import import_string
7535	extend errors list with m for every m in e.error_list , only if m is not in errors .	errors . extend ( m for m in e . error_list if m not in errors )
10460	substitute streaming_content for self.streaming_content .	self . streaming_content = streaming_content
6777	convert protocol to lowercase , use it as a key to get a value from the ip_address_validator_map dictionary , return it .	return ip_address_validator_map [ protocol . lower ( ) ]
17303	try ,	try :
12495	if not ,	else :
18106	define the method __init__ with 3 arguments : self , language and deactivate set to boolean False .	def __init__ ( self , language , deactivate = False ) :
14772	return result .	return result
14642	multiply offset by integer -1 .	offset = - offset
14378	substitute value under STR0 key of kwargs dictionary for warning .	warning = kwargs [ STR0 ]
7308	call the method to_python with an argument data from the base class of the class ImageField , substitute the result for f .	f = super ( ImageField , self ) . to_python ( data )
8813	yield choice .	yield choice
10534	response.streaming_content is an empty list .	response . streaming_content = [ ]
5915	define the function m2m_convert with an argument n ,	def m2m_convert ( n ) :
7681	if base has an attribute STR0 ,	if hasattr ( base , STR0 ) :
13860	if settings.USE_ETAGS is True and function call response.has_header with string STR0 as argument returns boolean False ,	if settings . USE_ETAGS and not response . has_header ( STR0 ) :
18143	if KeyError exception is caught ,	except KeyError :
1035	return self.file.size .	return self . file . size
15273	evaluate the method s.decode with string STR0 and errors as the arguments , on the result call the method encode with the arguments encoding and errors , return the result .	return s . decode ( STR0 , errors ) . encode ( encoding , errors )
2681	substitute STR0 in the string STR1 with subcommand and self.args , respectively , substitute it for usage .	usage = STR0 % ( subcommand , self . args )
1569	self.content_type_extra is None .	self . content_type_extra = None
8485	substitute fields for value under the STR0 key of attrs dictionary .	attrs [ STR0 ] = fields
16926	last element of result is an instance of Choice class , created with an argument list with 2 elements : None and last element of result .	result [ - 1 ] = Choice ( [ None , result [ - 1 ] ] )
17351	import io .	import io
4684	from django.db.migrations.loader import AmbiguityError into default name space .	from django . db . migrations . loader import AmbiguityError
4922	for every model in return value of the function router.get_migratable_models , called with arguments : app_config , connection.alias and include_auto_created set to boolean True .	for model in router . get_migratable_models ( app_config , connection . alias , include_auto_created = True ) :
13990	call the function constant_time_compare with 2 arguments : val1 and val2 .	def constant_time_compare ( val1 , val2 ) :
9227	url_markup_template is a string STR1 .	url_markup_template = STR1
18385	return boolean False .	return False
630	_ is an empty dictionary .	_ = { }
15839	define the method __newobj__ with 2 arguments cls and unpacked list args .	def __newobj__ ( cls , * args ) :
17463	_assertCountEqual is a strnig STR0 .	_assertCountEqual = STR0
18140	from django.conf.locale import LANG_INFO .	from django . conf . locale import LANG_INFO
13089	get the value under the key key of the self.template_cache dictionary , substitute it for template_tuple .	template_tuple = self . template_cache . get ( key )
318	call the method router.db_for_write with argument self.cache_model_class , substitute the result for db .	db = router . db_for_write ( self . cache_model_class )
16792	if not ,	else :
4492	try ,	try :
16201	__D2 is a raw string STR0 .	__D2 = STR0
4936	if alter_sql ,	if alter_sql :
44	except if AttributeError is caught ,	except AttributeError :
11560	call the function template_localtime with 2 arguments : output and use_tz set to context.use_tz , substitute the result for output .	output = template_localtime ( output , use_tz = context . use_tz )
7592	substitute SplitHiddenDateTimeWidget for hidden_widget .	hidden_widget = SplitHiddenDateTimeWidget
5868	define the method _handle_object with arguments self and node .	def _handle_object ( self , node ) :
10111	get the value under the STR0 key of the self.META dictionary , if it starts with a string STR1 ,	if self . META . get ( STR0 , STR ) . startswith ( STR1 ) :
14256	define the method discard with 2 arguments : self and item .	def discard ( self , item ) :
13463	call the method self._archive.close .	self . _archive . close ( )
17748	return an empty string .	return STR
8821	derive the class ModelChoiceField from the ChoiceField base class .	class ModelChoiceField ( ChoiceField ) :
4711	for every migration in migrations_to_squash ,	for migration in migrations_to_squash :
1696	define the method get_response , with self class instance and request as the arguments .	def get_response ( self , request ) :
10814	define the method top with an argument self .	def top ( self ) :
17811	define the function smart_split with an argument text .	def smart_split ( text ) :
17435	if i is true ,	if i :
18414	call the function get_supported_language_variant with 2 arguments : lang_code and strict set to strict , return the result .	return get_supported_language_variant ( lang_code , strict = strict )
1820	return result .	return result
3432	append string STR0 to field_notes .	field_notes . append ( STR0 )
10570	FILTER_SEPARATOR is a string STR0 .	FILTER_SEPARATOR = STR0
5218	if ext is false and content_type is true ,	if not ext and content_type :
13073	for every loader in self.loaders ,	for loader in self . loaders :
1853	path_info is a character STR0 .	path_info = STR0
5973	define the method __str__ with an argument self .	def __str__ ( self ) :
8430	substitute value under the field key of the self.fields dictionary for form_field .	form_field = self . fields [ field ]
7524	if field_value is cotained in self.empty_values ,	if field_value in self . empty_values :
9685	if file_name is false ,	if not file_name :
14838	call the function warnings.warn with 3 arguments : string STR0 , RemovedInDjango19Warning and stacklevel set to integer 2 .	warnings . warn ( STR0 , RemovedInDjango19Warning , stacklevel = 2 )
990	for every field , errors in self.error_dict.items method return value ,	for field , errors in self . error_dict . items ( ) :
5435	define the function get_deserializer with an argument format .	def get_deserializer ( format ) :
13296	raise an exception parser.error_class with an argument string STR0 .	raise parser . error_class ( STR0 )
1039	if OSError or TypeError errors occurred .	except ( OSError , TypeError ) :
13150	if IOError exception is caught ,	except IOError :
12425	divide value by max_value , multiply the result with max_width , substitute it for ratio .	ratio = ( value / max_value ) * max_width
18331	use global variable _default .	global _default
7839	substitute cleaned_data for self.cleaned_data .	self . cleaned_data = cleaned_data
12407	derive the class WidthRatioNode from Node base class .	class WidthRatioNode ( Node ) :
9890	if iterator is None ,	if iterator is None :
11287	define the method inclusion_tag with 5 arguments : self , file_name , context_class set to Context , takes_context set to boolean False , and name set to None .	def inclusion_tag ( self , file_name , context_class = Context , takes_context = False , name = None ) :
14019	call the function force_bytes with an argument password , substitute the result for password .	password = force_bytes ( password )
8140	return a tuple with 2 elements : integers 1 and 0 .	return ( 1 , 0 )
14828	call the function warn_about_renamed_method with 2 arguments : class_name and unpacked list renamed_method , substitute the result for wrapper .	wrapper = warn_about_renamed_method ( class_name , * renamed_method )
15282	if PY3 field of six is boolean True ,	if six . PY3 :
12169	define the method __repr__ with an argument self .	def __repr__ ( self ) :
11264	substitute target_var for self.target_var .	self . target_var = target_var
4639	derive class Command from the base class BaseCommand .	class Command ( BaseCommand ) :
4499	if value under STR0 key of the options dictionary is true ,	if options [ STR0 ] :
14855	substitute level for rv .	rv = level
14036	call the method struct.pack with 2 arguments : bytes string STR0 and i , append the result to salt , substitute the result or u .	u = salt + struct . pack ( STR0 , i )
8709	call the method form.add_prefix with an argument self._pk_field.name , use the result as an key to get the value of the form.data dictionary , assign it value None .	form . data [ form . add_prefix ( self . _pk_field . name ) ] = None
18713	call the function timedelta with an argument integer 0 , return the result .	return timedelta ( 0 )
6129	substitute the value under the STR0 key of options dictionary for value under the STR1 key of daemon_kwargs dictionary .	daemon_kwargs [ STR0 ] = options [ STR1 ]
5221	append ext to guessed_filename .	guessed_filename += ext
14680	i is integer 0 .	i = 0
18446	if LookupError exception is caught ,	except LookupError :
4468	call the method shell.mainloop .	shell . mainloop ( )
16702	stats is a list with 2 elements : 2 integers 0 .	stats [ : ] = [ 0 , 0 ]
13374	if six.PY2 is true ,	if six . PY2 :
4406	if self.addr is false ,	if not self . addr :
9131	define the method __init__ with arguments self and attrs set to None .	def __init__ ( self , attrs = None ) :
18058	call the method _trans.gettext with an argument message .	return _trans . gettext ( message )
7833	try ,	try :
3129	try ,	try :
15088	increment i by integer 1 , substitute the result for i .	i = i + 1
9769	get the next element of iterable self , substitute it for chunk .	chunk = next ( self )
16785	if file_ is true ,	if file_ :
1978	call method mail.attach_alternative as html_message and string STR0 as arguments .	mail . attach_alternative ( html_message , STR0 )
11048	raise an exception .	raise
15151	call the method self.resolve with an argument c , substitute the result for c .	c = self . resolve ( c )
283	return boolean True .	return True
7393	return self._choices .	return self . _choices
13224	define the method content with 2 arguments : self and value .	def content ( self , value ) :
16722	call the function six.reraise with 3 arguments : ImportError , instance of ImportError class created with an argument msg , and third element of result of the function sys.exc_info .	six . reraise ( ImportError , ImportError ( msg ) , sys . exc_info ( ) [ 2 ] )
4913	define the function sql_create with 3 arguments : app_config , style and connection .	def sql_create ( app_config , style , connection ) :
8559	self.saved_forms is an empty list .	self . saved_forms = [ ]
11498	define the method __init__ with 3 arguments : self , template_string and origin .	def __init__ ( self , template_string , origin ) :
5413	if not ,	else :
8605	call the method self.error_class with an argument list with one element , return value of the method self.get_form_error , substitute the result for the value under the NON_FIELD_ERRORS key of form._errors dictionary .	form . _errors [ NON_FIELD_ERRORS ] = self . error_class ( [ self . get_form_error ( ) ] )
15740	otherwise if cls._delegate_bytes is true ,	elif cls . _delegate_bytes :
12695	asvar is None .	asvar = None
5418	if format is not contained in _serializers ,	if format not in _serializers :
5038	for app_config in return value of the method apps.get_app_configs ,	for app_config in apps . get_app_configs ( ) :
13607	if not ,	else :
12184	call the method self.sequence.resolve with 2 arguments : context and boolean True , substitute the result for values .	values = self . sequence . resolve ( context , True )
8976	append error_class converted into a string to string STR0 , substitute the result for self.error_class .	self . error_class = STR0 . format ( error_class )
7453	if lengths of initial and data are not the same ,	if len ( initial ) != len ( data ) :
3136	call the method apps.get_app_config with an argument exclude , substitute the result for app_config .	app_config = apps . get_app_config ( exclude )
1974	if settings.ADMINS is false ,	if not settings . ADMINS :
4377	call the method parser.add_argument with 5 arguments : string STR0 , action set to string STR1 , dest set to string STR2 , default set to boolean True and help set to STR3 .	parser . add_argument ( STR0 , action = STR1 , dest = STR2 , default = True , help = STR3 )
14839	import module logging.handlers .	import logging . handlers
10812	self.backout is an empty list .	self . backout = [ ]
3457	field_type is a string STR0 .	field_type = STR0
16551	call the method logging.captureWarnings with an argument boolean True .	logging . captureWarnings ( True )
18070	call the function lazy with 2 arguments : ugettext and six.text_type , substitute ugettext_lazy .	ugettext_lazy = lazy ( ugettext , six . text_type )
4650	if app_label is not contained in executor.loader.migrated_apps ,	if app_label not in executor . loader . migrated_apps :
6953	import module os .	import os
4132	define the method handle with self instance of a class , list args , dictionary options as arguments .	def handle ( self , * args , ** options ) :
16968	try ,	try :
18100	call the function lazy_number with 6 arguments : npgettext , six.text_type , context set to context , singular set to singular , plural set to plural and number set to number , return the result .	return lazy_number ( npgettext , six . text_type , context = context , singular = singular , plural = plural , number = number )
1322	raise an NotImplementedError exception with argument string STR0 .	raise NotImplementedError ( STR0 )
1486	derive the UploadedFile class from the File base class .	class UploadedFile ( File ) :
18081	substitute value under the number key of the rhs dictionary for number_value .	number_value = rhs [ number ]
16377	substitute doublecolon_len for best_doublecolon_len .	best_doublecolon_len = doublecolon_len
7554	derive the class FilePathField from the base class ChoiceField class .	class FilePathField ( ChoiceField ) :
945	derive the class ValidationError from the Exception base class .	class ValidationError ( Exception ) :
10026	if KeyError exception is caught ,	except KeyError :
8215	join return value of the function six.text_type called with an argument self.management_form and forms into a string , separated by newline , use it as an argument for the call to the function mark_safe , return the result .	return mark_safe ( STR0 . join ( [ six . text_type ( self . management_form ) , forms ] ) )
9512	return media .	return media
763	WARNING is integer 30 .	WARNING = 30
5019	append the result to old_app_dirs . if file path old_app_dir exists ,	if os . path . exists ( old_app_dir ) :
15049	raise an ValueError exception with an argument string STR0 formated with e .	raise ValueError ( STR0 % e )
458	return boolean False .	return False
3873	call the function io.open with 3 arguments : potfile , string STR0 and encoding set to string STR1 as arguments ,	with io . open ( potfile , STR0 , encoding = STR1 ) as fp :
4019	autodetector is an instance of the MigrationAutodetector class , created with 3 arguments : result of the method loader.project_state , result of the method ProjectState.from_apps with an argument apps and result of the method InteractiveMigrationQuestioner , called with 2 arguments specified_apps set to app_labels and dry_run set to self.dry_run .	autodetector = MigrationAutodetector ( loader . project_state ( ) , ProjectState . from_apps ( apps ) , InteractiveMigrationQuestioner ( specified_apps = app_labels , dry_run = self . dry_run ) , )
16397	ipv4_address is a string STR0 formated with first 2 elements of seventh element of hextets converted into hexadecimal number , second 2 elements of seventh element of hextets converted into hexadecimal number , first 2 elements of eight element of hextets converted into hexadecimal number , second 2 elements of eight element of hextets converted into hexadecimal number .	ipv4_address = STR0 % ( int ( hextets [ 6 ] [ 0 : 2 ] , 16 ) , int ( hextets [ 6 ] [ 2 : 4 ] , 16 ) , int ( hextets [ 7 ] [ 0 : 2 ] , 16 ) , int ( hextets [ 7 ] [ 2 : 4 ] , 16 ) , )
10543	__all__ is a tuple containing 4 strings : STR0 , STR1 , STR2 and STR3 .	__all__ = ( STR0 , STR1 , STR2 , STR3 )
6757	call the re.compile function with an argument raw string STR0 , substitute the result for slug_re .	slug_re = re . compile ( STR0 )
9658	counters is a list containing length of handlers number of zeros .	counters = [ 0 ] * len ( handlers )
7910	convert result of the method self.__iter__ into a list , return element at the idx index .	return list ( self . __iter__ ( ) ) [ idx ]
6297	raise an ViewDoesNotExist exception with an argument string STR0 , where string STR1 is replaced by lookup_view and mod_name , respectively .	raise ViewDoesNotExist ( STR0 % ( lookup_view , mod_name ) )
14384	return self .	return self
3469	if not	else :
6437	call the method lookups.appendlist with 2 arguments : pattern.callback and a tuple containing 3 elements : bits , p_pattern , and pattern.default_args .	lookups . appendlist ( pattern . callback , ( bits , p_pattern , pattern . default_args ) )
15636	call the function six.text_type with an argument value , use the result as an argument for the call to the function mark_safe , return the result .	return mark_safe ( six . text_type ( value ) )
8973	if error_class is None ,	if error_class is None :
6252	call the function local , substitute the result _urlconf .	_urlconfs = local ( )
11142	if first element of params equals a string STR0 ,	if params [ 0 ] == STR0 :
4948	call the method connection.introspection.table_names with an argument cursor , substitute the result for table_names .	table_names = connection . introspection . table_names ( cursor )
16818	define the function format with 6 arguments : number , decimal_sep , decimal_pos set to None , grouping set to integer 0 ,	def format ( number , decimal_sep , decimal_pos = None , grouping = 0 , thousand_sep = STR , force_grouping = False ) :
1323	define the method url with arguments self and name .	def url ( self , name ) :
2208	call the function time.time , substitute the result for timeval .	timeval = time . time ( )
3005	get the value under the STR0 key of the options dictionary , convet it to an integer and substitute for self.verbosity .	self . verbosity = int ( options . get ( STR0 ) )
415	try ,	try :
4460	shells is a list containing 2 elements : string STR0 and string STR1 .	shells = [ STR0 , STR1 ]
12216	zip self.loopvars and item is a list to tuples , convert the result to an dictionary , substitute it for unpacked_vars .	unpacked_vars = dict ( zip ( self . loopvars , item ) )
10204	call the method setlistdefault from the base class of the class QueryDict , with arguments key and default_list , return the result .	return super ( QueryDict , self ) . setlistdefault ( key , default_list )
17978	call the method timezone.tzname with an argument None , return the result .	return timezone . tzname ( None )
6399	define the method _populate with an argument self .	def _populate ( self ) :
12030	move integer 1 left for 20 bits , substitute the result for MB .	MB = 1 << 20
18330	define the function do_translate with 2 arguments : message and translation_function .	def do_translate ( message , translation_function ) :
5838	call the value.natural_key method , substitute the result for natural .	natural = value . natural_key ( )
12380	kwargs is an dictionary , populated for every k and v in result of the method self.kwargs.items with : result of the call to the method v.resolve with an argument context , for result of the function smart_text called with 2 arguments k and string STR0 .	kwargs = dict ( ( smart_text ( k , STR0 ) , v . resolve ( context ) ) for k , v in self . kwargs . items ( ) )
274	convert current_expires to a string , use it as the argument for the call to the function typecast_timestamp , substitute the result for current_expires .	current_expires = typecast_timestamp ( str ( current_expires ) )
15785	otherwise if self._delegate_text is true ,	elif self . _delegate_text :
18039	__all__ is an list containing strings : STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 , STR7 , STR8 , STR9 , STR10 , STR11 , STR12 , STR13 , STR14 , STR15 , STR16 , STR17 , STR18 , STR19 , STR20 , STR21 , STR22 , STR23 , STR24 , STR25 and STR26 .	__all__ = [ STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 , STR7 , STR8 , STR9 , STR10 , STR11 , STR12 , STR13 , STR14 , STR15 , STR16 , STR17 , STR18 , STR19 , STR20 , STR21 , STR22 , STR23 , STR24 , STR25 , STR26 , ]
477	define the initialization method __init__ with 3 arguments : self , name and params .	def __init__ ( self , name , params ) :
6653	code is a string STR0	code = STR0
3415	if new_name is not equal to col_name ,	if new_name != col_name :
12377	define the method render with 2 arguments : self and context .	def render ( self , context ) :
10555	from django.utils.text import smart_split , unescape_string_literal and get_text_list into default namespace .	from django . utils . text import ( smart_split , unescape_string_literal , get_text_list )
10194	for key and value in result of the function six.iterlists called with an argument ,	for key , value in six . iterlists ( self ) :
16078	call the function escape with an argument lead , substitute the result for lead , call the function escape with an argument trail , substitute the result for trail .	lead , trail = escape ( lead ) , escape ( trail )
444	call the method self.make_key with key and version set to version as arguments , substitute the result for key .	key = self . make_key ( key , version = version )
16967	if ch is contained in string STR0 ,	if ch in STR0 :
6866	if years is true ,	if years :
6850	escaped is boolean False .	escaped = False
3058	call the method parser.add_argument with arguments : string STR1 , action set to string STR2 , dest set to string STR3 , default set to DEFAULT_DB_ALIAS and help set to string STR4 .	parser . add_argument ( STR1 , action = STR2 , dest = STR3 , default = DEFAULT_DB_ALIAS , help = STR4 )
2580	try ,	try :
5588	define the method getvalue with an argument self .	def getvalue ( self ) :
7543	raise an NotImplementedError with an argument string STR0 .	raise NotImplementedError ( STR0 )
8692	if not ,	else :
12257	return nodelist_true_output , if true , if not call the method self.nodelist_true.render with an argument context and return the result .	return nodelist_true_output or self . nodelist_true . render ( context )
10392	get the value under the key key of the self.cookies dictionary , call the cookie_date function with an argument : sum of the result of the function time.time and max_age , substitute it for STR0 key of the previously returned dictionary .	self . cookies [ key ] [ STR0 ] = cookie_date ( time . time ( ) + max_age )
13161	derive the class ContentNotRenderedError from the Exception base class .	class ContentNotRenderedError ( Exception ) :
3279	try ,	try :
9344	get the value under value key of a dictionary with 4 entries : STR0 for boolean True , STR1 for boolean False , STR2 for STR3 , and STR4 for STR5 , substitute it for value .	value = { True : STR0 , False : STR1 , STR2 : STR3 , STR4 : STR5 } [ value ]
16139	find the first , second and third subgroup of the m regular expression match , assign the result to the attrname , rest and attrvalue , respectively .	attrname , rest , attrvalue = m . group ( 1 , 2 , 3 )
16484	self.tokens is an empty dictionary .	self . toks = { }
4345	from django.utils import translation into default namespace .	from django . utils import translation
13287	define the method nud with 2 arguments : self and parser .	def nud ( self , parser ) :
7153	raise an ValidationError with 3 arguments : value under the STR0 key of the self.error_messages dictionary , code set to string STR1 and params set to a dictionary with an entry : self.max_digits for STR2 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 , params = { STR2 : self . max_digits } , )
7190	define the method to_python with arguments self and value .	def to_python ( self , value ) :
6830	from django.forms.extras.widgets import SelectDateWidget into default name space .	from django . forms . extras . widgets import SelectDateWidget
2722	delete value under the STR0 key of the cmd_options dictionary .	del cmd_options [ STR0 ]
12904	self.blocks is a dictionary with elements : n for n.name , for every n in return value of the method nodelist.get_nodes_by_type , called with an argument BlockNode .	self . blocks = dict ( ( n . name , n ) for n in nodelist . get_nodes_by_type ( BlockNode ) )
6151	import module zlib .	import zlib
12579	return an instance of TemplateLiteral with 2 arguments : result of the function self.template_parser.compile_filter , called with an argument value and value .	return TemplateLiteral ( self . template_parser . compile_filter ( value ) , value )
11747	call the function _urlize with 3 arguments : value , nofollow set to boolean True , autoescape set to autoescape , use the result as an argument for the call to the function mark_safe , return the result .	return mark_safe ( _urlize ( value , nofollow = True , autoescape = autoescape ) )
14647	from django.utils.translation import ugettext_lazy as _ and pgettext_lazy into default name space .	from django . utils . translation import ugettext_lazy as _ , pgettext_lazy
14305	try ,	try :
18300	return _translations dictionary value , under the language key .	return _translations [ language ]
18101	define the function activate with an argument language .	def activate ( language ) :
7497	for every f in fields ,	for f in fields :
6514	if self._populated is false ,	if not self . _populated :
17160	return result .	return result
11422	define the method got with 3 arguments : self , key and otherwise set to None .	def get ( self , key , otherwise = None ) :
17795	get the unicode representation of result of the method match.group called with an integer 1 , format with in a string STR0 , return the result .	return STR0 % ord ( match . group ( 1 ) )
725	do nothing .	pass
8323	concatenate opts.concrete_fields , sortable_virtual_fields and opts.many_to_many , for every f in sorted result ,	for f in sorted ( opts . concrete_fields + sortable_virtual_fields + opts . many_to_many ) :
1123	from django.core.files import File into default name space .	from django . core . files import File
668	call the method self_cache.delete_multi with argument list containing keys mapped through function l .	self . _cache . delete_multi ( map ( l , keys ) )
17169	substitute old for self.mod .	self . mod = old
3475	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
1150	read chunk_size bytes from file and store it in data .	data = file . read ( chunk_size )
2467	return an instance of the module.Command class .	return module . Command ( )
325	derive the class DummyCache from the base class BaseCache .	class DummyCache ( BaseCache ) :
7600	error_messages as an dictionary with an entry : value under the STR0 of errors dictionary for STR1 , localize set to localize , and an instance of the class TimeField created with 3 arguments : input_formats set to input_time_formats , error_messages as an dictionary with an entry : value under the STR2 of errors dictionary for STR3 , localize set to localize call the __init__ method with fields , unpacked list args and unpacked dictionary kwargs from the base class of the SplitDateTimeField class .	super ( SplitDateTimeField , self ) . __init__ ( fields , * args , ** kwargs )
11597	call the function force_text with an argument first element of args , substitute the result for first element of args .	args [ 0 ] = force_text ( args [ 0 ] )
16423	split ip_str by STR0 , if last element of the result is not equal to hextet .	if not ip_str . split ( STR0 ) [ - 1 ] == hextet :
8104	call the function empty_form with 3 arguments : auto_id as self.auto_id , prefix set to the return value of the self.add_prefix method , called with string STR0 as an argument and empty_permitted as boolean True , substitute the result for form .	form = self . form ( auto_id = self . auto_id , prefix = self . add_prefix ( STR0 ) , empty_permitted = True , )
1468	call the method close on self .	self . close ( )
10028	return default .	return default
2202	call the function Charset.Charset with argument string STR0 , substitute the result for utf8_charset .	utf8_charset = Charset . Charset ( STR0 )
4482	do nothing .	pass
7431	call the method self._coerce with an argument value , return the result .	return self . _coerce ( value )
18426	get the value under the LANGUAGE_SESSION_KEY key of the request.session dictionary , substitute it for lang_code .	lang_code = request . session . get ( LANGUAGE_SESSION_KEY )
11319	if ImportError exception is caught ,	except ImportError :
985	if not ,	else :
15817	substitute empty for self._wrapped .	self . _wrapped = empty
6650	derive the class RegexValidator form the object base class .	class RegexValidator ( object ) :
11818	try ,	try :
7493	default_error_messages is an dictionary with 2 entries : return value of the function _ called with an argument string , STR0 for STR1 and return value of the function _ called with an argument string , STR2 for STR3 .	default_error_messages = { STR0 : _ ( STR1 ) , STR2 : _ ( STR3 ) , }
7705	call the method self.as_table , return the result .	return self . as_table ( )
5712	get field.rel.field_name attribute of the object obj , substitute it for value .	value = getattr ( obj , field . rel . field_name )
7506	define the method validate with arguments self and value .	def validate ( self , value ) :
16770	if KeyError exception is caught ,	except KeyError :
9516	call the method copy.deepcopy with an argument self.widgets , substitute the result for obj.widgets .	obj . widgets = copy . deepcopy ( self . widgets )
7576	if self.match is None or call to the method self.match_re.search with an argument f , evaluated to true ,	if self . match is None or self . match_re . search ( f ) :
18303	msg is a string STR0 .	msg = ( STR0 )
9511	sum media and w.media , substitute the result for media .	media = media + w . media
17	return cache .	return cache
6621	try ,	try :
5658	get field.name from the obj , substitute it for related .	related = getattr ( obj , field . name )
8642	for every form in self.extra_forms ,	for form in self . extra_forms :
16073	url is a string STR0 formated with local and domain .	url = STR0 % ( local , domain )
6041	otherwise if second element of args equals a string STR0 ,	elif args [ 1 ] == STR0 :
4457	derive the class Command from the BaseCommand class .	class Command ( BaseCommand ) :
857	errors is an empty list .	errors = [ ]
11612	decorator stringfilter ,	@ stringfilter
15035	call the function _checkLevel with an argument level , use the result as an argument for the call to the function handler.setLevel .	handler . setLevel ( _checkLevel ( level ) )
18469	comment is an empty list .	comment = [ ]
17204	if not ,	else :
17176	call the method self._resolve , substitute the result for _module .	_module = self . _resolve ( )
12606	call the method parser.delete_first_token .	parser . delete_first_token ( )
14288	if memo is None ,	if memo is None :
585	define the method __init__ with , self , server , params , library , value_not_found_exception as arguments .	def __init__ ( self , server , params , library , value_not_found_exception ) :
203	self.verbose_name_plural is a string STR0 .	self . verbose_name_plural = STR0
5207	if IOErro , renamed to e , exception is caught ,	except IOError as e :
6865	if attrs is not None substitute it for self.attrs , or if not self.attrs is an empty dictionary .	self . attrs = attrs or { }
3168	substitute label for app_label .	app_label = label
18333	get STR0 attribute of the _active object , if it exists substitute it for t , if not t is None .	t = getattr ( _active , STR0 , None )
11520	self.command_stack is an empty list .	self . command_stack = [ ]
3589	if fixture_name is an absolute file path ,	if os . path . isabs ( fixture_name ) :
14422	import module datetime .	import datetime
13739	call the function thread.start_new_thread with main_func and args as arguments .	thread . start_new_thread ( main_func , args )
17909	return self.__name__ .	return self . __name__
5820	if related_att is not None ,	if related_att is not None :
298	if not ,	else :
4172	if not ,	else :
10593	do nothing .	pass
13712	endless loop ,	while True :
10263	return s .	return s
3997	get the value under the STR0 key of the options dictionary , if the key exists substitute it for self.empty , if not , self.empty is boolean False .	self . empty = options . get ( STR0 , False )
9919	substitute FILE for TYPE .	TYPE = FILE
6651	regex is an empty string .	regex = STR
17450	define the function wrapper with an argument cls .	def wrapper ( cls ) :
12962	call the method parser.parse with an argument tuple with one element string STR0 , substitute the result for nodelist .	nodelist = parser . parse ( ( STR0 , ) )
3438	append string STR0 to field_notes .	field_notes . append ( STR0 )
15212	import module codecs .	import codecs
12658	substitute second element of bits without the first and last element for format_string .	format_string = bits [ 1 ] [ 1 : - 1 ]
16422	if count of occurrence of STR0 in ip_str is equal to integer 3 ,	if hextet . count ( STR0 ) == 3 :
9192	input_type is a string STR0 .	input_type = STR0
9761	define the method read with arguments self and size set to None .	def read ( self , size = None ) :
16345	if character is not equal to a string STR0 ,	if character != STR0 :
18519	plural is an empty list .	plural = [ ]
17214	for every attr in _moved_attributes ,	for attr in _moved_attributes :
10817	if self.pointer is smaller than length of self.subject , return boolean True , otherwise return False .	return self . pointer < len ( self . subject )
7709	define the method __getitem__ with 2 arguments : self and name .	def __getitem__ ( self , name ) :
15613	for every iso_input in the result , if iso_input is not contained in val ,	if iso_input not in val :
16130	attrs is a empty list .	attrs = [ ]
3375	otherwise if , if value under the STR0 key of the dictionary contained under the column_name key of the dictionary indexes is true ,	elif indexes [ column_name ] [ STR0 ] :
1536	call the __init__ method from the base class of the SimpleUploadedFile class with 7 arguments : BytesIO ( content ) , None , name , content_type , length of content , None and None .	super ( SimpleUploadedFile , self ) . __init__ ( BytesIO ( content ) , None , name , content_type , len ( content ) , None , None )
8626	for every form in self.initial_forms ,	for form in self . initial_forms :
2619	from django.core.exceptions import ImproperlyConfigured into default name space .	from django . core . exceptions import ImproperlyConfigured
3352	yield string STR1 % self.db_module as the result , where STR0 is replaced with result of the call to the function , table2model with an argument table_name .	yield STR0 % table2model ( table_name )
18478	if incomment is true ,	if incomment :
15895	if fset is not None ,	if fset is not None :
968	substitute message for self.message .	self . message = message
7884	decorator python_2_unicode_compatible ,	@ python_2_unicode_compatible
9093	base is an instance of Media class .	base = Media ( )
5789	self.xml is a instance of SimplerXMLGenerator class created with 2 arguments : self.stream and value under the STR0 key of the options dictionary , if the key doesnt exists use settings.DEFAULT_CHARSET instead .	self . xml = SimplerXMLGenerator ( self . stream , self . options . get ( STR0 , settings . DEFAULT_CHARSET ) )
3994	get the value under the STR0 key of the options dictionary , substitute it for self.interactive .	self . interactive = options . get ( STR0 )
124	if version is None ,	if version is None :
7432	derive the class MultipleChoiceField from the base class ChoiceField class .	class MultipleChoiceField ( ChoiceField ) :
1201	call the function msvcrt.get_osfhandle with return value of the _fd ( f ) function as argument , substitute the result for hfile .	hfile = msvcrt . get_osfhandle ( _fd ( f ) )
8385	if missing_fields is true ,	if missing_fields :
1044	get the position of the file self.file pointer , substitute it for size .	size = self . file . tell ( )
15135	try ,	try :
9686	skip this loop execution .	continue
2182	return boolean False .	return False
2229	call the method val.encode with argument string STR0 .	val . encode ( STR0 )
13210	return retval .	return retval
6817	call the function ungettext_lazy with 3 arguments : string STR0Ensure this value has at most % ( limit_value ) d characters ( it has % ( show_value ) d ) . STR1limit_value ' , substitute the result for message .	message = ungettext_lazy ( STR0 , STR1 , STR2 )
13048	is_usable is boolean True .	is_usable = True
2970	call the self.compile_messages with locations as argument ,	self . compile_messages ( locations )
7245	call the method __init__ from the base class of the class RegexField , with 4 arguments : max_length , min_length , unpacked list args , unpacked dictionary kwargs .	super ( RegexField , self ) . __init__ ( max_length , min_length , * args , ** kwargs )
9210	if data is an instance of MultiValueDict or MergeDict class ,	if isinstance ( data , ( MultiValueDict , MergeDict ) ) :
625	call the method self._cache.delete with argument key .	self . _cache . delete ( key )
13556	from django.utils.six.moves import _thread as thread into default name space .	from django . utils . six . moves import _thread as thread
4755	from django.core.management.templates import TemplateCommand into default name space .	from django . core . management . templates import TemplateCommand
7824	if not ,	else :
16830	split str_number by STR0 , substitute the result for int_part and dec_part , respectively .	int_part , dec_part = str_number . split ( STR0 )
14583	i is integer 366 .	i = 366
16581	call the method mail.mail_admins with 5 arguments : subject , message , fail_silently as boolean True , tml_message as html_message , and connection as the result of the method self.connection .	mail . mail_admins ( subject , message , fail_silently = True , html_message = html_message , connection = self . connection ( ) )
9087	define the function media_property with an argument cls .	def media_property ( cls ) :
1921	if UnicodeDecodeError exception is caught ,	except UnicodeDecodeError :
14866	call the method self.configurator.convert with an argument value , substitute the result for result .	result = self . configurator . convert ( value )
10178	define the method __setitem__ with 3 arguments : self , key and value .	def __setitem__ ( self , key , value ) :
6961	from django.forms.utils import from_current_timezone and to_current_timezone into default name space .	from django . forms . utils import from_current_timezone , to_current_timezone
6975	default_validators is an empty list .	default_validators = [ ]
16602	if ImportError exception is caught .	except ImportError :
17250	_urllib_robotparser_moved_attributes is a list containing an instance of MovedAttribute class , created with 3 argument : strings , STR0 , STR1 , STR2 .	_urllib_robotparser_moved_attributes = [ MovedAttribute ( STR0 , STR1 , STR2 ) , ]
2330	call the function get_connection with argument fail_silently set to fail_silently , substitute it for self.connection .	self . connection = get_connection ( fail_silently = fail_silently )
8223	if min_num is None ,	if min_num is None :
265	if six.PY3 is true ,	if six . PY3 :
7756	join hidden_fields elements into a string , without separation , substitute the result for str_hidden .	str_hidden = STR . join ( hidden_fields )
2821	join elements of output into a string , separated by newline characters , return it .	return STR0 . join ( output )
10703	return token .	return token
3202	if stream is true ,	if stream :
3640	raise an CommandError with an argument string STR0 , replace STR1 with : elements of last element of parts joined into a string and last element of parts .	raise CommandError ( STR0 % ( STR . join ( parts [ : - 1 ] ) , parts [ - 1 ] ) )
7579	if not ,	else :
8947	delete entry under the attr key of the attrs dictionary .	del attrs [ attr ]
14836	import module warnings .	import warnings
17820	if first element of text is contained in STR0 .	if text [ 0 ] in STR0 :
11344	if ImportError exception is caught ,	except ImportError :
15486	call the method self.write_items with an argument handler .	self . write_items ( handler )
1238	if os has an attribute STR0 ,	if hasattr ( os , STR0 ) :
5602	call the six.reraise function with 3 arguments : DeserializationError , DeserializationError called with an argument e , third element of the return value of the function sys.exc_info .	six . reraise ( DeserializationError , DeserializationError ( e ) , sys . exc_info ( ) [ 2 ] )
13856	if cache_timeout equals to None ,	if cache_timeout is None :
8306	if instance.pk is None ,	if instance . pk is None :
18388	to_locale called with an argument lang_code , if the result is not None , return boolean True .	return True
5093	if OSError renamed to e , exception is caught ,	except OSError as e :
11163	raise an TemplateSyntaxError exception with an argument string STR0 , where STR1 is replaced with name .	raise TemplateSyntaxError ( STR0 % name )
13968	import warnings .	import warnings
16648	call the function make_key with 3 arguments : args , kwds and typed , substitute the result for key .	key = make_key ( args , kwds , typed )
9668	skip this loop iteration ,	continue
6855	otherwise if char is contained in string STR0 ,	elif char in STR0 :
15859	call the function new_method_proxy with an argument bool , substitute the result for __nonzero__ .	__nonzero__ = new_method_proxy ( bool )
17268	try ,	try :
2938	define method add_arguments with self class instance and parser as arguments .	def add_arguments ( self , parser ) :
32	remove STR0 key from params dictionary and put it into backend .	backend = params . pop ( STR0 )
8628	if form is contained in forms_to_delete ,	if form in forms_to_delete :
2189	import module time .	import time
13810	from django.utils import iri_to_uri , force_bytes , force_text to the default name space .	from django . utils . encoding import iri_to_uri , force_bytes , force_text
17813	call the method smart_split_re.finditer with an argument text , for every bit in result ,	for bit in smart_split_re . finditer ( text ) :
18588	singular is an empty list .	singular = [ ]
9234	template is a string STR0 .	template = STR0
15403	if latest_date is true , return it , if not , call the method datetime.datetime.now and return the result .	return latest_date or datetime . datetime . now ( )
8382	call the function fields_for_model with 9 arguments : opts.model , opts.fields , opts.exclude , opts.widgets , formfield_callback , opts.localized_fields , opts.labels , opts.help_texts and opts.error_messages , substitute the result for fields .	fields = fields_for_model ( opts . model , opts . fields , opts . exclude , opts . widgets , formfield_callback , opts . localized_fields , opts . labels , opts . help_texts , opts . error_messages )
17207	substitute name for old_attr .	old_attr = name
2217	if not ,	else :
7343	third element of url_fields is an empty string .	url_fields [ 2 ] = STR
2360	if mimetype is not None raise an error .	assert mimetype is None
5381	define the method previous_page_number with an argument self .	def previous_page_number ( self ) :
16178	if self.cdata_tag is not None ,	if self . cdata_tag is not None :
13156	raise an TemplateDoesNotExist exception with an argument error_msg .	raise TemplateDoesNotExist ( error_msg )
18001	if not ,	else :
5997	call the method tpl.format with an arguments self.sysid and self.pubid .	return tpl . format ( self . sysid , self . pubid )
12472	if parser doesnt have an STR0 attribute ,	if not hasattr ( parser , STR0 ) :
3135	try ,	try :
8770	kwargs is a dictionary with 17 entries : form for STR0 , formfield_callback for STR1 , formset for STR2 , extra for STR3 , can_delete for STR4 , can_order for STR5 , fields for STR6 , exclude for STR7 , min_num for STR8 , max_num for STR9 , widgets for STR10 , validate_min for STR11 , validate_max for STR12 , localized_fields for STR13 , labels for STR14 , help_texts for STR15 , and error_messages for STR16 .	kwargs = { STR0 : form , STR1 : formfield_callback , STR2 : formset , STR3 : extra , STR4 : can_delete , STR5 : can_order , STR6 : fields , STR7 : exclude , STR8 : min_num , STR9 : max_num , STR10 : widgets , STR11 : validate_min , STR12 : validate_max , STR13 : localized_fields , STR14 : labels , STR15 : help_texts , STR16 : error_messages , }
2737	define the method execute with 3 arguments : self , unpacked list args and unpacked dictionary options .	def execute ( self , * args , ** options ) :
10443	if value has an STR0 attribute and value is not an instance of bytes or six.string_types class .	if hasattr ( value , STR0 ) and not isinstance ( value , ( bytes , six . string_types ) ) :
9521	derive the class SplitDateTimeWidget from the MultiWidget base class .	class SplitDateTimeWidget ( MultiWidget ) :
9149	unpack dictionary kwargs , map it through self.attrs and convert to dictionary , substitute the result for attrs .	attrs = dict ( self . attrs , ** kwargs )
16766	define the function module_has_submodule with 2 arguments : package and module_name .	def module_has_submodule ( package , module_name ) :
2364	append a tuple containing 3 elements : filename , content , mimetype to self.attachments list .	self . attachments . append ( ( filename , content , mimetype ) )
9499	if id_ is true ,	if id_ :
11951	define the function date with 2 arguments value and arg set to None .	def date ( value , arg = None ) :
13333	define the method expression with 2 arguments : self and rbp set to integer 0 .	def expression ( self , rbp = 0 ) :
8350	append f.name to ignored list .	ignored . append ( f . name )
5688	call the method Model._meta.pk.to_python with one argument : value under the STR0 key of dictionary d , or None if previous doesnt exists , substitute the result for the value under the Model._meta.pk.attname key of data dictionary .	data [ Model . _meta . pk . attname ] = Model . _meta . pk . to_python ( d . get ( STR0 , None ) )
3551	call the function os.path.basename with an argument fixture_file , use the result as an argument for the call to the method , self.parse_name , assign the result to _ , ser_fmt and cmp_fmt , respectively .	_ , ser_fmt , cmp_fmt = self . parse_name ( os . path . basename ( fixture_file ) )
12081	from itertools import groupby and cycle as itertools_cycle into default name space .	from itertools import groupby , cycle as itertools_cycle
8063	call the method self.initial_form_count , return the result initial_forms .	initial_forms = self . initial_form_count ( )
17047	derive the class EscapeData from object base class .	class EscapeData ( object ) :
4770	from django.core.management.base import CommandError into default name space .	from django . core . management . base import CommandError
5660	call the method related.natural_key , substitute the result for value .	value = related . natural_key ( )
12634	temp_lib is an instance of Library class .	temp_lib = Library ( )
16000	sum the result of the method s.get_data and s.rawdata , return the result .	return s . get_data ( ) + s . rawdata
2318	put bcc into a list , assign it to self.bcc .	self . bcc = list ( bcc )
10872	increment i by integer 1 , .	i += 1
3393	if seventh element of row is true ,	if row [ 6 ] :
14649	WEEKDAYS_ABBR is an dictionary with 7 entries : result of the call to the function _ with an argument string STR0 for 0 , result of the call to the function _ with an argument string STR1 for 1 , result of the call to the function _ with an argument string STR2 for 2 , result of the call to the function _ with an argument string STR3 for 3 , result of the call to the function _ with an argument string STR4 for 4 , result of the call to the function _ with an argument string STR5 for 5 , and result of the call to the function _ with an argument string STR6 for 6 .	WEEKDAYS_ABBR = { 0 : _ ( STR0 ) , 1 : _ ( STR1 ) , 2 : _ ( STR2 ) , 3 : _ ( STR3 ) , 4 : _ ( STR4 ) , 5 : _ ( STR5 ) , 6 : _ ( STR6 ) }
9106	return an instance of Media class , created with definition as an argument .	return Media ( definition )
2585	no_settings_commands is a list containing entries : STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 , STR7 and STR8 .	no_settings_commands = [ STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 , STR7 , STR8 , ]
9921	if TYPE equals to RAW ,	if TYPE == RAW :
1169	import module os .	import os
18560	strip g of STR from both ends ,	g = g . strip ( STR )
4125	call the method parser.add_argument with string STR0 , nargs set to charcter STR1 , help containing string , STR2 as arguments .	parser . add_argument ( STR0 , nargs = STR1 , help = STR2 )
9681	call the method field_stream.read , substitute the result for data .	data = field_stream . read ( )
14082	if err_log is true ,	if err_log :
15202	get value under the STR0 key of the config dictioanry , if it exists substitute it for propagate , if not propagate is None .	propagate = config . get ( STR0 , None )
10463	raise an AttributeError with an argument string STR0Use `streaming_content` instead . `` , where STR1 is replaced with self.__class__.__name__ .	raise AttributeError ( STR0 % self . __class__ . __name__ )
9825	raise an StopIteration .	raise StopIteration ( )
15372	if ttl is not None ,	categories = [ ( c ) for c in categories ]
6960	from django.core.exceptions import ValidationError into default name space .	from django . core . exceptions import ValidationError
1601	self.activated is boolean False .	self . activated = False
7992	return an empty string .	return STR
5451	for every format in BUILTIN_SERIALIZERS ,	for format in BUILTIN_SERIALIZERS :
1204	convert ret to a boolean , return it .	return bool ( ret )
16062	if nofollow is true nofollow_attr is a string STR1 , otherwise nofollow_attr is an empty string .	nofollow_attr = STR1 if nofollow else STR
16632	HITS and MISSES are integer 0 and 1 , respectively .	HITS , MISSES = 0 , 1
4204	call the method self.style.NOTICE with string STR0 as an argument , use the result as an argument for the call to the self.stdout.write method .	self . stdout . write ( self . style . NOTICE ( STR0 ) )
6890	if AttributeError exception is caught ,	except AttributeError :
18722	define the method __getinitargs__ with an argument self .	def __getinitargs__ ( self ) :
238	call the method self.make_key with key and version set to version as arguments , substitute the result for key .	key = self . make_key ( key , version = version )
4094	numbers is a list containing return value of the MigrationAutodetector.parse_number method called with an argument migration.name , for every migration in merge_migrations .	numbers = [ MigrationAutodetector . parse_number ( migration . name ) for migration in merge_migrations ]
10680	in_tag is boolean True if in_tag is False , otherwise is boolean False .	in_tag = not in_tag
18142	get the value under the lang_code key of the LANG_INFO dictionary , return it .	return LANG_INFO [ lang_code ]
7398	if value is contained in self.empty_values ,	if value in self . empty_values :
11204	return dec .	return dec
10451	return self._container converted into a iterable .	return iter ( self . _container )
2370	define the method _create_message with arguments self and msg .	def _create_message ( self , msg ) :
5651	call the method field._get_val_from_obj with obj argument , substitute the result for value .	value = field . _get_val_from_obj ( obj )
15843	return a tuple with 3 elements : self.__newobj__ , tuple with an element self.__class__ and result of the method self.__getstate__ .	return ( self . __newobj__ , ( self . __class__ , ) , self . __getstate__ ( ) )
10891	if var_obj is None ,	if var_obj is None :
30	call the function conf.copy , substitute it for params .	params = conf . copy ( )
11380	return self .	return self
10457	streaming is boolean True .	streaming = True
12699	remove last 2 elements from bits .	bits = bits [ : - 2 ]
7218	call the function to_current_timezone with an argument value , substitute the result for value .	value = to_current_timezone ( value )
2123	define the method open with argument self .	def open ( self ) :
5449	use the global variable _serializers .	global _serializers
10139	if IOError , substituted to e , exception is caught ,	except IOError as e :
991	yield field and ValidationError object converted to an list , created with an argument errors .	yield field , list ( ValidationError ( errors ) )
635	return ret .	return ret
5726	define the function _get_model with an argument model_identifier .	def _get_model ( model_identifier ) :
1635	define lambda function that returns self.file.write field , use it as an argument for property function , put the result in write .	write = property ( lambda self : self . file . write )
14885	if value is not contained in result ,	if value is not result :
7058	call the method validators.MinLengthValidator with min_length converted into an integer , append the result to list self.validators .	self . validators . append ( validators . MinLengthValidator ( int ( min_length ) ) )
13120	try ,	try :
4870	from django.core.management.base import BaseCommand into default name space .	from django . core . management . base import BaseCommand
15946	call the function re.compile with raw string STR0 , substitute the result for trailing_empty_content_re .	trailing_empty_content_re = re . compile ( STR0 )
17475	substitute buffer for memoryview .	memoryview = buffer
14202	call the method pop from the base class of the class SortedDict , with 2 arguments k and unpacked list args , substitute the result for result .	result = super ( SortedDict , self ) . pop ( k , * args )
10055	raise an ImproperlyConfigured exception with an argument string STR0 .	raise ImproperlyConfigured ( STR0 )
4930	add model to known_models set .	known_models . add ( model )
1967	call the mail.attach_alternative method with html_message and string STR0 as arguments .	mail . attach_alternative ( html_message , STR0 )
11923	substitute every STR0 in string STR1 with indent , with result of the function escaper called with an argument : result of the function force_text called with an argument title , and with sublist , append the string to output .	output . append ( STR0 % ( indent , escaper ( force_text ( title ) ) , sublist ) )
10339	if value is an instance of str type ,	if isinstance ( value , str ) :
17964	if not ,	else :
9331	call the function format_html with 2 arguments : string STR1 and return value of the function force_text , called with an argument option_value , append the result to output .	output . append ( format_html ( STR1 , force_text ( option_value ) ) )
3850	call the method self.remove_potfiles .	self . remove_potfiles ( )
7056	call the method __init__ from the base class of the class CharField , with arguments unpacked list args and unpacked dictionary kwargs .	super ( CharField , self ) . __init__ ( * args , ** kwargs )
7252	substitute regex for self._regex .	self . _regex = regex
9868	call the method stream.unget with last rollback elements of chunk as an argument .	stream . unget ( chunk [ - rollback : ] )
337	call the method self.make_key with key and version set to version as arguments , substitute it for key .	key = self . make_key ( key , version = version )
8774	derive the class InlineForeignKeyField from the Field base class .	class InlineForeignKeyField ( Field ) :
961	otherwise if message is an instance of the list type .	elif isinstance ( message , list ) :
201	self.model_name is a string STR0 .	self . model_name = STR0
14319	define the method setlist with 3 arguments : self , key and list_ .	def setlist ( self , key , list_ ) :
6821	define the function get_wsgi_application .	def get_wsgi_application ( ) :
5522	if not ,	else :
411	call the function self._key_to_file with key and version as arguments , use the result as an argument for the call to the self._delete method .	self . _delete ( self . _key_to_file ( key , version ) )
13235	return context .	return context
16075	if url is true ,	if url :
13532	call the method self.split_leading_dir with an argument name , substitute the second element of the result for name .	name = self . split_leading_dir ( name ) [ 1 ]
7673	if value is an instance of Field class ,	if isinstance ( value , Field ) :
4371	derive the class Command from the BaseCommand class .	class Command ( BaseCommand ) :
2503	usage is a list containing 4 entries : an empty string , string STR0 , where STR2 is replaced with self.prog_name , an empty string and string STR1 .	usage = [ STR , STR0 % self . prog_name , STR , STR1 , ]
18439	skip this loop iteration .	continue
6882	if empty_label is not None ,	if empty_label is not None :
2016	call the method self.stream.write with argument string STR0 , with STR1 replaced with msg_data .	self . stream . write ( STR0 % msg_data )
16476	substitute name for self.name .	self . name = name
13977	substitute settings.SECRET_KEY for secret .	secret = settings . SECRET_KEY
1728	raise the exception .	raise
11604	decorator stringfilter ,	@ stringfilter
5925	call the m2m_convert function with an argument c , for every c in return value of the method node.getElementsByTagName , with an argument string STR0 , return the result .	return [ m2m_convert ( c ) for c in node . getElementsByTagName ( STR0 ) ]
10770	nodelist.contains_nontext is boolean True .	nodelist . contains_nontext = True
16082	if not ,	else :
6958	from io import BytesIO into default name space .	from io import BytesIO
3905	locale_dir is None .	locale_dir = None
14238	define the method setdefault with 3 arguments : self , key and default .	def setdefault ( self , key , default ) :
7397	define the method to_python with arguments self and value .	def to_python ( self , value ) :
2151	if self.fail_silently is boolean True ,	if self . fail_silently :
3345	known_models is an empty list .	known_models = [ ]
3569	e.args is a tuple containing string `` Could not load % ( app_label ) s. % ( object_name ) s ( pk= % ( pk ) s ) : % ( error_msg ) s , where STR0 is replaced for obj.object._meta.app_label , STR1 is replaced with obj.object._meta.object_name , STR2 is replaced with obj.object.pk and STR3 is replaced with result of the function force_text with an argument e .	e . args = ( STR0 % { STR1 : obj . object . _meta . app_label , STR2 : obj . object . _meta . object_name , STR3 : obj . object . pk , STR4 : force_text ( e ) } , )
10300	derive the class BadHeaderError from the ValueError base class .	class BadHeaderError ( ValueError ) :
17063	call the __add__ method with an arguments rhs from the base class of the class SafeBytes , substitute the result for t .	t = super ( SafeBytes , self ) . __add__ ( rhs )
11911	sublist_item is None .	sublist_item = None
4677	call the function check_for_migrations with 2 arguments : app_config and connection .	check_for_migrations ( app_config , connection )
6872	substitute months for self.months .	self . months = months
16758	substitute package.__name__ for package_name .	package_name = package . __name__
15457	if values under STR0 and STR1 keys of the item dictionary are both true ,	if item [ STR0 ] and item [ STR1 ] :
13410	join tmpdir and sting STR0 into a file path name , substitute it for symlink_path .	symlink_path = os . path . join ( tmpdir , STR0 )
2359	if content is not None raise an error .	assert content is None
14609	import module datetime .	import datetime
11720	try ,	try :
14296	call the method self.__dict__.copy , substitute the result for obj_dict .	obj_dict = self . __dict__ . copy ( )
1604	define the method new_file with arguments : self , unpacked list args and unpacked dictionary kwargs .	def new_file ( self , * args , ** kwargs ) :
16532	otherwise if name equals a string STR0 .	elif name == STR0 :
11603	decorator function register.filter with an argument is_safe set to boolean True .	@ register . filter ( is_safe = True )
4933	alter_sql is an empty list .	alter_sql = [ ]
1559	do nothing .	pass
9785	define the method close with an argument self .	def close ( self ) :
17089	return an instance of SafeText , created with an argument data .	return SafeText ( data )
1390	if not ,	else :
8239	django.core.exceptions import ImproperlyConfigured , ValidationError , NON_FIELD_ERRORS and FieldError into default namespace .	from django . core . exceptions import ( ImproperlyConfigured , ValidationError , NON_FIELD_ERRORS , FieldError )
3694	if command.verbosity is greater than integer 1 ,	if command . verbosity > 1 :
6427	for every matches , pat and defaults in return value of the method pattern.reverse_dict.getlist called with an argument name ,	for matches , pat , defaults in pattern . reverse_dict . getlist ( name ) :
18175	call the function mark_safe with an argument message , return the result .	return mark_safe ( message )
2841	if label_output is true ,	if label_output :
466	import module time .	import time
10201	call the method setlist from the base class of the QueryDict class , with arguments key and list_ .	super ( QueryDict , self ) . setlist ( key , list_ )
12345	if settings.DEBUG is true ,	if settings . DEBUG :
4466	from IPython.Shell import IPShell into default namespace .	from IPython . Shell import IPShell
9970	from django.core.files import uploadhandler into default name space .	from django . core . files import uploadhandler
2960	for every basedir in basedirs ,	for basedir in basedirs :
9238	call the function format_html with 3 arguments : self.url_markup_template , value.url and return value of the function force_text , called with an argument value , substitute the result for value under the STR0 key of the substitutions dictionary .	substitutions [ STR0 ] = format_html ( self . url_markup_template , value . url , force_text ( value ) )
12626	call the method token.split_contents , substitute the result for bits .	bits = token . contents . split ( )
16675	substitute nonlocal_root for tuple root .	root , = nonlocal_root
16292	call the method s.encode with an argument string STR0 , substitute the result for s .	s = s . encode ( STR0 )
17334	get _iteritems attribute of the class d , call the result with an argument unpacked dictionary kw , convert the result to a iterable , return it .	return iter ( getattr ( d , _iteritems ) ( ** kw ) )
14264	if item is contained in self.dict , return boolean True , otherwise return boolean False .	return item in self . dict
573	derive the class CacheClass from the base class LocMemCache .	class CacheClass ( LocMemCache ) :
4957	substitute model._meta for opts .	opts = model . _meta
6605	raise an NoReverseMatch exception with an argument string STR0 , with STR1 replaced with key .	raise NoReverseMatch ( STR0 % key )
7615	define the method to_python with arguments self and value .	def to_python ( self , value ) :
6744	return boolean True .	return True
14915	return result .	return result
10515	define the method __init__ with 5 arguments : self , data , encoder set to DjangoJSONEncoder , safe set to boolean True , and unpacked dictionary kwargs .	def __init__ ( self , data , encoder = DjangoJSONEncoder , safe = True , ** kwargs ) :
156	evaluate the self.has_key method with key as argument , return the result .	return self . has_key ( key )
11072	call the method self.render_node with 2 arguments : node and context , substitute the result for bit .	bit = self . render_node ( node , context )
6577	call the function get_script_prefix , substitute the result for prefix .	prefix = get_script_prefix ( )
15695	call the function func with an argument unpacked list args , substitute the result for result .	result = func ( * args )
13963	import module random .	import random
7891	call the method form.add_initial_prefix with an argument name , substitute the result for self.html_initial_name .	self . html_initial_name = form . add_initial_prefix ( name )
13105	try ,	try :
13429	derive the class UnrecognizedArchiveFormat from the ArchiveException base class .	class UnrecognizedArchiveFormat ( ArchiveException ) :
18678	append data to self.children .	self . children . append ( data )
4258	for statements is sql ,	for statement in sql :
3768	call the method parser.add_argument with 5 arguments : string STR3 , string STR4 , dest set to string STR5 , help set to a string STR6 and action as a string STR7 .	parser . add_argument ( STR3 , STR4 , dest = STR5 , help = STR6 , action = STR7 )
9966	from pprint import pformat into default name space .	from pprint import pformat
9593	substitute cookie for c .	c = cookie
13513	create directories from the elements in filename .	os . makedirs ( dirname )
9590	if http_cookies.CookieError exception is raised ,	except http_cookies . CookieError :
5447	call the object d with arguments stream_or_string and unpacked dictionary options , return the result .	return d ( stream_or_string , ** options )
17627	call the function re.compile with an argument raw string STR0 , substitute the result for re_newlines .	re_newlines = re . compile ( STR0 )
13830	if not ,	else :
9898	call the function parse_header with an argument line , substitute the result for main_value_pair and params , respectively .	main_value_pair , params = parse_header ( line )
5318	if TypeError or ValueError exceptions are caught ,	except ( TypeError , ValueError ) :
12575	define the method __init__ with 4 arguments : self , parser , unpacked list args and unpacked dictionary kwargs .	def __init__ ( self , parser , * args , ** kwargs ) :
10659	if bit starts with STR0 ot bit starts with STRspecial ,	if bit . startswith ( STR0 ) or bit . startswith ( STRspecial ) :
18284	call the method self.merge with an argument translation .	self . merge ( translation )
17742	define the function get_valid_filename with an argument s .	def get_valid_filename ( s ) :
11530	return e .	return e
8536	call the method self.get_queryset , substitute i-th element of the result for value under the STR0 key of kwargs dictionary .	kwargs [ STR0 ] = self . get_queryset ( ) [ i ]
2058	otherwise if self.file_path file path doesnt exists ,	elif not os . path . exists ( self . file_path ) :
8533	call the function to_python with an argument pk , substitute the result for pk .	pk = to_python ( pk )
13817	split string s once , with STR0 sign as a delimiter , assign the resulting list to the t .	t = s . split ( STR0 , 1 )
9396	get the value under the STR0 key of the self.attrs dictionary , return it , if the key doesnt exists return an empty string .	return self . attrs . get ( STR0 , STR )
13986	if hmac has an attribute STR0 ,	if hasattr ( hmac , STR0 ) :
11692	try ,	try :
16117	if AttributeError exception is caught ,	except AttributeError :
6563	call the function re.compile with 2 arguments , string STR0 , where STR1 is replaced with language_code and re.UNICODE , substitute the result for regex_compiled .	regex_compiled = re . compile ( STR0 % language_code , re . UNICODE )
14902	call the method self.configurator.convert with an argument value , substitute the result for result .	result = self . configurator . convert ( value )
515	define the method get with 5 arguments , self class instance , key , value , timeout set to DEFAULT_TIMEOUT and version set to None .	def set ( self , key , value , timeout = DEFAULT_TIMEOUT , version = None ) :
3577	finally perform ,	finally :
18282	reverse settings.LOCALE_PATHS element order , for every localedir in the result ,	for localedir in reversed ( settings . LOCALE_PATHS ) :
17869	break the execution of the smallest enclosing loop .	break
508	do nothing .	pass
8520	if self has an attribute STR0 ,	if not hasattr ( self , STR0 ) :
14932	for every frag in name .	for frag in name :
13240	first and second are None .	first = second = None
18570	strip message_context of STR characters from both ends , substitute the result for message_context .	message_context = message_context . strip ( STR )
11511	call the method self.create_token with 3 arguments : last_bit , tuple with 2 elements : upto and sum of upto and length of last_bit , and boolean False , append the result to result .	result . append ( self . create_token ( last_bit , ( upto , upto + len ( last_bit ) ) , False ) )
18686	invert self.negated .	self . negated = not self . negated
7733	if bf.is_hidden is true ,	if bf . is_hidden :
7624	define the method to_python with arguments self and value .	def to_python ( self , value ) :
1245	try ,	try :
12860	try ,	try :
9240	call the method self.clear_checkbox_name with an argument name , substitute the result for checkbox_name .	checkbox_name = self . clear_checkbox_name ( name )
1899	if self does not have STR0 attribute ,	if not hasattr ( self , STR0 ) :
5263	define the function popen_wrapper with 2 arguments : args and os_err_exc_type set to CommandError .	def popen_wrapper ( args , os_err_exc_type = CommandError ) :
17013	join source list elements from last till pos indexes into a string , substitute the result for piece .	piece = STR . join ( source [ last : pos ] )
6023	pop value under the STR0 key of the kwargs dictionary , if it is true ,	if kwargs . pop ( STR0 , False ) :
18265	call the function os.path.dirname with an argument settingsfile , join the result an string STR0 into a file path , substitute it for localedir .	localedir = os . path . join ( os . path . dirname ( settingsfile ) , STR0 )
12203	subtract i from len_values , substitute the result for value under the STR0 key of the loop_dict dictionary .	loop_dict [ STR0 ] = len_values - i
16709	import module copy .	import copy
1396	return name .	return name
7194	call the method value.date , return the result .	return value . date ( )
3660	import module sys .	import sys
9637	substitute input_data for self._input_data .	self . _input_data = input_data
14916	derive the class BaseConfigurator from object base class .	class BaseConfigurator ( object ) :
18291	update the self._catalog dictionary with other._catalog .	self . _catalog . update ( other . _catalog )
13528	call the method self.has_leading_dir with an argument namelist , substitute the result for leading .	leading = self . has_leading_dir ( namelist )
8919	initial_set is set created out of return values of the function force_text called with an argument value , for every value in result of the method self.prepare_value called with an argument initial .	initial_set = set ( force_text ( value ) for value in self . prepare_value ( initial ) )
13474	define the method has_leading_dir with 2 arguments self and paths .	def has_leading_dir ( self , paths ) :
17509	decrement self.active_readers by integer 1 ,	self . active_readers -= 1
6805	call the function _ with an argument string STR0 , substitute the result for message .	message = _ ( STR0 )
17234	call the method Module_six_moves_urllib_request with an argument : string STR0 appended to __name__ , assign the result to the value under the string STR1 appended to __name__ key of the sys.modules dictionary , and to the value under the string STR2 appended to __name__ key of the sys.modules dictionary .	sys . modules [ __name__ + STR0 ] = sys . modules [ __name__ + STR1 ] = Module_six_moves_urllib_error ( __name__ + STR2 )
12423	convert value into an floating point number , substitute it for value .	value = float ( value )
4748	replace STR1 in a string STR0 with writer.path , use it as an argument for the call to the method , self.style.MIGRATE_HEADING , write the result to self.stdout .	self . stdout . write ( self . style . MIGRATE_HEADING ( STR0 % writer . path ) )
14170	call the method __new__ from the base class of the class SortedDict , with 3 arguments : cls , unpacked list args , and unpacked dictionary kwargs .	instance = super ( SortedDict , cls ) . __new__ ( cls , * args , ** kwargs )
4674	if app_config.models_module is None ,	if app_config . models_module is None :
9269	call the method __init__ from the base class of the class DateTimeBaseInput , with an argument attrs .	super ( DateTimeBaseInput , self ) . __init__ ( attrs )
4523	if NameError exception is caught ,	except NameError :
10303	status_code is an integer 200 .	status_code = 200
6215	call the function constant_time_compare with 2 arguments : sig and return value of the self.signature method with an argument value , if it evaluates to true ,	if constant_time_compare ( sig , self . signature ( value ) ) :
12564	call the function do_ifequal with 3 arguments : parser , token and boolean False , return the result .	return do_ifequal ( parser , token , True )
9998	call the method build_request_repr with an argument self , return the result .	return build_request_repr ( self )
14069	open out_log flie in append mode with buffering size of input buffer , substitute the result for so .	so = open ( out_log , STR0 , buffering )
861	substitute self.registered_checks for checks .	checks = self . registered_checks
17665	for every char in result of the self.add_truncation_text , called with 2 arguments : an empty string and truncate .	for char in self . add_truncation_text ( STR , truncate ) :
4547	help is a string STR0 .	help = STR0
17893	return a string STR0 .	return STR0
15979	if not ,	else :
11962	return an empty string .	return STR
6207	define the method sign with arguments self and value .	def sign ( self , value ) :
1552	substitute connection_reset for self.connection_reset .	self . connection_reset = connection_reset
2953	raise CommandError exception with string STR0 , as argument .	raise CommandError ( STR0 )
18531	append string STR0 to singular , where STR1 is replaced with t.contents .	singular . append ( STR0 % t . contents )
6402	apps is an empty dictionary .	apps = { }
9410	derive the class ChoiceFieldRenderer from the object base class .	class ChoiceFieldRenderer ( object ) :
16612	define the method __hash__ with an argument self .	def __hash__ ( self ) :
6154	from django.utils.crypto import constant_time_compare and salted_hmac into default name space .	from django . utils . crypto import constant_time_compare , salted_hmac
15935	TRAILING_PUNCTUATION is a list with 7 elements : STR0 , STR1 , STR2 , STR3 , STR4 , STR and 'STR ' .	TRAILING_PUNCTUATION = [ STR0 , STR1 , STR2 , STR3 , STR4 , STR , 'STR' ]
8083	substitute self.data for value under the STR0 key of the defaults dictionary .	defaults [ STR0 ] = self . data
16507	substitute tok.next for state .	state = tok . next
11876	return value .	return value
2323	substitute body for self.body .	self . body = body
9891	raise an MultiPartParserError with an argument string STR0 .	raise MultiPartParserError ( STR0 )
13785	neg is integer 0 .	neg = 0
3056	requires_system_checks is boolean False .	requires_system_checks = False
16587	derive the class CallbackFilter from logging.Filter base class .	class CallbackFilter ( logging . Filter ) :
11567	substitute self.source for e.django_template_source .	e . django_template_source = self . source
12394	if not ,	else :
16154	if not ,	else :
12281	define the method __init__ with 2 arguments : self and conditions_nodelists .	def __init__ ( self , conditions_nodelists ) :
15866	call the function new_method_proxy with an argument operator.setitem , substitute the result for __setitem__ .	__setitem__ = new_method_proxy ( operator . setitem )
13553	from django.conf import settings into default name space .	from django . conf import settings
152	return new_value .	return new_value
4038	directory_created is an empty dictionary .	directory_created = { }
9203	for every i and v in enumerated iterable value ,	for i , v in enumerate ( value ) :
16194	from django.utils.encoding import force_str and force_text into default name space .	from django . utils . encoding import force_str , force_text
12893	define the method super with an argument self .	def super ( self ) :
14536	call the method self.data.weekday , use the result as an key for obtaining WEEKDAYS dictionary value , return it .	return WEEKDAYS [ self . data . weekday ( ) ]
14710	for every site in sites ,	for site in sites :
14245	for every k and v in result of the function six.iteritems , called with an argument self , joining string STR0 formated with k and v into a string , separated with STR1 , use it to format a string STR2 , return it .	return STR0 % STR1 . join ( STR2 % ( k , v ) for k , v in six . iteritems ( self ) )
14439	derive the class TimeFormat from the base class Formatter .	class TimeFormat ( Formatter ) :
6243	from django.utils.deprecation import RemovedInDjango20Warning into default name space .	from django . utils . deprecation import RemovedInDjango20Warning
427	call the self._list_cache_files method , substitute the result for filelist .	filelist = self . _list_cache_files ( )
5284	if pathext is None ,	if pathext is None :
2455	from django.core.management.base import BaseCommand , CommandError , CommandParser and handle_default_options into default name space .	from django . core . management . base import ( BaseCommand , CommandError , CommandParser , handle_default_options )
15688	define the function memoize with 3 arguments : func , cache and num_args .	def memoize ( func , cache , num_args ) :
2188	import module sys .	import sys
16259	do nothing .	pass
832	if receiver is an instance of types.FunctionType type ,	if isinstance ( receiver , types . FunctionType ) :
14596	define the method Y with an argument self .	def Y ( self ) :
17001	if source is an instance of Group class ,	if isinstance ( source , Group ) :
14474	if self.data.hour is greater than inreger 12 ,	if self . data . hour > 12 :
13581	_error_files is an empty list .	_error_files = [ ]
15394	define the method latest_post_date with an argument self .	def latest_post_date ( self ) :
14374	return dictionary created with tuples with 2 elements : key and value under the key key of self dictionary , for every key in self .	return dict ( ( key , self [ key ] ) for key in self )
13554	from django.core.signals import request_finished into default name space .	from django . core . signals import request_finished
18068	call the method _trans.npgettext with 4 arguments context , singular , plural and number .	return _trans . npgettext ( context , singular , plural , number )
12125	substitute silent for self.silent .	self . silent = silent
14026	divide negative dklen with hlen , substitute floored result for l .	l = - ( - dklen // hlen )
5297	return fext .	return fext
16306	substitute result of the function urlparse with an argument ur1 for p1 and result of the function urlparse with an argument ur2 for p2 .	p1 , p2 = urlparse ( url1 ) , urlparse ( url2 )
11787	call the function escape with an argument value , return the result .	return escape ( value )
3730	raise an CommandError exception with an argument string STR0 , where STR1 are replaced by sel.file and errors , respectively .	raise CommandError ( STR0 % ( self . file , errors ) )
5768	for every obj in return value of the PythonDeserializer created with 2 arguments : return value of the function yaml.load ,	for obj in PythonDeserializer ( yaml . load ( stream , Loader = SafeLoader ) , ** options ) :
14063	fork a child process , if the result equals integer 0 ,	if os . fork ( ) > 0 :
4202	if changes is true ,	if changes :
13052	substitute loaders for self._loaders .	self . _loaders = loaders
5399	define the __init__method with arguments self and exception .	def __init__ ( self , exception ) :
6139	call the method fp.write with an argument string STR0 % d ' replaced by os.getpid function return value .	fp . write ( STR0 % os . getpid ( ) )
13002	import module sys .	import sys
4407	if self.use_ipv6 substitute string STR0 for self.addr , if not substitute STR1 for self.addr .	self . addr = STR0 if self . use_ipv6 else STR1
14079	call the method sys.stdin.close .	sys . stdin . close ( )
514	call the self.get_backend_timeout with argument timeout , substitute it for the value under the key key of self._expire_info dictionary .	self . _expire_info [ key ] = self . get_backend_timeout ( timeout )
18208	from django.utils.six import StringIO into default name space .	from django . utils . six import StringIO
8086	try ,	try :
9169	call the function format_html with 2 arguments : string STR0 , result of the function flatatt called with an argument final_attrs , return the result .	return format_html ( STR0 , flatatt ( final_attrs ) )
12012	try ,	try :
15854	call the function new_method_proxy with an argument str , substitute the result for __str__ .	__str__ = new_method_proxy ( str )
1662	_response_middleware is an empty list .	self . _response_middleware = [ ]
11661	return input_val .	return input_val
394	define the method set with 5 arguments , self class instance , key , value , timeout set to DEFAULT_TIMEOUT and version set to None .	def set ( self , key , value , timeout = DEFAULT_TIMEOUT , version = None ) :
704	import module django.core.checks.compatibility.django_1_6_0 .	import django . core . checks . compatibility . django_1_6_0
6482	append pattern to tried list .	tried . append ( [ pattern ] )
10029	if not ,	else :
8902	pks is a set containing results of the call to the function force_text with an argument , key attribute of the o object , for every o in opts .	pks = set ( force_text ( getattr ( o , key ) ) for o in qs )
3794	append list containing string STR0 to self.msgmerge_options .	self . msgmerge_options = self . msgmerge_options [ : ] + [ STR0 ]
234	return default .	return default
6369	call the method match.groups , substitute the result for args .	args = match . groups ( )
4252	call the method extend with refs as argument , on the result call the pending_references.setdefault method with refto and empty list as arguments .	pending_references . setdefault ( refto , [ ] ) . extend ( refs )
3317	requires_system_checks is boolean False .	requires_system_checks = False
2528	if app_name is an instance of BaseCommands .	if isinstance ( app_name , BaseCommand ) :
13411	make a directory named original_path .	os . makedirs ( original_path )
6335	if language_code is not contained in self._regex_dict ,	if language_code not in self . _regex_dict :
2561	append to options a tuple containing 2 entries : result of the method s_opt.get_opt_string and s_opt.nargs , for every s_opt in parser.option_list .	options += [ ( s_opt . get_opt_string ( ) , s_opt . nargs ) for s_opt in parser . option_list ]
9894	define the function parse_boundary_stream with arguments stream and max_header_size .	def parse_boundary_stream ( stream , max_header_size ) :
9995	self.resolver_match is None .	self . resolver_match = None
13613	if filename ends with string STR0 or it ends with STR1 ,	if filename . endswith ( STR0 ) or filename . endswith ( STR1 ) :
8752	raise an ValueError with an argument string STR0 , where STR1 is replaced with , fk_name , parent_model._meta.app_label and parent_model._meta.object_name , respectively .	raise ValueError ( STR0 % ( fk_name , parent_model . _meta . app_label , parent_model . _meta . object_name ) )
6300	if not ,	else :
9314	join elements of output into a string , separated by newline characters , use it as the argument for the call the function mark_safe , return the result .	return mark_safe ( STR0 . join ( output ) )
15084	substitute length of existing for num_existing .	num_existing = len ( existing )
12225	for every node in self.nodelist_loop ,	for node in self . nodelist_loop :
15908	return results .	return results
459	define the method _list_cache_files with argument self .	def _list_cache_files ( self ) :
14738	decorator decorator .	@ decorator
2927	with open file path in append mode ,	with open ( path , STR0 ) :
15373	call the function force_text with an argument ttl , substitute the result for ttl .	if ttl is not None :
18688	from datetime import timedelta and tzinfo into default name space .	from datetime import timedelta , tzinfo
14465	do nothing .	pass
9649	instantiate QueryDict class with 2 arguments : an empty string and encoding set to self._encoding , instantiate a class MultiValueDict , return them .	return QueryDict ( STR , encoding = self . _encoding ) , MultiValueDict ( )
15871	derive the class SimpleLazyObject from the LazyObject base class .	class SimpleLazyObject ( LazyObject ) :
4068	for every app_label and migration_names in result of the method conflicts.items ,	for app_label , migration_names in conflicts . items ( ) :
7890	call the method form.add_prefix with an argument self , substitute the result for self.html_name .	self . html_name = form . add_prefix ( name )
15634	define the function localize with 2 arguments value and use_l10n set to None .	def localize ( value , use_l10n = None ) :
8495	substitute help_texts for value under the STR0 key of attrs dictionary .	attrs [ STR0 ] = help_texts
15595	return modules.s	return modules
18558	call the method imatch.group with an argument integer 1 , substitute the result for g .	g = imatch . group ( 1 )
9302	define the method __init__ with 3 arguments : self , attrs set to None and choices set to an empty tuple .	def __init__ ( self , attrs = None , choices = ( ) ) :
13801	call the BaseConverter function with BASE56_ALPHABET as argument , store the result in base56 .	base56 = BaseConverter ( BASE56_ALPHABET )
9942	strip value of the first and last element .	value = value [ 1 : - 1 ]
10078	call the method self._initialize_handlers ,	self . _initialize_handlers ( )
16671	increment stats dictionary value under the HITS key by integer 1 .	stats [ HITS ] += 1
7605	if second element of data_list is contained in self.empty_values ,	if data_list [ 1 ] in self . empty_values :
14737	define the method _wrapper with 3 arguments : self , unpacked list args and unpacked dictionary kwargs .	def _wrapper ( self , * args , ** kwargs ) :
4905	from django.core.management.base import CommandError into default name space .	from django . core . management . base import CommandError
17043	increment i-th element of result by piece .	result [ i ] += piece
8875	if data is not None , substitute data for initial_value , otherwise data_value is an empty string .	data_value = data if data is not None else STR
10841	if i-th element of subject is STR character or STR character ,	if subject [ i ] in ( STR , STR ) :
9328	output is an empty list .	output = [ ]
15078	get config dictionary element under STR0 key , if it exists substitute it for loggers , if not , loggers is EMPTY_DICT .	loggers = config . get ( STR0 , EMPTY_DICT )
3272	substitute value under the STR0 key of the options dictionary for verbosity .	verbosity = options . get ( STR0 )
9579	if self does not have STR0 attribute ,	if not hasattr ( self , STR0 ) :
18219	substitute _BROWSERS_DEPRECATED_LOCALES for _DJANGO_DEPRECATED_LOCALES .	_DJANGO_DEPRECATED_LOCALES = _BROWSERS_DEPRECATED_LOCALES
8575	call the method form.instance._get_unique_checks with an argument exclude as exclude , substitute the result for unique_checks , and date_checks , respectively .	unique_checks , date_checks = form . instance . _get_unique_checks ( exclude = exclude )
6822	call the django.setup method .	django . setup ( )
6477	if not ,	else :
2192	from email.mime.text import MIMEText into default name space .	from email . mime . text import MIMEText
13157	load_template_source.is_usable is boolean True .	load_template_source . is_usable = True
16512	both_after is an list with an element instance of Tok class , created with 2 arguments : string STR0 and raw string STR1 .	both_after = [ Tok ( STR0 , r STR1 ) , ]
1000	return the printable representation of the self object converted to a dictionary .	return repr ( dict ( self ) )
1012	from django.utils.encoding import force_bytes and python_2_unicode_compatible into default name space .	from django . utils . encoding import force_bytes , python_2_unicode_compatible
14182	for every key and value in data ,	for key , value in data :
271	if result is true ,	if result :
4338	derive the class Command from the BaseCommand class .	class Command ( BaseCommand ) :
10218	call the method clear from the base class of the class QueryDict , return the result .	super ( QueryDict , self ) . clear ( )
12821	if template_name is an instance of list or tuple types ,	if isinstance ( template_name , ( list , tuple ) ) :
8393	return new_class .	return new_class
8078	for every i in sequence of integers from 0 to result of the method self.total_form_count , call the method self._construct_form , with an argument i , append the result to a list , substitute the resulting list for forms .	forms = [ self . _construct_form ( i ) for i in xrange ( self . total_form_count ( ) ) ]
15150	if c doesnt have an attribute STR0 , and types has an attribute STR1 , and type of c is not equal to types.ClassType ,	if not hasattr ( c , STR0 ) and hasattr ( types , STR1 ) and type ( c ) != types . ClassType :
4516	skip this loop iteration .	continue
14322	if key is not contanied in self ,	if key not in self :
10612	call the method __init__ with an argument UNKNOWN_SOURCE , from the base class of the class StringOrigin .	super ( StringOrigin , self ) . __init__ ( UNKNOWN_SOURCE )
9071	if data is true ,	if data :
13415	if OSError , NotImplementedError or AttributeError exceptions are caught ,	except ( OSError , NotImplementedError , AttributeError ) :
788	call the function force_str with argument self.obj , substitute the result for obj .	obj = force_str ( self . obj )
7557	substitute allow_files and allow_folders for self.allow_files and self.allow_folders .	self . allow_files , self . allow_folders = allow_files , allow_folders
15653	call the method value.strftime with an argument format , return the result .	return value . strftime ( format )
11376	call the method __init__ from the base class of the class ContextDict , with 2 arguments : unpacked list args and unpacked dictionary kwargs .	super ( ContextDict , self ) . __init__ ( * args , ** kwargs )
2421	define the method attach_alternative with arguments self , content and mimetype .	def attach_alternative ( self , content , mimetype ) :
6928	call the function get_format with an argument string STR0 , substitute the first element of the result for input_format .	input_format = get_format ( STR0 ) [ 0 ]
15122	get config dictionary element under STR0 key , if it exists substitute it for fmt , if not , fmt is None .	fmt = config . get ( STR0 , None )
4369	call the method re.compile with 2 arguments : raw string STR0	naiveip_re = re . compile ( STR0 , re . X )
11906	substitute length of list_ for list_length .	list_length = len ( list_ )
13942	if length of t equals to integer 2 ,	if len ( t ) == 2 :
4829	define the method __init__ with an argument self .	def __init__ ( self ) :
7211	call the method datetime.datetime.strptime with 2 arguments : result of the function force_str called with an argument value , and format , call the method time on the result , return the result .	return datetime . datetime . strptime ( force_str ( value ) , format ) . time ( )
11015	try ,	try :
4415	call the method self.inner_run with 2 arguments : None and unpacked dictionary options .	self . inner_run ( None , ** options )
8133	if i is greater than or equal to the result of the method self.initial_form_count ,	if i >= self . initial_form_count ( ) and not form . has_changed ( ) :
9085	append name to STR0 use it as the name of the attribute to get from combined object , call the result with an argument : name appended to string STR1 , as the name of the attribute to get from other object , or if the previous doesnt exist , None .	getattr ( combined , STR0 + name ) ( getattr ( other , STR1 + name , None ) )
15458	call the method handler.addQuickElement with an argument string STR0 , STR1 , formated with values under the STR2 and STR3 keys of item dictionary .	handler . addQuickElement ( STR0 , STR1 % ( item [ STR2 ] , item [ STR3 ] ) )
18367	call the function do_ntranslate with 3 arguments : singular , plural , number and string STR0 , return the result .	return do_ntranslate ( singular , plural , number , STR0 )
2363	if content is not None raise an error .	assert content is not None
15384	define the method item_attributes with 2 arguments self and item .	def item_attributes ( self , item ) :
312	fetch next entry for the database that cursor points into , substitute first element of it for num .	num = cursor . fetchone ( ) [ 0 ]
5975	call the method tpl.format with an arguments self.name , self.sysid and self.pubid .	return tpl . format ( self . name , self . sysid , self . pubid )
16637	root is an empty list .	root = [ ]
7590	derive the class SplitDateTimeField from the base class MultiValueField class .	class SplitDateTimeField ( MultiValueField ) :
6352	self._callback is None .	self . _callback = None
4782	do nothing .	pass
6589	try ,	try :
11413	define the method __delitem__ with 2 arguments : self and key .	def __delitem__ ( self , key ) :
5954	raise an EntitiesForbidden exception with arguments name , None , base , sysid , pubid and notation_name .	raise EntitiesForbidden ( name , None , base , sysid , pubid , notation_name )
7339	if first element of the url_fields is false ,	if not url_fields [ 0 ] :
12870	return None .	return None
5505	raise a NotImplementedError with an argument string STR0 .	raise NotImplementedError ( STR0 )
10261	call the method six.text_type with 3 arguments : s , encoding and string STR0 .	return six . text_type ( s , encoding , STR0 )
10943	call the method arg.resolve with an argument context , append the result to arg_vals .	arg_vals . append ( arg . resolve ( context ) )
15168	if TypeError , renamed to te , exception is caught ,	except TypeError as te :
7898	define the method __str__ with an argument self .	def __str__ ( self ) :
13699	call the function ensure_echo_on .	ensure_echo_on ( )
8880	default_error_messages is an dictionary with 3 entries : return value of the function _ called with an argument , string STR1 for STR2 , return value of the function _ called with an argument , string STR3 for STR4 , and return value of the function _ called with an argument string STR5 for STR6 .	default_error_messages = { STR1 : _ ( STR2 ) , STR3 : _ ( STR4 ) , STR5 : _ ( STR6 ) }
2222	ADDRESS_HEADERS is a set containing strings : STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 , STR7 , STR8 , STR9 and STR10 .	ADDRESS_HEADERS = set ( [ STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 , STR7 , STR8 , STR9 , STR10 , ] )
9758	self._unget_history is an empty list .	self . _unget_history = [ ]
3166	if primary_keys is true ,	if primary_keys :
15331	call the function date.strftime with an argument string STR0 formated with dow and month , substitute the result for time_str .	time_str = date . strftime ( STR0 % ( dow , month ) )
11315	split string name into two parts from the right side by the separator STR0 , substitute parts for path and module , respectively .	path , module = name . rsplit ( STR0 , 1 )
16301	for every e in etags call the method e.encode with an argument string STR0 , call the method decode on the result with an argument , string STR1 , substitute the list of results for etags .	etags = [ e . encode ( STR0 ) . decode ( STR1 ) for e in etags ]
16192	from email.utils import formatdate into default name space .	from email . utils import formatdate
871	call the function CheckRegistry , substitute the result for registry .	registry = CheckRegistry ( )
776	if for all attr in list of attributes STR0 , STR1 , STR2 , STR3 and STR4 , self and other have the same attribute attr , return boolean True , otherwise return boolean False .	return all ( getattr ( self , attr ) == getattr ( other , attr ) for attr in [ STR0 , STR1 , STR2 , STR3 , STR4 ] )
7	from django.utils.deprecation import RemovedInDjango19Warning into default name space .	from django . utils . deprecation import RemovedInDjango19Warning
13587	if _cached_modules equals to module_values ,	if _cached_modules == module_values :
11767	call the method value.rjust with an argument , arg converted into a integer , return the result .	return value . rjust ( int ( arg ) )
12103	call the function mark_safe with an argument output .	return mark_safe ( output )
3687	if self.path is lesser than other.path , return boolean True , otherwise return boolean False .	return self . path < other . path
15529	if value under the STR0 key of the item dictionary is not None ,	if item [ STR0 ] is not None :
3868	if errors is true ,	if errors :
12093	register is an instance of Library class .	register = Library ( )
14895	substitute result for value under key key of self dictionary .	self [ key ] = result
9248	call the method value_from_datadict from the base class of the class ClearableFileInput , called with 3 arguments : data , files and name , substitute the result for upload .	upload = super ( ClearableFileInput , self ) . value_from_datadict ( data , files , name )
14309	if val equals an empty list .	if val == [ ] :
12921	get the value under the BLOCK_CONTEXT_KEY key of the context.render_context dictionary , substitute it for block_context .	block_context = context . render_context [ BLOCK_CONTEXT_KEY ]
9903	return name and tuple containing 2 elements value and params .	return name , ( value , params )
12839	if first element of e.args is not contained in not_found ,	if e . args [ 0 ] not in not_found :
2918	from django.core.management.base import BaseCommand and CommandError into default name space .	from django . core . management . base import BaseCommand , CommandError
17326	call the method operator.attrgetter with an argument _func_code , substitute the result for get_method_code .	get_function_code = operator . attrgetter ( _func_code )
14346	substitute _iteritems for iteritems .	iteritems = _iteritems
13781	convert number to string , if first element equals to sign ,	if str ( number ) [ 0 ] == sign :
9441	substitute RadioChoiceInput for choice_input_class .	choice_input_class = RadioChoiceInput
4886	replace STR0 from string STR1 , with db_name , substitute it for shutdown_message .	shutdown_message = STR0 % db_name
876	from django.conf import settings into default name space .	from django . conf import settings
17778	define the method close with an argument self .	def close ( self ) :
3672	define the method check_programs with an argument unpacked list programs .	def check_programs ( * programs ) :
16600	try ,	try :
1663	exception_middleware is an empty list .	self . _exception_middleware = [ ]
10995	call the function var.find with an argument : STR0 appended to VARIABLE_ATTRIBUTE_SEPARATOR , if the result is greater than integer -1 ,	if var . find ( VARIABLE_ATTRIBUTE_SEPARATOR + STR0 ) > - 1 or var [ 0 ] == STR1 :
10611	define the method __init__ with 2 arguments : self and source .	def __init__ ( self , source ) :
13870	define function add_never_cache_headers , with response as an argument .	def add_never_cache_headers ( response ) :
5738	from django.core.serializers.python import Deserializer as PythonDeserializer into default name space .	from django . core . serializers . python import Deserializer as PythonDeserializer
6995	substitute Field.creation_counter for self.creation_counter .	self . creation_counter = Field . creation_counter
12598	return an instance of IfNode class , created with an argument conditions_nodelists .	return IfNode ( conditions_nodelists )
14699	call the method dt.timetuple , substitute the result for timetuple .	timetuple = dt . timetuple ( )
4682	from django.utils import six into default name space .	from django . utils import six
4839	define the method add_arguments with arguments self and parser .	def add_arguments ( self , parser ) :
12062	if length of value is not equal to integer 1 ,	if len ( value ) != 1 :
10774	define the method exit_command with an argument self .	def exit_command ( self ) :
697	vary_on is an empty tuple .	vary_on = ( )
5504	define the method start_object with argument self and obj .	def start_object ( self , obj ) :
7671	current_fields is an empty list .	current_fields = [ ]
3639	if not ,	else :
11302	substitute t.nodelist for self.nodelist .	self . nodelist = t . nodelist
16338	if not ,	else :
4667	derive the class Command from the AppCommand base class .	class Command ( AppCommand ) :
1465	define the method closed with self as the argument .	def closed ( self ) :
13500	call the method self.split_leading_dir with an argument name , substitute the first element of result for name .	name = self . split_leading_dir ( name ) [ 1 ]
2367	open file named path in STR0 mode , with file descriptor as f ,	with open ( path , STR0 ) as f :
15108	finally perform ,	finally :
12734	if extra_context is false ,	if not extra_context :
3882	define the method find_potfiles with an arguments self and root .	def find_files ( self , root ) :
1572	do nothing .	pass
4762	try ,	try :
13444	if AttributeError exception is caught .	except AttributeError :
3474	return the list , containing 4 elements : an empty string , string STR0 , string STR1 ,	return [ STR , STR0 , STR1 , STR2 % table_name ]
10934	substitute settings.TEMPLATE_STRING_IF_INVALID with obj .	obj = settings . TEMPLATE_STRING_IF_INVALID
6944	if self.is_required is false ,	if not self . is_required :
5211	if content_disposition is true ,	if content_disposition :
5047	if app_config.models_module is None ,	if app_config . models_module is None :
16438	return ip_str .	return ip_str
6513	text_kwargs is a dictionary created from the result of the function force_text with an argument v , mapped through function k , for every k and v in return value of the kwargs.items .	text_kwargs = dict ( ( k , force_text ( v ) ) for ( k , v ) in kwargs . items ( ) )
2254	join localpart and domain in a string separated by STR0 character , substitute it for addr .	addr = STR0 . join ( [ localpart , domain ] )
12432	substitute result for value under the self.asvar key of context dictionary .	context [ self . asvar ] = result
13898	if value is not None ,	if value is not None :
10243	post is a string STR0 .	post = STR0
9609	from django.core.files.uploadhandler import StopUpload , SkipFile and StopFutureHandlers into default name space .	from django . core . files . uploadhandler import StopUpload , SkipFile , StopFutureHandlers
389	call f.read function , use the result as the argument for zlib.decompress function call , call the pickle.loads function with the previous result as argument , return the result .	return pickle . loads ( zlib . decompress ( f . read ( ) ) )
509	return default .	return default
1271	call the function copystat with old_file_name and new_file_name as arguments .	copystat ( old_file_name , new_file_name )
11147	kwargs is an empty dictionary .	kwargs = { }
3322	try ,	try :
9937	call the method p.find with bytes string STR0 as an argument , substitute the result for i .	i = p . find ( STR0 )
13169	call the __init__ method from the base class of the class SimpleTemplateResponse , with 3 arguments : an empty string , content_type and status .	super ( SimpleTemplateResponse , self ) . __init__ ( STR , content_type , status )
12285	define the method __iter__ with an argument self .	def __iter__ ( self ) :
7985	property decorator ,	@ property
12409	substitute val_expr for self.val_expr .	self . val_expr = val_expr
3208	define the function sort_dependencies with an argument app_list .	def sort_dependencies ( app_list ) :
2403	call the mimetypes.guess_type with an argument filename , assign the result to the mimetype and _ , respectively .	mimetype , _ = mimetypes . guess_type ( filename )
6070	print FASTCGI_HELP to the standard output .	print ( FASTCGI_HELP )
10880	derive the class FilterExpression form the base class object .	class FilterExpression ( object ) :
3650	define the method read with an argument self .	def read ( self ) :
7119	define the method widget_attrs with arguments self and widget .	def widget_attrs ( self , widget ) :
10286	import module time .	import time
17324	call the method operator.attrgetter with an argument _meth_self , substitute the result for get_method_self .	get_method_self = operator . attrgetter ( _meth_self )
12559	register.tag decorator ,	@ register . tag
17069	define the method _proxy_method with 3 arguments self , unpacked list args and unpacked dictionary kwargs .	def _proxy_method ( self , * args , ** kwargs ) :
11769	decorator stringfilter ,	@ stringfilter
3343	yield and empty string as the result .	yield STR
3897	remove dirname from the dirnames .	dirnames . remove ( dirname )
6545	call the function re.search with 3 arguments : string STR0 , with STR1 replaced for prefix_norm and pattern , respectively , candidate_pat formated with candidate_subs and re.UNICODE .	if re . search ( STR0 % ( prefix_norm , pattern ) , candidate_pat % candidate_subs , re . UNICODE ) :
5608	remove 3 elements from r starting at the index 23 .	r = r [ : 23 ] + r [ 26 : ]
13390	return path .	return path
16947	get the next element of the iterable pattern_iter , assign the result for ch .	ch = next ( input_iter )
11621	try ,	try :
4156	if migration_name equals to string STR0 ,	if migration_name == STR0 :
10506	call the __init__ method from the base class of the HttpResponseNotAllowed class , called with arguments : unpacked list args , and unpacked dictionary kwargs .	super ( HttpResponseNotAllowed , self ) . __init__ ( * args , ** kwargs )
17257	append string STR0 to __name__ , use it as an key to get the value from the sys.modules dictionary , substitute it for parse .	parse = sys . modules [ __name__ + STR0 ]
8282	if fields is true and f.name is not contained in fields ,	if fields and f . name not in fields :
15138	raise an ValueError exception with an argument string STR0 formated with f and e .	raise ValueError ( STR0 % ( f , e ) )
1197	substitute windll.kernel32.UnlockFileEx for UnlockFileEx .	UnlockFileEx = windll . kernel32 . UnlockFileEx
11535	define the method extend_nodelist with 4 arguments : self , nodelist , node and token .	def extend_nodelist ( self , nodelist , node , token ) :
1114	define the method __bool__ with argument self .	def __bool__ ( self ) :
16524	c is an empty list .	c = [ ]
16444	fill_to is an integer 8 .	fill_to = 8
8492	if labels is not None ,	if labels is not None :
3725	call the function popen_wrapper with argument args , assign the result to msgs , errors and status .	msgs , errors , status = popen_wrapper ( args )
3780	get the value under the STR0 key of the options dictionary , substitute it for self.verbosity .	self . verbosity = options . get ( STR0 )
9551	_cookie_allows_colon_in_names is boolean False .	_cookie_allows_colon_in_names = False
7519	for every i and field in enumerated iterable self.fields ,	for i , field in enumerate ( self . fields ) :
2862	evaluate the logic expression , plat does not equals to string STR0 , and plat does not equals to string STR1 or string STR2 is in os.environ , substitute the evaluated boolean for supported_platform .	supported_platform = plat != STR0 and ( plat != STR1 or STR2 in os . environ )
1321	define the method size with arguments self and name .	def size ( self , name ) :
17786	flush zfile stream buffer .	zfile . flush ( )
6365	call the method match.groupdict , substitute the result for kwargs .	kwargs = match . groupdict ( )
4388	self._raw_ipv6 is boolean False .	self . _raw_ipv6 = False
3454	try ,	try :
12995	if not ,	else :
6754	define the method __eq__ with arguments self and other .	def __eq__ ( self , other ) :
4244	for every app_name and model_list in return value of manifest.items function ,	for app_name , model_list in manifest . items ( ) :
9480	define the method render with 4 arguments : self , name , value and attrs set to None .	def render ( self , name , value , attrs = None ) :
9095	if definition is true ,	if definition :
13935	call the method cache.set , with cache_key , headerlist , cache_timeout as arguments .	cache . set ( cache_key , headerlist , cache_timeout )
3007	for every tablename in tablenames ,	for tablename in tablenames :
694	TEMPLATE_FRAGMENT_KEY_TEMPLATE is a string STR0 .	TEMPLATE_FRAGMENT_KEY_TEMPLATE = STR0
8049	get the type of self object , call the __bool__ method on the result with an argument self , return the result .	return type ( self ) . __bool__ ( self )
1489	call the __init__ method with arguments file and name , from the base class of the UploadedFile class .	super ( UploadedFile , self ) . __init__ ( file , name )
16369	get the value under the index key of the hextets dictionary , remove the leading STR0 characters , substitute the result for value under the index key of the hextets dictionary .	hextets [ index ] = hextets [ index ] . lstrip ( STR0 )
14844	compile regex from string STR0 in case insensitive mode , substitute it for IDENTIFIER .	IDENTIFIER = re . compile ( STR0 , re . I )
8806	define the method __iter__ with an argument self .	def __iter__ ( self ) :
1726	break from the smallest enclosing loop execution .	break
17941	return the value under the is_dst key of the _time.tzname dictionary .	return _time . tzname [ is_dst ]
3023	fields is an tuple containing 3 entries : return value of the method models.CharField called with 4 arguments :	fields = ( models . CharField ( name = STR0 , max_length = 255 , unique = True , primary_key = True ) , models . TextField ( name = STR1 ) , models . DateTimeField ( name = STR2 , db_index = True ) , )
17429	substitute string STR for space .	space = STR
5897	if not ,	else :
9719	break the loop execution .	break
12358	call the function date with 2 arguments : result of the call to the function datetime.now with an argument tz set to tzinfo , and self.format_string , return the result .	return date ( datetime . now ( tz = tzinfo ) , self . format_string )
3296	STR0 , where STR1 is replaced by value under the STR2 key of the connection.settings_dict dictionary and e. call the function six.reraise with 3 arguments : CommandError , CommandError created with argument new_msg , and third element of the return value of the function sys.exc_info .	six . reraise ( CommandError , CommandError ( new_msg ) , sys . exc_info ( ) [ 2 ] )
16039	call the function force_text with an argument url , return the result .	return force_text ( url )
14143	substitute _itervalues for values .	values = _itervalues
14648	WEEKDAYS is an dictionary with 7 entries : result of the call to the function _ with an argument string STR0 for 0 , result of the call to the function _ with an argument string STR1 for 1 , result of the call to the function _ with an argument string STR2 for 2 , result of the call to the function _ with an argument string STR3 for 3 , result of the call to the function _ with an argument string STR4 for 4 , result of the call to the function _ with an argument string STR5 for 5 , and result of the call to the function _ with an argument string STR6 for 6 .	WEEKDAYS = { 0 : _ ( STR0 ) , 1 : _ ( STR1 ) , 2 : _ ( STR2 ) , 3 : _ ( STR3 ) , 4 : _ ( STR4 ) , 5 : _ ( STR5 ) , 6 : _ ( STR6 ) }
814	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
4099	subclass is a instance of a class named Migration , derived from the base class Migration , with 1 field : dependencies set to a list of tuples with 2 elements : app_label and migration.name for every migration in merge_migrations .	subclass = type ( STR0 , ( Migration , ) , { STR1 : [ ( app_label , migration . name ) for migration in merge_migrations ] , } )
11827	return an empty string .	return STR
7421	define the method _coerce with arguments self and value .	def _coerce ( self , value ) :
15019	get config dictionary element under STR0 key , if it exists substitute it for incremental , if not , incremental is boolean False .	incremental = config . pop ( STR0 , False )
12010	if length of bits is lesser than integer 2 ,	if len ( bits ) < 2 :
1651	from django.utils.module_loading import import_string into default name space .	from django . utils . module_loading import import_string
17551	color_names is a tuple with 8 elements : strings STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 and STR7 .	color_names = ( STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 , STR7 )
17650	define the method __init__ with 2 arguments : self and text .	def __init__ ( self , text ) :
9916	if name equals a string STR0 ,	if name == STR0 :
184	do nothing .	pass
3917	call the method os.path.dirname with an argument potfile , join the result , locale and string STR0 into a file path , substitute it for basedir .	basedir = os . path . join ( os . path . dirname ( potfile ) , locale , STR0 )
11294	get STR0 attribute from self object . if it doesnt exists return boolean False , if the result evaluates to false ,	if not getattr ( self , STR0 , False ) :
15800	call the function six.itervalues with an argument kwargs , convert the result to a list and append it to a list containing args ,	for arg in list ( args ) + list ( six . itervalues ( kwargs ) ) :
747	from .. import Warning , register and Tags into default name space .	from . . import Warning , register , Tags
9123	args is an list with 3 initial elements self.name , self.value and self.attrs .	args = [ self . name , self . value , self . attrs ]
13811	from django.utils.http import http_date to the default name space .	from django . utils . http import http_date
1443	from django.core.files.utils import FileProxyMixin into default name space .	from django . core . files . utils import FileProxyMixin
16596	if settings.DEBUG is true , return boolean False , otherwise return boolean True .	return not settings . DEBUG
14086	if out_log is true ,	if out_log :
6565	return the value under the language_code of the self._regex_dict dictionary .	return self . _regex_dict [ language_code ]
774	substitute id for self.id .	self . id = id
712	define the function check_1_6_compatibility with argument kwargs dictionary .	def check_1_6_compatibility ( ** kwargs ) :
3629	call the method fixture_name.rsplit with 2 arguments : character STR0 and integer 2 , substitute the result for parts .	parts = fixture_name . rsplit ( STR0 , 2 )
10574	BLOCK_TAG_END is a string STR0 .	BLOCK_TAG_END = STR0
13661	skip this loop iteration .	continue
16274	raise an TypeError exception with an argument string STR0 .	raise TypeError ( STR0 )
7204	define the method to_python with arguments self and value .	def to_python ( self , value ) :
14136	yield k .	yield k
4797	help is a string STR0 .	help = STR0
6607	call the function get_ns_resolver with arguments ns_pattern and resolver , substitute the result for resolver .	resolver = get_ns_resolver ( ns_pattern , resolver )
13973	from django.utils import six into default name space .	from django . utils import six
18283	call the function self._new_gnu_trans with an argument localedir , substitute the result for translation .	translation = self . _new_gnu_trans ( localedir )
9604	from django.core.exceptions import SuspiciousMultipartF into default name space .	from django . core . exceptions import SuspiciousMultipartForm
13693	if not ,	else :
1385	close fd file .	os . close ( fd )
6454	call the method self._populate .	self . _populate ( )
11007	call the function ugettext_lazy with an argument value , return the result .	return ugettext_lazy ( value )
3492	try ,	try :
4534	call the method add_arguments from the base class of the class Command , with an argument parser .	super ( Command , self ) . add_arguments ( parser )
9408	if self.choice_value is contained in self.value return boolean True , otherwise return boolean False .	return self . choice_value in self . value
13306	if token equals a string STR0 and i incremented by 1 is lesser than l ,	if token == STR0 and i + 1 < l and tokens [ i + 1 ] == STR1 :
11846	try ,	try :
17061	derive the class SafeBytes from bytes and SafeData base classes .	class SafeBytes ( bytes , SafeData ) :
17835	call the function allow_lazy with 2 arguments : unescape_entities and six.text_type , substitute the result for unescape_entities .	unescape_entities = allow_lazy ( unescape_entities , six . text_type )
15184	if StandardError , renamed to e , exception is caught ,	except StandardError as e :
13666	if ValueError exception is caught ,	except ValueError :
14726	return decorator .	return decorator
11983	call the function timesince with an argument value , return the result .	return timesince ( value )
10253	try ,	try :
9475	for every w in widgets , call the function w and append the result to a list , if w is an instance of type class , if not append w to the list , substitute the resulting list for self.widgets .	self . widgets = [ w ( ) if isinstance ( w , type ) else w for w in widgets ]
11017	try ,	try :
290	call the method cursor.execute with string STR0 as argument , substitute the STR1 with table and list containing key , respectively .	cursor . execute ( STR0 % table , [ key ] )
17411	remove STR0 key from the kwargs dictionary , if it exists substitute it for end , if not end is None .	end = kwargs . pop ( STR0 , None )
17508	with self.mutex perform ,	with self . mutex :
9663	old_field_name is None .	old_field_name = None
3874	with the result renamed to fp , perform the following : write msgs to fp .	fp . write ( msgs )
2434	for every alternative in self.alternatives ,	for alternative in self . alternatives :
9260	define the method render with 4 arguments : self , name , value and attrs set to None .	def render ( self , name , value , attrs = None ) :
9	__all__ is an list containing 6 elements : STR0 , STR1 , STR2 , STR3 , STR4 and STR5	__all__ = [ STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , ]
13985	call the function random.choice with an argument allowed_chars , for every i in range of integers from 0 to lengths , join the results into a string , return it .	return STR . join ( random . choice ( allowed_chars ) for i in range ( length ) )
12344	if TemplateSyntaxError , renamed to e , exception is caught ,	except TemplateSyntaxError as e :
10624	call the function compile_string with 2 arguments : template_string and origin , substitute the result for self.nodelist .	self . nodelist = compile_string ( template_string , origin )
11517	derive the class DebugParser from the Parser base class .	class DebugParser ( Parser ) :
8574	call the method form._get_validation_exclusions , substitute the result for exclude .	exclude = form . _get_validation_exclusions ( )
363	import module time .	import time
16131	match the rawdata from the position i+1 , with tagfind pattern , assign the result to the match .	match = tagfind . match ( rawdata , i + 1 )
10990	self.translate is boolean True .	self . translate = True
12856	define the method self and blocks .	def add_blocks ( self , blocks ) :
12279	call the method self.nodelist_false.render with an arguments context , return the result .	return self . nodelist_false . render ( context )
12741	from django.core.exceptions import ImproperlyConfigured into default name space .	from django . core . exceptions import ImproperlyConfigured
18072	define the function lazy_number with 4 arguments : func , resultclass , number set to None and unpacked dictionary kwargs .	def lazy_number ( func , resultclass , number = None , ** kwargs ) :
12244	call the method self._get_context_stack_frame with an argument context , substitute the result for state_frame .	state_frame = self . _get_context_stack_frame ( context )
11194	self.tags is an empty dictionary .	self . tags = { }
10163	if not ,	else :
4880	call parser.add_argument method with STR0 , string STR1 , action set to string STR2 , dest set to string STR3 , default set to boolean False and help set to string STR4 .	parser . add_argument ( STR0 , STR1 , action = STR2 , dest = STR3 , default = False , help = STR4 )
12297	if VariableDoesNotExist exception is caught ,	except VariableDoesNotExist :
17032	new_result is an empty list .	new_result = [ ]
6966	from django.utils.deprecation import RemovedInDjango19Warning into default name space .	from django . utils . deprecation import RemovedInDjango19Warning
11042	if not ,	else :
11670	call the function six.text_type with length of lines as an argument , use length of result as an argument for the call to the function six.text_type , substitute the result for width .	width = six . text_type ( len ( six . text_type ( len ( lines ) ) ) )
18184	if not ,	else :
17495	self.active_readers is an integer 0 .	self . active_readers = 0
1488	define the method __init__ with 7 arguments : self , file set to None , name set to None , content_type set to None , size set to None , charset set to None and content_type_extra set to None .	def __init__ ( self , file = None , name = None , content_type = None , size = None , charset = None , content_type_extra = None ) :
3575	e.args is a tuple containing string STR0 , where STR1 is replaced with fixture_file , e .	e . args = ( STR0 % ( fixture_file , e ) , )
16276	raise an ValueError exception with an argument string STR0 .	raise ValueError ( STR0 )
13754	call the function reloader with wrapped_main_func , args and kwargs as arguments .	reloader ( wrapped_main_func , args , kwargs )
15210	call the method dictConfigClass with an argument config , call the method configure on the result .	dictConfigClass ( config ) . configure ( )
2035	return msg_count .	return msg_count
15609	call the function get_format_modules with an argument lang , for every module in the result ,	for module in get_format_modules ( lang ) :
13503	if filename is true and filename path doesnt exist ,	if filename and not os . path . exists ( filename ) :
3863	skip this loop iteration .	continue
4759	define the method handle with 2 arguments : self and unpacked dictionary options .	def handle ( self , ** options ) :
10185	call the method __delitem__ from the base class of the QueryDict class , with an argument key .	super ( QueryDict , self ) . __delitem__ ( key )
12746	template_source_loaders is None .	template_source_loaders = None
9755	substitute length for self._length .	self . length = length
18498	if endbmatch is true ,	if endbmatch :
10914	if upto is not equal to length of token ,	if upto != len ( token ) :
1639	return iterator object based on the self.file collection object .	return iter ( self . file )
12965	if endblock.contents is not contained in acceptable_endblocks ,	if endblock . contents not in acceptable_endblocks :
12059	do nothing ,	pass
5935	inner_text is an empty list .	inner_text = [ ]
14777	try ,	try :
8589	if field is contained in form.cleaned_data ,	if field in form . cleaned_data :
2000	raise an NotImplementedError exception with argument string STR0 .	raise NotImplementedError ( STR0 )
4861	call the method get_runner with 2 arguments : settings and value under the STR0 key of the options dictionary , substitute it for the TestRunner .	TestRunner = get_runner ( settings , options . get ( STR0 ) )
15097	substitute logging.NOTSET for logger.level .	logger . level = logging . NOTSET
3706	with the result renamed to fp , perform the following : call the method fp.write with an arguments src_data .	fp . write ( src_data )
10237	define the function build_request_repr with arguments : request , path_override set to None , GET_override set to None ,	def build_request_repr ( request , path_override = None , GET_override = None , POST_override = None , COOKIES_override = None , META_override = None ) :
17571	define the function make_style with 2 arguments : opts set to an empty tuple and unpacked dictionary kwargs .	def make_style ( opts = ( ) , ** kwargs ) :
1326	raise an NotImplementedError exception with argument string STR0 .	raise NotImplementedError ( STR0 )
15475	call the method handler.addQuickElement with 3 arguments : string STR0 , an empty string and a dictionary with 3 entries : field url of the value under the STR1 key of the item dictionary for STR2 , field length of the value under the STR3 key of the item dictionary for STR4 , and field mime_type of the value under the STR5 key of the item dictionary for STR6 .	handler . addQuickElement ( STR0 , STR , { STR1 : item [ STR4 ] . url , STR2 : item [ STR5 ] . length , STR3 : item [ STR6 ] . mime_type } )
1960	define function get_connection with backend set to None , fail_silently set to boolean False and dictionary kwds as arguments .	def get_connection ( backend = None , fail_silently = False , ** kwds ) :
5955	define the method external_entity_ref_handler with arguments self , context , base , sysid and pubid .	def external_entity_ref_handler ( self , context , base , sysid , pubid ) :
10810	substitute subject for self.subject .	self . subject = subject
1577	substitute content_length for self.content_length .	self . content_length = content_length
7074	substitute max_value and min_value for self.max_value and self.min_value .	self . max_value , self . min_value = max_value , min_value
808	derive the class Error from base class CheckMessage .	class Error ( CheckMessage ) :
12861	remove the first element of value under the name key of self.blocks dictionary , return it .	return self . blocks [ name ] . pop ( )
4032	substitute STR2 in string STR0 with the app_labels joined into a string , separated by string STR1 , write it to self.stdout .	self . stdout . write ( STR0 % ( STR1 . join ( app_labels ) ) )
15536	if not ,	else :
16619	for every item in sorted_items ,	for item in sorted_items :
611	define the method add with 5 arguments , self class instance , key , value , timeout set to DEFAULT_TIMEOUT and version set to None .	def add ( self , key , value , timeout = DEFAULT_TIMEOUT , version = None ) :
16907	if not ,	else :
12735	raise an TemplateSyntaxError exception with an argument string STR0 , where STR1 is replaced with first element of bits .	raise TemplateSyntaxError ( STR0 % bits [ 0 ] )
6170	call the force_bytes function with an argument settings.SECRET_KEY , substitute the result for key .	key = force_bytes ( settings . SECRET_KEY )
7373	return None .	return None
11301	call the function get_template with an argument file_name , substitute the result for t .	t = get_template ( file_name )
4851	if value under the STR0 key of the options dictionary is greater than zero ,	if options [ STR0 ] > 0 :
2752	call the method translation.activate with an argument string STR0 .	translation . activate ( STR0 )
1931	call the start_response function with force_str ( status ) method return value and response_headers as arguments .	start_response ( force_str ( status ) , response_headers )
13417	if not ,	else :
6884	substitute self.none_value for self.year_none_value .	self . year_none_value = self . none_value
17353	substitute io.BytesIO for BytesIO .	BytesIO = io . BytesIO
15733	if six.text_type is contained in resultclasses , cls._delegate_text is boolean True , otherwise it is boolean False .	cls . _delegate_text = six . text_type in resultclasses
2415	return attachment .	return attachment
7219	return value .	return value
15738	if not ,	else :
18350	define the function pgettext with 2 arguments : context and message .	def pgettext ( context , message ) :
17992	get STR0 attribute of the _active object	self . old_timezone = getattr ( _active , STR0 , None )
4165	targets is a list containing tuple with two elements , app_label and migration.name .	targets = [ ( app_label , migration . name ) ]
6057	substitute WSGIServer for httpd_cls .	httpd_cls = WSGIServer
9142	define the method is_hidden with an argument self .	def is_hidden ( self ) :
255	substitute the datetime.max for exp .	exp = datetime . max
16789	skip this loop iteration ,	continue
5667	if field.rel.through._meta.auto_created is true ,	if field . rel . through . _meta . auto_created :
18307	if _active has an attribute STR0 ,	if hasattr ( _active , STR0 ) :
8567	call the method self.validate_unique .	self . validate_unique ( )
1400	if os.path.exists function with argument name , evaluates to boolean True ,	if os . path . exists ( name ) :
13972	from django.utils.encoding import force_bytes into default name space .	from django . utils . encoding import force_bytes
4736	replaces is an empty list .	replaces = [ ]
12728	return an instance of a class WidthRatioNode , created with 4 arguments : result of the method parser.compile_filter ,	return WidthRatioNode ( parser . compile_filter ( this_value_expr ) , parser . compile_filter ( max_value_expr ) , parser . compile_filter ( max_width ) , asvar = asvar )
2127	connection_params is a dictionary with 1 initial entry : return value of the function DNS_NAME.get_fqdn for STR0 .	connection_params = { STR0 : DNS_NAME . get_fqdn ( ) }
4361	import module socket .	import socket
4663	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
17101	if s is an instance of six.text_type or Promise ,	if isinstance ( s , ( six . text_type , Promise ) ) :
9167	if value is not equal to an empty string ,	if value != STR :
12673	register.tag decorator ,	@ register . tag
2047	define the __init__ method with arguments : self , unpacked list args and unpacked dictionary kwargs .	def __init__ ( self , * args , ** kwargs ) :
4229	call the connection.introspection.table_names with cursor as argument , store the result in tables .	tables = connection . introspection . table_names ( cursor )
9572	define protected method _BaseCookie__set with self class instance , key , real_value and coded_value as arguments .	def _BaseCookie__set ( self , key , real_value , coded_value ) :
8021	value under the TOTAL_FORM_COUNT of the self.base_fields dictionary is an instance of IntegerField class , created with an argument widget set to HiddenInput .	self . base_fields [ TOTAL_FORM_COUNT ] = IntegerField ( widget = HiddenInput )
12748	is_usable is boolean False .	is_usable = False
2219	substitute DNS_NAME for idhost .	idhost = DNS_NAME
7134	call the function smart_text with an argument value , strip the result of whitespaces from both ends and substitute it for value .	value = smart_text ( value ) . strip ( )
16673	call the function user_function with 2 arguments : unpacked list args and unpacked dictionary kwds , substitute the result for result .	result = user_function ( * args , ** kwds )
375	call method __init__ with argument params from the base class of the FileBaseCache .	super ( FileBasedCache , self ) . __init__ ( params )
14955	while rest is true ,	while rest :
3875	append potfile to potfiles .	potfiles . append ( potfile )
16490	format a string STR0 with groupid and tok.regex , append it to the parts .	parts . append ( STR0 % ( groupid , tok . regex ) )
9861	self._done is boolean True .	self . _done = True
5333	substitute self.count for top .	top = self . count
11408	define the method __getitem__ with 2 arguments : self and key .	def __getitem__ ( self , key ) :
12641	substitute value under the name key of the lib.filters dictionary for value under the name key of the temp_lib.filters dictionary .	temp_lib . filters [ name ] = lib . filters [ name ]
10759	return an instance of VariableNode class with an argument filter_expression .	return VariableNode ( filter_expression )
7642	from django.forms.fields import Field and FileField into default name space .	from django . forms . fields import Field , FileField
9429	if choice_label is an instance of tuple or list ,	if isinstance ( choice_label , ( tuple , list ) ) :
7599	fields is an tuple containing instances of the class DateField , created with 3 arguments : input_formats set to input_date_formats ,	fields = ( DateField ( input_formats = input_date_formats , error_messages = { STR0 : errors [ STR1 ] } , localize = localize ) , TimeField ( input_formats = input_time_formats , error_messages = { STR2 : errors [ STR3 ] } , localize = localize ) , )
5597	for every obj in PythonDeserializer called with arguments objects and unpacked dictionary options ,	for obj in PythonDeserializer ( objects , ** options ) :
18754	from unittest2 import everything .	from unittest2 import *
11507	call the method self.create_token with 3 arguments : self.template_string list elements from start index to end index , tuple with 2 elements : start and end and boolean False , append the result to result .	result . append ( self . create_token ( self . template_string [ start : end ] , ( start , end ) , True ) )
10165	call the method self.appendlist with 2 arguments : return value of the function force_text with 3 arguments : key , encoding and errors set to string STR0 , and return value of the function force_text with 3 arguments : value , encoding and errors set to string STR1 .	self . appendlist ( force_text ( key , encoding , errors = STR0 ) , force_text ( value , encoding , errors = STR1 ) )
6132	if value under the STR0 key of options dictionary is true ,	if options [ STR0 ] :
3951	if not ,	else :
4442	replace STR1 in a string STR0 with error_text , write it to self.stderr .	self . stderr . write ( STR0 % error_text )
10350	raise an BadHeaderError exception with an argument string STR0 , where STR1 is replaced with value .	raise BadHeaderError ( STR0 % value )
3377	if is_relation is true ,	if is_relation :
17910	define the method dst with 2 arguments : self and dt .	def dst ( self , dt ) :
11502	call the method tag_re.finditer with an argument self.template_string , for every match in result ,	for match in tag_re . finditer ( self . template_string ) :
2709	define the method add_arguments with an argument self and parser .	def add_arguments ( self , parser ) :
11011	define the method __str__ with an argument self .	def __str__ ( self ) :
893	value under the STR0 key of the context_extras dictionary is boolean True .	context_extras [ STR0 ] = True
13813	from django.utils.translation import get_language to the default name space .	from django . utils . translation import get_language
2981	return nothing .	return
14221	if six.PY3 is true ,	if six . PY3 :
2741	self.stderr is an OutputWrapper object instance , created with value under the STR0 key of the options dictionary as an argument , if the key doesnt exists use sys.stderr as an argument .	self . stderr = OutputWrapper ( options . get ( STR0 , sys . stderr ) )
5559	from django.utils.timezone import is_aware into default name space .	from django . utils . timezone import is_aware
15017	if config dictionary value under STR0 key is not equal to integer 1 ,	if config [ STR0 ] != 1 :
6551	join m and n into a string , separated by STR0 , substitute the result for lookup_view_s .	lookup_view_s = STR0 % ( m , n )
1225	if ret equals to integer 0 , return boolean True , otherwise return boolean False .	return ( ret == 0 )
2630	if self.cmd has an attribute STR0 and next statement is not true : args is true or any arg doesnt start with STR1 for arg in args ,	if ( hasattr ( self . cmd , STR0 ) and not ( args or any ( [ not arg . startswith ( STR1 ) for arg in args ] ) ) ) :
21	substitute value under the backend key of settings.CACHES dictionary for conf .	conf = settings . CACHES [ backend ]
15006	set result attribute name to value value .	setattr ( result , name , value )
9525	call the method __init__ from the base class of the class SplitDateTimeWidget , with 2 arguments : widgets and attrs .	super ( SplitDateTimeWidget , self ) . __init__ ( widgets , attrs )
10842	substitute i-th element of subject for c .	c = subject [ i ]
10400	get the value under the key key of the self.cookies dictionary , substitute boolean True for STR0 key of the returned dictionary .	self . cookies [ key ] [ STR0 ] = True
15346	call the function is_aware with an argument date , if it evaluates to true ,	if is_aware ( date ) :
5557	from django.core.serializers.python import Deserializer as PythonDeserializer into default name space .	from django . core . serializers . python import Deserializer as PythonDeserializer
1909	if self._request_middleware is None ,	if self . _request_middleware is None :
14123	call the method dict_.getlist with an argument key , return the result .	return dict_ . getlist ( key )
10177	raise an AttributeError with an argument string STR0 .	raise AttributeError ( STR0 )
10962	calculate the length of args , substitute it for alen .	alen = len ( args )
10679	call the method self.create_token with 2 arguments bit and in_tag , append the result to result .	result . append ( self . create_token ( bit , in_tag ) )
7149	if decimals is greater than digits ,	if decimals > digits :
6719	domain_whitelist is a list containing string STR0 .	domain_whitelist = [ STR0 ]
548	return boolean True .	return True
15010	convery value into a tuple , substitute it for value .	value = tuple ( value )
17017	if not ,	else :
15943	call the function re.compile with raw string STR0 , substitute the result for link_target_attribute_re .	link_target_attribute_re = re . compile ( STR0 )
8355	derive the class ModelFormOptions from object base class .	class ModelFormOptions ( object ) :
7226	call the function datetime.datetime with 3 arguments : value.year , value.month and value.day , substitute the result for result .	result = datetime . datetime ( value . year , value . month , value . day )
15396	date_keys is a tuple with 2 arguments : strings STR0 and STR1 .	date_keys = ( STR0 , STR1 )
4340	define the method add_arguments with 2 arguments self and parser .	def add_arguments ( self , parser ) :
17750	call the function force_text with first element of list_ as an argument , return the result .	return force_text ( list_ [ 0 ] )
1288	from django.utils.six.moves.urllib.parse import urljoin into default name space .	from django . utils . six . moves . urllib . parse import urljoin
15443	derive the class RssUserland091Feed from the RssFeed base class .	class RssUserland091Feed ( RssFeed ) :
1319	define the method listdir with arguments self and path .	def listdir ( self , path ) :
1021	if file object has an attribute STR0 ,	if hasattr ( file , STR0 ) :
7588	do nothing .	pass
14614	compile regex from raw string STR0 , substitute it for time_re .	time_re = re . compile ( STR0 )
13243	define the method led with 3 arguments : self , left and parser .	def led ( self , left , parser ) :
5863	for every event and node in self.event_stream ,	for event , node in self . event_stream :
2156	define the method send_messages with arguments self and email_message .	def send_messages ( self , email_messages ) :
6018	msg is a tuple containing one initial entry : a string STR0 , where STR1 is replaced by app_path and STR2 is replaced by e .	msg = ( STR0 % ( { STR1 : app_path , STR2 : e , } ) )
5829	call the function smart_text with argument related_att , use the result as an argument for the call to the self.xml.characters method .	self . xml . characters ( smart_text ( related_att ) )
3221	deps is an empty list .	deps = [ ]
10474	derive the class HttpResponseRedirectBase from the HttpResponse base class .	class HttpResponseRedirectBase ( HttpResponse ) :
7845	convert self.changed_data into boolean , return it .	return bool ( self . changed_data )
13312	self.pos is integer 0 .	self . pos = 0
9882	decrement end by one .	end -= 1
11822	decorator function register.filter with an argument is_safe set to boolean False .	@ register . filter ( is_safe = False )
12701	for every bit in bits ,	for bit in bits :
576	import module pickle .	import pickle
4655	raise a exception of ComandError class with string STR0 , with all STR1 strings replaced with migration_name and app_label , respectively , as an argument .	raise CommandError ( STR0 % ( migration_name , app_label ) )
8278	substitute form.cleaned_data for cleaned_data .	cleaned_data = form . cleaned_data
12137	define the method render with 2 arguments : self and context .	def render ( self , context ) :
14981	value is an instance of ConvertingList class , created with an argument value .	value = ConvertingList ( value )
2647	if out has an STR0 argument and return value of the function out.isatty is true ,	if hasattr ( out , STR0 ) and out . isatty ( ) :
959	messages is an instance of the ValidationError class created with an argument messages .	messages = ValidationError ( messages )
15667	split value into two parts by decimal_separator , assign the result to value and decimals .	value , decimals = value . split ( decimal_separator , 1 )
9273	derive the class DateInput from the DateTimeBaseInput base class .	class DateInput ( DateTimeBaseInput ) :
16462	return boolean False .	return False
18803	attrs is an empty dictionary .	attrs = { }
13616	truncate last 9 elements of filename and append it string STR0 .	filename = filename [ : - 9 ] + STR0
8409	for every field_name in self.fields ,	for field_name in self . fields :
18470	lineno_comment_map is an dictionary .	lineno_comment_map = { }
6971	__all__ a tuple containing strings : STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 ,	__all__ = ( STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 , STR7 , STR8 , STR9 , STR10 , STR11 , STR12 , STR13 , STR14 , STR15 , STR16 , STR17 , STR18 , STR19 , STR20 , STR21 , STR22 , STR23 , STR24 , STR25 )
12876	define the method render with 2 arguments self and context .	def render ( self , context ) :
4969	return reversed list output .	return output [ : : - 1 ]
15425	call the method handler.endElement with an argument string STR0 .	handler . endElement ( STR0 )
3011	substitute value under the cache_alias key of the caches dictionary for cache .	cache = caches [ cache_alias ]
5503	do nothing .	pass
17605	return None .	return None
2185	import module mimetypes .	import mimetypes
9542	from django.utils.encoding import force_st into default name space .	from django . utils . encoding import force_str
679	return self._client .	return self . _client
11385	call the method self._reset_dicts with an argument dict_ .	self . _reset_dicts ( dict_ )
3799	get the value under the STR0 key of the options dictionary , substitute it for self.keep_pot .	self . keep_pot = options . get ( STR0 )
11891	if TypeError exception is caught ,	except TypeError :
2049	if STR0 is contained in kwargs ,	if STR0 in kwargs :
7852	call the method field.widget.value_from_datadict with 3 arguments : self.data , self.files , prefixed_name , substitute the result for data_value .	data_value = field . widget . value_from_datadict ( self . data , self . files , prefixed_name )
12792	return None .	return None
1359	call the function os.makedirs with argument directory .	os . makedirs ( directory )
16394	split ip_str into parts by STR0 , substitute the result for hextets .	hextets = ip_str . split ( STR0 )
12307	substitute var_name for self.var_name .	self . var_name = var_name
9137	call the method copy.copy , substitute the result for obj .	obj = copy . copy ( self )
2131	self.connection is a instance of a class contained in connection_class , instantiated with arguments : self.host , self.port , and unpacked dictionary connection_params .	self . connection = connection_class ( self . host , self . port , ** connection_params )
7547	if not ,	else :
1316	raise an NotImplementedError exception with argument string STR0 .	raise NotImplementedError ( STR0 )
11336	if templatetags_modules is false ,	if not templatetags_modules :
525	new_value is a sum of value and delta .	new_value = value + delta
9176	derive the class NumberInput from the TextInput base class .	class NumberInput ( TextInput ) :
14028	hex_format_string is a string STR0 formated with hlen multiplied with integer 2 .	hex_format_string = STR0 % ( hlen * 2 )
3062	call the method connection.client.runshell .	connection . client . runshell ( )
3776	define the method handle with 3 arguments : self , unpacked list args and unpacked dictionary options .	def handle ( self , * args , ** options ) :
428	num_entries is length of filelist .	num_entries = len ( filelist )
3382	append rel_to to string 'ForeignKey ( , append character STR to it , substitute the result for field_type .	field_type = STR0 % rel_to
9446	_empty_value is None .	_empty_value = None
11864	call the function random_module.choice with an argument value , return the result .	return random_module . choice ( value )
4116	from django.db import connections , router , transaction and DEFAULT_DB_ALIAS into default name space .	from django . db import connections , router , transaction , DEFAULT_DB_ALIAS
2793	replace STR1 in string STR0 with msg , substitute it for msg .	msg = STR0 % msg
1141	substitute file_or_path for file .	file = file_or_path
4303	for every app_label in app_labels ,	for app_label in app_labels :
18211	call the function local , substitute the result for _active .	_active = local ( )
15314	return encoding .	return encoding
14540	return a string STR0 formated with self.data.month .	return STR0 % self . data . month
15272	if not ,	else :
12312	call the method self.target.resolve with 2 arguments : context and boolean True , substitute it for obj_list .	obj_list = self . target . resolve ( context , True )
1361	if e.errno is not equal to errno.EEXIST ,	if e . errno != errno . EEXIST :
3080	replace STR1 in string STR0 with key and value under the key key of the user_setting dictionary , append it to the output .	output . append ( STR0 % ( key , user_settings [ key ] ) )
24	call the function import_string with argument backend .	import_string ( backend )
3690	join self.dirpath and self.file into a file path , return it .	return os . path . join ( self . dirpath , self . file )
8670	call the method self.model._default_manager.get_queryset with an argument qs .	qs = self . model . _default_manager . get_queryset ( )
7963	if attrs is false , make attrs an empty dictionary .	attrs = attrs or { }
2598	otherwise , length of options.args is lesser than integer 1 ,	elif len ( options . args ) < 1 :
15865	call the function new_method_proxy with an argument operator.getitem , substitute the result for __getitem__ .	__getitem__ = new_method_proxy ( operator . getitem )
11978	if value is false ,	if not value :
928	derive the class SuspiciousFileOperation from the SuspiciousOperation base class .	class SuspiciousFileOperation ( SuspiciousOperation ) :
18145	raise an KeyError with an argument STR0 , where STR1 is replaced with lang_code .	raise KeyError ( STR0 % lang_code )
7172	substitute input_formats for self.input_formats .	self . input_formats = input_formats
15117	raise an exception .	raise
3957	with the result renamed to fp , perform the following : read data from file fp , use the result as an argument for the call to the function plural_forms_re.search , substitute it for m .	m = plural_forms_re . search ( fp . read ( ) )
5611	return r .	return r
7458	derive the class TypedMultipleChoiceField from the base class MultipleChoiceField class .	class TypedMultipleChoiceField ( MultipleChoiceField ) :
17987	if active has an attribute STR0 ,	if hasattr ( _active , STR0 ) :
13060	substitute cached_loaders for self._cached_loaders .	self . _cached_loaders = cached_loaders
2463	if OSError exception is caught ,	except OSError :
9412	outer_html is a string STR0 .	outer_html = STR0
10039	define the method build_absolute_uri with an arguments self and location set to None .	def build_absolute_uri ( self , location = None ) :
557	try ,	try :
6660	substitute message for self.message .	self . message = message
12916	call the function get_template with an argument parent , return the result .	return get_template ( parent )
9976	RAISE_ERROR is an instance of object class .	RAISE_ERROR = object ( )
15178	call the method self.add_filters with 2 arguments : result and filters .	self . add_filters ( result , filters )
16184	return j .	return j
3564	increment loaded_objects_in_fixture by one .	loaded_objects_in_fixture += 1
11635	if ValueError exception is caught ,	except ValueError :
5730	raise an base.DeserializationError exception with an argument string STR0 , where STR1 is replaced with model_identifier .	raise base . DeserializationError ( STR0 % model_identifier )
16828	remove the first element from str_number .	str_number = str_number [ 1 : ]
16022	call the function allow_lazy with 2 arguments : strip_spaces_between_tags , six.text_type , substitute the result for strip_spaces_between_tags .	strip_spaces_between_tags = allow_lazy ( strip_spaces_between_tags , six . text_type )
15925	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
1352	if self.directory_permissions_mode is not None ,	if self . directory_permissions_mode is not None :
3286	if not ,	else :
2391	if content is an instance of a EmailMessage class ,	if isinstance ( content , EmailMessage ) :
10524	return response .	return response
9469	_empty_value is an empty string .	_empty_value = STR
12576	substitute parser for self.template_parser .	self . template_parser = parser
687	if self._options exists ,	if self . _options :
12533	if var is false or whitespaces are contained in var ,	if not var or STR in var :
16343	level is an integer 0 .	level = 0
450	if fname is contained in self._list_cache_files method return value ,	for fname in self . _list_cache_files ( ) :
14715	define the function decorator with an argument klass .	def decorator ( klass ) :
10065	return self._encoding .	return self . _encoding
14131	skip this loop iteration .	continue
15149	remove config dictionary element under STR0 key , substitute it for c .	c = config . pop ( STR0 )
6343	raise an ImproperlyConfigured exception with argument string STR1 , where STR2 is replace by regex and return value of the function six.text_type with an argument e .	raise ImproperlyConfigured ( STR1 % ( regex , six . text_type ( e ) ) )
10105	if self.method is not equal to string STR0 ,	if self . method != STR0 :
4731	if self.verbosity is greater than integer 0 ,	if self . verbosity > 0 :
5235	call the method tempfile.mkdtemp with 2 arguments : prefix set to prefix , suffix set to string STR0 , substitute the result for tempdir .	tempdir = tempfile . mkdtemp ( prefix = prefix , suffix = STR0 )
18667	if data is contained in self.children ,	if data in self . children :
382	return boolean True .	return True
13495	members is a list with elements member for every member in the result of the function self._archive.getmembers , only if member.name is not equal to string STR0 .	members = [ member for member in self . _archive . getmembers ( ) if member . name != STR0 ]
2855	define the method handle_noargs with 2 arguments : self and unpacked dictionary options .	def handle_noargs ( self , ** options ) :
9312	append options to output .	output . append ( options )
14530	return string STR0 .	return STR0
4277	call the cursor.execute method with sql as argument .	cursor . execute ( sql )
13402	raise an exception .	raise
915	from django.utils import six into default name space .	from django . utils import six
6636	return boolean True .	return True
12711	register.tag decorator ,	@ register . tag
18760	import module subprocess .	import subprocess
5775	from django.apps import apps into default name space .	from django . apps import apps
5644	self._current is None .	self . _current = None
14290	call the method self.__class__ , substitute the result for result .	result = self . __class__ ( )
17407	if sep is an instance of unicode ,	if isinstance ( sep , unicode ) :
14658	import module time .	import time
15327	days is a tuple with 7 elements : strings STR0 , STR1 , STR2 , STR3 , STR4 , STR5 and STR6 .	days = ( STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 )
7374	define the method validate with arguments self and value .	def validate ( self , value ) :
17266	set move.name attribute of the _MovedItems to move .	setattr ( _MovedItems , move . name , move )
6085	try ,	try :
1782	define the method apply_response_fixes with self class instance , request and response as the arguments .	def apply_response_fixes ( self , request , response ) :
18003	define the function template_localtime with 2 arguments : value and use_tz set to None .	def template_localtime ( value , use_tz = None ) :
13368	from django.utils import six into default name space .	from django . utils import six
17560	call the function six.iteritems with an argument kwargs , for every k and v in the result ,	for k , v in six . iteritems ( kwargs ) :
14282	return an empty list .	return [ ]
8449	substitute error_messages under the message.code key of error_messages dictionary for message.message .	message . message = error_messages [ message . code ]
3893	use the result as an argument for the call to the os.path.join function , use the result and the norm_patterns as arguments for the call to the is_ignored function , if it evaluates to true , remove dirname from the dirnames .	dirnames . remove ( dirname )
16517	define the function escape_quotes with an argument m .	def escape_quotes ( m ) :
12352	return an empty string ,	return STR
16685	root dictionary values under the KEY and RESULT keys are both None .	root [ KEY ] = root [ RESULT ] = None
11254	otherwise if func is callable object ,	elif callable ( func ) :
10432	define the serialize content with an argument self .	def serialize ( self ) :
3615	decorator cached_property ,	@ cached_property
6209	convert value , self.sep and return value of a method self.signature called with an argument value , concatenate them together , return the result .	return str ( STR0 ) % ( value , self . sep , self . signature ( value ) )
11172	slice list unhandled_params from the beginning to the length of defaults last element ,	unhandled_params = unhandled_params [ : - len ( defaults ) ]
3381	if not ,	else :
14127	for every dict_ in self.dicts ,	for dict_ in self . dicts :
5607	if o.microsecond is true ,	if o . microsecond :
11834	decorator function register.filter with 2 arguments is_safe set to boolean True and needs_autoescape set to boolean True .	@ register . filter ( is_safe = True , needs_autoescape = True )
18255	define the method __repr__ with an argument self .	def __repr__ ( self ) :
15612	get the value under the if iso_input not in val key of the ISO_INPUT_FORMATS dictionary , if it doesnt exists return an empty tuple ,	for iso_input in ISO_INPUT_FORMATS . get ( format_type , ( ) ) :
16144	if attrvalue is not an empty string ,	if attrvalue :
208	derive class BaseDatabaseCache from BaseCache base class .	class BaseDatabaseCache ( BaseCache ) :
15686	call the function _curried_func with 2 arguments : list moreargs appended to args and unpacked , unpacked dictionary created with elements of morekwargs dictionary through the kwargs mapping , return the result .	return _curried_func ( * ( args + moreargs ) , ** dict ( kwargs , ** morekwargs ) )
17504	if not ,	else :
12400	if not ,	else :
16356	best_doublecolon_len is an integer 0 .	best_doublecolon_len = 0
5946	call the method _ExpatParser.__init__ with arguments self , unpacked list args and unpacked dictionary kwargs .	_ExpatParser . __init__ ( self , * args , ** kwargs )
15262	for every arg in s , call the function force_text with arg , encoding , strings_only and errors as arguments , join the result in a string separated by whitespaces , substitute it for s .	s = STR . join ( [ force_text ( arg , encoding , strings_only , errors ) for arg in s ] )
18710	define the method tzname with 2 arguments self and dt .	def tzname ( self , dt ) :
5465	derive the class DeserializationError from the Exception base class .	class DeserializationError ( Exception ) :
11660	if InvalidOperation exception is caught ,	except InvalidOperation :
3371	append att_name to used_column_names list .	used_column_names . append ( att_name )
14051	if os.name equals string STR0 ,	if os . name == STR0 :
1798	from django.core.urlresolvers import set_script_prefix into default name space .	from django . core . urlresolvers import set_script_prefix
14643	call the function get_fixed_timezone with an argument offset , substitute the result for tzinfo .	tzinfo = get_fixed_timezone ( offset )
7603	if first element of data_list is contained in self.empty_values ,	if data_list [ 0 ] in self . empty_values :
14582	call the function calendar.isleap with an argument self.data.year , if it evaluates to true ,	if calendar . isleap ( self . data . year ) :
16506	if tok.next is true ,	if tok . next :
18574	format string STR0 with g , write it to out .	out . write ( STR0 % g )
231	call the method router.db_for_write with argument self.cache_model_class , substitute the result for db .	db = router . db_for_write ( self . cache_model_class )
15241	if s is the instance of the object six.text_type ,	if isinstance ( s , six . text_type ) :
7163	call the object Decimal with string STR0 as an argument , divide it by 10 , bring the result to the power of self.decimal_places , convert the result to a lowercase string , substitute it for step .	step = str ( Decimal ( STR0 ) / 10 ** self . decimal_places ) . lower ( )
5277	prepend STR0 to the i-th element of the ext_list .	ext_list [ i ] = STR0 % ext_list [ i ]
1789	import module logging .	import logging
14787	call the method middleware.process_template_response with 2 arguments : request and response , substitute the result for response .	response = middleware . process_template_response ( request , response )
3319	define the method add_arguments with arguments self and parser .	def add_arguments ( self , parser ) :
13279	substitute key for op.id .	op . id = key
13387	define the function npath with an argument path .	def npath ( path ) :
1638	define iterator method __iter__ with self as the argument .	def __iter__ ( self ) :
18240	if p is greater or equal to integer 0 ,	if p >= 0 :
6282	return lookup_view .	return lookup_view
122	if timeouts is None return None , otherwise return the sum of function time.time return value and timeout .	return None if timeout is None else time . time ( ) + timeout
4199	call the method self.stdout.write with string STR0 as an argument .	self . stdout . write ( STR0 )
14371	call the function six.iteritems with an argument kwargs , for every key and value in the result ,	for key , value in six . iteritems ( kwargs ) :
14807	substitute class_name for self.class_name .	self . class_name = class_name
16253	if Exception exception is caught .	except Exception :
16225	call the method query.items , substitute the result for query .	query = query . items ( )
8975	if not ,	else :
10824	substitute self.pointer for i .	i = self . pointer
6637	if Resolver404 exception is caught ,	except Resolver404 :
12814	call the function find_template with 2 arguments : template_name and dirs , substitute the result for template and origin .	template , origin = find_template ( template_name , dirs )
13042	raise an TemplateDoesNotExist exception with an argument template_name .	raise TemplateDoesNotExist ( template_name )
780	from django.db import models into default name space .	from django . db import models
12433	return an empty string ,	return STR
18804	cal the method self.startElement with 2 arguments : name and attrs .	self . startElement ( name , attrs )
632	for every k and v in return value of the ret.items function ,	for k , v in ret . items ( ) :
3271	substitute value under the database key of the connections dictionary for connection .	connection = connections [ database ]
13388	if six.PY2 is true and path is not an instance of byes type ,	if six . PY2 and not isinstance ( path , bytes ) :
15091	call the method self.configure_logger with 2 arguments : name and value under loggers dictionary key name .	self . configure_logger ( name , loggers [ name ] )
13244	raise an exception parser.error_class with an argument string STR0 , where STR1 is replaced with self.id .	raise parser . error_class ( STR0 % self . id )
15877	define the method __repr__ with an argument self .	def __repr__ ( self ) :
2802	otherwise if msg is true ,	elif msg :
18451	call the function re.compile with an argument raw string STR0 [ ^ STR1 ) | ( ? : STR2 ] * ? ' ) ) \s* '' , substitute the result for context_re .	context_re = re . compile ( STR0 )
15383	do nothing .	pass
336	define the method set with 5 arguments : self , key , value , timeout set to DEFAULT_TIMEOUT and version set to None .	def set ( self , key , value , timeout = DEFAULT_TIMEOUT , version = None ) :
3708	append work_file to args .	args . append ( work_file )
17220	append string STR0 to __name__ , use it as an argument to instantiate _MovedItems class , assign it to moves , and to value under the STR1 appended to __name__ key of the sys.modules dictionary .	moves = sys . modules [ __name__ + STR0 ] = _MovedItems ( __name__ + STR1 )
7757	if output is true ,	if output :
558	delete the value under the key key of self._cache dictionary .	del self . _cache [ key ]
18573	if not ,	else :
14936	if AttributeError exception is caught ,	except AttributeError :
9399	define the method __init__ with 3 arguments : self , unpacked list args and unpacked dictionary kwargs .	def __init__ ( self , * args , ** kwargs ) :
5709	if field.rel.to._default_manager has an STR0 attribute ,	if hasattr ( field . rel . to . _default_manager , STR0 ) :
10445	append value to the self._closable_objects list .	self . _closable_objects . append ( value )
17780	define the function compress_sequence with an argument sequence .	def compress_sequence ( sequence ) :
4067	questioner is an instance of a InteractiveMigrationQuestioner class , created with an argument : defaults set to dictionary with entry : boolean True for STR0 .	questioner = MigrationQuestioner ( defaults = { STR0 : True } )
17183	define the method __init__ with 2 arguments : self and name .	def __init__ ( self , name ) :
4920	if model is not contained in app_models for every model in return value of the connection.introspection.installed_models function return value , add model to a set , substitute the result for known_models .	known_models = set ( model for model in connection . introspection . installed_models ( tables ) if model not in app_models )
17401	errors is a string STR0 .	errors = STR0
16488	groupid is a string STR0 formated with tok.id .	groupid = STR0 % tok . id
7844	define the method has_changed with an argument self .	def has_changed ( self ) :
11240	define the method simple_tag with 4 arguments : self , func and None , takes_context and None and name set to None .	def simple_tag ( self , func = None , takes_context = None , name = None ) :
10399	if httponly is true ,	if httponly :
2961	if locales in not empty ,	if locales :
6298	if not ,	else :
4592	from django.core.management.sql import sql_destroy_indexes into default name space .	from django . core . management . sql import sql_destroy_indexes
11181	define the method __init__ with 4 arguments : self , takes_context , args and kwargs .	def __init__ ( self , takes_context , args , kwargs ) :
2562	for every x in slice of cwords from the second element to the element at the cword decremented by 1 index ,	prev_opts = [ x . split ( STR0 ) [ 0 ] for x in cwords [ 1 : cword - 1 ] ]
11576	from decimal import Decimal , InvalidOperation , Context and ROUND_HALF_UP into default name space .	from decimal import Decimal , InvalidOperation , Context , ROUND_HALF_UP
10949	call the function func with 2 arguments : obj and unpacked list arg_vals , substitute the result for new_obj .	new_obj = func ( obj , * arg_vals )
2540	if IndexError exception is caugh ,	except IndexError :
7346	return value .	return value
4237	evaluate next boolean expression , value of converter function with opts.db_table as argument is contained in tables , or opts.auto_created is True and return value of converter function with opts.auto_created._meta.db_table is contained in tables , invert the evaluated expression and return it .	return not ( ( converter ( opts . db_table ) in tables ) or ( opts . auto_created and converter ( opts . auto_created . _meta . db_table ) in tables ) )
16534	append tok to c .	c . append ( tok )
12469	split first element of args by STR0 , convert separated elements to strings , substitute the first 2 elements of the result , for second and third element of args , respectively .	args [ 1 : 2 ] = [ STR2 % arg for arg in args [ 1 ] . split ( STR1 ) ]
3738	if os.name equals string STR0 ,	if os . name == STR0 :
2728	call the function handle_default_options with an argument options .	handle_default_options ( options )
5140	open old_path file in STR0 mode , with file descriptor renamed to template_file ,	with open ( old_path , STR0 ) as template_file :
16452	split ip_str into parts by STR0 , substitute the result for new_ip .	new_ip = ip_str . split ( STR0 )
17226	substitute _urllib_parse_moved_attributes for Module_six_moves_urllib_parse._moved_attributes .	Module_six_moves_urllib_parse . _moved_attributes = _urllib_parse_moved_attributes
269	call the method cursor.execute with string STR0 as argument , substitute the STR1 with table and list containing key , respectively .	cursor . execute ( STR0 % table , [ key ] )
7162	if self.decimal_places is not None ,	if self . decimal_places is not None :
7703	call the function copy.deepcopy with an argument self.base_fields , substitute the result for self.fields .	self . fields = copy . deepcopy ( self . base_fields )
3698	is_templatized is boolean True .	is_templatized = True
6032	call the __init__ method from the base class of the WSGIRequestHandler class , with 2 arguments : unpacked list args and unpacked dictionary kwargs .	super ( WSGIRequestHandler , self ) . __init__ ( * args , ** kwargs )
4045	substitute STR1 in a string STR0 with return value of the self.style.MIGRATE_LABEL method called with argument writer.filename , write the result to self.stdout .	self . stdout . write ( STR0 % ( self . style . MIGRATE_LABEL ( writer . filename ) , ) )
1860	convert value under the STR0 key of the environ dictionary to uppercase , substitute it for self.method .	self . method = environ [ STR0 ] . upper ( )
2910	if tags exists and if all elements in the return value of the method checks.tag_exists called with an argument tag ,	if tags and any ( not checks . tag_exists ( tag ) for tag in tags ) :
14712	return s .	return s
12578	define the method create_var with 2 arguments : self and value .	def create_var ( self , value ) :
8998	if item is contained in the list of the elements of self , return boolean True , otherwise return boolean False .	return item in list ( self )
6560	define the method regex with an argument self .	def regex ( self ) :
12788	substitute TemplateLoader for func .	func = TemplateLoader
16902	get the next element of the iterable pattern_iter , assign the result for ch and escaped , respectively .	ch , escaped = next ( pattern_iter )
10533	if response.streaming is true ,	if response . streaming :
3971	return msgs .	return msgs
2574	if IndexError exception is caught ,	except IndexError :
15556	from django.utils.functional import lazy into default name space .	from django . utils . functional import lazy
13600	for every basedir in basedirs ,	for basedir in basedirs :
8448	if message is an instance of ValidationError class and message.code is contained in error_messages ,	if ( isinstance ( message , ValidationError ) and message . code in error_messages ) :
11732	instantiate class Truncator , with an argument value , call the method words on the result with 3 arguments length , html set to boolean True and truncate set to string STR0 , return the result .	return Truncator ( value ) . words ( length , html = True , truncate = STR0 )
6199	derive the class Signer from the object base class .	class Signer ( object ) :
4370	STR0 , re.X DEFAULT_PORT is a string STR1 .	DEFAULT_PORT = STR0
13928	headerlist is an empty list .	headerlist = [ ]
11658	reverse element order of dicts , join them in a string , substitute the result for number .	number = STR . join ( reversed ( digits ) )
8787	call the method __init__ from the base class of the class InlineForeignKeyField , with 2 arguments unpacked list args , and unpacked dictionary kwargs .	super ( InlineForeignKeyField , self ) . __init__ ( * args , ** kwargs )
4651	raise a exception of CommandError class , with string STR0 with STR1 replaced with app_label as the argument .	raise CommandError ( STR0 % app_label )
18174	if message is an instance of SafeData .	if isinstance ( message , SafeData ) :
924	do nothing .	pass
14683	if j equals to integer -1 ,	if j == - 1 :
17565	for every o in opts ,	for o in opts :
7205	if value is contained in self.empty_values ,	if value in self . empty_values :
11247	if name is true , substitute it for function_name , if not get attribute STR0 from func object , substitute its __name__ field for function name , if it doesnt exists substitute func.__name__ for function_name .	function_name = ( name or getattr ( func , STR0 , func ) . __name__ )
15591	call the function get_language , substitute the result for lang .	lang = get_language ( )
18735	if dt is None is_dst is boolean False , otherwise call the method self._isdst with an argument dt , substitute the result for is_dst .	is_dst = False if dt is None else self . _isdst ( dt )
8940	from django.utils import six into default name space .	from django . utils import six
1540	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
18377	call the function ungettext with 3 arguments : singular , plural and number , substitute the result for result .	result = ungettext ( singular , plural , number )
9456	if value is None ,	if value is None :
4400	if _ipv6 is true ,	if _ipv6 :
8199	value under the DELETION_FIELD_NAME key of the form.fields is an instance of BooleanField class , created with 2 arguments : label set to return value of the function _ called with an string STR0 and required as boolean False .	form . fields [ DELETION_FIELD_NAME ] = BooleanField ( label = _ ( STR0 ) , required = False )
8795	if not ,	else :
17008	result_args is a list containing an empty list .	result_args = [ [ ] ]
5055	import module mimetypes .	import mimetypes
7790	if field is not equal to NON_FIELD_ERRORS and field is not contained in self.fields ,	if field != NON_FIELD_ERRORS and field not in self . fields :
17694	if length of words is greater than length ,	if len ( words ) > length :
15777	if other is an instance of Promise ,	if isinstance ( other , Promise ) :
3467	if fifth element of row is not None , substitute it for value under the STR0 key of the field_params , otherwise , value under the STR1 key of the field_params is integer 10 .	field_params [ STR0 ] = row [ 4 ] if row [ 4 ] is not None else 10
3426	while the result of the method new_name.find , called with an argument string STR0 is greater or equals integer 0 ,	while new_name . find ( STR0 ) >= 0 :
10250	get is a tuple containing elements generated by the call to the function pformat with an argument COOKIES_override , if COOKIES_override is not None , or otherwise generated with the call to the function pformat with an argument request.COOKIES .	cookies = ( pformat ( COOKIES_override ) if COOKIES_override is not None else pformat ( request . COOKIES ) )
6100	if not ,	else :
13465	define the method split_leading_dir with 2 arguments self and path .	def split_leading_dir ( self , path ) :
9153	define the method render with 4 arguments : self , name , value and attrs set to None .	def value_from_datadict ( self , data , files , name ) :
15522	if value under the STR0 key of the item dictionary is not None ,	if item [ STR0 ] is not None :
1387	if e.errno equals to errno.EEXIST ,	if e . errno == errno . EEXIST :
16203	__Y is a raw string STR0 .	__Y = STR0
10645	call the method lexer_class with an arguments template_string and origin , substitute the result for lexer .	lexer = lexer_class ( template_string , origin )
9764	if remaining is None ,	if remaining is None :
15060	get config dictionary element under STR0 key , if it exists substitute it for filters , if not , filters is EMPTY_DICT .	filters = config . get ( STR0 , EMPTY_DICT )
1045	position file self.file pointer at the pos position .	self . file . seek ( pos )
11758	define the function wordwrap with 2 arguments value and arg .	def wordwrap ( value , arg ) :
6218	derive the class TimestampSigner from the Signer base class .	class TimestampSigner ( Signer ) :
9433	sub_ul_renderer is an instance of ChoiceFieldRenderer class , created with 4 arguments : name as self.name , value as self.value , attrs as attrs_plus and choices as choice_label .	sub_ul_renderer = ChoiceFieldRenderer ( name = self . name , value = self . value , attrs = attrs_plus , choices = choice_label )
16281	break from the loop execution .	break
10651	self.lineno is None .	self . lineno = None
16014	call the function re.compile with 2 arguments : raw string STR0 formated with tags_re and re.U , substitute the result for starttag_re .	starttag_re = re . compile ( STR0 % tags_re , re . U )
18623	if priority is true ,	if priority :
17513	call the method self.can_write.release .	self . can_write . release ( )
10216	define the method clear with an argument self .	def clear ( self ) :
15641	otherwise if value is an instance of datetime.date ,	elif isinstance ( value , datetime . date ) :
5729	if LookupError or TypeError exceptions are caught ,	except ( LookupError , TypeError ) :
11700	call the function re.sub with 3 arguments : string STR0 , lambda function with an argument m and return value , result of the m.group method called with an argument integer 0 converted into lowercase and t , return the result .	return re . sub ( STR0 , lambda m : m . group ( 0 ) . lower ( ) , t )
17924	if not ,	else :
17993	define the method __enter__ with an argument self .	def __enter__ ( self ) :
7297	define the method bound_data with arguments self , data and initial .	def bound_data ( self , data , initial ) :
11613	define the function escapejs_filter with an argument value .	def escapejs_filter ( value ) :
10838	substitute self.pointer for i .	i = self . pointer
4451	if plan is true ,	if plan :
18728	call the function timedelta with an argument seconds as negative time.timezone , return the result .	return timedelta ( seconds = - time . timezone )
12317	return an empty string ,	return STR
9762	define the function parts .	def parts ( ) :
2076	return self._fname .	return self . _fname
499	try ,	try :
13124	if six.PY2 is true ,	if six . PY2 :
17768	define the method __init__ with an argument self .	def __init__ ( self ) :
12650	if InvalidTemplateLibrary , renamed to e , exception is caught ,	except InvalidTemplateLibrary as e :
307	if not ,	else :
7052	return result .	return result
10540	from django.template.base import Context , FilterExpression , Lexer , Node , NodeList , Parser , RequestContext , Origin , StringOrigin , Template , TextNode , Token , TokenParser , Variable , VariableNode , constant_string and filter_raw_string .	from django . template . base import ( Context , FilterExpression , Lexer , Node , NodeList , Parser , RequestContext , Origin , StringOrigin , Template , TextNode , Token , TokenParser , Variable , VariableNode , constant_string , filter_raw_string )
16266	return value .	return value
1542	from django.conf import settings into default name space .	from django . conf import settings
2428	if self.encoding exists substitute it for encoding , if not substitute settings.DEFAULT_CHARSET for encoding .	encoding = self . encoding or settings . DEFAULT_CHARSET
599	define the method get_backend_timeout with self and timeout set to DEFAULT_TIMEOUT as arguments .	def get_backend_timeout ( self , timeout = DEFAULT_TIMEOUT ) :
8023	value under the MIN_NUM_FORM_COUNT of the self.base_fields dictionary is an instance of IntegerField class , created with 2 arguments : required as boolean False and widget set to HiddenInput .	self . base_fields [ MIN_NUM_FORM_COUNT ] = IntegerField ( required = False , widget = HiddenInput )
17914	call the function timedelta with an argument seconds set to negative _time.timezone , substitute the result for self.STDOFFSET .	self . STDOFFSET = timedelta ( seconds = - _time . timezone )
3689	define the method path with an argument self .	def path ( self ) :
3737	if is_templatized is true ,	if is_templatized :
16165	substitute self.rawdata for rawdata .	rawdata = self . rawdata
11202	define the function dec with an argument func ,	def dec ( func ) :
2100	call the method mail.outbox.extend with messages .	mail . outbox . extend ( messages )
13854	return response	return response
8342	call the method f.formfield with an argument , unpacked dictionary kwargs , substitute the result for formfield .	formfield = f . formfield ( ** kwargs )
11249	substitute func.__doc__ for compile_func.__doc__ .	compile_func . __doc__ = func . __doc__
11935	if Exception exception is caught ,	except Exception :
10853	substitute i for p .	p = i
8047	return boolean True .	return True
6462	define the method resolve with an argument self .	def resolve ( self , path ) :
2980	call the self.stderr.write , with string STR0 as argument , with STR1 replaced by dirpath .	self . stderr . write ( STR0 % dirpath )
17622	if identity lambda function returns false , substitute the x for capfirst , if not call the function force_text with an argument x , convert the first element of the result to uppercase , append to it the rest of the result , substitute it for capfirst .	capfirst = lambda x : x and force_text ( x ) [ 0 ] . upper ( ) + force_text ( x ) [ 1 : ]
200	self.app_label is a string STR0 .	self . app_label = STR0
213	_meta is class Options class instance initialized with table argument .	_meta = Options ( table )
181	call the method self.incr_version with key , negative delta and version as arguments .	return self . incr_version ( key , - delta , version )
13164	rendering_attrs is a list containing 3 strings : STR0 , STR1 and STR2 .	rendering_attrs = [ STR0 , STR1 , STR2 ]
13275	return Operator .	return Operator
14629	define the function parse_datetime with an argument value .	def parse_datetime ( value ) :
9600	import module binascii .	import binascii
8060	if self.is_bound is true ,	if self . is_bound :
8723	if commit is true and form has an attribute STR0 ,	if commit and hasattr ( form , STR0 ) :
9121	substitute attrs and choices for self.attrs and self.choices	self . attrs , self . choices = attrs , choices
6095	if value under the STR0 key of the options dictionary equals to string STR1 or STR2 ,	if options [ STR0 ] in ( STR1 , STR2 ) :
8836	self.choice_cache is None .	self . choice_cache = None
14965	if not ,	else :
15821	substitute value under the STR0 key of the self.__dict__ dictionary .	self . __dict__ [ STR0 ] = value
6794	raise a ValidationError exception with arguments self.message , code set to self.code and params set to params .	raise ValidationError ( self . message , code = self . code , params = params )
1549	decorator python_2_unicode_compatible ,	@ python_2_unicode_compatible
18697	if offset is an instance of timedelta class ,	if isinstance ( offset , timedelta ) :
12543	return an instance of ForNode class , created with 5 arguments : loopvars , sequence , is_reversed , nodelist_loop and nodelist_empty .	return ForNode ( loopvars , sequence , is_reversed , nodelist_loop , nodelist_empty )
1007	import module os .	import os
5642	define the method end_object with arguments self and obj .	def end_object ( self , obj ) :
5351	divide hits by a floating point number self.per_page , convert its ceiling value to an integer and substitute it for self._num_pages .	self . _num_pages = int ( ceil ( hits / float ( self . per_page ) ) )
1476	substitute tempfile.NamedTemporaryFile for NamedTemporaryFile .	NamedTemporaryFile = tempfile . NamedTemporaryFile
18765	if fourth element of version equals to string STR0 and fight element of version equals to integer 0 ,	if version [ 3 ] == STR0 and version [ 4 ] == 0 :
4631	get the value under the STR0 key of options dictionary , use it as a index to get connections list element , store it in connection .	connection = connections [ options [ STR0 ] ]
7384	default_error_messages is an dictionary with an entry : return value of the function _ called with an argument string , STR0 for STR1 .	default_error_messages = { STR0 : _ ( STR1 ) , }
12036	replace ' % ( size ) d with bytes , substitute the result for value . otherwise if bytes is smaller than MB ,	elif bytes < MB :
8648	if commit is false ,	if not commit :
8245	from django.utils import six into default name space .	from django . utils import six
17038	substitute new_result for result .	result = new_result
11082	define the method render_node with 3 arguments : self , node and context .	def render_node ( self , node , context ) :
17582	get value under the config_string key of the PALETTES dictionary , call the copy method on the result and substitute it for palette .	palette = PALETTES [ NOCOLOR_PALETTE ] . copy ( )
11686	decorator function register.filter with an argument is_safe set to boolean True .	@ register . filter ( is_safe = True )
12871	derive the class BlockNode from the Node base class .	class BlockNode ( Node ) :
5784	derive the class Serializer from the base.Serializer base class .	class Serializer ( base . Serializer ) :
9031	from django.utils.translation import ugettext_lazy into default name space .	from django . utils . translation import ugettext_lazy
11557	define the method render with 2 arguments : self and context .	def render ( self , context ) :
3160	raise CommandError with an argument string STR0 , where STR1 is replaced with app_label and model_label , respectively .	raise CommandError ( STR0 % ( app_label , model_label ) )
8841	return result .	return result
1788	import module codecs .	import codecs
15532	call the method handler.addQuickElement with 2 arguments : string STR0 and value under the STR1 key of the item dictionary .	handler . addQuickElement ( STR0 , item [ STR1 ] )
2515	for every name in sorted value under the app key of the commands_dict dictionary ,	for name in sorted ( commands_dict [ app ] ) :
12063	return plural_suffix .	return plural_suffix
8251	STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , and STR6 . ALL_FIELDS is a string STR7 .	ALL_FIELDS = STR0
6105	substitute module.WSGIServer for WSGIServer .	WSGIServer = module . WSGIServer
17526	if not ,	else :
7023	raise an ValidationError exception with an argument errors ,	raise ValidationError ( errors )
1996	return self .	return self
1146	close is boolean True .	close = True
11584	from django.utils.html import conditional_escape , escapejs , escape , urlize as _urlize , linebreaks , strip_tags , avoid_wrapping , and remove_tags .	from django . utils . html import ( conditional_escape , escapejs , escape , urlize as _urlize , linebreaks , strip_tags , avoid_wrapping , remove_tags )
7827	if self has an attribute STR0 , where STR1 is replaced with name ,	if hasattr ( self , STR0 % name ) :
1427	raise an ValueError with string STR0 as argument .	raise ValueError ( STR0 )
14471	define the method g with an argument self .	def g ( self ) :
794	define the method is_serious with argument self .	def is_serious ( self ) :
14224	substitute _itervalues for values .	values = _itervalues
6307	raise an ViewDoesNotExist exception with an argument string STR0 , where string STR1 is replaced by lookup_view and mod_name , respectively .	raise ViewDoesNotExist ( STR0 % ( lookup_view , mod_name ) )
3859	potfiles is an empty list .	potfiles = [ ]
9543	from django.utils import six into default name space .	from django . utils import six
7355	if not ,	else :
9554	if not ,	else :
16191	from binascii import Error as BinasciiError into default name space .	from binascii import Error as BinasciiError
143	return d .	return d
15836	call the method self._setup .	self . _setup ( )
17255	instantiate class Module_six_moves_urllib_robotparser with an argument , string STR0 appended to __name__ , assign it to value under the string STR1 appended to __name__ key of the sys.modules dictionary , and to value under the string STR2 appended to __name__ key of the sys.modules dictionary .	sys . modules [ __name__ + STR0 ] = sys . modules [ __name__ + STR1 ] = Module_six_moves_urllib_robotparser ( __name__ + STR2 )
9737	return self._post and self._files .	return self . _post , self . _files
16636	lock is an instance of RLock class .	lock = RLock ( )
6967	from django.utils import six into default name space .	from django . utils import six
14597	return self.data.year .	return self . data . year
8503	form_class_attrs is a dictionary with 2 entries : Meta for STR0 and formfield_callback for STR1 .	form_class_attrs = { STR0 : Meta , STR1 : formfield_callback }
2740	call the function no_style , substitute the result for self.style .	self . style = no_style ( )
674	call method __init__ from the base class of the class MemcachedCache with arguments : server , params , library set to memcache and value_not_found_exception set to ValueError .	super ( MemcachedCache , self ) . __init__ ( server , params , library = memcache , value_not_found_exception = ValueError )
18520	otherwise if pluralmatch is true ,	elif pluralmatch :
9409	python_2_unicode_compatible decorator ,	@ python_2_unicode_compatible
17012	skip this loop iteration .	continue
11375	define the method __init__ with 4 arguments : self , context , unpacked list args and unpacked dictionary kwargs .	def __init__ ( self , context , * args , ** kwargs ) :
11765	decorator stringfilter ,	@ stringfilter
16854	define the function normalize with an argument pattern .	def normalize ( pattern ) :
4753	from importlib import import_module into default name space .	from importlib import import_module
9767	while remaining is not equal to integer 0 ,	while remaining != 0 :
16177	find the first subgroup of the matched string from the match object , strip the whitespaces from the begging and end , replace it for tag .	tag = match . group ( 1 ) . strip ( )
1708	substitute request.urlconf for urlconf .	urlconf = request . urlconf
13300	define the method __init__ with 2 arguments : self and tokens .	def __init__ ( self , tokens ) :
16146	form the tuple from the attrname converted to lowercase and attrvalue , append it to the end of attrs .	attrs . append ( ( attrname . lower ( ) , attrvalue ) )
7161	if widget is an instance of NumberInput and string STR0 is not contained in widget.attrs .	if isinstance ( widget , NumberInput ) and STR0 not in widget . attrs :
4088	substitute STR1 in a string STR0 with app_label , use it as an argument for the call to the method self.style.MIGRATE_HEADING , write the result to self.stdout .	self . stdout . write ( self . style . MIGRATE_HEADING ( STR0 % app_label ) )
58	get attribute name from value under the DEFAULT_CACHE_ALIAS key of caches dictionary , return it .	return getattr ( caches [ DEFAULT_CACHE_ALIAS ] , name )
13834	if cc contains item STR0 and kwargs contains item STR1 ,	if STR0 in cc and STR1 in kwargs :
16900	raise an ValueError with an argument string STR0 formated with ch .	raise ValueError ( STR0 % ch )
17628	call the function re.compile with an argument raw string STR0 , substitute the result for re_camel_case .	re_camel_case = re . compile ( STR0 )
12862	if IndexError exception is caught ,	except IndexError :
976	property getter decorator ,	@ property
16478	substitute next for self.next .	self . next = next
18044	define the method __getattr__ with 2 arguments : self and real_name .	def __getattr__ ( self , real_name ) :
7391	return result .	return result
1786	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
18422	call the function get_language_from_path with an argument request.path_info , substitute it for lang_code .	lang_code = get_language_from_path ( request . path_info )
11065	return nodes .	return nodes
15130	remove config dictionary element under STR0 key , if it exists substitute it for name , if not , name is an empty string .	name = config . get ( STR0 , STR )
11098	return value .	return value
7719	return self._errors .	return self . _errors
511	if length of self._cache is greater or equal to self._max_entries ,	if len ( self . _cache ) >= self . _max_entries :
17118	if first element of sys.version_info equals integer 3 , PY3 is boolean True , otherwise it is boolean False .	PY3 = sys . version_info [ 0 ] == 3
5689	m2m_data is an empty dictionary .	m2m_data = { }
7997	call the method widget.id_for_label with an argument id_ , return the result .	return widget . id_for_label ( id_ )
48	if alias is not contained in setting.CACHES ,	if alias not in settings . CACHES :
2906	call the method apps.get_app_config with an argument app_label , for every app_label in app_labels , append the results to a list , substitute the resulting list for app_config .	app_configs = [ apps . get_app_config ( app_label ) for app_label in app_labels ]
16989	convert first element of values into a integer , return the result and ch .	return int ( values [ 0 ] ) , ch
14971	if m is true ,	if m :
10761	return an instance of NodeList class .	return NodeList ( )
10639	define the method compile_string with 2 arguments : template_string and origin .	def compile_string ( template_string , origin ) :
8126	define the method ordered_forms with an argument self .	def ordered_forms ( self ) :
7936	call the method self.as_widget with 3 arguments : return value of the method self.field.hidden_widget , attrs , and unpacked dictionary kwargs , return the result .	return self . as_widget ( self . field . hidden_widget ( ) , attrs , ** kwargs )
7508	define the method clean with arguments self and value .	def clean ( self , value ) :
9671	strip of the whitespaces first element of transfer_encoding , substitute the result for transfer_encoding .	transfer_encoding = transfer_encoding [ 0 ] . strip ( )
17860	if now is false ,	if not now :
3677	derive the class TranslatableFile from the object class .	class TranslatableFile ( object ) :
12272	define the method __repr__ with an argument self .	def __repr__ ( self ) :
12831	define the function select_template with 2 arguments : template_name_list and dirs set to None .	def select_template ( template_name_list , dirs = None ) :
10884	var_obj is None .	var_obj = None
14945	define the method ext_convert with 2 arguments : self and value .	def ext_convert ( self , value ) :
830	for every reference and receivers in return value of the call of obj.unresolved_references.items method ,	for reference , receivers in obj . unresolved_references . items ( ) :
16727	msg is a string STR2 formated with dotted_path and class_name , respectively .	msg = STR2 % ( dotted_path , class_name )
7104	call the method to_python with an argument value , from the base class of the IntegerField class , substitute the result for value .	value = super ( IntegerField , self ) . to_python ( value )
14565	if self.data is an instance of datetime.datetime and result of the function is_aware called with an argument self.data evaluates to true ,	if isinstance ( self . data , datetime . datetime ) and is_aware ( self . data ) :
9341	call the method __init__ from the base class of the class NullBooleanSelect , with arguments attrs and choices .	super ( NullBooleanSelect , self ) . __init__ ( attrs , choices )
9036	MEDIA_TYPES is a tuple with 2 strings : STR0 and STR1 .	MEDIA_TYPES = ( STR0 , STR1 )
17221	derive class Module_six_moves_urllib_parse from the _LazyModule base class .	class Module_six_moves_urllib_parse ( _LazyModule ) :
3350	yield and empty string as the result .	yield STR
3593	substitute self.fixture_dirs for fixture_dirs .	fixture_dirs = self . fixture_dirs
7154	if self.decimal_places is not None and decimals is grater than self.decimal_places :	if self . decimal_places is not None and decimals > self . decimal_places :
8951	python_2_unicode_compatible decorator ,	@ python_2_unicode_compatible
15177	if filters is true ,	if filters :
6583	substitute first element of parts for view .	view = parts [ 0 ]
9808	raise an StopIteration exception .	raise StopIteration ( )
8848	define the method label_from_instance with 2 arguments : self and obj .	def label_from_instance ( self , obj ) :
10458	define the method __init__ with 4 arguments : self , result of the function streaming_content= ( ) , unpacked list args , and unpacked dictionary kwargs .	def __init__ ( self , streaming_content = ( ) , * args , ** kwargs ) :
17808	call the method ustring_re.sub with 2 arguments : fix and s , return the result .	return ustring_re . sub ( fix , s )
4727	if self.verbosity is greater than integer 0 ,	if self . verbosity > 0 :
8187	call the method self.error_class with an argument e.error_list , substitute the result for self._non_form_errors .	self . _non_form_errors = self . error_class ( e . error_list )
11968	substitute settings.TIME_FORMAT for arg .	arg = settings . TIME_FORMAT
14330	call the method self.getlist with an argument key , return the result .	return self . getlist ( key )
4283	if self.verbosity is greater or equal to integer 3 ,	if self . verbosity >= 3 :
7533	call the method field.clean with an argument field_value , append the result to clean_data .	clean_data . append ( field . clean ( field_value ) )
772	substitute hint for self.hint .	self . hint = hint
2555	if ImportError exception is caught ,	except ImportError :
4758	missing_args_message is a string STR0 .	missing_args_message = STR0
17553	background is a dictionary created with elements : x appended to a string STR0 for value under the key x of color_names dictionary , for every x in sequence of integers from 0 to 7 .	background = dict ( ( color_names [ x ] , STR0 % x ) for x in range ( 8 ) )
9283	call the method __init__ from the base class of the class CheckboxInput , with an argument attrs .	super ( CheckboxInput , self ) . __init__ ( attrs )
10101	self._post is an instance of QueryDict class created with an empty string as argument .	self . _post = QueryDict ( STR )
17425	convert newline character to unicode and substitute the result for newline .	newline = unicode ( STR0 )
15306	return path .	return path
2240	if addr is a instance of six.string_types ,	if isinstance ( addr , six . string_types ) :
5247	split template once at the first character STR0 , convert the first element to lowercase and substitute it for scheme .	scheme = template . split ( STR0 , 1 ) [ 0 ] . lower ( )
11633	try ,	try :
16341	if package is false ,	if not package :
16068	evaluates to true , split middle into two parts from the right by STR0 character , assign the resulting parts to local and domain .	local , domain = middle . rsplit ( STR0 , 1 )
13966	using_sysrandom is boolean True .	using_sysrandom = True
1985	call the mail.attach_alternative method with html_message and string STR0 as arguments .	mail . attach_alternative ( html_message , STR0 )
17633	if line ends with a new line character substitute width incremented by integer 1 for max_width , if not substitute width for max_width .	max_width = min ( ( line . endswith ( STR0 ) and width + 1 or width ) , width )
13144	define the method load_template_source with 3 arguments : self , template_name , template_dirs set to None .	def load_template_source ( self , template_name , template_dirs = None ) :
11549	define the method render_node with 3 arguments : self , node and context .	def render_node ( self , node , context ) :
500	evaluate pickle.loads with argument pickled , return the result .	return pickle . loads ( pickled )
4678	call the method app_config.get_models with include_auto_created set to boolean True , substitute the result for models .	models = app_config . get_models ( include_auto_created = True )
16700	substitute first element of nonlocal_root for root .	root = nonlocal_root [ 0 ]
9684	get the value under the STR0 key of the disposition dictionary , substitute it for file_name .	file_name = disposition . get ( STR0 )
9810	return data .	return data
11201	if not ,	else :
343	return an empty dictionary .	return { }
1215	substitute fcntl.LOCK_EX for LOCK_EX .	LOCK_EX = fcntl . LOCK_EX
2162	return nothing .	return
1449	substitute name for self.name .	self . name = name
10035	return default .	return default
18242	if not ,	else :
419	raise an exception .	raise
9777	if self._leftover is true ,	if self . _leftover :
1065	do nothing .	pass
15635	if value is an instance of bool .	if isinstance ( value , bool ) :
8904	call the function force_text with an argument val , if the result is not contained in pks ,	if force_text ( val ) not in pks :
2470	commands is an dictionary containing elements : string STR0 for every name in the function find_commands return value , called with first element of __path__ as an argument .	commands = { name : STR0 for name in find_commands ( __path__ [ 0 ] ) }
13864	substitute return value of call to the function _set_response_etag with response as an argument , for response .	response = _set_response_etag ( response )
14286	call the method self.__class__ with an argument list , with elements : tuples with 2 elements : k and hard copy of list v , for every k and v in result of method the self.lists .	return self . __class__ ( [ ( k , v [ : ] ) for k , v in self . lists ( ) ] )
2019	define the method send_messages with arguments self and email_messages .	def send_messages ( self , email_messages ) :
15324	from django.utils.timezone import is_aware into default name space .	from django . utils . timezone import is_aware
2436	return msg .	return msg
1947	return scrip_name.decode method result called with UTF_8 as argument .	return script_name . decode ( UTF_8 )
12895	if BLOCK_CONTEXT_KEY is contained in render_context and call to the method get_block with an argument self.name from the object ,	if ( BLOCK_CONTEXT_KEY in render_context and render_context [ BLOCK_CONTEXT_KEY ] . get_block ( self . name ) is not None ) :
12436	derive the class WithNode from Node base class .	class WithNode ( Node ) :
5803	if obj_pk is not None ,	if obj_pk is not None :
12639	substitute value under the name key of the lib.filters dictionary for value under the name key of the temp_lib.filters dictionary .	temp_lib . filters [ name ] = lib . filters [ name ]
6828	from django.forms.models import everything into default name space .	from django . forms . models import *
14064	close the process with an argument 0 .	os . _exit ( 0 )
9367	python_2_unicode_compatible decorator ,	@ python_2_unicode_compatible
14137	define the method _itervalues with an argument self .	def _itervalues ( self ) :
7413	if value equals k or text_value equals return value of the function force_text called with argument k ,	if value == k or text_value == force_text ( k ) :
11519	call the method __init__ with an argument lexer , from the base class of the class DebugParser .	super ( DebugParser , self ) . __init__ ( lexer )
13867	if call to the function response.has_header with STR0 as argument returns boolean False ,	if not response . has_header ( STR0 ) :
3928	raise an CommandError with an argument string STR0 , where STR1 is replaced with errors .	raise CommandError ( STR0 % errors )
5248	if scheme is countaine in self.url_schemes return boolean True , otherwise return False .	return scheme in self . url_schemes
7392	define the method _get_choices with an argument self .	def _get_choices ( self ) :
395	call the self._createdir method .	self . _createdir ( )
15881	substitute self._wrapped for repr_attr .	repr_attr = self . _wrapped
14957	if m is true ,	if m :
18578	call the method bmatch.group with an argument integer 1 , if it evaluates to true ,	if bmatch . group ( 1 ) :
11229	substitute value under the attr key of flags dictionary for value .	value = flags [ attr ]
5252	if call to the method os.access with arguments : filename and os.W_OK , evaluates to false ,	if not os . access ( filename , os . W_OK ) :
9372	substitute value for self.value .	self . value = value
6230	subtract timestamp from the return value of the function time.time , substitute the result for age .	age = time . time ( ) - timestamp
12853	derive the class BlockContext from the Exception base class .	class BlockContext ( object ) :
3414	convert col_name to lowercase , substitute the result for new_name .	new_name = col_name . lower ( )
2500	if commands_only is true ,	if commands_only :
1384	if not ,	else :
3396	if not ,	else :
15322	from django.utils.six import StringIO into default name space .	from django . utils . six import StringIO
14244	define the method __repr__ with an argument self .	def __repr__ ( self ) :
13904	call method request.build_absolute_uri , use the result as an argument for function call of iri_to_uri , use the result as an argument for function call of force_bytes , use the result as an argument for calling the method hashlib.md5 , put the result in url .	url = hashlib . md5 ( force_bytes ( iri_to_uri ( request . build_absolute_uri ( ) ) ) )
14234	append value under k key of self dictionary to a list , for every k in self.keyOrder , return the result .	return [ self [ k ] for k in self . keyOrder ]
13345	from lib2to3 import fixer_base into default name space .	from lib2to3 import fixer_base
5624	call the method default with an argument o from the base class of the class DjangoJSONEncoder , return the result .	return super ( DjangoJSONEncoder , self ) . default ( o )
17190	_moved_attributes is an empty list .	_moved_attributes = [ ]
4521	open pythonrc , with the file handle renamed to handle perform the following ,	with open ( pythonrc ) as handle :
10067	define the method encoding with arguments self and val .	def encoding ( self , val ) :
5007	skip this loop iteration ,	continue
1545	from django.utils.module_loading import import_string into default name space .	from django . utils . module_loading import import_string
9077	call the method data.items , for every medium and paths in the result .	for medium , paths in data . items ( ) :
17092	substitute SafeText for SafeString .	SafeString = SafeText
13122	if Exception exception is caught ,	except Exception :
6471	if Resolver404 , renamed to e , exception is caught ,	except Resolver404 as e :
12259	call the method self.nodelist_false.render with an argument context , return the result .	return self . nodelist_false . render ( context )
3035	if f.unique is true , substitute STR0 for unique , otherwise unique is an empty string .	unique = STR0 if f . unique else STR
17076	call the function curry with 2 arguments : _proxy_method and method set to bytes.decode , substitute the result for decode .	decode = curry ( _proxy_method , method = bytes . decode )
5116	convert first 2 elements of django.VERSION into a strings , join them together , separated by a STR0 , substitute the result for docs_version .	docs_version = STR0 % django . VERSION [ : 2 ]
2642	insert options.pythonpath at the beginning of sys.path .	sys . path . insert ( 0 , options . pythonpath )
2764	if self.output_transaction is true ,	if self . output_transaction :
9796	append first 49 elements of self._unget_history to list containing num_bytes , substitute the result for self._unget_history .	self . _unget_history = [ num_bytes ] + self . _unget_history [ : 49 ]
15973	join elements of paras into a string separated with STR0 , return the result .	return STR0 . join ( paras )
16100	substitute HTMLParseError from the module _html_parser for HTMLParseError .	HTMLParseError = _html_parser . HTMLParseError
8000	from django.forms import Form into default name space .	from django . forms import Form
9020	call the function timezone.get_current_timezone , substitute the result for current_timezone .	current_timezone = timezone . get_current_timezone ( )
15918	get maximal element from roots and substitute it for root .	root = max ( roots )
4820	import module logging .	import logging
13076	if TemplateDoesNotExist exception is caught ,	except TemplateDoesNotExist :
17971	get STR0 attribute of the _active object , if it exists return it , if not , call the function get_default_timezone and return the result .	return getattr ( _active , STR0 , get_default_timezone ( ) )
6072	print message to the standard output .	print ( message )
10590	derive the class TemplateDoesNotExist form the base class Exception .	class TemplateDoesNotExist ( Exception ) :
404	call the function pickle.dumps with argument value , use the result and integer -1 as arguments for the call to the function zlib.compress , use the result as an argument for the call to the f.write method .	f . write ( zlib . compress ( pickle . dumps ( value ) , - 1 ) )
6643	from django.utils.translation import ugettext_lazy as _ and ungettext_lazy into default name space .	from django . utils . translation import ugettext_lazy as _ , ungettext_lazy
7492	derive the class MultiValueField from the base class Field class .	class MultiValueField ( Field ) :
13925	get value under the key settings.CACHE_MIDDLEWARE_ALIAS of caches dictionary , substitute with it the cache .	cache = caches [ settings . CACHE_MIDDLEWARE_ALIAS ]
9958	return plist .	return plist
14222	substitute _iteritems for items .	items = _iteritems
5183	raise an CommandError exception with an argument string STR0 , where STR1 is replaced with string STR2 , and app_or_project if app_or_project equals to string STR3 , if not , it is replaced with STR4 and app_or_project .	raise CommandError ( STR0 % ( STR1 if app_or_project == STR2 else STR3 , app_or_project ) )
15651	call the method datetime_safe.new_datetime with an argument value , substitute the result for value .	value = datetime_safe . new_datetime ( value )
8250	__all__ is a tuple containing strings : STR0 , STR1 , STR2 , STR3 , STR4 ,	__all__ = ( STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 , STR7 , STR8 , STR9 , STR10 , STR11 , )
1595	position the file pointer at the start of the self.file file .	self . file . seek ( 0 )
381	call the method self.set with key , value , timeout and version as arguments .	self . set ( key , value , timeout , version )
18778	define the function get_complete_version with in argument version , defaulting to None .	def get_complete_version ( version = None ) :
11804	call the function mark_safe with an argument value , return the result .	return mark_safe ( value )
799	derive the class Debug from base class CheckMessage .	class Debug ( CheckMessage ) :
1173	if os.name equals to STR0 ,	if os . name == STR0 :
10393	if path is not None ,	if path is not None :
2746	saved_locale is None .	saved_locale = None
2069	write 79 STR0 characters into self.stream file stream .	self . stream . write ( STR0 * 79 )
4764	if ImportError exception is caught ,	except ImportError :
9327	call the function force_text with an argument v , for every v in selected_choices , add results to a set , substitute the resulting set for selected_choices .	selected_choices = set ( force_text ( v ) for v in selected_choices )
11324	if ImportError , renamed to e , exception is caught ,	except ImportError as e :
13404	if it is not equal to stat.S_IREAD , raise an exception .	raise
7009	if value is contained in self.empty_values and self.required is true ,	if value in self . empty_values and self . required :
16079	call the function escape with an argument url , substitute the result for url , call the function escape with an argument trimmed , substitute the result for trimmed .	url , trimmed = escape ( url ) , escape ( trimmed )
13800	call the BaseConverter function with BASE36_ALPHABET as argument , store the result in base36 .	base36 = BaseConverter ( BASE36_ALPHABET )
1407	call the self.path function with argument name , use the result as the argument for the call to the os.path.exists function , return the result .	return os . path . exists ( self . path ( name ) )
2471	if settings.configured is false ,	if not settings . configured :
15747	define the method __wrapper__ with 3 arguments : self , unpacked list args and unpacked dictionary kw .	def __wrapper__ ( self , * args , ** kw ) :
6346	derive the class RegexURLPattern with LocaleRegexProvider as base class .	class RegexURLPattern ( LocaleRegexProvider ) :
5943	join inner_text elements into a string .	return STR . join ( inner_text )
1609	define the function receive_data_chunk with arguments self , raw_data and start .	def receive_data_chunk ( self , raw_data , start ) :
1415	append entry to files list .	files . append ( entry )
8750	substitute first element of fks_to_parent for fk .	fk = fks_to_parent [ 0 ]
15784	call the function bytes with an argument self , divide the result with rhs and return the reminder of the division .	return bytes ( self ) % rhs
10658	for every bit in bits ,	for bit in bits :
17474	if not ,	else :
9164	if value is None ,	if value is None :
3302	write string STR0 to self.stdout stream .	self . stdout . write ( STR0 )
6935	call the method date_value.strftime with an argument input_format , return the result .	return date_value . strftime ( input_format )
2956	locale_dirs is a list of elements from the list of path names that maths the basedir path with STR0 wild card characters for which call to the os.path.isdir returned true , assign it to locale_dirs .	locale_dirs = filter ( os . path . isdir , glob . glob ( STR0 % basedir ) )
15991	define the function _strip_once with an argument value .	def _strip_once ( value ) :
5460	from django.utils.deprecation import RemovedInDjango19Warning into default name space .	from django . utils . deprecation import RemovedInDjango19Warning
3609	if length of fixture_files_in_dir is greater than 1 ,	if len ( fixture_files_in_dir ) > 1 :
6510	if args and kwargs are both true ,	if args and kwargs :
7594	define the method __init__ with 3 arguments : self , input_date_formats set to None , input_time_formats set to None ,	def __init__ ( self , input_date_formats = None , input_time_formats = None , * args , ** kwargs ) :
9675	call the method field_stream.read , substitute the result for raw_data .	raw_data = field_stream . read ( )
3403	append string STR0 to field_desc .	field_desc += STR0
9484	if value is not an instance of list type ,	if not isinstance ( value , list ) :
7515	if not ,	else :
3105	call the method parser.add_argument with 3 arguments : string STR1 , dest set to string STR2 , and help is a string STR0 .	parser . add_argument ( STR1 , dest = STR2 , help = STR0 )
12435	return result .	return result
2914	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
6445	define the method reverse_dict with an argument self .	def reverse_dict ( self ) :
13883	return boolean False .	return False
7662	if base has an attribute STR0 .	if hasattr ( base , STR0 ) :
9168	call the method self._format_value with an argument value , use the result as an argument for the call to the function force_text , substitute the result for final_attrs dictionary value under the STR0 key .	final_attrs [ STR0 ] = force_text ( self . _format_value ( value ) )
14834	set old_method_name attribute of the base object to the result of the function wrapper called with an argument new_method .	setattr ( base , old_method_name , wrapper ( new_method ) )
17228	derive class Module_six_moves_urllib_error from the _LazyModule base class .	class Module_six_moves_urllib_error ( _LazyModule ) :
9852	if not ,	else :
5612	otherwise if o is an instance of datetime.date object ,	elif isinstance ( o , datetime . date ) :
510	define the method _set with 4 arguments , self class instance , key , value and timeout set to DEFAULT_TIMEOUT .	def _set ( self , key , value , timeout = DEFAULT_TIMEOUT ) :
1160	if p.image is not empty ,	if p . image :
11847	return last element of value .	return value [ - 1 ]
2031	call the method self.close .	self . close ( )
12744	from django.utils.module_loading import import_string into default name space .	from django . utils . module_loading import import_string
7441	for every val in value call the function smart_text with an argument val , return the results in a lit .	return [ smart_text ( val ) for val in value ]
8361	get STR0 attribute from the options object , if it exists substitute it for self.localized_fields , if not self.localized_fields is None .	self . localized_fields = getattr ( options , STR0 , None )
2539	substitute cwords element at the cword decremented by 1 index for curr .	curr = cwords [ cword - 1 ]
16689	substitute value under the PREV key of the root dictionary for last .	last = root [ PREV ]
6768	try ,	try :
13727	do nothing .	pass
16735	call the function six.reraise with 3 arguments : ImproperlyConfigured , instance of ImproperlyConfigured class created with msg , and third element of the function sys.exc_info result .	six . reraise ( ImproperlyConfigured , ImproperlyConfigured ( msg ) , sys . exc_info ( ) [ 2 ] )
15309	try ,	try :
426	define the method _cull with argument self .	def _cull ( self ) :
10956	return obj .	return obj
16119	evaluate function tag.lower , without the arguments , put the result in the self.cdata_tag .	self . cdata_tag = tag . lower ( )
7126	define the method __init__ with 7 arguments : self , max_value set to None , min_value set to None , max_digits set to None , decimal_places set to None , unpacked list args and unpacked dictionary kwargs .	def __init__ ( self , max_value = None , min_value = None , max_digits = None , decimal_places = None , * args , ** kwargs ) :
17796	if type of s equals bytes ,	if type ( s ) == bytes :
10394	get the value under the key key of the self.cookies dictionary , substitute path for STR0 key of the returned dictionary .	self . cookies [ key ] [ STR0 ] = path
527	call the function pickle.dumps with value and pickle.HIGHEST_PROTOCOL as the arguments , substitute the result for pickled .	pickled = pickle . dumps ( new_value , pickle . HIGHEST_PROTOCOL )
1650	from django.utils.encoding import force_text into default name space .	from django . utils . encoding import force_text
11681	convert value to lowercase and return the result .	return value . lower ( )
3310	from collections import OrderedDict into default name space .	from collections import OrderedDict
12194	nodelist is an empty list .	nodelist = [ ]
4927	if refto is contained in known_models ,	if refto in known_models :
9665	get the value under the STR0 key of the meta_data dictionary , substitute second element of it for disposition .	disposition = meta_data [ STR0 ] [ 1 ]
1738	if response is None ,	if response is None :
1674	append mw_instance.process_view at the end of self._view_middleware .	self . _view_middleware . append ( mw_instance . process_view )
873	substitute registry.run_checks for run_checks .	run_checks = registry . run_checks
11743	call the function urlquote with 2 arguments value and unpacked dictionary kwargs , return the result .	return urlquote ( value , ** kwargs )
17520	call the method self.reader_leaves .	self . reader_leaves ( )
14027	decrement l by integer 1 , multiply it with hlen , subtract the result from dklen , substitute the result for r .	r = dklen - ( l - 1 ) * hlen
2707	call the method self.add_arguments with an argument parser .	self . add_arguments ( parser )
16481	derive the class Lexer from the object base class .	class Lexer ( object ) :
7436	define the method to_python with arguments self and value .	def to_python ( self , value ) :
750	errors is an empty list .	errors = [ ]
6026	define the function server_bind with an argument self .	def server_bind ( self ) :
9365	call the method data.getlist with an argument name , return the result .	return data . getlist ( name )
4495	do nothing .	pass
15211	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
2462	for every f in return value of the os.listdir function called with an argument command_dir , append f without 3 last elements to a list , only if f doesnt start with character STR0 and doesnt ends with string STR1 , return the resulting list .	return [ f [ : - 3 ] for f in os . listdir ( command_dir ) if not f . startswith ( STR0 ) and f . endswith ( STR1 ) ]
3	from django.conf import settings into default name space .	from django . conf import settings
10298	from django.utils.six.moves.urllib.parse import urlparse into default name space .	from django . utils . six . moves . urllib . parse import urlparse
11282	return dec .	return dec
18111	if self.language is not None ,	if self . language is not None :
17150	derive class _LazyDescr from the object base class .	class _LazyDescr ( object ) :
8469	try ,	try :
5238	substitute STR1 in string STR0 with filename , write it to self.stdout stream .	self . stdout . write ( STR0 % filename )
12563	define the function ifnotequal with 2 arguments : parser and token .	def ifnotequal ( parser , token ) :
12274	define the method render with 2 arguments : self and context .	def render ( self , context ) :
10780	define the method empty_block_tag with 2 arguments : self and token .	def empty_block_tag ( self , token ) :
10171	return self._encoding .	return self . _encoding
15008	define the method as_tuple with 2 arguments : self and value .	def as_tuple ( self , value ) :
16283	while factor is greater or equal to integer 0 ,	while factor >= 0 :
6202	if key exists , substitute it for self.key , if not substitute settings.SECRET_KEY for key .	self . key = key or settings . SECRET_KEY
9821	define the method __next__ with an argument self .	def __next__ ( self ) :
719	weight is an integer 0 .	weight = 0
16954	nesting is integer 1 .	nesting = 1
16843	increment int_part_gd by thousand_sep .	int_part_gd += thousand_sep
6963	CheckboxInput , Select , NullBooleanSelect , SelectMultiple , DateInput , DateTimeInput , TimeInput , SplitDateTimeWidget , SplitHiddenDateTimeWidget and FILE_INPUT_CONTRADICTION . from django.utils import formats into default name space .	from django . utils import formats
9628	try ,	try :
17523	if self.active_writers equals integer 0 and self.waiting_writers equals integer 0 and self.active_readers equals integer 0 ,	if self . active_writers == 0 and self . waiting_writers == 0 and self . active_readers == 0 :
10023	def the method get_signed_cookie with 5 arguments : self , key , default set to RAISE_ERROR , salt as an empty string ,	def get_signed_cookie ( self , key , default = RAISE_ERROR , salt = STR , max_age = None ) :
4987	outut is an empty list .	output = [ ]
12238	derive the class IfChangedNode from Node base class .	class IfChangedNode ( Node ) :
11740	kwargs is an empty dictionary .	kwargs = { }
14555	if las equals integer 1 ,	if last == 1 :
17103	return an instance of SafeText , created with an argument s converted into a string .	return SafeString ( str ( s ) )
385	if fname file path exists ,	if os . path . exists ( fname ) :
9905	call the method stream.unget with an argument chunk .	stream . unget ( chunk )
14018	substitute hashlib.sha256 for digest .	digest = hashlib . sha256
11397	define the method __iter__ with an argument self .	def __iter__ ( self ) :
16940	return a list with an element tuple with 2 elements : an empty string and an empty list .	return [ ( STR , [ ] ) ]
1172	return result of the f.fileno method if f has an STR0 attribute , otherwise return f .	return f . fileno ( ) if hasattr ( f , STR0 ) else f
517	call the method self.validate_key with argument key .	self . validate_key ( key )
7974	if extra_classes has an attribute STR0 ,	if hasattr ( extra_classes , STR0 ) :
6433	call the method apps.setdefault with 2 arguments : app_name and an empty list , extend the resulting list with namespaces_list .	apps . setdefault ( app_name , [ ] ) . extend ( namespace_list )
5023	if opts.managed is true ,	if opts . managed :
7906	yield subwidget , as the result of the generator .	yield subwidget
8556	call the method form.save with an argument commit as commit , return the result .	return form . save ( commit = commit )
12011	return value .	return value
17004	if not ,	else :
2886	define private method __getattr__ with self class instance and attr as the arguments .	def __getattr__ ( self , attr ) :
2745	from django.conf import settings into default namespace ,	from django . conf import settings
14508	return a string STR0 formated with self.data.microsecond .	return STR0 % self . data . microsecond
17133	bitwise shift integer 1 to the left by 31 spaces , substitute integer 1 from the result , convert the result to a integer , substitute it for MAXSIZE .	MAXSIZE = int ( ( 1 << 31 ) - 1 )
3888	for p in self.ignore_patterns if p ends with dir_suffix take sliced list p from the start , to the negative length of the dir_suffix as the end index and append it to a list , if p doesnt end with dir_suffix , append p to a list , substitute resulting list for norm_patterns .	norm_patterns = [ p [ : - len ( dir_suffix ) ] if p . endswith ( dir_suffix ) else p for p in self . ignore_patterns ]
10912	append a tuple with 2 arguments : filter_func and args to filters .	filters . append ( ( filter_func , args ) )
1417	define the method path with arguments self and name .	def path ( self , name ) :
7567	if self.allow_files is true ,	if self . allow_files :
11561	call the function localize with 2 arguments : output and use_l10n set to context.use_l10n , substitute the result for output .	output = localize ( output , use_l10n = context . use_l10n )
15430	if value under the STR0 key of the self.feed dictionary is not None ,	if self . feed [ STR0 ] is not None :
13483	return boolean False .	return False
16243	increment year by integer 2000 .	year += 2000
8909	if value has an attribute STR0 and value is not an instance of six.text_type and value doesnt have an attribute STR1 ,	if ( hasattr ( value , STR0 ) and not isinstance ( value , six . text_type ) and not hasattr ( value , STR1 ) ) :
14569	define the method w with an argument self .	def w ( self ) :
13766	if sign is contained in self.digits ,	if sign in self . digits :
13838	for every k and v in items of dictionary kwargs , respectively ,	for ( k , v ) in kwargs . items ( ) :
6977	put elements of validators.EMPTY_VALUES to a list , substitute the result for empty_values .	empty_values = list ( validators . EMPTY_VALUES )
3616	define the method fixture_dirs with an argument self .	def fixture_dirs ( self ) :
17702	pos is equal to integer 0 .	pos = 0
11898	break from the loop execution ,	break
10504	status_code is an integer 405 .	status_code = 405
16768	try ,	try :
12531	call the method re.split with 2 arguments : raw string STR0 and elements of bits from 1 index to in_index index , joined into a string , separated by whitespaces , substitute the result for loopvars .	loopvars = re . split ( STR0 , STR . join ( bits [ 1 : in_index ] ) )
7389	call the method __deepcopy__ with an argument memo from the base class of the class ChoiceField , substitute the result for result .	result = super ( ChoiceField , self ) . __deepcopy__ ( memo )
16896	call the function walk_to_end with 2 arguments : ch and pattern_iter .	walk_to_end ( ch , pattern_iter )
2030	if stream_created is true ,	if stream_created :
9822	try ,	try :
17925	return self.STDOFFSET .	return self . STDOFFSET
17943	try ,	try :
7584	join self.path and f in path , substitute the result for full_file .	full_file = os . path . join ( self . path , f )
11092	call the method template_localtime with 2 arguments : value and use_tz=context.use_tz , substitute the result for value .	value = template_localtime ( value , use_tz = context . use_tz )
15183	call the method logger.addHandler with an argument : h-th element of value under STR0 key of self.config dictionary .	logger . addHandler ( self . config [ STR0 ] [ h ] )
6732	call the self.user_regex.match method with an argument user_part , if it evaluates to false ,	if not self . user_regex . match ( user_part ) :
16103	derive the class HTMLParser from the base class HTMLParser located in the module _html_parser .	class HTMLParser ( _html_parser . HTMLParser ) :
3788	get the value under the STR0 key of the options dictionary , if it is true ,	if options . get ( STR0 ) :
10100	define the method_mark_post_parse_error with an argument self .	def _mark_post_parse_error ( self ) :
2477	define the function call_command with 3 arguments : name , unpacked list args and unpacked dictionary options .	def call_command ( name , * args , ** options ) :
9384	if not ,	else :
4192	create_models is an empty list .	created_models = [ ]
2420	if alternatives exists substitute it for self.alternatives , if not self.alternatives is an empty list .	self . alternatives = alternatives or [ ]
16223	call the method query.lists , substitute the result for query .	query = query . lists ( )
1918	call the signals.request_started.send method with sender set to self.__class__ as argument .	signals . request_started . send ( sender = self . __class__ )
14673	kw is a list with 3 elements : d.year , d.month and d.day .	kw = [ d . year , d . month , d . day ]
5529	define the method __init__ , with 3 arguments : self , m2m and data set None .	def __init__ ( self , obj , m2m_data = None ) :
12616	raise an TemplateSyntaxError exception with an argument string STR0 .	raise TemplateSyntaxError ( STR0 )
10523	modify value at the key STR0 of the dictionary response by applying function request.build_absolute_uri on it .	response [ STR0 ] = request . build_absolute_uri ( response [ STR1 ] )
5133	for every filename in files ,	for filename in files :
7619	derive the class GenericIPAddressField from the base class CharField class .	class GenericIPAddressField ( CharField ) :
3552	get the value under the cmp_fmt key of the self.compression_formats dictionary , assign it to open_method and mode .	open_method , mode = self . compression_formats [ cmp_fmt ]
6144	request_started is a instance of a Signal class .	request_started = Signal ( )
3774	call the method parser.add_argument with 5 arguments : string STR1 , action as a string STR2 , dest as a string STR3 , default as boolean False and help as a string STR0 .	parser . add_argument ( STR1 , action = STR2 , dest = STR3 , default = False , help = STR0 )
2885	define class dummy .	class dummy :
4745	open writer.path file in write mode , with file descriptor as fh , perform the following ,	with open ( writer . path , STR0 ) as fh :
6781	validate_comma_separated_integer_list is a instance of a RegexValidator class , created with 3 arguments : comma_separated_int_list_re , return value of the call to the function _ with an argument string STR0 and string STR1 .	validate_comma_separated_integer_list = RegexValidator ( comma_separated_int_list_re , _ ( STR0 ) , STR1 )
12242	substitute varlist for self.varlist .	self . _varlist = varlist
4695	define the method handle with 3 arguments : self and unpacked dictionary options .	def handle ( self , ** options ) :
7209	call the method to_python with an argument value from the base class of the TimeField class , return the result .	return super ( TimeField , self ) . to_python ( value )
8145	define the method get_default_prefix with an argument cls .	def get_default_prefix ( cls ) :
16823	call the function six.text_type with an argument number , use the result as an argument for the call to the function mark_safe , return the result .	return mark_safe ( six . text_type ( number ) )
17956	sum sign and hhmm , substitute the result for name .	name = sign + hhmm
11260	call the function getargspec with an argument func , substitute the result for params , varargs , varkw and defaults .	params , varargs , varkw , defaults = getargspec ( func )
12002	decorator function register.filter with an argument is_safe set to boolean False .	@ register . filter ( is_safe = False )
1228	if ret equals to integer 0 , return boolean True , otherwise return boolean False .	return ( ret == 0 )
16414	return boolean False .	return False
4546	derive the class Command from the AppCommand base class .	class Command ( AppCommand ) :
10672	self.lineno is integer 1 .	self . lineno = 1
5770	if exception GeneratorExit is caught ,	except GeneratorExit :
14351	define the method lists with an argument self .	def lists ( self ) :
3617	dirs is an empty dictionary .	dirs = [ ]
1876	self.resolver_match is None .	self . resolver_match = None
11880	substitute conditional_escape for escaper .	escaper = conditional_escape
13549	import module sys .	import sys
14973	if not ,	else :
11055	define the method __iter__ with an argument self .	def __iter__ ( self ) :
3641	if not ,	else :
855	return inner .	return inner
1450	call the os.fdopen function with fd , mode and bufsize as the arguments , assign the file handle object to self.file .	self . file = os . fdopen ( fd , mode , bufsize )
605	timeout is a integer -1 .	timeout = - 1
9127	derive the class Widget from the base class in the return value of the six.with_metaclass called with an argument MediaDefiningClass .	class Widget ( six . with_metaclass ( MediaDefiningClass ) ) :
12524	call the method token.split_contents , substitute the result .	bits = token . split_contents ( )
9963	import module sys .	import sys
16425	try ,	try :
11754	define the function wordcount with an argument value .	def wordcount ( value ) :
8840	substitute result.queryset for result.queryset .	result . queryset = result . queryset
2142	define the method close with argument self .	def close ( self ) :
7186	derive the class DateField from the base class BaseTemporalField class .	class DateField ( BaseTemporalField ) :
1537	decorator classmethod .	@ classmethod
4402	self.use_ipv6 is boolean True .	self . use_ipv6 = True
2831	call the function handle_app with 2 arguments : app_config.models_module and unpacked dictionary options .	return handle_app ( app_config . models_module , ** options )
9109	return property object with _media as getter function .	return property ( _media )
5026	call the method f.post_create_sql with arguments : style and model._meta.db_table , extend the output with the result .	output . extend ( f . post_create_sql ( style , model . _meta . db_table ) )
16089	otherwise if autoescape is true ,	elif autoescape :
16353	from django.utils.six.moves import xrange into default name space .	from django . utils . six . moves import xrange
13794	calculate reminder of division of x by length to_digits , substitute it for digit .	digit = x % len ( to_digits )
17164	if PY3 is true ,	if PY3 :
6688	call the function force_text with an argument value , substitute the result for value .	value = force_text ( value )
7092	return value	return value
13291	define the method __repr__ with an argument self .	def __repr__ ( self ) :
614	define the method get with 5 arguments , self class instance , key , default set to None and version set to None .	def get ( self , key , default = None , version = None ) :
14008	substitute hashlib.sha256 for digest .	digest = hashlib . sha256
17554	RESET is a string STR0 .	RESET = STR0
3703	convert self.file to a string and append STR0 string to it , substitute the result for thefile .	thefile = STR0 % self . file
82	do nothing .	pass
3527	call the method self.load_label with an argument fixture_label .	self . load_label ( fixture_label )
9160	if self.is_localized is true ,	if self . is_localized :
6675	evaluate the logical expression , if other is an instance of RegexValidator and self.regex.pattern equals to other.regex.pattern , and self.regex.flags equals to other.regex.flags and self.message equals to other.message and self.code equals to other.code , and self.inverse_match equals to other.inverse_match , return the result .	return ( isinstance ( other , RegexValidator ) and self . regex . pattern == other . regex . pattern and self . regex . flags == other . regex . flags and ( self . message == other . message ) and ( self . code == other . code ) and ( self . inverse_match == other . inverse_match ) )
17086	if data is an instance of bytes .	if isinstance ( data , bytes ) :
10898	otherwise if var is None ,	elif var is None :
11786	define the function force_escape with an argument value .	def force_escape ( value ) :
18116	if self.deactivate is true ,	if self . deactivate :
5842	call the function smart_text with argument key_value , use the result as an argument for the call to the self.xml.characters method .	self . xml . characters ( smart_text ( key_value ) )
43	return value under the alias key of self._caches.caches dictionary .	return self . _caches . caches [ alias ]
10148	define the method __init__ with an argument self .	def readlines ( self ) :
16670	substitute root for value under the NEXT key of the link dictionary .	link [ NEXT ] = root
937	do nothing .	pass
8585	if row_data is contained in seen_data ,	if row_data in seen_data :
7437	if value is false ,	if not value :
10405	call the method self.set_cookie with 5 arguments : key , max_age as integer 0 , path as path , domain as domain , expires as a string STR0 , return the result .	self . set_cookie ( key , max_age = 0 , path = path , domain = domain , expires = STR0 )
3084	replace STR1 in string STR0 with key and value under the key key of the user_setting dictionary , append it to the output .	output . append ( STR0 % ( key , user_settings [ key ] ) )
2493	call the command.execute method with arguments : unpacked list args and unpacked dictionary defaults , return the result .	return command . execute ( * args , ** defaults )
16931	if not ,	else :
4323	if plan_node is not contained in shown and first element of plan_node equals to app_name ,	if plan_node not in shown and plan_node [ 0 ] == app_name :
300	call the method now.replace with the argument microsecond set to integer 0 , substitute the result for now .	now = now . replace ( microsecond = 0 )
11981	if arg is true ,	if arg :
2233	if not ,	else :
14603	define the function format with 2 arguments : value and format_string .	def format ( value , format_string ) :
5210	get the value under the STR0 key of the info dictionary , substitute it for content_disposition .	content_disposition = info . get ( STR0 )
18390	decorator function lru_cache.lru_cache with an argument maxsize set to integer 1000 .	@ lru_cache . lru_cache ( maxsize = 1000 )
4020	if self.empty is true ,	if self . empty :
15750	if t is contained in self.__dispatch ,	if t in self . __dispatch :
3887	convert os.sep into a string and append STR0 to it , substitute the result for dir_suffix .	dir_suffix = STR0 % os . sep
11616	multiply 10 to the power of 200 , with 10 to the power of 200 , negative , substitute the result for neg_inf .	neg_inf = - 1e200 * 1e200
11421	call the method self.has_key with an argument key , return the result .	return self . has_key ( key )
3553	call the function open_method with arguments : fixture_file and mode , substitute the result for fixture .	fixture = open_method ( fixture_file , mode )
3173	if app_config.models_module is None or app_config is contained in excluded_apps	if app_config . models_module is None or app_config in excluded_apps :
12945	call the method template.render with an argument context , return the result .	return template . render ( context )
13974	from django.utils.six.moves import xrange into default name space .	from django . utils . six . moves import xrange
3591	call the method os.path.basename with an argument fixture_name , substitute the result for fixture_name .	fixture_name = os . path . basename ( fixture_name )
6359	if prefix is false , and self doesnt have STR0 attribute ,	if not prefix or not hasattr ( self , STR0 ) :
11551	call the method node.render with an argument context , return the result .	return node . render ( context )
12044	if not ,	else :
2238	return name converted to a string and val .	return str ( name ) , val
18666	define the method add with 4 arguments : self , data , conn_type and squash set to boolean True .	def add ( self , data , conn_type , squash = True ) :
2482	if app_name is an instance of BaseCommand ,	if isinstance ( app_name , BaseCommand ) :
9740	call the method handler.file_complete with i-th element of counters as an argument , substitute the result for file_obj .	file_obj = handler . file_complete ( counters [ i ] )
3033	append string STR0 to field_output .	field_output . append ( STR0 )
17451	call the method cls.__dict__.copy substitute the result for orig_vars .	orig_vars = cls . __dict__ . copy ( )
2130	try ,	try :
6177	define the function dumps with 5 arguments : obj , key set to None , salt set to string STR0 ,	def dumps ( obj , key = None , salt = STR0 , serializer = JSONSerializer , compress = False ) :
1602	if not ,	else :
1435	define the function get_storage_class with argument import_path=None defaulting to None .	def get_storage_class ( import_path = None ) :
3948	call the function os.path.dirname with an argument django.__file__ , join the result into a path , use it as an argument for the call to the function os.path.normpath , substitute the result for django_dir .	django_dir = os . path . normpath ( os . path . join ( os . path . dirname ( django . __file__ ) ) )
9444	derive the class RendererMixin from the object base class .	class RendererMixin ( object ) :
12488	if as_form is true ,	if as_form :
9411	choice_input_class is None .	choice_input_class = None
2460	join management_dir and string STR0 into a file path name , substitute it for command_dir .	command_dir = os . path . join ( management_dir , STR0 )
15024	get config dictionary element under STR0 key , if it exists substitute it for handlers , if not , handlers is EMPTY_DICT .	handlers = config . get ( STR0 , EMPTY_DICT )
13369	try ,	try :
10352	define the method __setitem__ with 3 arguments : self , header and value .	def __setitem__ ( self , header , value ) :
5566	call the method self.options.copy , substitute the result for self.json_kwargs .	self . json_kwargs = self . options . copy ( )
2604	if self.argv , without the first element is contained in a tuple with 2 entries : a list containing a string STR0 ,	elif self . argv [ 1 : ] in ( [ STR0 ] , [ STR1 ] ) :
10636	call the method self._render with an argument context , return the result ,	return self . _render ( context )
17458	for every slots_var in slots ,	for slots_var in slots :
10691	if first nine elements of block_content is string STR0 or STR1 ,	if block_content [ : 9 ] in ( STR0 , STR1 ) :
13187	if context is an instance of Context ,	if isinstance ( context , Context ) :
12693	args is an empty list .	args = [ ]
11430	return new_context .	return new_context
9345	if KeyError exception is caught ,	except KeyError :
7022	if errors is true ,	if errors :
15739	substitute cls.__text_cast for cls.__text_cast .	cls . __unicode__ = cls . __text_cast
13357	call the method find_indentation with an argument node , append the result to newline , substitute the result for klass.prefix .	klass . prefix = STR0 + find_indentation ( node )
17128	integer_types is a tuple with 2 elements int and long .	integer_types = ( int , long )
8817	define the method __len__ with an argument self .	def __len__ ( self ) :
1128	define method _get_height with self class instance as the argument .	def _get_height ( self ) :
1734	substitute the STR1 in the string STR0 , with the name of the module callback is in and the view_name , respectively , use it as the argument for the ValueError exception raise .	raise ValueError ( STR0 % ( callback . __module__ , view_name ) )
17277	_meth_self is a string STR0 .	_meth_self = STR0
7311	from PIL import Image into default namespace .	from PIL import Image
4093	call the method questioner.ask_merge with an argument app_label , if it evaluates to true ,	if questioner . ask_merge ( app_label ) :
9878	element of data at the index last equals to newline bytes character .	if data [ last : last + 1 ] == STR0 :
9874	if not ,	else :
4840	call the method parser.add_argument with 4 arguments : string STR0 , metavar set to string STR1 , nargs set to string STR2 , and help is a string STR3 .	parser . add_argument ( STR0 , metavar = STR1 , nargs = STR2 , help = STR3 )
7206	return None .	return None
14779	if Exception , renamed to e , exception is caught ,	except Exception as e :
1456	try ,	try :
13044	from django.template.base import TemplateDoesNotExist into default name space .	from django . template . base import TemplateDoesNotExist
8924	import module warnings .	import warnings
7187	substitute DateInput for widget .	widget = DateInput
6349	if callback is an callable object ,	if callable ( callback ) :
17634	while length of line is grater than max_width ,	while len ( line ) > max_width :
17596	substitute fg for value under the STR0 key of definition dictionary .	definition [ STR0 ] = fg
9713	call the method six.reraise with 3 arguments : MultiPartParserError , MultiPartParserError created with msg , and third element of the result of the function sys.exc_info .	six . reraise ( MultiPartParserError , MultiPartParserError ( msg ) , sys . exc_info ( ) [ 2 ] )
4649	get the values under the keys STR0 and STR1 of the options dictionary , substitute the results for app_label and migration_name , respectively .	app_label , migration_name = options [ STR0 ] , options [ STR1 ]
13583	_cached_filenames is an empty list .	_cached_filenames = [ ]
16873	do nothing .	pass
4465	define the method _ipython_pre_011 with an argument self .	def _ipython_pre_011 ( self ) :
8669	if not ,	else :
2333	if self.encoding exists substitute it for encoding , if not substitute settings.DEFAULT_CHARSET for encoding .	encoding = self . encoding or settings . DEFAULT_CHARSET
7018	if ValidationError , substituted for e , exception is caught ,	except ValidationError as e :
2204	DEFAULT_ATTACHMENT_MIME_TYPE is a string STR0 .	DEFAULT_ATTACHMENT_MIME_TYPE = STR0
1446	derive class TemporaryFile from the base class FileProxyMixin .	class TemporaryFile ( FileProxyMixin ) :
13660	substitute mtime for the value under the filename key of _mtimes dictionary .	_mtimes [ filename ] = mtime
71	for every cache in return value of the function caches.all .	for cache in caches . all ( ) :
17588	split part by STR0 character , substitute the result for role and instructions , respectively .	role , instructions = part . split ( STR0 )
13561	if ImportError exception is caught ,	except ImportError :
10983	convert var into an floating point number , substitute it for self.literal .	self . literal = float ( var )
8794	get self.to_field attribute of self.parent_instance , substitute it for orig .	orig = getattr ( self . parent_instance , self . to_field )
4443	exit the program with the code integer 1 .	os . _exit ( 1 )
14996	return value .	return value
11136	if first element of bits is not equal to string STR0 ,	if bits [ 0 ] != STR0 :
16245	increment year by integer 1900 .	year += 1900
8796	substitute self.parent_instance.pk for orig .	orig = self . parent_instance . pk
11289	call the function getargspec with an argument func , substitute the result for params , varargs , varkw and defaults .	params , varargs , varkw , defaults = getargspec ( func )
18206	from django.utils.safestring import mark_safe and SafeData into default name space .	from django . utils . safestring import mark_safe , SafeData
12048	define the function pluralize with 2 arguments value and arg set to character STR0 .	def pluralize ( value , arg = STR0 ) :
14087	open out_log file in append mode with buffering size of the input buffer , substitute the result for sys.stdout .	sys . stdout = open ( out_log , STR0 , buffering )
12207	pop_context is boolean False .	pop_context = False
8413	if limit_choices_to is not None ,	if limit_choices_to is not None :
12224	if settings.TEMPLATE_DEBUG is true ,	if settings . TEMPLATE_DEBUG :
16944	if ch is not equal to string '\STR .	if ch != STRspecial :
4146	call the executor.loader.detect_conflicts , substitute the result fr conflicts .	conflicts = executor . loader . detect_conflicts ( )
9875	substitute index for end .	end = index
317	define the method clear with argument self .	def clear ( self ) :
9044	self._css is an empty dictionary .	self . _css = { }
2873	if color_setting is True ,	if color_settings :
3203	close the file stream .	stream . close ( )
6673	raise a ValidationError exception with arguments self.message and code set to self.code .	raise ValidationError ( self . message , code = self . code )
8761	return nothing .	return
17157	raise an AttributeError with an argument string STR0 , formated with self.name .	raise AttributeError ( STR0 % self . name )
8826	if not ,	else :
818	from . import Error , Tags and register into default name space .	from . import Error , Tags , register
9776	define the method __next__ with an argument self .	def __next__ ( self ) :
14067	call the method os._exit with an argument integer 1 .	os . _exit ( 1 )
686	call the method self._lib.Client with argument self._servers .	client = self . _lib . Client ( self . _servers )
17862	if reversed is True substitute difference of d and now for delta , if not substitute the difference of now and d for delta .	delta = ( d - now ) if reversed else ( now - d )
182	define the close method with 2 arguments , self and dictionary of argument pairs kwargs .	def close ( self , ** kwargs ) :
5370	if self.object is not an instance of list type ,	if not isinstance ( self . object_list , list ) :
11930	try ,	try :
16269	factor is integer 0 .	factor = 0
17197	substitute new_mod for self.mod .	self . mod = new_mod
12956	try ,	try :
12987	if option is contained in options ,	if option in options :
1212	import fcntl .	import fcntl
18455	call the function re.compile with an argument raw string STR0 , substitute the result for plural_re .	plural_re = re . compile ( STR0 )
177	call the method self.set with key , value , version incremented by delta , as arguments .	self . set ( key , value , version = version + delta )
18717	call the method tzinfo.__init__ with an argument self .	tzinfo . __init__ ( self )
1474	substitute TemporaryFile for NamedTemporaryFile .	NamedTemporaryFile = TemporaryFile
7175	if unicode_value is an instance of six.text_type ,	if isinstance ( unicode_value , six . text_type ) :
12925	if node is not an instance of ExtendsNode ,	if not isinstance ( node , ExtendsNode ) :
10731	split token.contents into separate words , substitute the first element of the result for command .	command = token . contents . split ( ) [ 0 ]
17044	return result and result_args .	return result , result_args
15982	self.fed is an empty list .	self . fed = [ ]
2583	if CommandError exception is caught ,	except CommandError :
11352	tried_modules is an empty list .	tried_modules = [ ]
13710	call the function time.sleep with an argument integer 1 .	time . sleep ( 1 )
10309	self._handler_class is None .	self . _handler_class = None
3060	get the value under the STR0 key of the options dictionary , use it as a key to access the element under the connections dictionary , substitute it for connection .	connection = connections [ options . get ( STR0 ) ]
1800	from django.utils.deprecation import RemovedInDjango19Warning into default name space .	from django . utils . deprecation import RemovedInDjango19Warning
7201	substitute TimeInput for widget .	widget = TimeInput
8994	call the method self.as_ul , return the result .	return self . as_ul ( )
1913	call the self.load_middleware method .	self . load_middleware ( )
4885	call the method call_command with 3 arguments , string STR0 , unpacked list fixture_labels and unpacked dictionary containing 1 element : verbosity for STR1 .	call_command ( STR0 , * fixture_labels , ** { STR1 : verbosity } )
2643	derive the OutputWrapper class from the object base class .	class OutputWrapper ( object ) :
6408	substitute pattern._callback for callback .	callback = pattern . _callback
10757	call the method self.unclosed_block_tag with an argument list with an element endtag .	self . unclosed_block_tag ( [ endtag ] )
14012	call the function force_bytes with an argument salt , substitute the result for salt .	salt = force_bytes ( salt )
2718	call the method parser.parse_args with argv , without the first 2 elements , substitute the result for options .	options = parser . parse_args ( argv [ 2 : ] )
2170	return num_sent .	return num_sent
9079	if call to the method self._css.get with an argument medium evaluates to false , or path is not contained in the value under the medium key of self._css dictionary .	if not self . _css . get ( medium ) or path not in self . _css [ medium ] :
7875	call the method self.fields.values , for every field in result ,	for field in self . fields . values ( ) :
287	call the method router.db_for_write with argument self.cache_model_class , substitute the result for db .	db = router . db_for_write ( self . cache_model_class )
1871	convert value under the STR0 key of the environ dictionary to an integer , substitute it for content_length .	content_length = int ( environ . get ( STR0 ) )
14183	if key is not contained in self ,	if key not in self :
4427	do nothing .	pass
7375	do nothing .	pass
2095	define the method send_messages with arguments self and messages .	def send_messages ( self , messages ) :
18465	trimmed is boolean False .	trimmed = False
4096	biggest_number is maximum numbers element .	biggest_number = max ( [ x for x in numbers if x is not None ] )
16205	__T is a raw string STR0 .	__T = STR0
15172	call the function factory with an argument unpacked dictionary kwargs , substitute the result for result .	result = factory ( ** kwargs )
6395	replace STR0 in string STR1 with __class__.__name__ field of first element of self.urlconf_name , substitute it for urlconf_repr .	urlconf_repr = STR0 % self . urlconf_name [ 0 ] . __class__ . __name__
6711	raise a ValidationError exception with 2 arguments : return value of the function _ with an string argument STR0 , and code set to string STR1 .	raise ValidationError ( _ ( STR0 ) , code = STR1 )
3704	join self.dirpath and thefile in a string , substitute the result for work_file .	work_file = os . path . join ( self . dirpath , thefile )
14694	substitute dt.year for year .	year = dt . year
11509	substitute elements of self.template_string list from upto index to the end for last_lit .	last_bit = self . template_string [ upto : ]
10488	status_code is an integer 304 .	status_code = 304
16858	call the function next_char with an argument iterator pattern , substitute the result for pattern_iter .	pattern_iter = next_char ( iter ( pattern ) )
2620	from django.core.management.color import color_style and no_style into default name space .	from django . core . management . color import color_style , no_style
8609	raise an ValidationError exception with an argument errors .	raise ValidationError ( errors )
838	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
9066	define the method __getitem__ with arguments self and name .	def __getitem__ ( self , name ) :
7377	if initial is not None ,	if initial is not None :
11329	try ,	try :
5243	raise an CommandError with an argument string STR0 , where STR1 is replaced with filename , tempdir and e .	raise CommandError ( STR0 % ( filename , tempdir , e ) )
7025	call the method self.to_python with an argument value , substitute it for value .	value = self . to_python ( value )
10961	call the function getargspec with an argument func , substitute the result for args , varargs , varkw and defaults , respectively .	args , varargs , varkw , defaults = getargspec ( func )
210	call the BaseCache.__init__ method with self class instance and params as the arguments .	BaseCache . __init__ ( self , params )
1175	from ctypes import sizeof , c_ulong , c_void_p , c_int64 , Structure , Union , POINTER , windll and byref into default name space .	from ctypes import ( sizeof , c_ulong , c_void_p , c_int64 , Structure , Union , POINTER , windll , byref )
14181	substitute __setitem__ filed of the base class of the class SortedDict for super_set .	super_set = super ( SortedDict , self ) . __setitem__
15271	return s .	return s
14162	call the method self.__copy__ , return the result .	return self . __copy__ ( )
11270	define the function compile_func with 2 arguments : parser and token .	def compile_func ( parser , token ) :
10110	return nothing .	return
18407	raise an LookupError with an argument lang_code .	raise LookupError ( lang_code )
15905	results is a tuple with 2 elements , 2 empty lists .	results = ( [ ] , [ ] )
8646	skip this loop iteration .	continue
14651	MONTHS is an dictionary with 12 entries : result of the call to the function _ with an argument string STR0 for 1 , result of the call to the function _ with an argument string STR1 for 2 , result of the call to the function _ with an argument string STR2 for 3 , result of the call to the function _ with an argument string STR3 for 4 , result of the call to the function _ with an argument string STR4 for 5 , result of the call to the function _ with an argument string STR5 for 6 , result of the call to the function _ with an argument string STR6 for 7 , result of the call to the function _ with an argument string STR7 for 8 , result of the call to the function _ with an argument string STR8 for 9 , result of the call to the function _ with an argument string STR9 for 10 , result of the call to the function _ with an argument string STR10 for 11 , and result of the call to the function _ with an argument string STR11 for 12 .	MONTHS = { 1 : _ ( STR0 ) , 2 : _ ( STR1 ) , 3 : _ ( STR2 ) , 4 : _ ( STR3 ) , 5 : _ ( STR4 ) , 6 : _ ( STR5 ) , 7 : _ ( STR6 ) , 8 : _ ( STR7 ) , 9 : _ ( STR8 ) , 10 : _ ( STR9 ) , 11 : _ ( STR10 ) , 12 : _ ( STR11 ) }
12705	call the method match.groups , assign the result to name and value , respectively .	name , value = match . groups ( )
12013	assign bits elements to yes , no and maybe , respectively .	yes , no , maybe = bits
10732	if IndexError exception is caught ,	except IndexError :
6404	for every pattern in reversed list self.url_patterns ,	for pattern in reversed ( self . url_patterns ) :
6703	if not ,	else :
7809	if self.is_bound is false ,	if not self . is_bound :
6071	if message is true ,	if message :
6932	substitute STR0 in string STR1 with y , m and d , return the result .	return STR0 % ( y , m , d )
12019	return yes .	return yes
6495	try ,	try :
12820	define the function render_to_string with 4 arguments : template_name , dictionary set to None , context_instance set to None and dirs set to None .	def render_to_string ( template_name , dictionary = None , context_instance = None , dirs = None ) :
13466	convert path to a string , substitute the result for path .	path = str ( path )
8156	define the method total_error_count with an argument self .	def total_error_count ( self ) :
14800	derive the class RemovedInDjango20Warning from PendingDeprecationWarning base class .	class RemovedInDjango20Warning ( PendingDeprecationWarning ) :
6478	if sub_match is true ,	if sub_match :
2904	return nothing .	return
15627	call the function dateformat.time_format with 2 arguments : value and result of the function get_format called with 2 arguments : format , if its true , otherwise string STR0 and use_l10n as use_l10n , return the result .	return dateformat . time_format ( value , get_format ( format or STR0 , use_l10n = use_l10n ) )
6013	if app_path is None ,	if app_path is None :
11256	if not ,	else :
10632	call the method self.nodelist.render with an argument context , return the result .	return self . nodelist . render ( context )
6868	if not ,	else :
2093	if mail doesnt have an STR0 attribute ,	if not hasattr ( mail , STR0 ) :
10114	if not ,	else :
6388	self._reverse_dict is an empty dictionary .	self . _reverse_dict = { }
18571	format string STR0 with message_context and g , write it to out .	out . write ( STR0 % ( message_context , g ) )
6325	if ValueError exception is caught ,	except ValueError :
9432	prepend string STR0 to i converted to an string , append the result to the value under the STR1 key of the attrs_plus .	attrs_plus [ STR0 ] += STR1 . format ( i )
5079	call the method parser.add_argument with 2 arguments : string STR0 and help set to string STR1 .	parser . add_argument ( STR0 , help = STR1 )
13927	if eather of settings.USE_I18N or settings.USE_L10N is True , set is_accept_language_redundant to True .	is_accept_language_redundant = settings . USE_I18N or settings . USE_L10N
2253	call the decode function with argument string STR0 on the return value of the method domain.encode with argument string STR1 substitute the result for domain .	domain = domain . encode ( STR0 ) . decode ( STR1 )
5258	from subprocess import PIPE and Popen into default name space .	from subprocess import PIPE , Popen
15603	substitute value under the cache_key key of the _format_cache dictionary for cached .	cached = _format_cache [ cache_key ]
128	define the method add with 5 arguments , self , key , value , timeout defaulting to DEFAULT_TIMEOUT and version defaulting to None .	def add ( self , key , value , timeout = DEFAULT_TIMEOUT , version = None ) :
4722	if answer equals a string STR0 ,	if answer != STR0 :
3772	call the method parser.add_argument with 5 arguments : string STR1 , action as a string STR2 , dest as a string STR3 , default as boolean False and help as a string STR0 .	parser . add_argument ( STR1 , action = STR2 , dest = STR3 , default = False , help = STR0 )
15077	child_loggers is an empty list .	child_loggers = [ ]
12545	call the method token.split_contents , convert the result into a list and substitute it for bits .	bits = list ( token . split_contents ( ) )
17114	import module types .	import types
6137	if value under the STR0 of options dictionary exists ,	if options [ STR0 ] :
15656	call the function force_str with an argument : default if it is true , or if not , first element of the result of the function , get_format called with an argument string STR0 , substitute the result for format .	format = force_str ( default or get_format ( STR0 ) [ 0 ] )
10051	if settings.SECURE_PROXY_SSL_HEADER is true ,	if settings . SECURE_PROXY_SSL_HEADER :
1466	return self.file.closed .	return self . file . closed
13316	substitute OPERATORS dictionary element under token key for op .	op = OPERATORS [ token ]
11564	return an empty string .	return STR
7962	if self.field.required is true and self.form has an attribute STR0 ,	if self . field . required and hasattr ( self . form , STR0 ) :
8700	call the method queryset.none , substitute it for qs .	qs = queryset . none ( )
17025	if elt is an instance of NonCapture class ,	if isinstance ( elt , NonCapture ) :
12680	call the method token.split_contents , substitute the result for bits .	bits = token . contents . split ( )
13347	from lib2to3.pgen2 import token into default name space .	from lib2to3 . pgen2 import token
11920	if sublist_item is true ,	if sublist_item :
10644	substitute Lexer and Parser for lexer_class and parser_class .	lexer_class , parser_class = Lexer , Parser
10656	split is an empty list .	split = [ ]
366	from django.core.files.move import file_move_safe into default name space .	from django . core . files . move import file_move_safe
28	substitute kwargs for params .	params = kwargs
4128	call the method parser.add_argument with string STR0 , action containing string STR1 , dest set to string STR2 , default set to True , help containing string STR3 as arguments .	parser . add_argument ( STR0 , action = STR1 , dest = STR2 , default = True , help = STR3 )
8807	if self.field.empty_label is not None ,	if self . field . empty_label is not None :
13750	substitute jython_reloader for reloader .	reloader = jython_reloader
8808	yield a tuple with 2 elements : an empty string and self.field.empty_label .	yield ( STR , self . field . empty_label )
8283	skip this loop iteration .	continue
16152	increment the lineno by the count of the newlines in self.__starttag_text .	lineno = lineno + self . __starttag_text . count ( STR0 )
5479	self.first is boolean True .	self . first = True
9416	substitute value for self.value .	self . value = value
9748	if handler has an attribute STR0 ,	if hasattr ( handler , STR0 ) :
6878	self.year_none_value is a tuple containing 2 elements : integer 0 and first element of empty_label .	self . year_none_value = ( 0 , empty_label [ 0 ] )
4134	get the value from the options dictionary under the key STR0 , substitute it for self.interactive .	self . interactive = options . get ( STR0 )
13663	_mtimes is an empty dictionary .	_mtimes = { }
8131	for every i in sequence of integers , from 0 to the result of the method self.total_form_count ,	for i in range ( 0 , self . total_form_count ( ) ) :
15917	raise an ValueError exception with an argument string STR0 .	raise ValueError ( STR0 )
10739	substitute the value under the command key of self.tags dictionary for compile_func .	compile_func = self . tags [ command ]
10736	return nodelist .	return nodelist
9900	split into two parts string main_value_pair at character STR0 , substitute the parts for name and value , respectively .	name , value = main_value_pair . split ( STR0 , 1 )
10906	if constant_arg is true ,	if constant_arg :
16273	if i is not an instance of six.integer_types class ,	if not isinstance ( i , six . integer_types ) :
11133	delete first 3 elements of bits .	del bits [ : 3 ]
8062	if not ,	else :
6917	substitute STR0 in string STR1 with id_ and first_select , return it .	return STR0 % ( id_ , first_select )
16552	call the function warnings.simplefilter with 2 arguments : string STR0 and RemovedInNextVersionWarning .	warnings . simplefilter ( STR0 , RemovedInNextVersionWarning )
6705	if not ,	else :
5541	obj is an instance of Model class , created with an unpacked dictionary data as argument .	obj = Model ( ** data )
1706	if response is None ,	if response is None :
9876	sum index and length of self._boundary , substitute the result for next .	next = index + len ( self . _boundary )
14326	if key is not contained in self ,	if key not in self :
17469	_assertCountEqual is a strnig STR0 .	_assertCountEqual = STR0
16260	define the functionbase36_to_int with an argument s .	def base36_to_int ( s ) :
13787	for every digit in number coverted to a string ,	for digit in str ( number ) :
5778	from django.db import models and DEFAULT_DB_ALIAS into default name space .	from django . db import models , DEFAULT_DB_ALIAS
15158	if StandardError , renamed to e , exception is caught ,	except StandardError as e :
4915	if value under the STR0 key of the connection.settings_dict dictionary equals a string STR1 ,	if connection . settings_dict [ STR0 ] == STR1 :
2097	for every message in messages ,	for message in messages :
17497	self.waiting_readers is an integer 0 .	self . waiting_readers = 0
7003	call the method __init__ from the base class of the Field class .	super ( Field , self ) . __init__ ( )
13653	use the global variables _mtimes and _win in this function .	global _mtimes , _win
248	call the ops.quote_name method with argument self._table on the object under the db key of connections dictionary , substitute the result for table .	table = connections [ db ] . ops . quote_name ( self . _table )
5111	append string STR0 to app_or_project , substitute it for base_subdir .	base_subdir = STR0 % app_or_project
2514	call the style.NOTICE method with an argument string STR0 , where STR1 is replaced with app , append the result to usage .	usage . append ( style . NOTICE ( STR0 % app ) )
3797	append list containing string STR0 to self.xgettext_options .	self . xgettext_options = self . xgettext_options [ : ] + [ STR0 ]
17746	define the function get_text_list with 2 arguments : list_ and last_word set to result of the function ugettext_lazy called with an argument string STR0 .	def get_text_list ( list_ , last_word = ugettext_lazy ( STR0 ) ) :
9065	join prefix and path into an url , return it .	return urljoin ( prefix , path )
10756	return nothing .	return
13936	call the function _generate_cache_key with request , request.method , headerlist , key_prefix as arguments , return the result .	return _generate_cache_key ( request , request . method , headerlist , key_prefix )
17818	remove first element of text .	text = text [ 1 : ]
2139	if smtplib.SMTPException exception is caught ,	except smtplib . SMTPException :
16759	substitute package.__path__ for package_path .	package_path = package . __path__
8005	from django.utils.functional import cached_property into default name space .	from django . utils . functional import cached_property
7542	define the method compress with arguments self and data_list .	def compress ( self , data_list ) :
9325	call the function format_html with 4 arguments : string STR1 , option_value , selected_html , result of the function force_text with an argument option_label , return the result .	return format_html ( STR1 , option_value , selected_html , force_text ( option_label ) )
327	call the BaseCache initialization method __init__ with 3 arguments self , list of arguments args and dictionary of arguments kwargs .	BaseCache . __init__ ( self , * args , ** kwargs )
7776	call the method self.add_prefix with an argument fieldname , substitute it for prefix .	prefix = self . add_prefix ( fieldname )
8773	return FormSet .	return FormSet
9000	if other equals list containing elements of self , return boolean True , otherwise return boolean False .	return list ( self ) == other
7263	call the method clean with an argument value from the base class of the EmailField class .	return super ( EmailField , self ) . clean ( value )
18130	define the function get_language_from_path with an argument path .	def get_language_from_path ( path ) :
13650	call the method notifier.stop .	notifier . stop ( )
3852	call the method self.find_files with an argument string STR0 , substitute the result for file_list .	file_list = self . find_files ( STR0 )
10947	call the function func with 3 arguments : obj , autoescape set to context.autoescape and unpacked list arg_vals , substitute the result for new_obj .	new_obj = func ( obj , autoescape = context . autoescape , * arg_vals )
10942	if not ,	else :
5051	call the method models.signals.post_migrate.send with 5 arguments : sender set to app_config , app_config set to app_config , verbosity set to verbosity , interactive set to interactive and using set to db .	models . signals . post_migrate . send ( sender = app_config , app_config = app_config , verbosity = verbosity , interactive = interactive , using = db )
13258	try ,	try :
17405	remove STR0 key from the kwargs dictionary , if it exists substitute it for sep , if not sep is None .	sep = kwargs . pop ( STR0 , None )
4814	if confirm is not equal to string STR0 or string STR1 ,	if confirm not in ( STR0 , STR1 ) :
9765	join self into a bytes string , yield the result as the return value of the generator .	yield STR . join ( self )
7083	call the method to_python with an argument value , from the base class of the IntegerField class , substitute the result for value .	value = super ( IntegerField , self ) . to_python ( value )
8012	INITIAL_FORM_COUNT is a string STR0 .	INITIAL_FORM_COUNT = STR0
6053	server_address is a tuple containing 2 initial elements : addr and port .	server_address = ( addr , port )
11051	must_be_first is boolean False .	must_be_first = False
12005	decorator function register.filter with an argument is_safe set to boolean False .	@ register . filter ( is_safe = False )
4158	if not ,	else :
4486	define the method bpython with an argument self .	def bpython ( self ) :
145	call the self.get method with key and version set to version as arguments , return it if it is not None .	return self . get ( key , version = version ) is not None
16783	try ,	try :
6845	define the function _parse_date_fmt .	def _parse_date_fmt ( ) :
4791	from django.db import DEFAULT_DB_ALIAS into default name space .	from django . db import DEFAULT_DB_ALIAS
5154	if OSError exception is caught ,	except OSError :
10946	if STR0 attribute of func object exists and is true ,	if getattr ( func , STR0 , False ) :
2005	derive the class EmailBackend from the BaseEmailBackend base class .	class EmailBackend ( BaseEmailBackend ) :
1094	if file self is not closed ,	if not self . closed :
6047	otherwise if first element of second row of args equals a string STR0 ,	elif args [ 1 ] [ 0 ] == STR0 :
18502	if not ,	else :
1398	if name is boolean False raise an assert error with message string STR0 .	assert name , STR0
11690	decorator function register.filter with an argument is_safe set to boolean True .	@ register . filter ( is_safe = True )
15792	define the function __wrapper__ with 2 arguments : unpacked list args and unpacked dictionary kw .	def __wrapper__ ( * args , ** kw ) :
3810	if settings.configured ,	if settings . configured :
4602	return nothing .	return
14219	for every key in self.keyOrder ,	for key in self . keyOrder :
2011	call the method message.message , substitute the result for msg .	msg = message . message ( )
6357	substitute STR0 in string STR1 with self.__class__.__name__ , self.name and self.regex.pattern , respectively , use it as an argument for the call to the force_str function , return the result .	return force_str ( STR0 % ( self . __class__ . __name__ , self . name , self . regex . pattern ) )
4089	for every migration in merge_migrations ,	for migration in merge_migrations :
14485	define the method O with an argument self .	def O ( self ) :
14974	raise an ValueError exception with an argument string STR0 formated with value and rest .	raise ValueError ( STR0 % ( value , rest ) )
18763	call the get_major_version wit version as argument , store the result in major .	major = get_major_version ( version )
3908	called with an argument path , substitute path for locale_dir .	locale_dir = path
10864	append self.pointer to self.backout .	self . backout . append ( self . pointer )
4304	call the method call_command with string STR0 , string STR1 , verbosity set to self.verbosity , database set to connection.alias , skip_validation set to boolean True , app_label set to app_label and hide_empty set to boolean True .	call_command ( STR0 , STR1 , verbosity = self . verbosity , database = connection . alias , skip_validation = True , app_label = app_label , hide_empty = True )
11008	return value .	return value
1804	from django.http.response import REASON_PHRASES as STATUS_CODE_TEXT # NOQA into default name space .	from django . http . response import REASON_PHRASES as STATUS_CODE_TEXT
7488	call the method clean with an argument value from the base class of the class ComboField .	super ( ComboField , self ) . clean ( value )
10948	if not ,	else :
1047	raise an AttributeError exception with string STR0 as argument .	raise AttributeError ( STR0 )
9749	call the method handler.file.close .	handler . file . close ( )
9482	for every bwidget in self.widgets ,	for widget in self . widgets :
15848	get type of self , call it and substitute the result for result .	result = type ( self ) ( )
696	if vary_on is None ,	if vary_on is None :
17102	return an instance of SafeText , created with an argument s .	return SafeText ( s )
12996	raise an TemplateSyntaxError with an argument string STR0 , where STR1 is replaced with first element of bits and options .	raise TemplateSyntaxError ( STR0 % ( bits [ 0 ] , option ) )
8831	substitute boolean False for cache_choices .	cache_choices = False
8228	attrs is an dictionary with 9 initial entries : form for STR0 , extra for STR1 , can_order for STR2 , can_delete for STR3 , min_num for STR4 , max_num for STR5 , absolute_max for STR6 , validate_min for STR7 for validate_max for STR8 .	attrs = { STR0 : form , STR1 : extra , STR2 : can_order , STR3 : can_delete , STR4 : min_num , STR5 : max_num , STR6 : absolute_max , STR7 : validate_min , STR8 : validate_max }
15152	substitute c for factory .	factory = c
3043	with the result , evaluate method connection.cursor , with return value as curs ,	with connection . cursor ( ) as curs :
17019	increment pos by one , substitute the result for last .	last = pos + 1
8127	if call to the self.is_valid method evaluates to false or self.can_order is false ,	if not self . is_valid ( ) or not self . can_order :
12519	if length of bits is smaller than integer 1 ,	if len ( bits ) < 1 :
4586	return nothing .	return
14003	define the function _long_to_bin with 2 arguments : x and hex_format_string .	def _long_to_bin ( x , hex_format_string ) :
13082	if result is true ,	if result :
14167	return a string STR0 formated with self.__class__.__name__ and dictreprs .	return STR0 % ( self . __class__ . __name__ , dictreprs )
4144	call the method self.show_migration_list with connection as first argument , as second argument use value under the STR0 key of options dictionary , if exists , if not use None as the second argument , return the result .	return self . show_migration_list ( connection , [ options [ STR0 ] ] if options [ STR1 ] else None )
18328	call the function translation with an argument settings.LANGUAGE_CODE , substitute the result for _default .	_default = translation ( settings . LANGUAGE_CODE )
14638	otherwise if tzinfo is not None ,	elif tzinfo is not None :
7973	define the method css_classes with 2 arguments : self and extra_classes set to None .	def css_classes ( self , extra_classes = None ) :
11855	return integer 0 .	return 0
1158	if not ,	else :
13227	derive the class TemplateResponse from the SimpleTemplateResponse base class .	class TemplateResponse ( SimpleTemplateResponse ) :
247	call the method router.db_for_write with argument self.cache_model_class , substitute the result for db .	db = router . db_for_write ( self . cache_model_class )
7063	return an empty string .	return STR
6407	otherwise , if pattern has an STR0 attribute .	elif hasattr ( pattern , STR0 ) :
10325	if six.PY3 is true ,	if six . PY3 :
3351	yield and empty string as the result .	yield STR
8168	call the method self._should_delete_form with an argument , if it evaluates to true ,	if self . _should_delete_form ( form ) :
11529	substitute source for e.django_template_source .	e . django_template_source = source
15426	define the method add_root_elements with 2 arguments : self and handler .	def add_root_elements ( self , handler ) :
9872	if index is lesser than integer 0 ,	if index < 0 :
4672	call the method parser.add_argument with 3 arguments : string STR1 , default set to DEFAULT_DB_ALIAS , and help set to string STR2 .	parser . add_argument ( STR1 , default = DEFAULT_DB_ALIAS , help = STR2 )
15559	from django.utils.translation import get_language , to_locale and check_for_language into default name space .	from django . utils . translation import get_language , to_locale , check_for_language
14404	define the method __init__ with 4 arguments : self , data , func and prefix .	def __init__ ( self , data , func , prefix ) :
14760	return WRAPPER_ASSIGNMENTS .	return WRAPPER_ASSIGNMENTS
15040	try ,	try :
14543	define the method n with an argument self .	def n ( self ) :
8730	kwargs is a dictionary with boolean True for STR0 .	kwargs = { STR0 : True }
16072	skip this loop iteration .	continue
10467	streaming_content.setter decorator ,	@ streaming_content . setter
2230	if UnicodeEncodeError exception is caught ,	except UnicodeEncodeError :
6380	call the method LocaleRegexProvider.__init__ with arguments self and regex .	LocaleRegexProvider . __init__ ( self , regex )
11193	self.filters is an empty dictionary .	self . filters = { }
12211	if not ,	else :
9968	from django.core import signing into default name space .	from django . core import signing
9752	substitute producer for self._producer .	self . _producer = producer
2249	if UnicodeEncodeError exception is caught ,	except UnicodeEncodeError :
11367	call the function add_to_builtins with an argument string STR0 .	add_to_builtins ( STR0 )
18448	call the function re.compile with an argument raw string STR0 , substitute it for dot_re .	dot_re = re . compile ( STR0 )
11819	sort value with key set to filed resolve of instance of a class Variable , created with an argument arg , return the result .	return sorted ( value , key = Variable ( arg ) . resolve )
6021	request_queue_size is integer 10 .	request_queue_size = 10
18637	if children is true , copy children list to self.children , otherwise self.children is an empty list .	self . children = children [ : ] if children else [ ]
6115	set value under the STR0 key of wsgi_opts to None .	wsgi_opts [ STR0 ] = None
12371	derive the class URLNode from Node base class .	class URLNode ( Node ) :
7272	if data in self.empty_values is true ,	if data in self . empty_values :
16018	return html .	return html
5018	append the result to app_dirs . join app_dir and string STR0 into a file path , use the result as an argument for the call to the function os.path.normpath ,	old_app_dir = os . path . normpath ( os . path . join ( app_dir , STR0 ) )
8828	if cache_choices is not None ,	if cache_choices is not None :
6257	substitute kwargs for self.kwargs .	self . kwargs = kwargs
7586	append a tuple containing 2 elements : full_file and f to self.choices list .	self . choices . append ( ( full_file , f ) )
6323	try ,	try :
4383	if not settings.DEBUG is true and settings.ALLOWED_HOSTS is false ,	if not settings . DEBUG and not settings . ALLOWED_HOSTS :
1283	from django.core.files import locks and File into default name space .	from django . core . files import locks , File
5552	import module decimal .	import decimal
12484	substitute args , without the last element for args .	args = args [ : - 1 ]
14149	call the method self.iteritems , return the list of results .	return list ( self . iteritems ( ) )
2865	return boolean False .	return False
6666	substitute flags for self.flags .	self . flags = flags
12753	define the method load_template with 3 arguments : self , template_name and template_dirs set to None .	def load_template ( self , template_name , template_dirs = None ) :
1621	derive class FileProxyMixin from the base class object , making it a new-style class .	class FileProxyMixin ( object ) :
18037	from django.utils.functional import lazy into default name space .	from django . utils . functional import lazy
135	define delete method with self class instance , key and version set to None , as arguments .	def delete ( self , key , version = None ) :
5139	raise a CommandError exception with an argument : string STR0 , where ' % s '' is replaced with new_path .	raise CommandError ( STR0 % new_path )
9150	if extra_attrs is true ,	if extra_attrs :
15098	logger.handlers is an empty list .	logger . handlers = [ ]
2534	if string STR0 is not contained in os.environ ,	if STR0 not in os . environ :
587	if server is an instance of six.string_types ,	if isinstance ( server , six . string_types ) :
15830	call the method self._setup .	self . _setup ( )
5366	return the length of self.object_list .	return len ( self . object_list )
15705	return self .	return self
8414	if limit_choices_to is callable object ,	if callable ( limit_choices_to ) :
2398	call the method attachment.set_payload with an argument content .	attachment . set_payload ( content )
3904	if not ,	else :
3748	define the function write_pot_file with 2 arguments potfile and msgs .	def write_pot_file ( potfile , msgs ) :
13529	for every name in namelist ,	for name in namelist :
6903	for v in return value of the function match.groups , convert v into an integer and append i to a list , assign the result for year_val , month_val and day_val , respectively .	year_val , month_val , day_val = [ int ( v ) for v in match . groups ( ) ]
10006	convert the value under the STR0 key of the self.META dictionary to a string , substitute result for server_port .	server_port = str ( self . META [ STR0 ] )
5672	return value of the value._get_pk_val method and strings_only set to boolean True . call the function m2m_value with the argument related , for every related in itterator object generated from the attribute field.name , of the obj object , append the results in a list , substitute it for value under the field.name key of the self._current dictionary .	self . _current [ field . name ] = [ m2m_value ( related ) for related in getattr ( obj , field . name ) . iterator ( ) ]
9940	take elements of p from index i incremented by 1 to the end , strip the result of the whitespaces , substitute it for value .	value = p [ i + 1 : ] . strip ( )
13760	append string STR0 to the BASE62_ALPHABET , substitute it for BASE64_ALPHABET .	BASE64_ALPHABET = BASE62_ALPHABET + STR0
5661	if not ,	else :
13696	if old_handler is not None ,	if old_handler is not None :
1244	if os.path has an attribute STR0 ,	if hasattr ( os . path , STR0 ) :
1292	__all__ is a tuple containing strings : STR0 , STR1 , STR2 and STR3 .	__all__ = ( STR0 , STR1 , STR2 , STR3 )
9985	_upload_handlers is an empty list .	_upload_handlers = [ ]
14970	substitute value under idx key of dictionary d for d .	d = d [ idx ]
1660	self._view_middleware is an empty list .	self . _view_middleware = [ ]
6734	if domain_part is not contained in self.domain_whitelist and method self.validate_domain_part with an argument domain_part evaluates to false ,	if ( domain_part not in self . domain_whitelist and not self . validate_domain_part ( domain_part ) ) :
9098	if extend is boolean True ,	if extend is True :
3723	if not ,	else :
7465	return self.empty_value .	return self . empty_value
17452	remove STR0 key from the orig_vars dictionary .	orig_vars . pop ( STR0 , None )
12460	define the function comment with 2 arguments : parser and token .	def comment ( parser , token ) :
17788	close zfile stream .	zfile . close ( )
15968	call the method re.split with 2 arguments : string STR0 and value , substitute the result for paras .	paras = re . split ( STR0 , value )
13081	substitute result for self.find_template_cache dictionary value under the key key .	self . find_template_cache [ key ] = result
13757	BASE56_ALPHABET is a string STR0 .	BASE56_ALPHABET = STR0
14542	get the value under the self.data.month key of the MONTHS_3 dictionary , call on it the method title , return the result .	return MONTHS_3 [ self . data . month ] . title ( )
646	if val is None ,	if val is None :
3388	if att_name equals string STR0 and extra_params equals a dictionary with 1 entry : boolean True for STR1 ,	if att_name == STR0 and extra_params == { STR1 : True } :
626	define the method get_many with self class instance , keys and version defaulting to None as arguments .	def get_many ( self , keys , version = None ) :
1632	define lambda function that returns self.file.softspace field , use it as an argument for property function , put the result in softspace .	softspace = property ( lambda self : self . file . softspace )
14789	callback is an lambda function with an argument response and with return value result of the method middleware.process_response , called with 2 arguments : request and response .	callback = lambda response : middleware . process_response ( request , response )
1399	call the self.path with argument name , substitute it for name .	name = self . path ( name )
4866	call the method test_runner.run_tests with an argument test_labels , substitute it for failures .	failures = test_runner . run_tests ( test_labels )
9021	call the function timezone.make_naive with 2 arguments value , current_timezone , return the result .	return timezone . make_naive ( value , current_timezone )
9019	if settings.USE_TZ is true and value is not None and call to the function timezone.is_aware with an argument value , evaluates to true ,	if settings . USE_TZ and value is not None and timezone . is_aware ( value ) :
3606	append tuple containing 3 elements : candidate , fixture_dir and fixture_name to list fixture_files_in_dir .	fixture_files_in_dir . append ( ( candidate , fixture_dir , fixture_name ) )
8441	if field equals NON_FIELD_ERRORS and opts.error_messages is true and NON_FIELD_ERRORS is contained in opts.error_messages ,	if ( field == NON_FIELD_ERRORS and opts . error_messages and NON_FIELD_ERRORS in opts . error_messages ) :
7548	if initial is not an instance of the list type ,	if not isinstance ( initial , list ) :
8889	if self.required is true and value is false ,	if self . required and not value :
13594	if _cached_filenames is empty and settings.USE_I18N is True ,	if not _cached_filenames and settings . USE_I18N :
15343	call the function date.strftime with an argument string STR0 , substitute the result for time_str .	time_str = date . strftime ( STR0 )
3864	append self.msguniq_options to a list containing a string STR0 , append list containing potfile to the result , substitute it for args .	args = [ STR0 ] + self . msguniq_options + [ potfile ]
3486	from django.db import connections , router , transaction , DEFAULT_DB_ALIAS , IntegrityError and DatabaseError into default name space .	from django . db import ( connections , router , transaction , DEFAULT_DB_ALIAS , IntegrityError , DatabaseError )
3337	yield string STR0 as the result .	yield STR0
16059	substitute elements of middle from the beginning to the negative length of closing , for middle .	middle = middle [ : - len ( closing ) ]
5631	from django.utils.encoding import smart_text and is_protected_type into default name space .	from django . utils . encoding import smart_text , is_protected_type
3405	append string STR0 to field_desc .	field_desc += STR0
4366	from django.utils import autoreload into default name space .	from django . utils import autoreload
8872	call the method Field.validate with 2 arguments : self and value , return the result .	return Field . validate ( self , value )
2241	call the parseaddr function with return value of the force_text with argument addr , as argument , substitute the result for addr .	addr = parseaddr ( force_text ( addr ) )
10270	split host from the right side into 2 parts at the STR0 , substitute the result for bits .	bits = host . rsplit ( STR0 , 1 )
11989	return an empty string .	return STR
5779	from django.utils.xmlutils import SimplerXMLGenerator into default name space .	from django . utils . xmlutils import SimplerXMLGenerator
15963	call the method format_string.format with 2 arguments : unpacked list args_safe and unpacked dictionary kwargs_safe , use the result as an argument for the call to the function mark_safe , return the result .	return mark_safe ( format_string . format ( * args_safe , ** kwargs_safe ) )
3140	if length of app_labels equals integer 0 ,	if len ( app_labels ) == 0 :
9646	substitute self._encoding for encoding .	encoding = self . _encoding
17498	self.waiting_writers is an integer 0 .	self . waiting_writers = 0
8741	define the method get_unique_error_message with 2 arguments : self and unique_check .	def get_unique_error_message ( self , unique_check ) :
4496	raise an ImportError exception .	raise ImportError
10082	if self has an STR0 attribute .	if hasattr ( self , STR0 ) :
13687	evaluate the fd.isatty method , if the result is true ,	if fd . isatty ( ) :
10640	if settings.TEMPLATE_DEBUG is true ,	if settings . TEMPLATE_DEBUG :
10430	call the __init__ method from the base class of the HttpResponse class , with the arguments : unpacked list args and unpacked dictionary kwargs .	super ( HttpResponse , self ) . __init__ ( * args , ** kwargs )
5745	derive the class DjangoSafeDumper from the SafeDumper base class .	class DjangoSafeDumper ( SafeDumper ) :
16303	define the function quote_etag with an argument etag .	def quote_etag ( etag ) :
16307	try ,	try :
9076	if data is true ,	if data :
9867	if not ,	else :
1562	derive the class FileUploadHandler from the object base class .	class FileUploadHandler ( object ) :
4842	call the method parser.add_argument with 5 arguments : string STR0 , action set to string STR1 , dest set to STR2 , default set to boolean False and help set to string STR3 .	parser . add_argument ( STR0 , action = STR1 , dest = STR2 , default = False , help = STR3 ) ,
12185	if VariableDoesNotExist exception is caught ,	except VariableDoesNotExist :
2581	call the method parser.parse_known_args wiht an argument self.argv , without the first two elements , assign the result for options , and args , respectively .	options , args = parser . parse_known_args ( self . argv [ 2 : ] )
13530	call the method self._archive.read with an argument name , substitute the result for data .	data = self . _archive . read ( name )
4135	get the value from the options dictionary under the key STR0 , substitute it for self.show_traceback .	self . show_traceback = options . get ( STR0 )
10173	define the method encoding with arguments self and value .	def encoding ( self , value ) :
13330	if self.current_token is not EndToken ,	if self . current_token is not EndToken :
13758	BASE36_ALPHABET is a string STR0 .	BASE36_ALPHABET = STR0
1440	call the DefaultStorage method , substitute the result for default_storage .	default_storage = DefaultStorage ( )
6162	call the method base64.urlsafe_b64encode with an argument s , on the result call the strip function with STR0 as the argument , return the result .	return base64 . urlsafe_b64encode ( s ) . strip ( STR0 )
8301	if fields is true and f.name is not contained in fields ,	if fields and f . name not in fields :
3566	try ,	try :
18053	delete Trans .	del Trans
11875	if TypeError or ValueError exceptions are caught ,	except ( ValueError , TypeError ) :
15768	define the method __ne__ with 2 arguments : self and other .	def __ne__ ( self , other ) :
12934	remove kwargs dictionary entry under the STR0 key , if it exists substitute it for self.isolated_context , if not self.isolated_context is boolean False .	self . isolated_context = kwargs . pop ( STR0 , False )
13604	join dirpath and filename into a path separated by STR0 , append it to new_filenames .	new_filenames . append ( os . path . join ( dirpath , filename ) )
2633	define the method error with arguments self and message .	def error ( self , message ) :
7781	if error has an attribute STR0 ,	if hasattr ( error , STR0 ) :
14755	call the function make_middleware_decorator with an argument middleware_class , return the result .	return make_middleware_decorator ( middleware_class )
16265	raise an ValueError exception with an argument string STR0 .	raise ValueError ( STR0 )
16289	define the function urlsafe_base64_encode with an argument s .	def urlsafe_base64_encode ( s ) :
16760	if AttributeError exception is caught ,	except AttributeError :
18590	otherwise if cmatches is true ,	elif cmatches :
15166	try ,	try :
5590	define the function Deserializer with arguments stream_or_string and unpacked dictionary options .	def Deserializer ( stream_or_string , ** options ) :
16442	fill_to is an integer 7 .	fill_to = 7
7562	self.choices is an list containing an tuple with 2 elements : an empty string and string STR0 .	self . choices = [ ( STR , STR0 ) ]
7602	if data_list is true ,	if data_list :
10361	define the method __getitem__ with 2 arguments : self and header .	def __getitem__ ( self , header ) :
9190	call the method render from the base class of the class PasswordInput , called with 3 arguments : name , value and attrs , return the result .	return super ( PasswordInput , self ) . render ( name , value , attrs )
17952	if offset is an instance of timedelta class ,	if isinstance ( offset , timedelta ) :
5808	call the method self.xml.endElement with an argument string STR0 .	self . xml . endElement ( STR0 )
13403	call the function os.stat with an argument path , perform bitwise and on 2 operands st_mode field of the result and stat.S_IREAD ,	if ( ( os . stat ( path ) . st_mode & stat . S_IREAD ) != stat . S_IREAD ) :
14989	call the method m.groupdict , substitute the result for d .	d = m . groupdict ( )
64	if key if contained in value under the DEFAULT_CACHE_ALIAS key of caches dictionary , return boolean True , otherwise return False .	return key in caches [ DEFAULT_CACHE_ALIAS ]
14417	return value .	return value
4033	if not ,	else :
534	call the self._lock.reader method , with the result perform the following ,	with self . _lock . reader ( ) :
2554	append tuple containing two entries : app_config.label and integer 0 to options , for every app_config in app_configs .	options += [ ( app_config . label , 0 ) for app_config in app_configs ]
15568	call the function check_for_language with an argument lang , if it evaluates to false ,	if not check_for_language ( lang ) :
9509	media is an instance of Media class .	media = Media ( )
4274	try ,	try :
18227	define the function to_locale with 2 arguments language and to_lower set to boolean False .	def to_locale ( language , to_lower = False ) :
1203	call the LockFileEx function with 6 arguments : hfile , flags , integer 0 , integer 0 , hexadecimal value FFFF0000 , return value of the byref function called with argument overlapped , substitute the result for ret .	ret = LockFileEx ( hfile , flags , 0 , 0 , FFFF0000 , byref ( overlapped ) )
12762	raise an NotImplementedError with an argument string STR0 .	raise NotImplementedError ( STR0 )
14618	if match is true ,	if match :
116	call the method params.get with 2 arguments , string STR0 and None , use the result as the argument for the call to the function get_key_func , substitute the result for the self.key_func .	self . key_func = get_key_func ( params . get ( STR0 , None ) )
10773	do nothing .	pass
6261	append x to self.namespaces list for every x in namespaces , only if x is true .	self . namespaces = [ x for x in namespaces if x ]
12960	if AttributeError exception is caught ,	except AttributeError :
1682	define the method make_view_atomic , with self class instance and view as the arguments .	def make_view_atomic ( self , view ) :
18213	_supported is None .	_supported = None
10442	define the method content with 2 arguments : self and value .	def content ( self , value ) :
13354	strfunc is an instance of a class Name , created with 2 arguments : string STR0 and prefix as unifunc.prefix .	strfunc = Name ( STR0 , prefix = unifunc . prefix )
16690	link is a list with 4 elements : last , root , key and result .	link = [ last , root , key , result ]
9632	if content_length is lesser than integer 0 ,	if content_length < 0 :
17990	define the method __init__ with 2 arguments : self and timezone .	def __init__ ( self , timezone ) :
10627	define the method __iter__ with an argument self .	def __iter__ ( self ) :
7967	substitute self.form.required_css_class for the value under the STR0 key of the attrs dictionary .	attrs [ STR0 ] = self . form . required_css_class
9119	substitute parent_widget for self.parent_widget .	self . parent_widget = parent_widget
11625	return an empty string .	return STR
9277	derive the class TimeInput from the DateTimeBaseInput base class .	class TimeInput ( DateTimeBaseInput ) :
14884	call the method self.configurator.convert with an argument value .	result = self . configurator . convert ( value )
7763	if not ,	else :
7699	if label_suffix is not None substitute label_suffix for self.label_suffix , otherwise substitute return value of the function _ called with an argument STR0 for self.label_suffix .	self . label_suffix = label_suffix if label_suffix is not None else _ ( STR0 )
2826	raise an NotImplementedError with an argument string STR0 .	raise NotImplementedError ( STR0 )
15466	call the method handler.addQuickElement with 2 arguments : string STR0 and value under the STR1 key of the item dictionary .	handler . addQuickElement ( STR0 , item [ STR1 ] )
1904	_get_request is getter function for REQUEST attribute of this class .	REQUEST = property ( _get_request )
15079	for every name in loggers ,	for name in loggers :
9370	define the method __init__ with 6 arguments : self , name , value , attrs , choice and index .	def __init__ ( self , name , value , attrs , choice , index ) :
8473	define the method save with 2 arguments : self and commit set to boolean True .	def save ( self , commit = True ) :
3667	from django.utils import six into default name space .	from django . utils import six
12220	pop_context is boolean True .	pop_context = True
8544	if self doesnt have STR0 attribute ,	if not hasattr ( self , STR0 ) :
14469	call the method self.g , return the result .	return self . g ( )
15779	call the method self.__cast , if the result is lesser than other , return boolean True , otherwise return boolean False .	return self . __cast ( ) < other
5363	define the method __repr__ with an argument self .	def __repr__ ( self ) :
1770	append the request to the end of the protected class member response._closable_objects .	response . _closable_objects . append ( request )
6096	wsgi_opts is a dictionary with 4 initial entries : value under the key STR0 of options dictionary converted to an integer , for STR1 , value under the key STR2 of options dictionary converted to an integer for STR3 , value under the key STR4 of options dictionary converted to an integer , for STR5 , and value under the key STR6 of options dictionary converted to an integer , for STR7 .	wsgi_opts = { STR4 : int ( options [ STR0 ] ) , STR5 : int ( options [ STR1 ] ) , STR6 : int ( options [ STR2 ] ) , STR7 : int ( options [ STR3 ] ) , }
11091	define the function render_value_in_context with 2 arguments : value and context .	def render_value_in_context ( value , context ) :
13550	import module time .	import time
3253	import module sys .	import sys
11389	if value is not None ,	if value is not None :
1878	return value under the STR0 key of self.environ dictionary .	return self . environ . get ( STR0 )
14545	define the method N with an argument self .	def N ( self ) :
17479	define the function assertRaisesRegex with 3 arguments : self , unpacked list args and unpacked dictionary kwargs .	def assertRaisesRegex ( self , * args , ** kwargs ) :
5377	define the method has_other_pages with an argument self .	def has_other_pages ( self ) :
17083	define the method _proxy_method with 3 arguments self , unpacked list args and unpacked dictionary kwargs .	def _proxy_method ( self , * args , ** kwargs ) :
42	try ,	try :
1829	call the method self.read_limited with length of self.buffer subtracted from size as argument , add result to self.buffer , store it in result .	result = self . buffer + self . _read_limited ( size - len ( self . buffer ) )
18543	for every c in lineno_comment_map dictionary value under the comment_lineno_cache key ,	for c in lineno_comment_map [ comment_lineno_cache ] :
6136	call the function become_daemon with 2 arguments : our_home_dir set to the value under the STR0 key of options dictionary and , unpacked dictionary daemon_kwargs .	become_daemon ( our_home_dir = options [ STR0 ] , ** daemon_kwargs )
9489	for every i and widget in enumerated iterable self.widgets ,	for i , widget in enumerate ( self . widgets ) :
4266	write the string STR0 to the standard output .	self . stdout . write ( STR0 )
7778	define the method add_error with 3 arguments : self , field and errors .	def add_error ( self , field , error ) :
12355	substitute format_string for self.format_string .	self . format_string = format_string
4452	call the method self.style.NOTICE with an argument : string : STR0 , write it to self.stdout .	self . stdout . write ( self . style . NOTICE ( STR0 ) )
15361	to_unicode is an lambda function with an argument s , result is the result of the function force_text , called with 2 arguments : s and string_only as boolean True .	to_unicode = lambda s : force_text ( s , strings_only = True )
16703	substitute user_function for wrapper.__wrapped__ .	wrapper . __wrapped__ = user_function
17478	get _assertCountEqual attribute of the self object , call the result with 2 arguments : unpacked list args , and unpacked dictionary kwargs , return the result .	return getattr ( self , _assertCountEqual ) ( * args , ** kwargs )
3535	call the method connection.ops.sequence_reset_sql with 2 arguments : return value of the no_style and self.models , substitute the result for sequence_sql .	sequence_sql = connection . ops . sequence_reset_sql ( no_style ( ) , self . models )
7198	define the method strptime with arguments self , value and format .	def strptime ( self , value , format ) :
8699	if not ,	else :
10743	call the method compile_func with 2 arguments self and token , substitute the result for compiled_result .	compiled_result = compile_func ( self , token )
9615	RAW is a string STR0 .	RAW = STR0
280	if DatabaseError exception is caught ,	except DatabaseError :
13628	call the threading.local method , assign the result to trans_real._active .	trans_real . _active = threading . local ( )
1510	call the method tempfile.NamedTemporaryFile with arguments : suffix set to string STR0 and dir set to settings.FILE_UPLOAD_TEMP_DIR .	file = tempfile . NamedTemporaryFile ( suffix = STR0 , dir = settings . FILE_UPLOAD_TEMP_DIR )
15513	call the method handler.addQuickElement with 2 arguments : string STR0 and value under the STR1 key of the self.feed dictionary .	handler . addQuickElement ( STR0 , self . feed [ STR1 ] )
641	evaluate the method self._cache.decr with key and negative delta as arguments , return the result .	return self . _cache . decr ( key , - delta )
8964	convert field into a string and concatenate it to a string STR0 , append the result to output .	output . append ( STR0 % field )
12555	nodelist_false is an instance of NodeList class .	nodelist_false = NodeList ( )
8293	return instance .	return instance
12659	return an instance of a NowNode class , created with an argument format_string .	return NowNode ( format_string )
15330	decrement date.month by integer 1 , use the result as an key to obtain the value from the months dictionary , substitute it for month .	month = months [ date . month - 1 ]
1163	return None .	return None
4238	manifest is OrderDict class instance , created with tuple of two elements , app_name and list of elements of model_list for which model_installed function returned true , for every app_name and model_list in all_modules .	manifest = OrderedDict ( ( app_name , list ( filter ( model_installed , model_list ) ) ) for app_name , model_list in all_models )
10735	call the method self.prepend_token with an argument token ,	self . prepend_token ( token )
10144	if buf is false ,	if not buf :
7353	if value is an instance of six.string_types and value converted to lowercase is not equal to strings STR0 or STR1 ,	if isinstance ( value , six . string_types ) and value . lower ( ) in ( STR0 , STR1 ) :
11820	if TypeError or VariableDoesNotExist exceptions are caught ,	except ( TypeError , VariableDoesNotExist ) :
13623	import gettext module .	import gettext
6329	define the method __init__ with arguments self and regex .	def __init__ ( self , regex ) :
11589	from django.utils.timesince import timesince and timeuntil into default name space .	from django . utils . timesince import timesince , timeuntil
8846	substitute self.choices for self.widget.choices .	self . widget . choices = self . choices
13711	define the function restart_with_reloader .	def restart_with_reloader ( ) :
13302	mapped_tokens is an empty list .	mapped_tokens = [ ]
10385	expires is None .	expires = None
15023	if incremental is true ,	if incremental :
5082	call the method parser.add_argument with 6 arguments : string STR1 , string STR2 , dest set to string STR3 , action set to STR4 , default is a list containing string STR5 and help set to string : STR6 .	parser . add_argument ( STR1 , STR2 , dest = STR3 , action = STR4 , default = [ STR5 ] , help = STR6 )
4935	for every sql in return value of the function connection.creation.sql_for_pending_references called with arguments : model , style , and pending_references append sql to the string STR0 , put the results in a list , extend alter_sql with the result .	alter_sql . extend ( [ STR0 + sql for sql in connection . creation . sql_for_pending_references ( model , style , pending_references ) ] )
16482	define the method __init__ with 3 arguments self , states and first .	def __init__ ( self , states , first ) :
1461	call the method unlink on self with self.name as the argument .	self . unlink ( self . name )
12145	substitute filter_expr and nodelist for self.filter_expr and self.nodelist , respectively .	self . filter_expr , self . nodelist = filter_expr , nodelist
6182	if length of compressed is lesser than length of data decremented by 1 ,	if len ( compressed ) < ( len ( data ) - 1 ) :
1145	open file named file_or_path for reading , store the file object handle in file .	file = open ( file_or_path , STR0 )
7541	return out .	return out
292	call the self.make_key with key and version set to version as arguments , substitute the result for key .	key = self . make_key ( key , version = version )
15583	for every location in format_locations ,	for location in format_locations :
9788	return self .	return self
7625	if value is contained in self.empty_values ,	if value in self . empty_values :
17241	call the method Module_six_moves_urllib_request with an argument : string STR0 appended to __name__ , assign the result to the value under the string STR1 appended to __name__ key of the sys.modules dictionary , and to the value under the string STR2 appended to __name__ key of the sys.modules dictionary .	sys . modules [ __name__ + STR0 ] = sys . modules [ __name__ + STR1 ] = Module_six_moves_urllib_request ( __name__ + STR2 )
13207	call the function post_callback with an argument retval , substitute the result for newretval .	newretval = post_callback ( retval )
1344	self.directory_permissions_mode is a tuple containing : directory_permissions_mode if directory_permissions_mode is not None , or settings.FILE_UPLOAD_DIRECTORY_PERMISSIONS if it is .	self . directory_permissions_mode = ( directory_permissions_mode if directory_permissions_mode is not None else settings . FILE_UPLOAD_DIRECTORY_PERMISSIONS )
5072	call the function re.compile with 2 arguments : string STR0 and re.I , substitute the result for _url_drive_re .	_url_drive_re = re . compile ( STR0 , re . I )
16467	return boolean False .	return False
4140	import module STR0 from the package app_config.name .	import_module ( STR0 , app_config . name )
16731	try ,	try :
1343	self.file_permissions_mode is a tuple containing : file_permissions_mode if file_permissions_mode is not None , or settings.FILE_UPLOAD_PERMISSIONS if it is .	self . file_permissions_mode = ( file_permissions_mode if file_permissions_mode is not None else settings . FILE_UPLOAD_PERMISSIONS )
6442	substitute apps for the value under language_code key of the self._app_dict dictionary .	self . _app_dict [ language_code ] = apps
13288	return self .	return self
6080	if not ,	else :
5520	if stream_or_string is an instance of six.string_types type .	if isinstance ( stream_or_string , six . string_types ) :
17336	get _iterlists attribute of the class d , call the result with an argument unpacked dictionary kw , convert the result to a iterable , return it .	return iter ( getattr ( d , _iterlists ) ( ** kw ) )
2362	if not ,	else :
14434	re_formatchars.split , for every i and piece in enumerated result , if i is even number ,	if i % 2 :
724	if AttributeError exception is caught ,	except AttributeError :
10562	from django.utils import six into default name space .	from django . utils import six
5857	call the method pulldom.parse with arguments : self.stream and return value of the method self._make_parser ,	self . event_stream = pulldom . parse ( self . stream , self . _make_parser ( ) )
5077	leave_locale_alone is boolean True .	leave_locale_alone = True
1840	increment self.buffer by chunk .	self . buffer += chunk
16625	otherwise if length of key equals integer 1 and type of first element of key is contained in fasttypes ,	elif len ( key ) == 1 and type ( key [ 0 ] ) in fasttypes :
9435	call the function format_html with 3 arguments : self.inner_html , choice_value set to choice_value , and sub_widgets set to return value of the function sub_ul_renderer.render , append the result to output .	output . append ( format_html ( self . inner_html , choice_value = choice_value , sub_widgets = sub_ul_renderer . render ( ) ) )
3604	join fixture_dir , fixture_name with appended character STR0 into a valid file path , use it as an argument for the call to the glob.iglob , for every candidate in result .	for candidate in glob . iglob ( os . path . join ( fixture_dir , fixture_name + STR0 ) ) :
10888	call the method match.start , substitute the result for start .	start = match . start ( )
9996	self._post_parse_error is boolen False .	self . _post_parse_error = False
16086	call the function escape with an argument word , substitute the result for i-th element of words .	words [ i ] = escape ( word )
5743	if ImportError exception is caught ,	except ImportError :
10938	arg_vals is an empty list ,	arg_vals = [ ]
13282	lbp is integer 0 .	lbp = 0
10755	if token.token_type equals TOKEN_BLOCK and token.contents equals endtag ,	if token . token_type == TOKEN_BLOCK and token . contents == endtag :
1268	finally perform ,	finally :
14700	call the function time.strftime with 2 arguments : fmt and and timetuple without the first element , added to a tuple with an element year , substitute the result for s1 .	s1 = time . strftime ( fmt , ( year , ) + timetuple [ 1 : ] )
15611	get format_type attribute of module object , substitute the result for val .	val = getattr ( module , format_type )
8598	substitute value under the unique_for key of form.cleaned_data dictionary for date .	date = form . cleaned_data [ unique_for ]
3390	skip this loop iteration .	continue
5744	from yaml import SafeLoader , SafeDumper into default name space .	from yaml import SafeLoader , SafeDumper
18734	define the method tzname with 2 arguments self and dt .	def tzname ( self , dt ) :
3069	requires_system_checks is boolean False .	requires_system_checks = False
3158	call the method app_config.get_model with an argument model_label , substitute the result for model .	model = app_config . get_model ( model_label )
973	define the method message_dict with an argument self .	def message_dict ( self ) :
13199	call the functoin callback with an argument self .	callback ( self )
15237	_PROTECTED_TYPES is a tuple containing next elements , six.integer_types , type of None , type of float , Decimal , detetime.datetime , datetime.date and datetime.time .	_PROTECTED_TYPES = six . integer_types + ( type ( None ) , float , Decimal , datetime . datetime , datetime . date , datetime . time )
95	define the initialization function __init__ with self class instance and params as arguments .	def __init__ ( self , params ) :
12158	return an empty string ,	return STR
4105	substitute STR1 in a string STR0 with writer path , write it to self.stdout .	self . stdout . write ( STR0 % writer . path )
12416	call the method self.max_expr.resolve with an argument context , substitute the result for max_value .	max_value = self . max_expr . resolve ( context )
491	define the method get with 4 arguments , self class instance , key , default set to None and version set to None .	def get ( self , key , default = None , version = None ) :
18135	call the function _trans.deactivate_all , return the result .	return _trans . deactivate_all ( )
16017	call the function endtag_re.sub with 2 arguments : an empty string and html , substitute the result for html .	html = endtag_re . sub ( STR , html )
2296	substitute encoding for self.encoding .	self . encoding = encoding
4551	call the method parser.add_argument with 3 arguments : string STR1 , default set to DEFAULT_DB_ALIAS , and help set to a string STR2 .	parser . add_argument ( STR1 , default = DEFAULT_DB_ALIAS , help = STR2 )
4921	pending_references is an empty dictionary .	pending_references = { }
14684	break from the loop execution .	break
10168	define the method encoding with an argument self .	def encoding ( self ) :
11026	convert bit to an integer and use it as index to obtain an element for list current , substitute it for current .	current = current [ int ( bit ) ]
2346	for every name and value in return value of the method self.extra_headers.items ,	for name , value in self . extra_headers . items ( ) :
9667	if KeyError , IndexError and AttributeError exception is caught ,	except ( KeyError , IndexError , AttributeError ) :
9392	substitute string STR0 for value under the STR1 key of final_attrs dictionary .	final_attrs [ STR0 ] = STR1
14630	match regex datetime_re with value , substitute the result for match .	match = datetime_re . match ( value )
354	derive the class CacheClass from the DummyCache base class .	class CacheClass ( DummyCache ) :
17129	class_types is a tuple with 2 elements : type and types.ClassType .	class_types = ( type , types . ClassType )
12082	import module warnings .	import warnings
10823	substitute self.subject for subject .	subject = self . subject
15445	define the method add_item_elements with 3 arguments : self , handler and item .	def add_item_elements ( self , handler , item ) :
11866	define the function slice_filter with 2 arguments value and arg .	def slice_filter ( value , arg ) :
10647	call the method parser.parse , return the result .	return parser . parse ( )
14615	compile regex from raw string STR0 , substitute it for datetime_re .	datetime_re = re . compile ( STR0 )
16213	call the function quote_plus with 2 arguments : result of the function force_str called with an argument url , and result of the function force_str called with an argument safe , use the result as an argument for the call to the function force_text , return the result .	return force_text ( quote_plus ( force_str ( url ) , force_str ( safe ) ) )
4605	join statements into a string , separated by newlines , return it .	return STR0 . join ( statements )
15225	in the string STR0 replace every % s with original and type of the object self.obj as strings , respectively , and replace % r with self.obj , return the result .	return STR0 % ( original , self . obj , type ( self . obj ) )
12166	self.nodelist_empty is an instance of NodeList class .	self . nodelist_empty = NodeList ( )
10031	try ,	try :
7347	define the method clean with arguments self and value .	def clean ( self , value ) :
8493	substitute labels for value under the STR0 key of attrs dictionary .	attrs [ STR0 ] = labels
11117	if support_legacy is false ,	if not support_legacy :
1492	substitute charset for self.charset .	self . charset = charset
11887	if second_item is an empty list ,	if second_item == [ ] :
11020	try ,	try :
12162	substitute loopvars and sequence for self.loopvars and self.sequence , respectively .	self . loopvars , self . sequence = loopvars , sequence
18061	define the method ugettext with an argument message .	def ugettext ( message ) :
118	if timeout equals to DEFAULT_TIMEOUT ,	if timeout == DEFAULT_TIMEOUT :
4843	call the method parser.add_argument with 4 arguments : string STR0 , action set to string STR1 , dest set to STR2 , and help set to a string STR3 .	parser . add_argument ( STR0 , action = STR1 , dest = STR2 , help = STR3 ) ,
9184	define the method __init__ with 3 arguments : self , attrs set to None and render_value set to boolean False .	def __init__ ( self , attrs = None , render_value = False ) :
14294	return result .	return result
6360	return nothing .	return
9287	call the method self.check_test with an argument value , if it evaluates to true ,	if self . check_test ( value ) :
12364	call the method self.nodelist.render with an argument context , strip the result of the surrounding whitespaces , use the result as an argument for the call to the function strip_spaces_between_tags , return the result .	return strip_spaces_between_tags ( self . nodelist . render ( context ) . strip ( ) )
14253	value under the item key of self.dict dictionary is None .	self . dict [ item ] = None
5700	if value has an attribute STR0 and value is not an instance of six.text_type ,	if hasattr ( value , STR0 ) and not isinstance ( value , six . text_type ) :
10860	call the function next_space_index with 2 arguments : subject and i , substitute the result for i .	i = next_space_index ( subject , i )
3710	substitute self.file for thefile .	thefile = self . file
14521	return a string STR0 formated with self.data.day .	return STR0 % self . data . day
2701	dest set to string STR1 , default set to string STR2 , type set to int , choices is a list , containing integers : 0 , 1 , 2 and 3 , call the method parser.add_option with 2 arguments : string STR3 and help as a string STR4	parser . add_argument ( STR1 , help = STR2 )
3600	for every fixture_dir in fixture_dirs ,	for fixture_dir in fixture_dirs :
7751	label is an empty string .	help_text = STR
6939	define the method id_for_label with arguments self , name , field , value , val , choices and none_value .	def create_select ( self , name , field , value , val , choices , none_value ) :
7061	define the method to_python with arguments self and value .	def to_python ( self , value ) :
10048	return string STR1 if value under the STR0 key of the os.environ dictionary equals string STR2 , if not return STR3 .	return STR2 if os . environ . get ( STR0 ) == STR1 else STR3
9770	create list of first remaining elements of chunk , substitute it for emitting .	emitting = chunk [ : remaining ]
13630	derive the EventHandler class from the base class pyinotify.ProcessEvent .	class EventHandler ( pyinotify . ProcessEvent ) :
6718	call the re.compile function with 2 arguments : raw string STR0 and re.IGNORECASE , substitute the result for literal_regex .	literal_regex = re . compile ( STR0 , re . IGNORECASE )
13665	remove the first occurrence of the filename value in the _error_files list .	del _error_files [ _error_files . index ( filename ) ]
3078	for every key in sorted list of user_settings ,	for key in sorted ( user_settings ) :
12110	define the method render with 2 arguments : self and context .	def render ( self , context ) :
11823	define the function dictsortreversed with 2 arguments value and arg .	def dictsortreversed ( value , arg ) :
15666	if decimal_separator is contained in value ,	if decimal_separator in value :
17585	get the value under the part key of the PALETTES dictionary , update with it palette dictionary .	palette . update ( PALETTES [ part ] )
13003	from django.apps import apps into default name space .	from django . apps import apps
14785	if response has an attribute STR0 and response.render is a callable object ,	if hasattr ( response , STR0 ) and callable ( response . render ) :
9249	if self.is_required is boolean false and call to the method value_from_datadict from the instance of CheckboxInput class , with 3 arguments : data , files and return value of the function self.clear_checkbox_name called with an argument name , evaluates to true ,	if not self . is_required and CheckboxInput ( ) . value_from_datadict ( data , files , self . clear_checkbox_name ( name ) ) :
9474	define the method __init__ with 3 arguments : self , widgets and attrs set to None .	def __init__ ( self , widgets , attrs = None ) :
14880	substitute key for result.key .	result . key = key
8253	from django.db import models into default namespace .	from django . db import models
1619	define the function load_handler with arguments : path , unpacked list args and unpacked dictionary kwargs .	def load_handler ( path , * args , ** kwargs ) :
2209	call the function time.gmtime with argument timeval , use string STR0 and the previous result as an argument for the call to the time.strftime function , substitute the result for utcdate .	utcdate = time . strftime ( STR0 , time . gmtime ( timeval ) )
8143	for i in self._ordering append to a list value under the first element of i key of the self.forms dictionary , return resulting list .	return [ self . forms [ i [ 0 ] ] for i in self . _ordering ]
12129	get the value under the self key of the context.render_context dictionary , substitute it for cycle_iter .	cycle_iter = context . render_context [ self ]
7166	if STR0 key of the attrs dictionary doesnt exists assign it step as an value .	attrs . setdefault ( STR0 , step )
7526	if self.required is boolean true ,	if self . required :
6062	call the method httpd.serve_forever .	httpd . serve_forever ( )
15335	call the method date.tzinfo.utcoffset with an argument date , substitute the result for offset .	offset = date . tzinfo . utcoffset ( date )
781	if self.obj is None ,	if self . obj is None :
7227	call the function from_current_timezone with an argument result , return the result .	return from_current_timezone ( result )
1423	define the method size with arguments self and name .	def size ( self , name ) :
6410	substitute callback.func for callback .	callback = callback . func
12624	register.tag decorator ,	@ register . tag
7372	if not ,	else :
14325	define the method setlistdefault with 3 arguments : self , key and default_list set to None .	def setlistdefault ( self , key , default_list = None ) :
14804	substitute RemovedInDjango19Warning for RemovedInNextVersionWarning .	RemovedInNextVersionWarning = RemovedInDjango19Warning
9495	call the dict function with 2 arguments : final_attrs and id set to string STR0 , where STR1 is replaced with id_ and i , substitute the result for final_attrs .	final_attrs = dict ( final_attrs , id = STR0 % ( id_ , i ) )
15697	return result .	return result
4568	define the method handle_app_config with 3 arguments : self , app_config and unpacked dictionary options .	def handle_app_config ( self , app_config , ** options ) :
2599	call the method self.main_help_text append new line to it , write it to sys.stdout .	sys . stdout . write ( self . main_help_text ( ) + STR0 )
17418	raise an TypeError exception with an argument string STR0 .	raise TypeError ( STR0 )
4173	call the method executor.loader.graph.leaf_nodes and substitute its result for targets .	targets = executor . loader . graph . leaf_nodes ( )
3961	replace STR1 in string STR0 with plural_form_line , write it to self.stdout .	self . stdout . write ( STR0 % plural_form_line )
18067	define the function npgettext with 4 arguments : context , singular , plural and number .	def npgettext ( context , singular , plural , number ) :
5068	from django.utils._os import rmtree_errorhandle into default name space .	from django . utils . _os import rmtree_errorhandler
12721	asvar is None .	asvar = None
7026	call the method self.validate with an argument value .	self . validate ( value )
923	derive the class MultipleObjectsReturned from the Exception base class .	class MultipleObjectsReturned ( Exception ) :
4328	substitute STR1 with title in the string STR0 , write it to the standard output .	self . stdout . write ( STR0 % title )
13097	if TemplateDoesNotExist exception is caught ,	except TemplateDoesNotExist :
5041	if verbosity is greater or equal to integer 2 ,	if verbosity >= 2 :
7196	return value .	return value
5513	raise a NotImplementedError with an argument string STR0 .	raise NotImplementedError ( STR0 )
11392	call the function copy with an argument base class of the class BaseContext , substitute the result for duplicate .	duplicate = copy ( super ( BaseContext , self ) )
14499	return a string STR0 formated with self.data.second .	return STR0 % self . data . second
11006	if not ,	else :
10297	from django.utils.six.moves import map into default name space .	from django . utils . six . moves import map
3952	domains is a tuple with element string STR0 .	domains = ( STR0 , )
8830	if not ,	else :
13496	call the method self.has_leading_dir with an argument list , with elements x.name for every x in members , substitute the result for leading .	leading = self . has_leading_dir ( x . name for x in members )
4488	call the method bpython.embed .	bpython . embed ( )
13406	call the function func with an argument path .	func ( path )
1134	call the method self.open ( )	self . open ( )
5686	data is an empty dictionary ,	data = { }
5708	if field_value is not None ,	if field_value is not None :
17026	elt is an list with an element elt .	elt = [ elt ]
18731	call the function timedelta with an argument seconds as negative time.timezone , subtract the result from the result of the call , to the function timedelta called with an argument seconds as negative time.altzone , return the result .	return timedelta ( seconds = - time . altzone ) - timedelta ( seconds = - time . timezone )
5086	self.paths_to_remove is an empty list .	self . paths_to_remove = [ ]
2459	define the function find_commands with an argument management_dir .	def find_commands ( management_dir ) :
1275	if attribute STR0 of object e is not equal to integer 32 and if STR1 attribute is not equal to integer 13 ,	if getattr ( e , STR0 , 0 ) != 32 and getattr ( e , STR1 , 0 ) != 13 :
2157	if email_messages is false ,	if not email_messages :
18397	if lang_code is not contained in _supported and replacement is contained in _supported ,	if lang_code not in _supported and replacement in _supported :
439	call os.makedirs function with self._dir and hexadecimal 700 as arguments .	os . makedirs ( self . _dir , 700 )
5394	from django.core.serializers.base import SerializerDoesNotExist into default name space .	from django . core . serializers . base import SerializerDoesNotExist
2614	import module warnings .	import warnings
10366	return state .	return state
5425	raise a SerializerDoesNotExist exception with an argument format .	raise SerializerDoesNotExist ( format )
13939	call the function _generate_cache_key with request , request.method , an empty list and key_prefix as arguments , return the result .	return _generate_cache_key ( request , request . method , [ ] , key_prefix )
6511	raise an ValueError exception with an argument string STR0 .	raise ValueError ( STR0 )
14905	substitute self for result.parent .	result . parent = self
5759	call the getvalue method of the base class of the PythonSerializer class , return the result .	return super ( PythonSerializer , self ) . getvalue ( )
11417	if key is contained in d ,	if key in d :
1143	set the file position pointer at the beginning .	file . seek ( 0 )
3946	write errors to self.stdout .	self . stdout . write ( errors )
9244	call the method render from the instance of CheckboxInput class , with 3 arguments : checkbox_name , boolean False , attrs as a dictionary with an entry : checkbox_id for STR0 , substitute the result for value under the STR1 key of the substitutions dictionary .	substitutions [ STR0 ] = CheckboxInput ( ) . render ( checkbox_name , False , attrs = { STR1 : checkbox_id } )
9653	return first and second element of result .	return result [ 0 ] , result [ 1 ]
7695	substitute auto_id for self.auto_id .	self . auto_id = auto_id
3477	import module gzip .	import gzip
3644	return name , ser_fmt and cmp_fmt .	return name , ser_fmt , cmp_fmt
2026	for every message in email_messages ,	for message in email_messages :
6759	call the re.compile function with an argument raw string STR0 , substitute the result for ipv4_re .	ipv4_re = re . compile ( STR0 )
9746	define the method _close_files with an argument self .	def _close_files ( self ) :
8622	if self.initial_forms is false ,	if not self . initial_forms :
9363	define the method value_from_datadict with 4 arguments : self , data , files and name .	def value_from_datadict ( self , data , files , name ) :
17148	call the function __import__ with an argument name .	__import__ ( name )
4239	unpack the manifest.values function return value and feed it to the itertools.chain function , create_models is a set containing chanied list .	create_models = set ( itertools . chain ( * manifest . values ( ) ) )
2744	if self.can_import_settings is true ,	if self . can_import_settings :
5621	otherwise if o is an instance of decimal.Decimal object ,	elif isinstance ( o , decimal . Decimal ) :
3567	call the method obj.save with an argument using set to self.using .	obj . save ( using = self . using )
12250	compare_to is an list with elements generated by calling the var.resolve method with 2 arguments : context and boolean True , for every var in self._varlist .	compare_to = [ var . resolve ( context , True ) for var in self . _varlist ]
407	finally perform ,	finally :
4296	for every sql in index_sql ,	for sql in index_sql :
2894	derive the class Command from the BaseCommand base class .	class Command ( BaseCommand ) :
7765	join elements of output into a string with newline as separator , use it as an argument for the call to the function mark_safe , return it .	return mark_safe ( STR0 . join ( output ) )
11522	append tuple with 2 elements : command and token.source , append the result to self.command_stack .	self . command_stack . append ( ( command , token . source ) )
12516	register.tag decorator ,	@ register . tag
9797	append current_number to a list for current_number in self._unget_history , if current_number is equal to num_bytes , substitute the length of the resulting list for number_equal .	number_equal = len ( [ current_number for current_number in self . _unget_history if current_number == num_bytes ] )
16355	best_doublecolon_start is an integer -1 .	best_doublecolon_start = - 1
10343	if UnicodeError , renamed to e , exception is caught ,	except UnicodeError as e :
4364	from django.db import connections and DEFAULT_DB_ALIAS into default name space .	from django . db import connections , DEFAULT_DB_ALIAS
17825	if ValueError exception is caught ,	except ValueError :
13735	if KeyboardInterrupt exception is caught ,	except KeyboardInterrupt :
4201	call the method autodetector.changes with the graph set to executor.loader.graph as an argument , substitute it for the changes .	changes = autodetector . changes ( graph = executor . loader . graph )
17298	substitute next for advance_iterator .	advance_iterator = next
9140	return obj .	return obj
15706	call the function self.func with an argument instance , substitute the result for res and value under the self.name key of the instance.__dict__ dictionary .	res = instance . __dict__ [ self . name ] = self . func ( instance )
8392	substitute fields for new_class.base_fields .	new_class . base_fields = fields
16492	substitute first for self.state .	self . state = first
17852	from django.utils.timezone import is_aware and utc into default name space .	from django . utils . timezone import is_aware , utc
14815	return wrapped .	return wrapped
3170	call the method apps.get_app_config with an argument app_label , substitute the result for app_config .	app_config = apps . get_app_config ( app_label )
3443	num is an integer 0 .	num = 0
18311	define the function get_language .	def get_language ( ) :
12308	define the method resolve_expression with 3 arguments : self , obj and context .	def resolve_expression ( self , obj , context ) :
1314	raise an NotImplementedError exception with argument string STR0 .	raise NotImplementedError ( STR0 )
6593	otherwise if ns is not contained in app_list ,	elif ns not in app_list :
16155	increment the offset by the length of self.__starttag_text .	offset = offset + len ( self . __starttag_text )
478	call the __init__ method with self and params arguments from the base class BaseCache .	BaseCache . __init__ ( self , params )
2177	try ,	try :
18458	define the function templatize with 2 arguments : src and origin set to None .	def templatize ( src , origin = None ) :
2690	call the method parser.add_option with 8 arguments : string STR0 , string STR1 , action set to string STR2 , dest set to string STR3 , default set to string STR4 , type set to string STR5 , choices is a list containing elements : STR6 , STR7 , STR8 , STR9 , and help as a string STR10 .	parser . add_option ( STR0 , STR1 , action = STR2 , dest = STR3 , default = STR4 , type = STR5 , choices = [ STR6 , STR7 , STR8 , STR9 ] , help = STR10 )
10354	call the method self._convert_to_charset with arguments : header , string STR0 and mime_encode set to boolean True , substitute the result for value .	value = self . _convert_to_charset ( value , STR0 , mime_encode = True )
11085	define the method __init__ with 2 arguments : self and s .	def __init__ ( self , s ) :
15033	get handler_config dictionary element under STR0 key , if it exists substitute it for level , if not , level is None .	level = handler_config . get ( STR0 , None )
5638	define the method end_serialization with an argument self .	def end_serialization ( self ) :
12902	substitute parent_name for self.parent_name .	self . parent_name = parent_name
12031	move integer 1 left for 30 bits , substitute the result for GB .	GB = 1 << 30
10840	while i is lesser than length of subject and i-th element of subject is not an empty space or tab character ,	while i < len ( subject ) and subject [ i ] not in ( STR , STR0 ) :
18640	decorator classmethod ,	@ classmethod
3688	property decorator .	@ property
14958	call the method m.groups , use the first element of the result as key for obtaining value from d dictionary ,	d = d [ m . groups ( ) [ 0 ] ]
11523	define the method exit_command with an argument self .	def exit_command ( self ) :
6598	substitute the value under the ns key of the resolver.namespace_dict dictionary for extra and resolver , respectively .	extra , resolver = resolver . namespace_dict [ ns ]
4051	if migrations_directory is not a directory ,	if not os . path . isdir ( migrations_directory ) :
9948	while first element of s is equal to bytes string STR0 ,	while s [ : 1 ] == STR0 :
4259	call the cursor.execute method with statement as argument .	cursor . execute ( statement )
10778	define the method empty_variable with 2 arguments : self and token .	def empty_variable ( self , token ) :
1084	yield one element of line iterable .	yield line
3201	finally perform ,	finally :
18008	call the function get_current_timezone , substitute the result for timezone .	timezone = get_current_timezone ( )
14196	remove key element from self.keyOrder dictionary .	self . keyOrder . remove ( key )
14813	call the function warnings.warn with 3 arguments : string STR0 , formated with 3 elements : self.class_name , self.old_method_name and self.new_method_name , self.deprecation_warning and integer 2 .	warnings . warn ( STR0 % ( self . class_name , self . old_method_name , self . new_method_name ) , self . deprecation_warning , 2 )
4594	derive the class Command from the AppCommand base class .	class Command ( AppCommand ) :
3963	found is boolean False .	found = False
9705	calculate length of chunk modulo integer 4 , substitute the result for over_bytes .	over_bytes = len ( chunk ) % 4
6027	call the server_bind method from the base class of the WSGIServer class .	super ( WSGIServer , self ) . server_bind ( )
2006	define the __init__ method with arguments : self , unpacked list args and unpacked dictionary kwargs .	def __init__ ( self , * args , ** kwargs ) :
314	divide num by self._cull_frequency , floor the result and substitute it for cull_num .	cull_num = num // self . _cull_frequency
9104	sum m and class Media created with definition , return the result .	return m + Media ( definition )
15145	raise an ValueError exception with an argument string STR0 formated with formatter and e .	raise ValueError ( STR0 % ( formatter , e ) )
1671	if mw_instance has an attribute named STR0 .	if hasattr ( mw_instance , STR0 ) :
5832	call the method self.xml.endElement with an argument string STR0 .	self . xml . endElement ( STR0 )
3509	get the value under the STR0 key of the options dictionary , if the key exists substitute it for self.hide_empty , if not , self.hide_empty is boolean False .	self . hide_empty = options . get ( STR0 , False )
18650	return string STR0 , formated with self.__class__.__name__ and self .	return STR0 % ( self . __class__ . __name__ , self )
15319	from django.utils.encoding import force_text and iri_to_uri into default name space .	from django . utils . encoding import force_text , iri_to_uri
13323	return EndToken .	return EndToken
5657	if self.use_natural_foreign_keys is true and field.rel.to has an STR0 attribute .	if self . use_natural_foreign_keys and hasattr ( field . rel . to , STR0 ) :
1467	define __del__ method with self as the argument .	def __del__ ( self ) :
1405	raise an exception .	raise
10374	call the method self._headers.values , return the result ,	return self . _headers . values ( )
5254	call the method stat.S_IMODE with an argument st.st_mode , calculate binary OR with the result and stat.S_IWUSR , as operands , substitute the result for new_permission .	new_permissions = stat . S_IMODE ( st . st_mode ) | stat . S_IWUSR
13408	call the function tempfile.mkdtemp , substitute the result for tmpdir .	tmpdir = tempfile . mkdtemp ( )
4760	remove values under the keys STR0 and STR1 of the options dictionary and substitute it for app_name and target , respectively .	app_name , target = options . pop ( STR0 ) , options . pop ( STR1 )
7034	if self.limit_choices_to object is callable ,	if callable ( self . limit_choices_to ) :
4086	call the method loader.get_migration with arguments node_app and node_name , extend the migration.merged_operations with the operations field of the result .	migration . merged_operations . extend ( loader . get_migration ( node_app , node_name ) . operations )
14132	add k to seen .	seen . add ( k )
13602	for every filenam in locale_filenames ,	for filename in locale_filenames :
6086	import flup	import flup
17338	define the function b with an argument s .	def b ( s ) :
12723	assign the bits elements to tag , this_value_expr , max_value_expr , max_width , as_ and asvar .	tag , this_value_expr , max_value_expr , max_width , as_ , asvar = bits
2563	split x by character STR0 and append first element of the result to the prev_opts list . for every opt in options , if first element of opt is not contained in prev_opts , append opt to the list , substitute it for options .	options = [ opt for opt in options if opt [ 0 ] not in prev_opts ]
8512	defaults is a dictionary with 4 entries : data for STR0 , files for STR1 , auto_id for STR2 and prefix for STR3 .	defaults = { STR0 : data , STR1 : files , STR2 : auto_id , STR3 : prefix }
11250	call the method self.tag with 2 arguments : function_name and compile_func .	self . tag ( function_name , compile_func )
1527	set the file pointer at the beginning of the self.file file .	self . file . seek ( 0 )
18276	raise an AppRegistryNotReady exception with an argument string STR0 .	raise AppRegistryNotReady ( STR0 )
1616	return nothing .	return
15864	call the function new_method_proxy with an argument hash , substitute the result for __hash__ .	__hash__ = new_method_proxy ( hash )
3916	define the method write_po_file with arguments self , potfile and locale .	def write_po_file ( self , potfile , locale ) :
17282	_iterkeys is a string STR0 .	_iterkeys = STR0
12542	nodelist_empty is None .	nodelist_empty = None
10708	self.filters is an empty dictionary .	self . filters = { }
8354	return field_dict .	return field_dict
8013	MIN_NUM_FORM_COUNT is a string STR0 .	MIN_NUM_FORM_COUNT = STR0
16874	otherwise if ch equals a string STR0 ,	elif ch == STR0 :
8487	substitute exclude for value under the STR0 key of attrs dictionary .	attrs [ STR0 ] = exclude
393	return default .	return default
17603	substitute definition for value under the role key of palette dictionary .	palette [ role ] = definition
12697	if length of bits is greater or equal to intger 2 and second last element of bits is equal to string STR0 ,	if len ( bits ) >= 2 and bits [ - 2 ] == STR0 :
791	replace all STR1 from string STR0 with values of obj , id , self.msg and hint , respectively , return the result .	return STR0 % ( obj , id , self . msg , hint )
15114	call the method self.configure_custom with an argument config , substitute the result for result .	result = self . configure_custom ( config )
14914	substitute key for result.key .	result . key = key
17685	return text .	return text
299	call the function datetime.now , substitute the result to now .	now = datetime . now ( )
5223	join tempdir and guessed_filename into a file path , substitute it for guessed_path .	guessed_path = path . join ( tempdir , guessed_filename )
5697	if field.rel is true , and field.rel is an instance of models.ManyToManyRel ,	if field . rel and isinstance ( field . rel , models . ManyToManyRel ) :
17991	substitute timezone for self.timezone .	self . timezone = timezone
17758	char2number is an dictionary , with 26 elements : 2 for STR0 , 2 for STR , 2 for STR1 , 3 for STR2 , 3 for STR3 , 3 for STR4 , 4 for STR5 , 4 for STR6 , 4 for STR7 , 4 for STR8 , 5 for STR9 , 5 for STR10 , 5 for STR11 , 6 for STR12 , 6 for STR13 , 6 for STR14 , 7 for STR15 , 7 for STR , 7 for STR , 7 for STR16 , 7 for STR17 , 8 for STR18 , 8 for STR19 , 8 for STR20 , 9 for STR21 , 9 for STR22 , 9 for STR23 and 9 for STR24 .	char2number = { STR0 : STR1 , STR : STR2 , STR3 : STR4 , STR5 : STR6 , STR7 : STR8 , STR9 : STR10 , STR11 : STR12 , STR13 : STR14 , STR15 : STR16 , STR17 : STR18 , STR19 : STR20 , STR21 : STR22 , STR23 : STR24 , STR25 : STR26 , STR27 : STR28 , STR29 : STR30 , STR31 : STR32 , STR : STR33 , STR34 : STR35 , STR36 : STR37 , STR38 : STR39 , STR40 : STR41 , STR42 : STR43 , STR44 : STR45 , STR46 : STR47 , STR48 : STR49 }
17335	define the function iterlists with 2 arguments : d and unpacked dictionary kw .	def iterlists ( d , ** kw ) :
5286	for ext in pathext ,	for ext in pathext :
17330	get _iterkeys attribute of the class d , call the result with an argument unpacked dictionary kw , convert the result to a iterable , return it .	return iter ( getattr ( d , _iterkeys ) ( ** kw ) )
6413	if not ,	else :
16133	find the ending position of the regular expression match of the object match , substitute the result for k .	k = match . end ( )
320	call the cursor method on the value under the db key of connections dictionary , preform following with return value named cursor ,	with connections [ db ] . cursor ( ) as cursor :
10371	convert deader to lowercase , if it is contained in self._headers return boolean True , if not , return boolean False .	return header . lower ( ) in self . _headers
3295	Possible reasons : \n ''	new_msg = ( STR0 ) % ( connection . settings_dict [ STR1 ] , e )
11501	result is an empty list , upto is integer 0 .	result , upto = [ ] , 0
8908	define the method prepare_value with 2 arguments : self and value .	def prepare_value ( self , value ) :
15074	substitute logging.root for root .	root = logging . root
17002	if second element of source is None ,	if source [ 1 ] is None :
15509	call the method handler.addQuickElement with 2 arguments : string STR0 and value under the STR1 key of the self.feed dictionary .	handler . addQuickElement ( STR0 , self . feed [ STR1 ] )
371	import pickle .	import pickle
18587	if string STR0 is contained in result of the method t.split_contents , trimmed is boolean True , otherwise is boolean False .	trimmed = STR0 in t . split_contents ( )
7135	try ,	try :
9839	if self._done is true ,	if self . _done :
8335	if labels is true and f.name is contained in labels ,	if labels and f . name in labels :
15542	call the method handler.addQuickElement with 3 arguments : string STR4 , an empty string and a dictionary with 4 entries : STR0 for STR5 , field url of value under the STR1 key of item dictionary for STR6 , field length of value under the STR2 key of item dictionary for STR7 , and field mime_type of value under the STR3 key of item dictionary for STR8 .	handler . addQuickElement ( STR0 , STR , { STR1 : STR2 , STR3 : item [ STR6 ] . url , STR4 : item [ STR7 ] . length , STR5 : item [ STR8 ] . mime_type } )
10966	return boolean True .	return True
5292	if f is a file ,	if os . path . isfile ( f ) :
1176	from ctypes.wintypes import BOOL , DWORD and HANDLE into default name space .	from ctypes . wintypes import BOOL , DWORD , HANDLE
14853	define the function _checkLevel with an argument level .	def _checkLevel ( level ) :
11191	derive the class Library form the base class object .	class Library ( object ) :
3145	if length of app_labels is greater than integer 1 and primary_keys is true ,	if len ( app_labels ) > 1 and primary_keys :
56	derive the class DefaultCacheProxy from the base class object .	class DefaultCacheProxy ( object ) :
16349	call the function __import__ with an argument name .	__import__ ( name )
13671	define the function wrapper with list args , and dictionary pair of values kwargs as arguments .	def wrapper ( * args , ** kwargs ) :
17000	return a list containing an empty string and a list containing an empty list .	return [ STR ] , [ [ ] ]
14532	return string STR0 .	return STR0
4593	from django.db import connections and DEFAULT_DB_ALIAS into default name space .	from django . db import connections , DEFAULT_DB_ALIAS
6015	try ,	try :
550	if self._cull_frequency equals to integer 0 .	if self . _cull_frequency == 0 :
10614	define the method with reload with an argument self .	def reload ( self ) :
3673	for every program in programs ,	for program in programs :
627	define the method get_many with 3 arguments , self class instance , keys and version set to None .	new_keys = [ self . make_key ( x , version = version ) for x in keys ]
4200	call the MigrationAutodetector function with arguments , return value of the call to the method executor.loader.project_state , and return value of the call to the method ProjectState.from_apps with apps as an argument , assign it to the autodetector .	autodetector = MigrationAutodetector ( executor . loader . project_state ( ) , ProjectState . from_apps ( apps ) , )
16993	if source is an instance of NonCapture class ,	if isinstance ( source , NonCapture ) :
10554	from django.utils.itercompat import is_iterable into default name space .	from django . utils . itercompat import is_iterable
17449	define the function add_metaclass with an argument metaclass .	def add_metaclass ( metaclass ) :
12577	call the method __init__ from the base class of the class TemplateIfParser , with 2 arguments : unpacked list args and unpacked dictionary .	super ( TemplateIfParser , self ) . __init__ ( * args , ** kwargs )
15955	define the function conditional_escape with an argument text .	def conditional_escape ( text ) :
14344	substitute _itervalues for values .	values = _itervalues
15985	define the method handle_entityref with 2 arguments self and name .	def handle_entityref ( self , name ) :
9925	define the method __init__ with arguments self , stream and boundary .	def __init__ ( self , stream , boundary ) :
7914	define the method as_widget with 4 arguments : self , widget set to None , attrs set to None , only_initial set to boolean False .	def as_widget ( self , widget = None , attrs = None , only_initial = False ) :
98	try ,	try :
2946	raise CommandError exception , with sring STR0 as argument , substitute STR1 with self.program .	raise CommandError ( STR0 % self . program )
13906	call the function _i18n_cache_key_suffix with request and cache_key as arguments , return the result .	return _i18n_cache_key_suffix ( request , cache_key )
8085	if self.initial is true and STR0 key is not contained in kwargs ,	if self . initial and STR0 not in kwargs :
18375	call the function ungettext with unpacked dictionary msgs_with_ctxt , substitute the result for result .	result = ungettext ( * msgs_with_ctxt )
5143	call the method content.decode with an argument string STR0 , substitute it for content .	content = content . decode ( STR0 )
10715	while self.tokens is true ,	while self . tokens :
3711	join self.dirpath and self.file into a file path , substitute it for orig_file .	orig_file = os . path . join ( self . dirpath , self . file )
6987	substitute localize for self.localize .	self . localize = localize
4529	from django.db import connections and DEFAULT_DB_ALIAS into default name space .	from django . db import connections , DEFAULT_DB_ALIAS
9863	if not ,	else :
17765	call the method zfile.close .	zfile . close ( )
17145	define the function _add_doc with 2 arguments : func and doc .	def _add_doc ( func , doc ) :
15038	get config dictionary element under STR0 key , if it exists substitute it for loggers , if not , loggers is EMPTY_DICT .	loggers = config . get ( STR0 , EMPTY_DICT )
6449	return the value under the language_code key of the self._reverse_dict dictionary .	return self . _reverse_dict [ language_code ]
18109	call the function get_language , substitute the result for self.old_language .	self . old_language = get_language ( )
960	substitute messages.error_list for the value under the field key of the self.error_dict dictionary .	self . error_dict [ field ] = messages . error_list
8921	if data_set is not equal to initial_set return boolean True , otherwise return boolean False .	return data_set != initial_set
570	define the method clear with argument self .	def clear ( self ) :
8584	if row_data is true and None is not contained in row_data ,	if row_data and None not in row_data :
17569	if text is true format with it and RESET a string STR0 , if not format it with an empty string and RESET , substitute the result for text .	text = STR0 % ( text or STR , RESET )
9130	is_required is boolean False .	is_required = False
9115	return new_class .	return new_class
3383	if not ,	else :
10902	if not ,	else :
16912	append ch to result .	name . append ( ch )
9926	substitute stream for self._stream .	self . _stream = stream
5213	get the value under the STR0 key of the params dictionary , if the key exists substitute it for guessed_filename , if not , substitute used_name for guessed_filename .	guessed_filename = params . get ( STR0 ) or used_name
8524	while field.rel is not None ,	while field . rel is not None :
10195	call the method result.setlist with 2 arguments : return value of the function copy.deepcopy called with 2 arguments : key and memo , and return value of the function copy.deepcopy called with 2 arguments : value and memo .	result . setlist ( copy . deepcopy ( key , memo ) , copy . deepcopy ( value , memo ) )
10010	return host .	return host
17760	call the function allow_lazy with an argument phone2numeric , substitute the result for phone2numeric .	phone2numeric = allow_lazy ( phone2numeric )
2017	write 79 STR0 characters into self.stream file stream .	self . stream . write ( STR0 * 79 )
16786	close file_ file descriptor .	file_ . close ( )
18739	return None .	return None
18485	for every lineno and line is enumerated result of the method content.splitlines , called with an argument boolean True ,	for lineno , line in enumerate ( content . splitlines ( True ) ) :
11418	return boolean True .	return True
5281	call the function os.environ.get with 2 arguments : string STR0 and an empty string , split the result at the os.pathsep , substitute the result for path .	path = os . environ . get ( STR0 , STR ) . split ( os . pathsep )
15647	define the function localize_input with 2 arguments value and default set to None .	def localize_input ( value , default = None ) :
656	val is None .	val = None
4198	if self.verbosity is greater or equal to integer 1 ,	if self . verbosity >= 1 :
4525	call the method code.interact with an argument local set to imported_objects .	code . interact ( local = imported_objects )
16340	if name starts with an string STR0 ,	if name . startswith ( STR0 ) :
4772	from django.utils.crypto import get_random_string into default name space .	from django . utils . crypto import get_random_string
4487	import bpython .	import bpython
5933	raise an base.DeserializationError exception with an argument string STR0 , where STR1 is replaced with node.nodeName and attr .	raise base . DeserializationError ( STR0 % ( node . nodeName , model_identifier ) )
2838	output is an empty list .	output = [ ]
1993	do nothing	pass
13066	return template_name .	return template_name
4440	if KeyError exception is caught .	except KeyError :
18221	define the function reset_cache with an argument unpacked dictionary kwargs .	def reset_cache ( ** kwargs ) :
8961	define the method as_text with an argument self .	def as_text ( self ) :
5136	join root and filename into a file path , substitute it for old_path .	old_path = path . join ( root , filename )
2510	append name to the value of under the app key of the commands_dict .	commands_dict [ app ] . append ( name )
10652	define the method __str__ with an argument self .	def __str__ ( self ) :
14265	define the method __nonzero__ with an argument self .	def __nonzero__ ( self ) :
17613	from django.utils.deprecation import RemovedInDjango19Warning into default name space .	from django . utils . deprecation import RemovedInDjango19Warning
652	evaluate the method self._cache.incr with key and negative delta as arguments , return the result .	return self . _cache . incr ( key , - delta )
12951	define the function do_block with 2 arguments parser and token .	def do_block ( parser , token ) :
16348	call the function _resolve_name with 3 arguments : name list elements from the level index to the end , package and level , substitute the result for name .	name = _resolve_name ( name [ level : ] , package , level )
17262	define the method __dir__ with an argument self .	def __dir__ ( self ) :
9695	content_length is None .	content_length = None
3571	increment self.loaded_object_count by loaded_objects_in_fixture .	self . loaded_object_count += loaded_objects_in_fixture
7321	if Exception exception is caught ,	except Exception :
12327	substitute parsed for self.parsed .	self . parsed = parsed
7569	if self.match is None or call to the method self.match_re.search with an argument f , evaluated to true ,	if self . match is None or self . match_re . search ( f ) :
5993	substitute sysid for self.sysid .	self . sysid = sysid
16282	base36 is an empty list .	base36 = [ ]
8248	from django.utils.text import get_text_list and capfirst into default name space .	from django . utils . text import get_text_list , capfirst
16006	if new_value equals value ,	if new_value == value :
15146	remove config dictionary element under STR0 key , if it exists substitute it for level , if not , level is None .	level = config . pop ( STR0 , None )
16788	if ImportError exception is caught ,	except ImportError :
16621	if typed is true ,	if typed :
13595	return the directory name two directories up from the __file__ path , join it with STR0 and STR1 into valid path , separated by STR2 , basedirs is a list containing 2 elements : previous result and string STR3 .	basedirs = [ os . path . join ( os . path . dirname ( os . path . dirname ( __file__ ) ) , STR0 , STR1 ) , STR2 ]
603	return integer 0 .	return 0
4576	from django.core.management.sql import sql_custom into default name space .	from django . core . management . sql import sql_custom
13098	substitute a tuple with 2 elements : template and origin , for self.find_template_cache dictionary value under the key key .	self . template_cache [ key ] = ( template , origin )
13001	import module os .	import os
10625	substitute name for self.name .	self . name = name
821	call the model.check method with unpacked dictionary kwargs for every model in return value of function apps.get_models , only if app_configs is None ot model._meta.app_config is contained in app_configs , error is a list containing all the previous elements .	errors = [ model . check ( ** kwargs ) for model in apps . get_models ( ) if app_configs is None or model . _meta . app_config in app_configs ]
11045	get the STR0 attribute of e object , if it exists and is true ,	if getattr ( e , STR0 , False ) :
14225	if not ,	else :
16389	join elements of hextets into a string , separated with STR0 , substitute it for result .	result = STR0 . join ( hextets )
12510	get STR0 attribute of the func object , if it exists , substitute it for filter_name , if not , filter_name is None .	filter_name = getattr ( func , STR0 , None )
905	from django.utils import timezone into default name space .	from django . utils import timezone
10043	do not perform the following only if bits.scheme and bits.netloc are both true ,	if not ( bits . scheme and bits . netloc ) :
1413	append entry to the directories list .	directories . append ( entry )
3234	model_list is an empty list .	model_list = [ ]
8859	if not ,	else :
12156	if value is true ,	if value :
16660	with lock ,	with lock :
5445	define the function deserialize with 3 arguments : format , stream_or_string and unpacked dictionary options .	def deserialize ( format , stream_or_string , ** options ) :
16240	call the method m.group with an argument string STR0 , convert the result into a string , substitute it for year .	year = int ( m . group ( STR0 ) )
8570	all_date_checks is an empty set .	all_date_checks = set ( )
4179	join the executor.loader.unmigrated_apps into a string separated by string STR1 append it to the end of a string STR0 , use it as an argument for the call to the self.style.MIGRATE_LABEL method , use the result of the previous method as an argument for the call to the self.stdout.write method .	self . stdout . write ( self . style . MIGRATE_LABEL ( STR0 ) + ( STR1 . join ( executor . loader . unmigrated_apps ) ) )
4725	for every smigration in migrations_to_squash ,	for smigration in migrations_to_squash :
17683	if s_len is greater than length ,	if s_len > length :
9163	define the method render with 4 arguments : self , name , value and attrs set to None .	def render ( self , name , value , attrs = None ) :
5814	if not ,	else :
9072	for every path in data ,	for path in data :
9220	FILE_INPUT_CONTRADICTION is an instance of object class .	FILE_INPUT_CONTRADICTION = object ( )
16567	call the function get_exception_reporter_filter with an argument request , substitute the result for filter .	filter = get_exception_reporter_filter ( request )
16209	define the function urlquote with 2 arguments : url and safe set to STR0 .	def urlquote ( url , safe = STR0 ) :
8499	if form has an attribute STR0 ,	if hasattr ( form , STR0 ) :
2929	if IOError or OSError exceptions occurred ,	except ( IOError , OSError ) :
17416	raise an TypeError exception with an argument string STR0 .	raise TypeError ( STR0 )
9886	try ,	try :
4483	if not ,	else :
18608	strip t.contents from the left side of whitespaces , if the result starts with TRANSLATOR_COMMENT_MARK ,	if t . contents . lstrip ( ) . startswith ( TRANSLATOR_COMMENT_MARK ) :
5236	append tempdir to self.self.paths_to_remove .	self . paths_to_remove . append ( tempdir )
1430	call the function self.path with argument name , use the result as an argument for the call to the function os.path.getatime , use the result as an argument for the call to the function datetime.fromtimestamp , return the result .	return datetime . fromtimestamp ( os . path . getatime ( self . path ( name ) ) )
15873	substitute func for value under the STR0 key of the self.__dict__ dictionary .	self . __dict__ [ STR0 ] = func
11012	return self.var .	return self . var
8205	if not ,	else :
15971	if not ,	else :
16556	if logging_settings is true ,	if logging_settings :
7768	define the method as_ul with an argument self .	def as_ul ( self ) :
1861	get the value under the STR0 key of environ dictionary , if the key doesnt exist get the empty string , use it to call the cgi.parse_header method , assign the result to the _ and content_params respectively .	_ , content_params = cgi . parse_header ( environ . get ( STR0 , STR ) )
12171	return an string STR0 , substitute STR1 with elements of self.loopvars joined into a string , separated with string STR2 , substitute STR3 with self.sequence , substitute STR4 with length of self.nodelist_loop , substitute STR5 with reversed_text .	return STR0 % ( STR1 . join ( self . loopvars ) , self . sequence , len ( self . nodelist_loop ) , reversed_text )
15700	define the method __init__ with 3 arguments : self , func and name set to None .	def __init__ ( self , func , name = None ) :
17643	remove all the elements from space index of line .	line = line [ space : ]
5290	for every p in path ,	for p in path :
4207	call the method emit_post_migrate_signal with created_models , self.verbosity , self.interactive and connection.alias as arguments .	emit_post_migrate_signal ( created_models , self . verbosity , self . interactive , connection . alias )
6779	raise a ValueError exception with an argument STR0 , replace STR1 with protocol , and ip_address_validator_map converted to a list , respectively .	raise ValueError ( STR0 % ( protocol , list ( ip_address_validator_map ) ) )
4355	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
13619	add elements from new_modules set to _cached_modules set .	_cached_modules = _cached_modules . union ( new_modules )
8159	get the value under the DELETION_FIELD_NAME key of the form.cleaned_data dictionary , if it exists return it , if not , return boolean False .	return form . cleaned_data . get ( DELETION_FIELD_NAME , False )
390	if IOError , renamed to e , exception is caught ,	except IOError as e :
3017	return nothing .	return
14436	otherwise if piece is true ,	elif piece :
16674	with lock ,	with lock :
12595	append a tuple with 2 elements : None and nodelist to conditions_nodelists .	conditions_nodelists . append ( ( None , nodelist ) )
9125	append self.choices to args .	args . append ( self . choices )
15896	decorator function wraps with an argument fset .	@ wraps ( fset )
8804	substitute field for self.field .	self . field = field
13857	substitute settings.CACHE_MIDDLEWARE_SECONDS for cache_timeout .	cache_timeout = settings . CACHE_MIDDLEWARE_SECONDS
4825	from django.test.utils import get_runner into default name space .	from django . test . utils import get_runner
9252	return boolean False .	return False
16659	if kwds is true or typed is true , call the function make_key with 3 arguments : args , kwds and typed , substitute the result for key , otherwise substitute args for key .	key = make_key ( args , kwds , typed ) if kwds or typed else args
362	import module tempfile .	import tempfile
3293	call the method cursor.execute with an argument sql .	cursor . execute ( sql )
12477	as_form is boolean False .	as_form = False
275	on the object under the db key of connections dictionary call the method ops.value_to_db_datetime with argument exp , substitute the result for the exp .	exp = connections [ db ] . ops . value_to_db_datetime ( exp )
8111	for form in self.forms append form.cleaned_data to a list , return the resulting list .	return [ form . cleaned_data for form in self . forms ]
10852	if i-th element of subject is STR character or STR character ,	if subject [ i ] in ( STR , STR ) :
2553	call the method apps.get_app_configs , substitute the result for app_configs .	app_configs = apps . get_app_configs ( )
8425	otherwise if self._meta.exclude is true and field is not contained in self._meta.exclude ,	elif self . _meta . exclude and field in self . _meta . exclude :
12100	call the method self.nodelist.render with an argument context , substitute the result for output .	output = self . nodelist . render ( context )
18251	call the method self._init_translation_catalog .	self . _init_translation_catalog ( )
9731	if not ,	else :
14453	if self.data.hour is greater than integer 11 ,	if self . data . hour > 11 :
9494	if id_ is true ,	if id_ :
2989	raise CommandError exception with msg as argument .	raise CommandError ( msg )
13791	if not ,	else :
9522	supports_microseconds is boolean False .	supports_microseconds = False
14820	call the method inspect.getmro with an argument new_class , for every base in the result ,	for base in inspect . getmro ( new_class ) :
4176	if self.verbosity is greater or equal to integer 1 .	if self . verbosity >= 1 :
8718	call the method form.save , with an argument commit set to boolean False , substitute the result for obj .	obj = form . save ( commit = False )
14931	call the method self.importer with an argument used , substitute the result for found .	found = self . importer ( used )
12944	call the method context.push with unpacked dictionary values as an argument , with the result perform ,	with context . push ( ** values ) :
5498	call the method self.end_serialization .	self . end_serialization ( )
2739	if value under the STR0 key of the options dictionary .	if options . get ( STR0 ) :
1391	raise an exception .	raise
689	return client .	return client
542	do nothing .	pass
18038	from django.utils import six into default name space .	from django . utils import six
13572	USE_INOTIFY is boolean True .	USE_INOTIFY = True
4295	with call to the function transaction.atomic with using set to connection.alias and savepoint set to connection.features.can_rollback_ddl , as arguments .	with transaction . atomic ( using = connection . alias , savepoint = connection . features . can_rollback_ddl ) :
2262	call the method g.flatten with arguments self and unixfrom set to unixfrom .	g . flatten ( self , unixfrom = unixfrom )
2729	try ,	try :
6235	import module functools .	import functools
7193	if value is an instance of datetime.datetime class ,	if isinstance ( value , datetime . datetime ) :
16571	request is None .	request = None
8737	if form._meta.fields is true ,	if form . _meta . fields :
6434	call the method self._callback_strs.update with an argument pattern._callback_strs .	self . _callback_strs . update ( pattern . _callback_strs )
2090	derive the class EmailBackend from the BaseEmailBackend base class .	class EmailBackend ( BaseEmailBackend ) :
11156	raise an TemplateSyntaxError exception with an argument string STR0 , where STR1 are replaced with name and param .	raise TemplateSyntaxError ( STR0 % ( name , param ) )
940	derive the class ImproperlyConfigured from the Exception base class .	class ImproperlyConfigured ( Exception ) :
15064	if StandardError , renamed to e , exception is caught ,	except StandardError as e :
2952	if basedirs is empty ,	if not basedirs :
9938	if i is greater or equal to integer 0 ,	if i >= 0 :
1859	assign script_name to the value under the STR0 key of the self.META dictionary .	self . META [ STR0 ] = script_name
16796	try ,	try :
2087	self.stream is None .	self . stream = None
11150	call the function	kwarg = token_kwargs ( [ bit ] , parser )
15549	import module decimal .	import decimal
2126	substitute smtplib.SMTP_SSL for connection_class if self.use_ssl is true , if not substitute smtplib.SMTP for connection_class .	connection_class = smtplib . SMTP_SSL if self . use_ssl else smtplib . SMTP
8294	define the function model_to_dict with 3 arguments : instance , fields set to None and exclude set None .	def model_to_dict ( instance , fields = None , exclude = None ) :
5172	if expanded_template is a directory ,	if path . isdir ( expanded_template ) :
13896	for every header in headerlist ,	for header in headerlist :
848	self.registered_checks is an empty list .	self . registered_checks = [ ]
14906	return result .	return result
5891	substitute value for value under the field.name key of the data dictionary .	data [ field . name ] = value
8170	call the method form.is_valid , perform bitwise and with the result and forms_valid as operands , substitute the result for forms_valid .	forms_valid &= form . is_valid ( )
11405	call the method self.dicts.pop , return the result .	return self . dicts . pop ( )
18292	define the method language with an argument self .	def language ( self ) :
17707	while current_len is smaller than or equal to length ,	while current_len <= length :
10066	encoding.setter decorator ,	@ encoding . setter
4953	references_to_delete is an empty dictionary .	references_to_delete = { }
435	call self._delete method with argument fname .	self . _delete ( fname )
17111	return an instance of EscapeBytes , created with an argument , reuslt of the call to the function bytes with an argument s .	return EscapeBytes ( bytes ( s ) )
376	get absolute directory path of dir , substitute it for self._dir .	self . _dir = os . path . abspath ( dir )
15501	call the method handler.startElement with 2 arguments : string STR0 and an empty dictionary .	handler . startElement ( STR0 , { } )
14432	pieces is an empty list .	pieces = [ ]
15907	call the function predicate with an argument item , use it as a key to get results dictionary value , append item to it .	results [ predicate ( item ) ] . append ( item )
7964	if STR0 is contained in attrs ,	if STR0 in attrs :
207	self.proxy is boolean False .	self . proxy = False
9657	old_field_name is None .	old_field_name = None
15310	evaluate the function getdefaultlocale from the module locale , if second element of return value exists assign it to encoding , otherwise assign string STR0 to encoding .	encoding = locale . getdefaultlocale ( ) [ 1 ] or STR0
11127	call the method match.groups with 2 arguments : key and value .	key , value = match . groups ( )
1063	position the file pointer at the beginning of self file .	self . seek ( 0 )
11559	call the method self.filter_expression.resolve with an argument context , substitute the result for output .	output = self . filter_expression . resolve ( context )
4375	call the method parser.add_argument with 3 arguments : string STR0 , nargs= STR1 and help as a string STR2 .	parser . add_argument ( STR0 , nargs = STR1 , help = STR2 )
15677	import module opera .	import operator
7712	if KeyError exception is caught ,	except KeyError :
10678	if bit is true ,	if bit :
1043	position the file self.file pointer at the end .	self . file . seek ( 0 , os . SEEK_END )
1751	substitute STR0 in STR1 with the name of the type of the class object e , use it as the argument for the call to the , function logging.getLogger , assign the result to the security_logger .	security_logger = logging . getLogger ( STR0 % e . __class__ . __name__ )
3320	call the method parser.add_argument with 5 arguments : string STR1 , action set to string STR2 , dest as a string STR3 , default set to DEFAULT_DB_ALIAS and help as a string STR4 .	parser . add_argument ( STR1 , action = STR2 , dest = STR3 , default = DEFAULT_DB_ALIAS , help = STR4 )
16851	derive the class Choice from list base class .	class Choice ( list ) :
15231	define lambda function with self class instance as the argument , lambda function body encapsulates the call to the method , str.__unicode__ ( ) .encode ( STR0 ) , call the lambda function and put the result in the __str__ filed of klass .	klass . __str__ = lambda self : self . __unicode__ ( ) . encode ( STR0 )
17616	from django.utils import six into default name space .	from django . utils import six
5939	otherwise if child.nodeType equals to child.ELEMENT_NODE ,	elif child . nodeType == child . ELEMENT_NODE :
1883	return self._request .	return self . _request
9508	define the method _get_media with an argument self .	def _get_media ( self ) :
18160	return plural .	return plural
6481	return an instance of a class ResolverMatch created with 6 arguments : sub_match.func , sub_match.args , sub_match_dict , sub_match.url_name , self.app_name if it exists or if not sub_match.app_name and sub_match.namespaces list appended to self.name .	return ResolverMatch ( sub_match . func , sub_match . args , sub_match_dict , sub_match . url_name , self . app_name or sub_match . app_name , [ self . namespace ] + sub_match . namespaces )
2602	otherwise if subcommand equals a string STR0 or self.argv , without the first element equals a list containing a string STR1	elif subcommand == STR0 or self . argv [ 1 : ] == [ STR1 ] :
15345	call the method time_str.decode with an argument string STR0 , substitute the result for time_str .	time_str = time_str . decode ( STR0 )
11192	define the method with reload with an argument self .	def __init__ ( self ) :
18429	get the value under the settings.LANGUAGE_COOKIE_NAME key of the request.COOKIES dictionary , substitute it for lang_code .	lang_code = request . COOKIES . get ( settings . LANGUAGE_COOKIE_NAME )
1971	call the EmailMessage function wit subject , message , sender , recipient and connection set to connection , for every subject , message , sender and recipient in datatuple , store the results in the messages list .	messages = [ EmailMessage ( subject , message , sender , recipient , connection = connection ) for subject , message , sender , recipient in datatuple ]
6554	append pattern into a list patterns , for every possibility , pattern and defaults in possibilities .	patterns = [ pattern for ( possibility , pattern , defaults ) in possibilities ]
2816	output is an empty list .	output = [ ]
9322	call the method selected_choices.remove with an argument option_value .	selected_choices . remove ( option_value )
11506	substitute start for upto .	upto = start
14267	derive the class MultiValueDictKeyError from the KeyError base class .	class MultiValueDictKeyError ( KeyError ) :
3459	if field_type is a tuple ,	if type ( field_type ) is tuple :
6603	raise an NoReverseMatch exception with an argument string STR0 , respectively replace STR1 with key and elements of the resolved_path joined into a string , separated by STR2 .	raise NoReverseMatch ( STR0 % ( key , STR1 . join ( resolved_path ) ) )
14778	call the function view_func with 3 arguments : request , unpacked list args , unpacked dictionary kwargs , substitute the result for response .	response = view_func ( request , * args , ** kwargs )
9156	return id_ .	return id_
16352	from django.utils.translation import ugettext_lazy as _ into default name space .	from django . utils . translation import ugettext_lazy as _
6035	define the function server_bind with an argument self .	def log_message ( self , format , * args ) :
7780	error is an instance of ValidationError created with an argument error .	error = ValidationError ( error )
10896	if VariableDoesNotExist exception is not caught ,	except VariableDoesNotExist :
17671	call the function self._truncate_html with 5 arguments : length , truncate , text , truncate_len and boolean False , return the result .	return self . _truncate_html ( length , truncate , text , truncate_len , False )
4705	raise an CommandError with an argument string STR0 , where STR1 is replaced with migration_name and app_label .	raise CommandError ( STR0 % ( migration_name , app_label ) )
2922	open the file fn in read mode , with file descriptor as f ,	with open ( fn , STR0 ) as f :
4090	substitute STR1 in a string STR0 with migration.name , use it as an argument for the call to the method self.style.MIGRATE_HEADING , write the result to self.stdout .	self . stdout . write ( self . style . MIGRATE_LABEL ( STR0 % migration . name ) )
14297	value under STR0 key of obj_dict is a dictionary created with tuples containing 2 elements : k and result of the function , self.getlist with an argument k , for every k in self .	obj_dict [ STR0 ] = dict ( ( k , self . getlist ( k ) ) for k in self )
12320	for every root in settings.ALLOWED_INCLUDE_ROOTS ,	for root in settings . ALLOWED_INCLUDE_ROOTS :
4891	from django.core.management.commands.check import Command as CheckCommand into default name space .	from django . core . management . commands . check import Command as CheckCommand
7993	property decorator ,	@ property
13178	return obj_dict .	return obj_dict
436	define the method _createdir with argument self .	def _createdir ( self ) :
3848	finally perform ,	finally :
15562	ISO_INPUT_FORMATS is a dictionary with 3 entries : tuple with an element string STR0 for STR1 , tuple with 3 elements : strings STR2 , STR3 and STR4 for STR5 , tuple with 4 elements : strings STR6 , STR7 , STR8 and STR9 for STR10 .	ISO_INPUT_FORMATS = { STR0 : ( STR1 , ) , STR2 : ( STR3 , STR4 , STR5 ) , STR6 : ( STR7 , STR8 , STR9 , STR10 ) , }
1237	call the function stat.S_IMODE with argument st.st_mode , substitute the result for mode .	mode = stat . S_IMODE ( st . st_mode )
8684	call the function modelform_factory with 10 arguments : model , form as form , fields as fields , exclude as exclude , formfield_callback as formfield_callback , widgets as widgets , localized_fields as localized_fields , labels as labels , help_texts as help_texts and error_messages as error_messages , substitute the result for form .	form = modelform_factory ( model , form = form , fields = fields , exclude = exclude , formfield_callback = formfield_callback , widgets = widgets , localized_fields = localized_fields , labels = labels , help_texts = help_texts , error_messages = error_messages )
13248	for x in a list containing 3 elements : self.id , self.first and self.second , if x is not None , convert x into a string and append it to a list , substitute the resulting list for out .	out = [ str ( x ) for x in [ self . id , self . first , self . second ] if x is not None ]
9734	call the method handler.upload_complete , substitute the result for retval .	retval = handler . upload_complete ( )
8037	self._non_form_errors is None .	self . _non_form_errors = None
3911	substitute self.default_locale_path for locale_dir .	locale_dir = self . default_locale_path
10102	self._files is an instance of MultiValueDict class .	self . _files = MultiValueDict ( )
18327	if _default is None	if _default is None :
4627	call parse.add_argument method , with string STR1 , default set to DEFAULT_DB_ALIAS , and help as a string STR2 , as arguments .	parser . add_argument ( STR1 , default = DEFAULT_DB_ALIAS , help = STR2 )
1561	do nothing .	pass
12343	call the function t.render with an argument context , return the result .	return t . render ( context )
5255	call the function os.chmod wiht arguments filename and new_permissions .	os . chmod ( filename , new_permissions )
14101	substitute dicts for self.dicts .	self . dicts = dicts
6906	call the method self.create_select with 6 arguments : name , self.year_field , value , year_val , choices and self.year_none_value , substitute the result for the value under the STR0 key of the html dictionary .	html [ STR0 ] = self . create_select ( name , self . year_field , value , year_val , choices , self . year_none_value )
16158	call the method self.handle_startendtag with tag and attrs as the arguments .	self . handle_startendtag ( tag , attrs )
13501	join to_path and name into a valid system path , substitute the result for filename .	filename = os . path . join ( to_path , name )
7489	for every field in self.fields ,	for field in self . fields :
6059	if threading is true ,	if threading :
13847	try ,	try :
2451	import module django .	import django
14455	call the function _ with an argument string STR0 , return the result .	return _ ( STR0 )
15224	call the method UnicodeDecodeError.__str__ , with self as the argument , substitute the result for original .	original = UnicodeDecodeError . __str__ ( self )
1029	define the method __nonzero__ with argument self .	def __nonzero__ ( self ) :
17654	call the function pgettext with an argument STR0 , STR1 , substitute the result for truncate .	truncate = pgettext ( STR0 , STR1 )
5078	define the method add_aguments with arguments self and parser .	def add_arguments ( self , parser ) :
18773	define the function get_major_version with an argument version defaulting to None .	def get_major_version ( version = None ) :
13063	if template_dirs is true ,	if template_dirs :
9933	append line to bytes string STR0 , use it as an argument for the call to the function _parse_header_params , substitute the result for plist .	plist = _parse_header_params ( STR0 + line )
18484	substitute lineno for translators_comment_start .	translators_comment_start = lineno
12651	raise an TemplateSyntaxError exception with an argument string STR0 , where STR1 is replaced with taglib and e .	raise TemplateSyntaxError ( STR0 % ( taglib , e ) )
3407	join elements of comment_notes into a string , separated by whitespaces , append it to the string STR0 , append the result to field_desc .	field_desc += STR0 + STR . join ( comment_notes )
2227	raise an BadHeaderError exception with argument string STR0 , where STR1 are replaced by val and name , respectively .	raise BadHeaderError ( STR0 % ( val , name ) )
2783	append e to errors list for every e in all_issues , if checks.ERROR is lesser than or equal to e.level , and e.level is lesser than checks.CRITICAL .	errors = [ e for e in all_issues if checks . ERROR <= e . level < checks . CRITICAL ]
5473	remove the STR0 key from the options dictionary and substitute it for self.use_natural_keys , if the key doesnt exists substitute boolean False for self.use_natural_keys .	self . use_natural_keys = options . pop ( STR0 , False )
13603	if filename ends with string STR0 ,	if filename . endswith ( STR0 ) :
6582	call the method parts.reverse .	parts . reverse ( )
9231	concatenate name and string STR0 , return it .	return name + STR0
4015	write string STR0 to self.stdout stream .	self . stdout . write ( STR0 )
10788	define the method compile_filter_error with 3 arguments : self , token and e .	def compile_filter_error ( self , token , e ) :
7210	define the method strptime with arguments self , value and format .	def strptime ( self , value , format ) :
16231	call the function formatdate with 2 arguments : epoch_seconds and usegmt set to boolean True , return the result .	return formatdate ( epoch_seconds , usegmt = True )
14553	return string STR0 .	return STR0
18196	from threading import local into default name space .	from threading import local
13489	derive the class TarArchive from the BaseArchive base class .	class TarArchive ( BaseArchive ) :
457	return boolean True .	return True
16966	define the function get_quantifier with 2 arguments ch and input_iter .	def get_quantifier ( ch , input_iter ) :
7117	raise an ValidationError with 2 arguments : value under the STR0 key of the self.error_messages dictionary and code set to STR1 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 )
3169	try ,	try :
17400	if errors is None ,	if errors is None :
11848	if IndexError exception is caught ,	except IndexError :
1327	define the method created_time with arguments self and name .	def created_time ( self , name ) :
2340	join elements of self.cc into a string separated by STR0 , substitute the result for value under the STR1 key of msg dictionary .	msg [ STR0 ] = STR1 . join ( self . cc )
10027	if default is true and RAISE_ERROR is false ,	if default is not RAISE_ERROR :
18511	if not ,	else :
768	define initialization method __init__ with self class instance , level , msg , hint defaulting to None , obj defaulting to None and if defaulting to None as arguments .	def __init__ ( self , level , msg , hint = None , obj = None , id = None ) :
882	define the function _get_val .	def _get_val ( ) :
18063	define the function ungettext with 3 arguments : singular , plural and number .	def ungettext ( singular , plural , number ) :
10621	raise an TemplateEncodingError exception with an argument STR0 .	raise TemplateEncodingError ( STR0 )
1756	if SystemExit exception is caught ,	except SystemExit :
6835	from django.forms.widgets import Widget and Select into default name space .	from django . forms . widgets import Widget , Select
11955	substitute settings.DATE_FORMAT for arg .	arg = settings . DATE_FORMAT
7670	define the method __new__ with 4 arguments : mcs , name , bases and attrs .	def __new__ ( mcs , name , bases , attrs ) :
14236	call the method six.iteritems with an argument dict_ , for every k and v in the result ,	for k , v in six . iteritems ( dict_ ) :
1388	call the method self.get_available_name with argument name , substitute the result for name .	name = self . get_available_name ( name )
14627	update a dictionary with an entry v converted to an integer for k , for every k and v in result of the function six.iteritems , called with an argument kw , only if v is not None , substitute the result for kw .	kw = dict ( ( k , int ( v ) ) for k , v in six . iteritems ( kw ) if v is not None )
18445	call the function get_supported_language_variant with an argument settings.LANGUAGE_CODE , return the result .	return get_supported_language_variant ( settings . LANGUAGE_CODE )
14490	substitute absolute seconds for seconds .	seconds = abs ( seconds )
4405	raise an CommandError exception with an argument string STR1 where STR2 is replaced with self.addr .	raise CommandError ( STR1 % self . addr )
9866	return chunk .	return chunk
4188	if self.verbosity is greater or equal to integer 1 .	if self . verbosity >= 1 :
14826	get the value under the new_method_name key of the base.__dict__ dictionary , substitute it for new_method .	new_method = base . __dict__ . get ( new_method_name )
2335	call the self._create_message method with argument msg , substitute it for msg .	msg = self . _create_message ( msg )
13209	substitute newretval for retval .	retval = newretval
797	from django.conf import settings into default name space .	from django . conf import settings
10981	raise an TypeError exception with an argument string STR0 , replace STR1 with type of var .	raise TypeError ( STR0 % type ( var ) )
6783	derive the class BaseValidator form the object base class .	class BaseValidator ( object ) :
9219	return value under the name key of the files dictionary , if it doesnt exists , return None .	return files . get ( name , None )
16305	define the function same_origin with 2 arguments url1 and url2 .	def same_origin ( url1 , url2 ) :
15230	substitute __str__ filed of klass for __unicode__ field of klass .	klass . __unicode__ = klass . __str__
17305	if NameError exception is caught ,	except NameError :
5864	if event equals a string STR0 and node.nodeName equals a string STR1 ,	if event == STR0 and node . nodeName == STR1 :
18408	define the function get_language_from_path with 2 arguments : path and strict set to boolean False .	def get_language_from_path ( path , strict = False ) :
17699	if words is not empty and length is smaller than or equal to integer 0 ,	if words and length <= 0 :
13842	define function get_max_age with response as an argument .	def get_max_age ( response ) :
2566	substitute first element of options for opt_label .	opt_label = option [ 0 ]
7490	call the method field.clean with an argument value , substitute the result for value .	value = field . clean ( value )
983	for every field , error_list in self.error_dict.items method return value ,	for field , error_list in self . error_dict . items ( ) :
5813	call the method field.value_to_string with an argument obj , use the result as an argument for the call the method self.xml.characters .	self . xml . characters ( field . value_to_string ( obj ) )
14892	call the method list.__getitem__ with 2 arguments self and key , substitute the result for value .	value = list . __getitem__ ( self , key )
5010	join statements into a string , separated by white spaces , append it to statements .	statements . append ( STR . join ( statement ) )
228	if features.needs_datetime_string_cast field of the object represented stored under the db key of connections dictionary is true , and expires is not an instance of datetime .	if connections [ db ] . features . needs_datetime_string_cast and not isinstance ( expires , datetime ) :
17109	if s is an instance of six.text_type or Promise ,	if isinstance ( s , ( six . text_type , Promise ) ) :
12286	for every _ and nodelist in self.conditions_nodelists ,	for _ , nodelist in self . conditions_nodelists :
13363	import module sta .	import stat
15312	if the Exception exception is caught ,	except Exception :
17850	import module datetime .	import datetime
15240	define the function force_text , with s , encoding set to STR0 , strings_only set to False , errors set to string STR1 as arguments .	def force_text ( s , encoding = STR0 , strings_only = False , errors = STR1 ) :
18652	obj is an instance of Node class , created with 2 arguments : connector set to self.connector and negated set to self.negated .	obj = Node ( connector = self . connector , negated = self . negated )
7213	substitute DateTimeInput for widget .	widget = DateTimeInput
8048	define the method __nonzero__ with an argument self .	def __nonzero__ ( self ) :
7164	if not ,	else :
10918	define the method resolve with 3 arguments : self , context and ignore_failures set to boolean False .	def resolve ( self , context , ignore_failures = False ) :
1815	substitute self.remaining for size .	size = self . remaining
651	if delta is smaller than integer 0 .	if delta < 0 :
7478	call the method validate with an argument value from the base class of the class TypedMultipleChoiceField .	super ( TypedMultipleChoiceField , self ) . validate ( value )
5024	for every f in opts.local_fields that has an STR0 attribute , append f to a list , substitute the resulting list for post_sql_fields .	post_sql_fields = [ f for f in opts . local_fields if hasattr ( f , STR0 ) ]
7181	if ValueError or TypeError exceptions are caught ,	except ( ValueError , TypeError ) :
239	call the method self.validate_key with key as argument .	self . validate_key ( key )
5103	where STR0 is replaced with top_dir . call the function handle_extensions with 2 arguments : value under the STR1 key of the options dictionary ,	extensions = tuple ( handle_extensions ( options [ STR0 ] , ignored = ( ) ) )
18069	call the function lazy with 2 arguments : gettext and str , substitute gettext_lazy .	gettext_lazy = lazy ( gettext , str )
4170	raise CommandError exception with STR0 , with STR1 substituted for app_label , as arguments .	raise CommandError ( STR0 % app_label )
15976	define the method __init__ with an argument self .	def __init__ ( self ) :
2200	from django.utils.encoding import force_text into default name space .	from django . utils . encoding import force_text
12466	if length of args is smaller than integer 2 ,	if len ( args ) < 2 :
3233	call the methof model_dependencies.reverse .	model_dependencies . reverse ( )
13077	do nothing .	pass
18372	call the function do_ntranslate with 3 arguments : singular , plural , number and string STR0 , return the result .	return do_ntranslate ( singular , plural , number , STR0 )
1103	derive the class ContentFile from File base class .	class ContentFile ( File ) :
13233	define the method resolve_context with 2 arguments : self and context .	def resolve_context ( self , context ) :
15832	define the method _setup with an argument self .	def _setup ( self ) :
9099	substitute base for m .	m = base
10187	call the method self.__class__ with 3 arguments : an empty string , mutable is boolean True , encoding is self.encoding , substitute the result for result .	result = self . __class__ ( STR , mutable = True , encoding = self . encoding )
17216	if attr is an instance of MovedModule .	if isinstance ( attr , MovedModule ) :
8358	get STR0 attribute from the options object , if it exists substitute it for self.fields , if not self.fields is None .	self . fields = getattr ( options , STR0 , None )
8240	from django.forms.fields import Field and ChoiceField into default name space .	from django . forms . fields import Field , ChoiceField
7184	define the method strptime with arguments self , value and format .	def strptime ( self , value , format ) :
8866	substitute self.to_field_name , if exists , for key , if not substitute string STR0 for key .	key = self . to_field_name or STR0
15512	if value under the STR0 key of the self.feed dictionary is not None ,	if self . feed [ STR0 ] is not None :
14390	substitute complain for __delitem__ .	__delitem__ = complain
13037	try ,	try :
17803	replace every occurrence of STR0 in s with STR1 .	s = s . replace ( STR0 , STR1 )
4005	if bad_app_labels is true ,	if bad_app_labels :
14831	set new_method_name attribute of the base object to old_method .	setattr ( base , new_method_name , old_method )
12089	from django.utils.safestring import mark_safe into default name space .	from django . utils . safestring import mark_safe
18613	call the method out.getvalue , return the result .	return out . getvalue ( )
4336	from django.core.management.base import BaseCommand into default name space .	from django . core . management . base import BaseCommand
18536	if not ,	else :
4596	output_transaction is boolean True .	output_transaction = True
997	call the force_text with an argument message , yield the result .	yield force_text ( message )
11030	get the STR0 attribute of current object , if it exists and is true ,	if getattr ( current , STR0 , False ) :
9664	try ,	try :
18237	convert language to lowercase , return it .	return language . lower ( )
8072	return the value under the INITIAL_FORM_COUNT key of the self.management_form.cleaned_data dictionary .	return self . management_form . cleaned_data [ INITIAL_FORM_COUNT ]
11844	decorator function register.filter with an argument is_safe set to boolean True .	@ register . filter ( is_safe = True )
13799	call the BaseConverter function with BASE16_ALPHABET as argument , store the result in base16 .	base16 = BaseConverter ( BASE16_ALPHABET )
12256	substitute compare_to for value under the state_frame dictionary under the self key .	state_frame [ self ] = compare_to
4629	if app_config.models_module is None ,	if app_config . models_module is None :
6450	property decorator ,	@ property
12315	return an empty string ,	return STR
16614	define the function _make_key with 9 arguments : args , kwds , typed , kwd_mark as a tuple with an element result of the function object ,	def _make_key ( args , kwds , typed , kwd_mark = ( object ( ) , ) , fasttypes = { int , str , frozenset , type ( None ) } , sorted = sorted , tuple = tuple , type = type , len = len ) :
13688	call the method termios.tcgetattr with argument fd , substitute the result for attr_list .	attr_list = termios . tcgetattr ( fd )
14654	MONTHS_AP is an dictionary with 12 entries : result of the function pgettext_lazy with 2 arguments : STR0 and STR1 for 1 , result of the function pgettext_lazy with 2 arguments : strings STR2 and STR3 for 2 , result of the function pgettext_lazy with 2 arguments : strings STR4 and STR5 for 3 , result of the function pgettext_lazy with 2 arguments : strings STR6 and STR7 for 4 , result of the function pgettext_lazy with 2 arguments : strings STR8 and STR9 for 5 , result of the function pgettext_lazy with 2 arguments : strings STR10 and STR11 for 6 , result of the function pgettext_lazy with 2 arguments : strings STR12 and STR13 for 7 , result of the function pgettext_lazy with 2 arguments : strings STR14 and STR15 for 8 , result of the function pgettext_lazy with 2 arguments : strings STR16 and STR17 for 9 , result of the function pgettext_lazy with 2 arguments : strings STR18 and STR19 for 10 , result of the function pgettext_lazy with 2 arguments : strings STR20 and STR21 for 11 , result of the function pgettext_lazy with 2 arguments : strings STR22 and STR23 for 12 ,	MONTHS_AP = { 1 : pgettext_lazy ( STR0 , STR1 ) , 2 : pgettext_lazy ( STR2 , STR3 ) , 3 : pgettext_lazy ( STR4 , STR5 ) , 4 : pgettext_lazy ( STR6 , STR7 ) , 5 : pgettext_lazy ( STR8 , STR9 ) , 6 : pgettext_lazy ( STR10 , STR11 ) , 7 : pgettext_lazy ( STR12 , STR13 ) , 8 : pgettext_lazy ( STR14 , STR15 ) , 9 : pgettext_lazy ( STR16 , STR17 ) , 10 : pgettext_lazy ( STR18 , STR19 ) , 11 : pgettext_lazy ( STR20 , STR21 ) , 12 : pgettext_lazy ( STR22 , STR23 ) }
15902	get name attribute from the instance object , call it and return the result .	return getattr ( instance , name ) ( )
14856	otherwise if level converted into a string equals level ,	elif str ( level ) == level :
13926	if call to the function response.has_header with string STR0 as an argument returns True ,	if response . has_header ( STR0 ) :
13694	old_handler is None .	old_handler = None
12213	if num_loopvars is not equal to len_item ,	if num_loopvars != len_item :
5312	convert orphans into an integer and substitute it for self.orphans .	self . orphans = int ( orphans )
863	call the check function with argument app_config set to app_config , substitute the result for new_errors .	new_errors = check ( app_configs = app_configs )
8375	msg is a string STR0 , where STR1 is replaced , with new_class.__name__ , STR2 is replaced with opt and STR3 is replaced with value .	msg = ( STR0 % { STR1 : new_class . __name__ , STR2 : opt , STR3 : value , } )
15294	substitute force_text for force_str .	force_str = force_text
18561	otherwise if first element of g equals a string STR ,	elif g [ 0 ] == STR :
16774	if AttributeError exception is caught ,	except AttributeError :
1023	define the method __str__ with argument self .	def __str__ ( self ) :
7734	if bf_errors is true ,	if bf_errors :
9315	define the method render_option with 4 arguments : self , selected_choices , option_value and option_label .	def render_option ( self , selected_choices , option_value , option_label ) :
15460	call the method handler.addQuickElement with 2 arguments : string STR0 and value under the STR1 key of the item dictionary .	handler . addQuickElement ( STR0 , item [ STR1 ] )
4562	derive the class Command from the AppCommand base class .	class Command ( AppCommand ) :
15814	derive the class LazyObject from the object base class .	class LazyObject ( object ) :
294	call the method router.db_for_write with argument self.cache_model_class , substitute the result for db .	db = router . db_for_read ( self . cache_model_class )
3162	if app_list_value is not None ,	if app_list_value is not None :
15899	if fdel is not None ,	if fdel is not None :
16615	substitute args for key .	key = args
1707	if request has an attribute named STR0 ,	if hasattr ( request , STR0 ) :
12176	yield node .	yield node
17593	reverse the order of colors elements ,	colors . reverse ( )
4445	if shutdown_message is true ,	if shutdown_message :
12811	do nothing ,	pass
6238	from threading import local into default name space .	from threading import local
12020	return no .	return no
18737	call the function force_text with 2 arguments : value under the is_dst key of the time.tzname and DEFAULT_LOCALE_ENCODING , return the result .	return force_text ( time . tzname [ is_dst ] , DEFAULT_LOCALE_ENCODING )
16925	if call to the function contains with 2 arguments : last element of result and Group , evaluates to true ,	if contains ( result [ - 1 ] , Group ) :
9228	define the method clear_checkbox_name with 2 arguments : self and name .	def clear_checkbox_name ( self , name ) :
18614	define the function parse_accept_lang_header with an argument lang_string .	def parse_accept_lang_header ( lang_string ) :
14315	if KeyError exception is caught ,	except KeyError :
17626	call the function re.compile with 2 arguments : raw string STR0 and bitwise OR performed with 2 operands , re.U and re.S , substitute the result for re_chars .	re_tag = re . compile ( STR0 , re . S )
4777	remove the elements from the STR0 and STR1 keys of the options dictionary , substitute them for project_name and target , respectively .	project_name , target = options . pop ( STR0 ) , options . pop ( STR1 )
3533	raise an exception .	raise
13119	call the method apps.get_app_configs , for app_config in the result ,	for app_config in apps . get_app_configs ( ) :
2736	call the function sys.exit with an argument integer 1 .	sys . exit ( 1 )
12001	return value .	return value
15256	if not ,	else :
10022	if the value under the STR0 key of the self.META dictionary is true , call the function iri_to_uri , called with value under the STR1 key of the self.META dictionary and append it to string STR2 , append the result th the self.path converted into a string and return it , if the value under the STR3 key of the self.META dictionary is false , return self.path converted into a string .	return STR0 % ( self . path , ( STR1 + iri_to_uri ( self . META . get ( STR2 , STR ) ) ) if self . META . get ( STR3 , STR ) else STR )
16284	bring integer 36 to the power of factor , substitute the result for j .	j = 36 ** factor
16531	concatenate string STR , guts and string STR , substitute the result for tok .	tok = STR + guts + STR
8776	default_error_messages is an dictionary with an entry : return value of the function _ called with an argument , string STR0 for STR1 .	default_error_messages = { STR0 : _ ( STR1 ) , }
4136	get the value from the options dictionary under the key STR0 , substitute it for self.load_initial_data .	self . load_initial_data = options . get ( STR0 )
15170	raise an exception .	raise
3180	do nothing .	pass
17352	substitute io.StringIO for StringIO .	StringIO = io . StringIO
1809	substitute stream for self.stream .	self . stream = stream
6031	call the color_style method , substitute the result for self.style .	self . style = color_style ( )
8785	substitute self.parent_instance.pk for value under the STR0 key of the kwargs dictionary .	kwargs [ STR0 ] = self . parent_instance . pk
12898	derive the class ExtendsNode from the Node base class .	class ExtendsNode ( Node ) :
5740	try ,	try :
14729	from django.utils import six into default name space .	from django . utils import six
6597	try ,	try :
6394	if self.urlconf_name is an instance of a list type and its length is not zero .	if isinstance ( self . urlconf_name , list ) and len ( self . urlconf_name ) :
11412	raise KeyError exception with an argument key .	raise KeyError ( key )
819	decorator register with Tags.models as an argument .	@ register ( Tags . models )
17356	return s .	return s
17487	import threading .	import threading
6118	if value under the STR0 of options dictionary is None ,	if options [ STR0 ] is None :
10063	property decorator .	@ property
16536	import module logging .	import logging
10694	otherwise if token_string starts with COMMENT_TAG_START ,	elif token_string . startswith ( COMMENT_TAG_START ) :
5030	join into a file path : app_dir and string % s. % s.sql , where STR0 is replaced by opts.model_name and backend_name , respectively ,	sql_files . append ( os . path . join ( app_dir , STR0 % ( opts . model_name , backend_name ) ) )
16498	start is an integer 0 .	start = 0
11174	raise TemplateSyntaxError (	raise TemplateSyntaxError ( STR0 % ( name , STR1 . join ( STR2 % p for p in unhandled_params ) ) )
11550	try ,	try :
16958	if escaped is true ,	if escaped :
1882	call the datastructures.MergeDict with self.POST and self.GET as arguments , assign the result to self._request .	self . _request = datastructures . MergeDict ( self . POST , self . GET )
1455	substitute True for self.close_called .	self . close_called = True
8166	substitute i-th element of self.forms for form .	form = self . forms [ i ]
9784	return output .	return output
9607	from django.utils import six into default name space .	from django . utils import six
12890	if push is not None ,	if push is not None :
18395	if lang_code is true ,	if lang_code :
8124	for i in self._deleted_form_indexes append i-th element of self.forms into a list , return the resulting list .	return [ self . forms [ i ] for i in self . _deleted_form_indexes ]
5916	call the method n.getElementsByTagName with string STR0 as argument , substitute result for keys .	keys = n . getElementsByTagName ( STR0 )
3886	call the function ignore with an argument pattern , for every pattern in ignore_patterns , if any resulting element is true , return boolean True , otherwise return boolean False .	return any ( ignore ( pattern ) for pattern in ignore_patterns )
16721	msg is a string STR0 formated with dotted_path .	msg = STR0 % dotted_path
11895	for every sublist in second_item ,	for sublist in second_item :
5428	if _serializers is false ,	if not _serializers :
13812	from django.utils.timezone import get_current_timezone_name to the default name space .	from django . utils . timezone import get_current_timezone_name
17706	if words is true , substitute re_words for regex , if not substitute re_chars for regex .	regex = re_words if words else re_chars
12810	if TemplateDoesNotExist exception is caught ,	except TemplateDoesNotExist :
16855	result is an empty list .	result = [ ]
12768	substitute loader , name and dirs for self.loader , self.loadname and self.dirs , respectively .	self . loader , self . loadname , self . dirs = loader , name , dirs
11081	return nodes .	return nodes
9436	if not ,	else :
10876	constant_string is a raw string STR0 , where STR4 is replaced with STR5 , STR6 is replaced with STR3 , STR7 is replaced with return value of function re.escape called with an argument string STR8 , STR9 is replaced with return value of function re.escape called with an argument string STR10 .	constant_string = STR0 % { STR6 : STR7 , STR8 : STR3 , STR9 : re . escape ( STR4 ) , STR10 : re . escape ( STR5 ) , }
1943	call the get_bytes_from_wsgi function with environ , string STR0 and empty strings as arguments , substitute the result for path_info .	path_info = get_bytes_from_wsgi ( environ , STR0 , STR )
14972	call the method m.end , slice list rest from previous result as starting index to the end , substitute the result for rest .	rest = rest [ m . end ( ) : ]
5177	get the absolute file path of the expanded_template , substitute it for absolute_path .	absolute_path = path . abspath ( expanded_template )
6755	if other is instance of EmailValidator and , self.domain_whitelist equals to other.domain_whitelist , and self.message equals to other.message , and self.code equals to other.code , return boolean True , otherwise return boolean False .	return isinstance ( other , EmailValidator ) and ( self . domain_whitelist == other . domain_whitelist ) and ( self . message == other . message ) and ( self . code == other . code )
3209	model_dependencies is an empty list .	model_dependencies = [ ]
10910	call the method parser.find_filter with an argument filter_name , substitute the result for filter_func .	filter_func = parser . find_filter ( filter_name )
6463	call the function force_text with an argument path , substitute the result for path .	path = force_text ( path )
7661	for every base in reversed order of bases ,	for base in bases [ : : - 1 ] :
1555	return string STR0 .	return STR0
18460	call the function force_text with 2 arguments : src and settings.FILE_CHARSET .	src = force_text ( src , settings . FILE_CHARSET )
13476	for every path in paths ,	for path in paths :
5434	append k into a list for every k and v in return value of the six.iteritems function with an argument _serializers , only if v.Serializer.internal_use_only is false , return the resulting list .	return [ k for k , v in six . iteritems ( _serializers ) if not v . Serializer . internal_use_only ]
15232	return klass .	return klass
17313	if not ,	else :
14714	remove elements under the STR0 key of the kwargs dictionary , if it exists substitute it for path , if not path is None .	path = kwargs . pop ( STR0 , None )
8088	if IndexError exception is caught ,	except IndexError :
2866	return boolean True .	return True
9300	derive the class Select from the Widget base class .	class Select ( Widget ) :
1765	It returned None instead . `` , with the name of the type of the self class instance of the middleware_method , raise the ValueError with the previous as the argument .	raise ValueError ( STR0 % ( middleware_method . __self__ . __class__ . __name__ ) )
9568	call the function force_str with raw data as an argument and substitute it for rawdata .	rawdata = force_str ( rawdata )
2082	define the method close with argument self .	def close ( self ) :
2516	append string STR0 , where STR1 is replaced by name to the usage .	usage . append ( STR0 % name )
16399	append STR0 and ipv4_address to result .	result += STR0 + ipv4_address
13029	try ,	try :
11687	decorator stringfilter ,	@ stringfilter
8948	otherwise if value is boolean False ,	elif value is False :
11917	if next_item is true and next_item is an instance of list or tuple type ,	if next_item and isinstance ( next_item , ( list , tuple ) ) :
8018	DEFAULT_MAX_NUM is an integer 1000 .	DEFAULT_MAX_NUM = 1000
9286	call the method self.build_attrs with 3 arguments : attrs , type as a string STR0 , name as name , substitute the result for final_attrs .	final_attrs = self . build_attrs ( attrs , type = STR0 , name = name )
5533	return a string STR0 , where STR1 are replaced with self.object._meta.app_label , self.object._meta.object_name and self.object.pk , respectively .	return STR0 % ( self . object . _meta . app_label , self . object . _meta . object_name , self . object . pk )
14307	if KeyError exception is caught ,	except KeyError :
13204	if self._is_rendered is false ,	if not self . _is_rendered :
8179	append form.errors to self._errors .	self . _errors . append ( form . errors )
17666	call the method unicodedata.combining with an argument char , if it evaluates to false ,	if not unicodedata . combining ( char ) :
16054	for every opening and closing in WRAPPING_PUNCTUATION ,	for opening , closing in WRAPPING_PUNCTUATION :
7294	if data is false and initial is true ,	if not data and initial :
12657	raise an TemplateSyntaxError exception with an argument string STR0 .	raise TemplateSyntaxError ( STR0 )
4768	call the method handle from the base class of Command class , with 4 arguments : string STR0 , app_name , target and unpacked dictionary options .	super ( Command , self ) . handle ( STR0 , app_name , target , ** options )
8630	skip this loop iteration .	continue
15407	call the function iri_to_uri with an argument url , substitute the result for self.url .	self . url = iri_to_uri ( url )
10551	from django.conf import settings into default name space .	from django . conf import settings
6191	decompress is boolean False .	decompress = False
14620	call the method datetime.date with an argument unpacked dictionary kw , return the result .	return datetime . date ( ** kw )
13267	call the method parser.expression with an argument bp , substitute the result for self.first .	self . first = parser . expression ( bp )
18552	comment_lineno_cache is None ,	comment_lineno_cache = None
16056	substitute elements of middle from length of opening index to the end , for middle .	middle = middle [ len ( opening ) : ]
8188	define the method clean with an argument self .	def clean ( self ) :
11145	raise an TemplateSyntaxError exception STR0 , where STR1 is replaced with name .	raise TemplateSyntaxError ( STR0 % name )
3157	try ,	try :
17078	define the method __add__ with 2 arguments self and rhs .	def __add__ ( self , rhs ) :
4643	call the add_argument method on the parser object , with string STR0 , and help set to string STR1 as arguments .	parser . add_argument ( STR0 , help = STR1 )
11969	try ,	try :
7086	if self.localize is true ,	if self . localize :
1406	define the method exists with arguments self and name .	def exists ( self , name ) :
13522	define the method __init__ with 2 arguments self and file .	def __init__ ( self , file ) :
3278	for every app_config in return value of the method apps.get_app_configs ,	for app_config in apps . get_app_configs ( ) :
13237	derive the class TokenBase from the object base class .	class TokenBase ( object ) :
15092	if StandardError , renamed to e , exception is caught ,	except StandardError as e :
4393	call the method re.match with 2 arguments : naiveip_re and value under the STR0 key of the options dictionary , substitute the result for m .	m = re . match ( naiveip_re , options [ STR0 ] )
17156	if ImportError exception is caught ,	except ImportError :
16207	call the function re.compile with an argument raw string STR0 formated with __D , __M , __Y2 and __T , substitute the result for RFC850_DATE .	RFC850_DATE = re . compile ( STR0 % ( __D , __M , __Y2 , __T ) )
17973	call the function get_current_timezone , use the result as an argument for the call to the function _get_timezone_name , return the result .	return _get_timezone_name ( get_current_timezone ( ) )
17787	read data from buf , yield the result .	yield buf . read ( )
3133	add model to excluded_models set .	excluded_models . add ( model )
4181	for every a and n in targets , put a into a set , join all the set elements into a string separated by string STR1 , if set is empty return string STR2 instead , append the previous to the string STR0 , use the previous string as the argument for the call to the method self.style.MIGRATE_LABEL , use the result as an argument for the call to the method self.stdout.write .	self . stdout . write ( self . style . MIGRATE_LABEL ( STR0 ) + ( STR1 . join ( set ( a for a , n in targets ) ) or STR2 ) )
169	for every char in key , if ascii value of char is smaller than integer 33 or is equal to integer 127 ,	if ord ( char ) < 33 or ord ( char ) == 127 :
6233	return value .	return value
10121	otherwise if value under the STR0 key of hte self.META dictionary starts with STR1 ,	elif self . META . get ( STR0 , STR ) . startswith ( STR1 ) :
10583	UNKNOWN_SOURCE is a string STR0 .	UNKNOWN_SOURCE = STR0
14819	call the method __new__ with 4 arguments : cls , name , bases and attrs , from the base class of the class RenameMethodsBase .	new_class = super ( RenameMethodsBase , cls ) . __new__ ( cls , name , bases , attrs )
7807	define the method full_clean with an argument self .	def full_clean ( self ) :
777	define private method __ne__ with self class instance and other as arguments .	def __ne__ ( self , other ) :
6508	call the method self._reverse_with_prefix with 4 arguments : lookup_view , an empty string , unpacked list args and unpacked dictionary kwargs .	return self . _reverse_with_prefix ( lookup_view , STR , * args , ** kwargs )
15349	divide timezone by integer 60 , substitute the quotient of the division for hour and reminder for minute .	hour , minute = divmod ( timezone , 60 )
14085	sys.stderr is an instance of NullDevice class .	sys . stderr = NullDevice ( )
8929	import module json .	import json
18045	from django.conf import settings .	from django . conf import settings
5809	define the method handle_field with arguments self , obj and field .	def handle_field ( self , obj , field ) :
5395	BUILTIN_SERIALIZERS is a dictionary containing 4 inital entries : STR0 for STR1 , STR2 for STR3 , STR4 for STR5 , and STR6 for STR7 .	BUILTIN_SERIALIZERS = { STR0 : STR1 , STR2 : STR3 , STR4 : STR5 , STR6 : STR7 , }
1938	evaluate the force_text function with settings.FORCE_SCRIPT_NAME as argument , return the result .	return force_text ( settings . FORCE_SCRIPT_NAME )
7691	define the method __init__ with 4 arguments : self , data set to None , files set to None , auto_id is an string STR0 , prefix is None , initial set to None , error_class set to ErrorList , label_suffix set to None , empty_permitted set to boolean False .	def __init__ ( self , data = None , files = None , auto_id = STR0 , prefix = None , initial = None , error_class = ErrorList , label_suffix = None , empty_permitted = False ) :
4743	call the function subclass with 2 arguments string STR0 , where STR1 is replaced with migration.name and app_label , substitute the result for new_migration .	new_migration = subclass ( STR0 % migration . name , app_label )
5328	define the method page with self class instance and number as arguments .	def page ( self , number ) :
2634	if self.cmd._called_from_command_line is true ,	if self . cmd . _called_from_command_line :
14752	_dec.__name__ is a string STR0 formated with decorator.__class__.__name__ .	_dec . __name__ = STR0 % decorator . __class__ . __name__
8766	define the function inlineformset_factory with 20 arguments : parent_model , model , form set to ModelForm ,	def inlineformset_factory ( parent_model , model , form = ModelForm , formset = BaseInlineFormSet , fk_name = None , fields = None , exclude = None , extra = 3 , can_order = False , can_delete = True , max_num = None , formfield_callback = None , widgets = None , validate_max = False , localized_fields = None , labels = None , help_texts = None , error_messages = None , min_num = None , validate_min = False ) :
10945	call the function template_localtime with 2 arguments : obj and context.use_tz , substitute the result for obj .	obj = template_localtime ( obj , context . use_tz )
16163	return endpos .	return endpos
16294	left justify string s in a field of width equal to the sum of length of s and reminder of the division of length of s by integer 4 , pad the rest of the field with bytes string STR0 , use the result as an argument for the call to the method base64.urlsafe_b64decode , return the result .	return base64 . urlsafe_b64decode ( s . ljust ( len ( s ) + len ( s ) % 4 , STR0 ) )
5094	if e.errno equals errno.EEXIST ,	if e . errno == errno . EEXIST :
11180	derive the class TagHelperNode form the base class Node .	class TagHelperNode ( Node ) :
17776	define the method flush with an argument self .	def flush ( self ) :
7055	substitute max_length and min_length for self.max_length for self.min_length .	self . max_length , self . min_length = max_length , min_length
1611	write raw_data to self.file file .	self . file . write ( raw_data )
16009	return value .	return value
270	fetch one entry from the database that cursor points at , substitute it for the result .	result = cursor . fetchone ( )
16798	if call to the method finder.find_module with an argument name evaluates to true ,	if finder . find_module ( name ) :
6790	define the method __call__ with arguments self and value .	def __call__ ( self , value ) :
14792	if middleware has an attribute STR0 ,	if hasattr ( middleware , STR0 ) :
1579	substitute content_type_extra for self.content_type_extra .	self . content_type_extra = content_type_extra
14887	substitute self for result.parent .	result . parent = self
4796	derive class Command from the BaseCommand base class .	class Command ( BaseCommand ) :
7262	call the method self.to_python with an argument value , strip the whitespaces from the both ends of the result and substitute it for value .	value = self . to_python ( value ) . strip ( )
9990	self.META is an empty dictionary .	self . META = { }
17382	if _locs_ is None ,	if _locs_ is None :
6406	call the method self._callback_strs.add with an argument pattern._callback_str .	self . _callback_strs . add ( pattern . _callback_str )
17659	return text .	return text
4589	join the list of statements into a string separated by new lines , return it .	return STR0 . join ( statements )
10626	substitute origin for self.origin .	self . origin = origin
7728	output and hidden_fields are both empty lists .	output , hidden_fields = [ ] , [ ]
1584	define the method upload_complete with argument self .	def upload_complete ( self ) :
8024	value under the MAX_NUM_FORM_COUNT of the self.base_fields dictionary is an instance of IntegerField class , created with 2 arguments : required as boolean False and widget set to HiddenInput .	self . base_fields [ MAX_NUM_FORM_COUNT ] = IntegerField ( required = False , widget = HiddenInput )
643	call the method self._cache.incr with key and delta as arguments , substitute the result for val .	val = self . _cache . incr ( key , delta )
16217	call the function allow_lazy with 2 arguments : urlunquote and six.text_type , substitute the result for urlunquote .	urlunquote = allow_lazy ( urlunquote , six . text_type )
6367	args is an empty tuple .	args = ( )
6011	from django.conf import settings into default name space .	from django . conf import settings
6423	call the method apps.setdefault with 2 arguments : pattern and an empty list , append to the resulting object pattern.namespace .	apps . setdefault ( pattern . app_name , [ ] ) . append ( pattern . namespace )
7710	try ,	try :
2734	if it exists , get STR0 attribute of self , substitute it for stderr , if not , stderr is an instance of OutputWrapper class , created with arguments sys.stderr and self.style.ERROR .	stderr = getattr ( self , STR0 , OutputWrapper ( sys . stderr , self . style . ERROR ) )
7348	call the method self.to_python with an argument value , strip the whitespaces from the result , substitute it for value .	value = self . to_python ( value ) . strip ( )
17015	increment piece by firs element of elt .	piece += elt [ 0 ]
1121	do nothing .	pass
14489	if seconds smaller than integer 0 , sign is STR0 , otherwise sign is STR1 ,	sign = STR0 if seconds < 0 else STR1
2754	if self.requires_system_checks is true and values under the STR0 and STR1 keys of the options dictionary are false ,	if ( self . requires_system_checks and not options . get ( STR0 ) and not options . get ( STR1 ) ) :
6979	define the function __init__ with 11 arguments : self , required set to boolean True , widget set to None , label set to None , initial set to None , help_text set to an empty string , error_messages set to None , show_hidden_initial set to boolean False , validators is an empty , localize set to boolean False , label_suffix set to None .	def __init__ ( self , required = True , widget = None , label = None , initial = None , help_text = STR , error_messages = None , show_hidden_initial = False , validators = [ ] , localize = False , label_suffix = None ) :
13436	static method ,	@ staticmethod
12120	return an empty string ,	return STR
10151	_mutable is boolean True .	_mutable = True
4779	try ,	try :
6630	delete _urlconfs.value .	del _urlconfs . value
11515	assign self.origin , source to token.source .	token . source = self . origin , source
10154	call the __init__ method of the base class of the QueryDict class .	super ( QueryDict , self ) . __init__ ( )
17272	delete entry under the name key of the moves.__dict__ dictionary .	del moves . __dict__ [ name ]
15860	call the function new_method_proxy with an argument dir , substitute the result for __dir__ .	__dir__ = new_method_proxy ( dir )
12079	import module re .	import re
7961	unpack a dictionary with an entry id_for_label for STR0 , map it through attrs mapping if attrs is true , and convert it again to the dictionary , if attrs is false , leave it alone , substitute the result for attrs .	attrs = dict ( attrs or { } , ** { STR0 : id_for_label } )
5877	if field_name is false ,	if not field_name :
2032	if Exception exception is caught ,	except Exception :
9820	return self .	return self
5806	define the method end_object with arguments self and obj .	def end_object ( self , obj ) :
1129	return the second element of the return value of the call to the self._det_image_dimensions method .	return self . _get_image_dimensions ( ) [ 1 ]
12234	call the method node.render with an argument context , append the result to the nodelist .	nodelist . append ( node . render ( context ) )
10820	raise an TemplateSyntaxError exception with an argument string STR0 .	raise TemplateSyntaxError ( STR0 )
1205	define the function unlock with argument f .	def unlock ( f ) :
14617	match regex date_re with value , substitute the result for match .	match = date_re . match ( value )
12917	define the method render with 2 arguments self and context .	def render ( self , context ) :
1052	return self._size .	return self . _size
11926	call the function convert_old_style_list with an argument value , substitute the result for value and converted , respectively .	value , converted = convert_old_style_list ( value )
1772	define the method handle_uncaught_exception with self class instance , request , resolver and exec_info as arguments .	def handle_uncaught_exception ( self , request , resolver , exc_info ) :
1497	return self._name .	return self . _name
15246	if s is not an instance of the object six/string_types ,	if not isinstance ( s , six . string_types ) :
10050	define the method scheme with an argument self .	def scheme ( self ) :
1434	call the function self.path with argument name , use the result as an argument for the call to the function os.path.getmtime , use the result as an argument for the call to the function datetime.fromtimestamp , return the result .	return datetime . fromtimestamp ( os . path . getmtime ( self . path ( name ) ) )
4844	call the method parser.add_argument with 5 arguments : string STR0 , action set to string STR1 , dest set to STR2 , default set to None and help set to string STR3	parser . add_argument ( STR0 , action = STR1 , dest = STR2 , default = None , help = STR3 ) ,
6351	if not ,	else :
886	if not ,	else :
9025	from itertools import chain into default name space .	from itertools import chain
217	call the method self.make_key Whit key and version set to version as arguments , substitute the result for key .	key = self . make_key ( key , version = version )
3032	otherwise if f.unique is true ,	elif f . unique :
15191	for every h in elements of logger.handlers list ,	for h in logger . handlers [ : ] :
4124	define the method add_arguments with self class instance and parse as the arguments .	def add_arguments ( self , parser ) :
2605	and a list containing a string STR0 , call the method self.main_help_text , append new line to it , write it to sys.stdout .	sys . stdout . write ( self . main_help_text ( ) + STR0 )
12608	nodelist_false is an instance of NodeList .	nodelist_false = NodeList ( )
8890	raise an ValidationError with 2 arguments : dictionary self.error_messages value under the key STR0 , and code set to string 'required .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 )
16202	__M is a raw string STR0 .	__M = STR0
4463	call the method parser.add_argument with 4 arguments : string STR0 , action as a string STR1 , dest as a string STR2 and help as a string STR3 .	parser . add_argument ( STR0 , action = STR1 , dest = STR2 , help = STR3 )
11504	if start is greater than upto ,	if start > upto :
9059	return path ,	return path
680	derive the class PyLibMCCache from BaseMemcachedCache base class .	class PyLibMCCache ( BaseMemcachedCache ) :
12147	call the method self.nodelist.render with an argument context , substitute the result output .	output = self . nodelist . render ( context )
103	call the params.get with string STR0 and empty dictionary as arguments , substitute the result for options .	options = params . get ( STR0 , { } )
17876	return result .	return result
18580	call the method context_match.group with an argument integer 1 , substitute the result for message_context .	message_context = context_match . group ( 1 )
2788	increment visible_issue_count for length of issues .	visible_issue_count += len ( issues )
7255	call the method validators.RegexValidator with an argument regex set to regex , substitute it for self._regex_validator .	self . _regex_validator = validators . RegexValidator ( regex = regex )
6079	call the x.split method with arguments : character STR0 and integer 1 , store the result in k and v , respectively .	k , v = x . split ( STR0 , 1 )
17940	if dt is None , is_dst is boolean False , otherwise call the method _isdst with an argument dt , substitute the result for is_dst .	is_dst = False if dt is None else self . _isdst ( dt )
15164	substitute klass for factory .	factory = klass
5233	define the function with arguments self and filename .	def extract ( self , filename ) :
11607	decorator function register.filter with an argument is_safe set to boolean True .	@ register . filter ( is_safe = True )
1920	call the self.request_class method with environ as an argument , substitute the result for request .	request = self . request_class ( environ )
12980	call the method token.split_contents , substitute the result for bits .	bits = token . split_contents ( )
5124	slice root starting from the prefix_length index to the end , substitute it for path_rest .	path_rest = root [ prefix_length : ]
13304	while i is smaller than l ,	while i < l :
18662	define the method __contains__ with 2 arguments : self and other .	def __contains__ ( self , other ) :
10267	return an empty string and an empty string .	return STR , STR
9111	define the method __new__ with 4 arguments mcs , name , bases and attrs .	def __new__ ( mcs , name , bases , attrs ) :
17415	otherwise if end is not an instance of string type ,	elif not isinstance ( end , str ) :
8115	return an empty list .	return [ ]
18335	get translation_function attribute of the object t , call the result with an argument eol_message , substitute the result for result .	result = getattr ( t , translation_function ) ( eol_message )
16297	define the function parse_etags with an argument etag_str .	def parse_etags ( etag_str ) :
9754	self._leftover is an empty string .	self . _leftover = STR
16988	ch is None .	ch = None
18055	call the method _trans.gettext_noop with an argument message .	return _trans . gettext_noop ( message )
12095	define the method __init__ with 3 arguments : self , setting and nodelist .	def __init__ ( self , setting , nodelist ) :
15016	raise an ValueError exception with an argument string STR0 .	raise ValueError ( STR0 )
2430	substitute msg for body_msg .	body_msg = msg
12767	call the method __init__ with an argument display_name , from the base class of the LoaderOrigin class .	super ( LoaderOrigin , self ) . __init__ ( display_name )
1286	from django.utils.functional import LazyObject into default name space .	from django . utils . functional import LazyObject
11703	define the function truncatechars with 2 arguments value and arg .	def truncatechars ( value , arg ) :
15757	define the method __text_cast with an argument self .	def __text_cast ( self ) :
12485	if second from the end element of args equals a string STR0 ,	elif args [ - 2 ] == STR0 :
3103	call the method parser.add_argument with 5 arguments : string STR0 , action set to STR1 , dest is STR2 , default is boolean False and help is a string STR3 .	parser . add_argument ( STR0 , action = STR1 , dest = STR2 , default = False , help = STR3 )
6579	substitute viewname for view .	view = viewname
5265	p is a instance of Popen class , created with 6 arguments : args , shell set to boolean False , stdout set to PIPE ,	p = Popen ( args , shell = False , stdout = PIPE , stderr = PIPE , close_fds = os . name != STR0 , universal_newlines = True )
6853	otherwis if char is contained in string STR0 ,	elif char in STR0 :
6669	if self.regex is not an instance of a six.string_types type ,	if isinstance ( self . regex , six . string_types ) :
13510	if not ,	else :
18324	get STR0 attribute of the _active object , if it exists substitute it for t , if not t is None .	t = getattr ( _active , STR0 , None )
15520	call the method handler.addQuickElement with 2 arguments : string STR0 and value under the STR1 key of the item dictionary .	handler . addQuickElement ( STR0 , item [ STR1 ] )
9826	derive the class BoundaryIter from the six.Iterator base class .	class BoundaryIter ( six . Iterator ) :
15766	if not ,	else :
1641	import module logging .	import logging
3550	for every fixture_file , fixture_dir and fixture_name in return value of the method self.find_fixtures called with an argument fixture_label ,	for fixture_file , fixture_dir , fixture_name in self . find_fixtures ( fixture_label ) :
11273	raise an TemplateSyntaxError exception with an argument string , STR0 , where STR1 is replaced with function_name .	raise TemplateSyntaxError ( STR0 % function_name )
2730	call the method self.execute , with 2 arguments : unpacked list args and unpacked dictionary cmd_options .	self . execute ( * args , ** cmd_options )
113	self._cull_frequency is integer 3 .	self . _cull_frequency = 3
7789	if field is not contained in self.errors ,	if field not in self . errors :
9147	raise an NotImplementedError with an argument string STR0 .	raise NotImplementedError ( STR0 )
18776	convert x into a string for every x in list of version elements up to the parts index , join the previous into a string separated by STR0 , assign the result to major .	major = STR0 . join ( str ( x ) for x in version [ : parts ] )
16561	substitute include_html for self.include_html .	self . include_html = include_html
5508	define the method handle_field with argument self , obj and field .	def handle_field ( self , obj , field ) :
13035	define the method load_template_source with 3 arguments : self , template_name , template_dirs set to None .	def load_template_source ( self , template_name , template_dirs = None ) :
5650	define handle_field method with self , obj and field arguments .	def handle_field ( self , obj , field ) :
7740	replace STR0 from the string STR2 with css_classes , substitute it for html_class_attr .	html_class_attr = STR1 % css_classes
8332	substitute value under the f.name key of the widgets dictionary for value under the STR0 key of kwargs dictionary .	kwargs [ STR0 ] = widgets [ f . name ]
7259	substitute EmailInput for widget .	widget = EmailInput
7239	derive the class RegexField from the base class CharField class .	class RegexField ( CharField ) :
6036	msg is a string STR0 , where STR1 are replaced with return value of the method self.log_date_time_string and formated args .	msg = STR0 % ( self . log_date_time_string ( ) , format % args )
13192	define the method rendered_content with an argument self .	def rendered_content ( self ) :
18168	activate is a lambda function which returns None for any argument x .	activate = lambda x : None
2312	if cc is not an six.string_types instance raise an error with message string STR1 .	assert not isinstance ( cc , six . string_types ) , STR1
11663	decorator stringfilter ,	@ stringfilter
12817	return template .	return template
18593	otherwise if t.contents equals a string STR0 ,	elif t . contents == STR0 :
8659	if not ,	else :
5049	if verbosity is greater or equal to integer 2 ,	if verbosity >= 2 :
356	import module errno .	import errno
2132	if self.use_ssl and self.use_tls are false ,	if not self . use_ssl and self . use_tls :
12799	if template_source_loaders is None ,	if template_source_loaders is None :
4218	otherwise if action equals to string STR0 .	elif action == STR0 :
1873	content_length is integer 0 .	content_length = 0
9622	if content_type doesnt start with string STR0 ,	if not content_type . startswith ( STR0 ) :
10616	derive the class Template form the base class object .	class Template ( object ) :
8518	call the method initial_form_count from the base class of the class BaseModelFormSet , return the result .	return super ( BaseModelFormSet , self ) . initial_form_count ( )
5790	call the self.xml.startDocument method .	self . xml . startDocument ( )
16153	find the last index of newline occurrence in self.__starttag_text , subtract it from total length of self.__starttag_text , substitute the result for offset .	offset = ( len ( self . __starttag_text ) - self . __starttag_text . rfind ( STR0 ) )
321	call the method cursor.execute with string STR0 as argument , substitute the STR1 with table .	cursor . execute ( STR0 % table )
13818	if length of t is greater than integer 1 ,	if len ( t ) > 1 :
5352	return self._num_pages .	return self . _num_pages
17785	write item to zfile stream .	zfile . write ( item )
7536	if errors is true ,	if errors :
7412	if not ,	else :
2057	raise an ImproperlyConfigured exception with argument string STR0 , replace STR1 with self.file_path .	raise ImproperlyConfigured ( STR0 % self . file_path )
11974	if AttributeError exception is caught ,	except AttributeError :
6846	call the function get_format with an argument string STR0 , substitute it for fmt .	fmt = get_format ( STR0 )
14876	if value is not contained in result ,	if value is not result :
15872	define the method __init__ with 2 arguments self and func .	def __init__ ( self , func ) :
476	derive the class LocMemCache from the base class BaseCache .	class LocMemCache ( BaseCache ) :
5851	define the method _start_relational_field with arguments self and field .	def _start_relational_field ( self , field ) :
17292	_func_globals is a string STR0 .	_func_globals = STR0
1900	call the method self._load_post_and_files .	self . _load_post_and_files ( )
7869	define the method media with an argument self .	def media ( self ) :
12652	return an instance of a LoadNode class .	return LoadNode ( )
18267	if self.__language equals settings.LANGUAGE_CODE ,	if self . __language == settings . LANGUAGE_CODE :
11713	substitute arg converted into an integer for length .	length = int ( arg )
17410	raise an TypeError exception with an argument string STR0 .	raise TypeError ( STR0 )
6241	from django.core.exceptions import ImproperlyConfigured and ViewDoesNotExist into default name space .	from django . core . exceptions import ImproperlyConfigured , ViewDoesNotExist
16496	substitute self.regexes for regexes .	regexes = self . regexes
7752	format string normal_row with an dictionary containing 6 entries : return value of the function force_text with an argument bf_errors , for STR0 , return value of the function force_text with an argument label for STR1 , return value of the function six.text_type , with an argument bf , for STR2 , help_text for help_text , html_class_attr for STR3 and bf.html_name for STR4 .	output . append ( normal_row % { STR0 : force_text ( bf_errors ) , STR1 : force_text ( label ) , STR2 : six . text_type ( bf ) , STR3 : help_text , STR4 : html_class_attr , STR5 : bf . html_name , } )
13908	if key_prefix is None ,	if key_prefix is None :
5986	tpl is an string STR0 .	tpl = STR0
15909	if sys.version_info is greater than or equal to a tuple with 3 elements : integers 2 , 7 and 2 , respectively ,	if sys . version_info >= ( 2 , 7 , 2 ) :
6543	substitute text_kwargs for candidate_subs .	candidate_subs = text_kwargs
3497	derive the class Command from the BaseCommand base class .	class Command ( BaseCommand ) :
4563	help is a string STR0 .	help = STR0
5191	define the function cleanup_url with an argument url .	def cleanup_url ( url ) :
6356	define the method __repr__ with an argument self .	def __repr__ ( self ) :
2794	if display_num_errors is true ,	if display_num_errors :
17075	return an instance of SafeText , created with an argument data .	return SafeText ( data )
15456	call the method handler.addQuickElement with 2 arguments : string STR0 and value under the STR1 key of the item dictionary .	handler . addQuickElement ( STR0 , item [ STR1 ] )
15285	evaluate the function bytes with the argument s , and return the result .	return bytes ( s )
7822	get the value under the name key of the self.initial dictionary , if it exists substitute it for initial , if not substitute field.initial for initial .	initial = self . initial . get ( name , field . initial )
15121	if not ,	else :
1444	__all__ is a tuple , containing strings STR0 and STR1 .	__all__ = ( STR0 , STR1 , )
7968	if attrs is true , call the function flatatt with an argument attrs , substitute the result for attrs , if not attrs is an empty string .	attrs = flatatt ( attrs ) if attrs else STR
17853	from django.utils.translation import ugettext and ungettext_lazy into default name space .	from django . utils . translation import ugettext , ungettext_lazy
14687	return sites .	return sites
12331	if settings.DEBUG is true ,	if settings . DEBUG :
4741	append tuple with 2 elements : migration.app_label and migration.name to replaces .	replaces . append ( ( migration . app_label , migration . name ) )
4848	STR0 if test_runner_class has an attribute STR1 ,	if hasattr ( test_runner_class , STR0 ) :
11728	try ,	try :
6128	if value under the STR0 key of options dictionary is true ,	if options [ STR0 ] :
8972	call the method __init__ with an argument initlist from the base class of the class ErrorList .	super ( ErrorList , self ) . __init__ ( initlist )
9747	for every handler in self._upload_handlers ,	for handler in self . _upload_handlers :
13454	define the method __enter__ with an argument self .	def __enter__ ( self ) :
5368	if index is not an instance of six.integer_types or tuple type ,	if not isinstance ( index , ( slice , ) + six . integer_types ) :
1725	if response is True ,	if response :
1983	call the function EmailMultiAlternatives with settings.EMAIL_SUBJECT_PREFIX and subject converted to strings and concatenated , message , settings.SERVER_EMAIL , list of second elements of a for every a in settings.Managers and connection set to connection , as arguments , assign the result to mail .	mail = EmailMultiAlternatives ( STR0 % ( settings . EMAIL_SUBJECT_PREFIX , subject ) , message , settings . SERVER_EMAIL , [ a [ 1 ] for a in settings . MANAGERS ] , connection = connection )
9357	output is a list containing an entry : result of the function format_html called with 2 arguments : string STR1 and result of the function flatatt called with an argument final_attrs .	output = [ format_html ( STR1 , flatatt ( final_attrs ) ) ]
7108	call the method formats.sanitize_separators with an argument value , substitute the result for value .	value = formats . sanitize_separators ( value )
17297	try ,	try :
18409	call the function language_code_prefix_re.match with an argument path , substitute it for regex_match .	regex_match = language_code_prefix_re . match ( path )
11070	for every node in self ,	for node in self :
14743	define the function dummy with 2 arguments : unpacked list args and unpacked dictionary kwargs .	def dummy ( * args , ** kwargs ) :
17097	if s is an instance of SafeData .	if isinstance ( s , SafeData ) :
10484	status_code is an integer 302 .	status_code = 302
4982	for every model in app_models ,	for model in app_models :
11772	decorator register.filter .	@ register . filter
13819	return first element of t converted to lowercase and second element of t , as a tuple .	return ( t [ 0 ] . lower ( ) , t [ 1 ] )
18619	for every i in range of integers from integer 0 to the length of pieces decremented by one , with step of integer 3 ,	for i in range ( 0 , len ( pieces ) - 1 , 3 ) :
3003	Defaults to the STR0 database . ' define the method handle with arguments self , unpacked list tablenames and unpacked dictionary options .	def handle ( self , * tablenames , ** options ) :
7284	if self.allow_empty_file and file_size are both false ,	if not self . allow_empty_file and not file_size :
10383	call the method expires.utcnow , subtract the result from expires , substitute the result for delta .	delta = expires - expires . utcnow ( )
843	compatibility is a string STR0 .	compatibility = STR0
15684	define the function curry with 3 arguments : _curried_func , unpacked list args and unpacked dictionary kwargs .	def curry ( _curried_func , * args , ** kwargs ) :
6816	clean is a lambda function with self and x as arguments , return value is length of x .	clean = lambda self , x : len ( x )
6819	import module django .	import django
5938	append child.data to the inner_text list .	inner_text . append ( child . data )
4934	for every model in not_installed_models ,	for model in not_installed_models :
2824	substitute self.handle_app for handle_app .	handle_app = self . handle_app
16354	define the function clean_ipv6_address with 3 arguments : ip_str , unpack_ipv4 set to boolean False and error_message ,	def clean_ipv6_address ( ip_str , unpack_ipv4 = False , error_message = _ ( STR0 ) ) :
10061	define the method is_ajax with an argument self .	def is_ajax ( self ) :
5311	convert per_page into an integer and substitute it for self.per_page .	self . per_page = int ( per_page )
12124	substitute variable_name for self.variable_name .	self . variable_name = variable_name
8715	from django.db.models.fields.related import RelatedObject into default namespace .	from django . db . models . fields . related import RelatedObject
3073	from django.conf import settings , global_settings into default name space .	from django . conf import settings , global_settings
9691	get the value under the STR0 key of the content_type_extra dictionary , substitute it for charset .	charset = content_type_extra . get ( STR0 )
4647	get the value under the key STR0 of the options dictionary , use it as a index to get an element from connections , substitute it for connection .	connection = connections [ options [ STR0 ] ]
10664	append bit to trans_bit .	trans_bit . append ( bit )
13319	if not ,	else :
15257	call the method s.decode with encoding and errors as the arguments , substitute the result for s .	s = s . decode ( encoding , errors )
2181	raise an exception .	raise
142	substitute val for value under the k key of dictionary d .	d [ k ] = val
4000	for every app_label in app_labels ,	for app_label in app_labels :
6567	if urlconf is None ,	if urlconf is None :
7761	append last_row to output .	output . append ( last_row )
4638	from django.db.migrations.loader import AmbiguityError into default name space .	from django . db . migrations . loader import AmbiguityError
3696	call the method os.path.splitext with an argument self.file , assign the result to _ and file_ext .	_ , file_ext = os . path . splitext ( self . file )
18352	call the function ugettext with an argument msg_with_ctxt , substitute the result for result .	result = ugettext ( msg_with_ctxt )
1796	from django.core import signals into default name space .	from django . core import signals
18474	if trim is true ,	if trim :
2575	subcommand is a string STR0 .	subcommand = STR0
13585	declare that we use global variables cached_modules and _cached_filenames in this function .	global _cached_modules , _cached_filenames
18115	define the method __exit__ with 4 arguments : self , exc_type , exc_value and traceback .	def __exit__ ( self , exc_type , exc_value , traceback ) :
15937	DOTS is a list with 6 elements : strings STR0 , STR1 , STR2 , STR3 , STR4 and STR5 .	DOTS = [ STR0 , STR1 , STR2 , STR3 , STR4 , STR5 ]
3812	if not ,	else :
1331	decorator deconstructible ,	@ deconstructible
12437	define the method __init__ with 5 arguments : self , var , name , nodelist and extra_context set to None .	def __init__ ( self , var , name , nodelist , extra_context = None ) :
17779	return nothing .	return
10932	return settings.TEMPLATE_STRING_IF_INVALID .	return settings . TEMPLATE_STRING_IF_INVALID
5969	call the method __init__ from the base class of the DTDForbidden class .	super ( DTDForbidden , self ) . __init__ ( )
12770	call the method self.loader with 2 arguments : self.loadname and self.dirs , return the first element of the result .	return self . loader ( self . loadname , self . dirs ) [ 0 ]
13905	substitute the STR0 in string STR1 with key_prefix and result of the function call , to the function url.hexdigest ( ) , respectively , substitute it for cache_key .	cache_key = STR0 % ( key_prefix , url . hexdigest ( ) )
18575	otherwise if bmatch is true ,	elif bmatch :
15812	call the function func with 2 arguments : self._wrapped and unpacked list args .	return func ( self . _wrapped , * args )
1118	define the method open with arguments self and mode set to None .	def open ( self , mode = None ) :
3120	get the value under the STR0 key of the options dictionary , substitute the result for pks .	pks = options . get ( STR0 )
8720	get attribute STR0 of the pk_value object , if it doesnt exists use pk_value , set to it self.fk.get_attname return value attribute , of the obj object .	setattr ( obj , self . fk . get_attname ( ) , getattr ( pk_value , STR0 , pk_value ) )
1273	remove the old_file_name file .	os . remove ( old_file_name )
2813	call the method apps.get_app_config with an argument app_lable , for every app_label in app_labels , append the results to app_configs list .	app_configs = [ apps . get_app_config ( app_label ) for app_label in app_labels ]
4622	derive the class Command from the base class AppCommand .	class Command ( AppCommand ) :
7643	from django.forms.utils import flatatt , ErrorDict and ErrorList into default name space .	from django . forms . utils import flatatt , ErrorDict , ErrorList
14559	if las equals integer 3 ,	if last == 3 :
12496	call the function parser.compile_filter with an argument arg for every arg in args from first element to the end , append the results into a list , substitute it for value .	values = [ parser . compile_filter ( arg ) for arg in args [ 1 : ] ]
11311	call the function self.tag with 2 arguments : function_name and compile_func .	self . tag ( function_name , compile_func )
401	with return value of the function io.open with fname and string STR0 as arguments , named as f ,	with io . open ( fd , STR0 ) as f :
13045	from django.template.loader import BaseLoader , get_template_from_string , find_template_loader and make_origin into default name space .	from django . template . loader import BaseLoader , get_template_from_string , find_template_loader , make_origin
16865	endless loop ,	while True :
4587	extract the value under the key STR0 from the options dictionary , use the value for indexing connections list , substitute the result for connection .	connection = connections [ options [ STR0 ] ]
15385	return an empty dictionary .	return { }
16752	if first and second element of sys.version_info are equal to integers 3 and 4 , respectively ,	if sys . version_info [ : 2 ] >= ( 3 , 4 ) :
6146	got_request_exception is a instance of a Signal class , created with an argument providing_args as the list containing string STR0 .	got_request_exception = Signal ( providing_args = [ STR0 ] )
7825	call the method field.clean with an argument value , substitute the result for value .	value = field . clean ( value )
503	call the self._lock.writer method , with the result perform the following ,	with self . _lock . writer ( ) :
17191	derive class MovedAttribute from the _LazyDescr base class .	class MovedAttribute ( _LazyDescr ) :
489	return boolean True .	return True
12480	if last element of args is not equal to a string STR0 ,	if args [ - 1 ] != STR0 :
5711	call the method field.rel.to._default_manager.db_manager with db as argument , call the get_by_natural_key method on the result with , unpacked list field_value as an argument , substitute the result for obj .	obj = field . rel . to . _default_manager . db_manager ( db ) . get_by_natural_key ( * field_value )
6493	define the method url_patterns with an argument self .	def url_patterns ( self ) :
15593	if reverse is true ,	if reverse :
17329	define the function iterkeys with 2 arguments : d and unpacked dictionary kw .	def iterkeys ( d , ** kw ) :
13401	if exctype is not WindowsError or string STR0 is not contained in value converted into a string ,	if exctype is not WindowsError or STR0 not in str ( value ) :
7129	define the method to_python with arguments self and value .	def to_python ( self , value ) :
8917	if lengths of initial and data are equal ,	if len ( initial ) != len ( data ) :
14321	define the method setdefault with 3 arguments : self , key and default set to None .	def setdefault ( self , key , default = None ) :
15675	return value .	return value
10973	derive the class Variable form the base class object .	class Variable ( object ) :
17457	slots is a list with an element , slots .	slots = [ slots ]
5753	get field.name attribute of obj , convert it to a string , substitute it for the value under the filed.name key of self._current dictionary .	self . _current [ field . name ] = str ( getattr ( obj , field . name ) )
14925	self.config is an instance of ConvertingDict , called with an argument config .	self . config = ConvertingDict ( config )
12018	if value is true ,	if value :
15001	remove config dictionary element under STR0 key , if it exists substitute it for props , if not , props is None .	props = config . pop ( STR0 , None )
16434	return boolean False .	return False
12268	define the method __init__ with 6 arguments : ( self , var1 , var2 , nodelist_true , nodelist_false and negate .	def __init__ ( self , var1 , var2 , nodelist_true , nodelist_false , negate ) :
15900	decorator function wraps with an argument fdel .	@ wraps ( fdel )
9654	self._post is an instance of QueryDict class , created with an empty string and mutable set to boolean True .	self . _post = QueryDict ( STR , mutable = True )
10131	try ,	try :
18123	call the function _trans.get_language_bidi , return the result .	return _trans . get_language_bidi ( )
1011	from django.utils import six into default name space .	from django . utils import six
17273	if NameError exception is caught ,	except KeyError :
2210	try ,	try :
8953	define the method as_data with an argument self .	def as_data ( self ) :
17679	skip this loop iteration , s	continue
9751	define the method __init__ with 3 arguments : self , producer and length set to None .	def __init__ ( self , producer , length = None ) :
9873	return None .	return None
4932	if not_installed_models is true ,	if not_installed_models :
326	define initialization method __init__ with 4 arguments : self , host , list of arguments args and dictionary of arguments kwargs .	def __init__ ( self , host , * args , ** kwargs ) :
18332	replace every occurrence of string STR0 in message with STR1 , replace every occurrence of string STRspecial , in the previous result for with string STR2 , substitute the result for eol_message .	eol_message = message . replace ( str ( STR0 ) , str ( STR1 ) ) . replace ( str ( STRspecial ) , str ( STR2 ) )
13372	derive class WindowsError from Exception base class .	class WindowsError ( Exception ) :
15102	get config dictionary element under STR0 key , if it exists substitute it for root , if not , root is None .	root = config . get ( STR0 , None )
12620	if not ,	else :
4952	to_delete is an empty set .	to_delete = set ( )
16530	call the function re.sub with 3 arguments : raw string STR0 , escape_quotes and tok without the first and last element , substitute the result for guts .	guts = re . sub ( STR0 , escape_quotes , tok [ 1 : - 1 ] )
8910	call the method prepare_value from the base class of the class ModelMultipleChoiceField , with an argument v , for every v in value , return the list of results .	return [ super ( ModelMultipleChoiceField , self ) . prepare_value ( v ) for v in value ]
15402	substitute item_date for latest_date .	latest_date = item_date
653	try ,	try :
16645	return result .	return result
8543	define the method get_queryset with an argument self .	def get_queryset ( self ) :
11859	if lengths of value and arg are equal , return boolean True , otherwise return boolean False .	return len ( value ) == int ( arg )
11500	define the method tokenize with an argument self .	def tokenize ( self ) :
5664	get return value of the field.get_attname function attribute of the obj object , substitute it for value .	value = getattr ( obj , field . get_attname ( ) )
15018	raise an ValueError exception with an argument string STR0 formated with value under STR1 key of config dictionary .	raise ValueError ( STR0 % config [ STR1 ] )
12677	return an instance of a SpacelessNode class , created with an argument nodelist .	return SpacelessNode ( nodelist )
17851	from django.utils.html import avoid_wrapping into default name space .	from django . utils . html import avoid_wrapping
11259	define the function dec with an argument func .	def dec ( func ) :
9583	define the function parse_cookie with cookie as the argument .	def parse_cookie ( cookie ) :
17838	raise an ValueError exception wit an argument string STR0 , where STR1 is replaced with s .	raise ValueError ( STR0 % s )
4163	if KeyError exception is caught ,	except KeyError :
180	define the method decr_version with 4 arguments , self , key , delta defaulting to integer 1 and version defaulting to None .	def decr_version ( self , key , delta = 1 , version = None ) :
12475	raise an TemplateSyntaxError exception with an argument string STR0 , where STR1 is replaced with name .	raise TemplateSyntaxError ( STR0 % name )
12794	return func .	return func
6852	escaped is boolean True .	escaped = True
15852	if six.PY3 is true ,	if six . PY3 :
17104	define the function mark_for_escaping with an argument s .	def mark_for_escaping ( s ) :
5824	for every key_value in related ,	for key_value in related :
429	if num_entries is lesser than self._max_entries ,	if num_entries < self . _max_entries :
11714	if ValueError exception is caught ,	except ValueError :
8944	convert items of attrs dictionary to list of tuples , for every attr and value in it ,	for attr , value in list ( attrs . items ( ) ) :
13868	sum return value of the function call time.time ( ) and cache_timeout , use it as an argument for function call of http_date , and substitute the return value for value under the key STR0 of dictionary response .	response [ STR0 ] = http_date ( time . time ( ) + cache_timeout )
2835	define the method add_arguments with arguments self and parser .	def add_arguments ( self , parser ) :
13276	OPERATORS is an dictionary with 12 initial entries : result of the function inflix called with 2 arguments , integer 6 , and lambda function with 3 arguments context , x and y , returns boolean True if x.eval ( context ) or y.eval ( context ) is True , for STR0 , result of the function inflix called with 2 arguments , integer 7 , and lambda function with 3 arguments context , x and y , returns boolean True if x.eval ( context ) and y.eval ( context ) is True for STR1 , result of the function prefix called with 2 arguments , integer 8 , and lambda function with 2 arguments context and x , returns boolean True if x.eval ( context ) is True for STR2 , result of the function inflix called with 2 arguments , integer 9 , and lambda function with 2 arguments context and x , returns boolean True if x.eval ( context ) is contained in y.eval ( context ) for STR3 , result of the function inflix called with 2 arguments , integer 9 , and lambda function with 2 arguments context and x , returns boolean True if x.eval ( context ) is not contained in y.eval ( context ) , for STR4 , result of the function inflix called with 2 arguments , integer 10 , and lambda function with 3 arguments context , x and y , returns boolean True if x.eval ( context ) equals y.eval ( context ) for STR5 , result of the function inflix called with 2 arguments , integer 10 , and lambda function with 3 arguments context , x and y , returns boolean True if x.eval ( context ) equals y.eval ( context ) for STR6 , result of the function inflix called with 2 arguments , integer 10 , and lambda function with 3 arguments context , x and y , returns boolean True if x.eval ( context ) doesnt equals y.eval ( context ) for STR7 , result of the function inflix called with 2 arguments , integer 10 and , lambda function with 3 arguments context , x and y , returns boolean True if x.eval ( context ) is greater than y.eval ( context ) for STR8 , result of the function inflix called with 2 arguments , integer 10 and and lambda function with 3 arguments context , x and y13277	 , returns boolean True if x.eval ( context ) is greater than or equal to y.eval ( context ) for STR9 , result of the function inflix called with 2 arguments , integer 10 and and lambda function with 3 arguments context , x and y , returns boolean True if x.eval ( context ) is smaller than y.eval ( context ) for STR10 , result of the function inflix called with 2 arguments , integer 10 and and lambda function with 3 arguments context , x and y , returns boolean True if x.eval ( context ) is smaller than or equal to y.eval ( context ) for STR11 ,	OPERATORS = { STR0 : infix ( 6 , lambda context , x , y : x . eval ( context ) or y . eval ( context ) ) , STR1 : infix ( 7 , lambda context , x , y : x . eval ( context ) and y . eval ( context ) ) , STR2 : prefix ( 8 , lambda context , x : not x . eval ( context ) ) , STR3 : infix ( 9 , lambda context , x , y : x . eval ( context ) in y . eval ( context ) ) , STR4 : infix ( 9 , lambda context , x , y : x . eval ( context ) not in y . eval ( context ) ) , STR5 : infix ( 10 , lambda context , x , y : x . eval ( context ) == y . eval ( context ) ) , STR6 : infix ( 10 , lambda context , x , y : x . eval ( context ) == y . eval ( context ) ) , STR7 : infix ( 10 , lambda context , x , y : x . eval ( context ) != y . eval ( context ) ) , STR8 : infix ( 10 , lambda context , x , y : x . eval ( context ) > y . eval ( context ) ) , STR9 : infix ( 10 , lambda context , x , y : x . eval ( context ) >= y . eval ( context ) ) , STR10 : infix ( 10 , lambda context , x , y : x . eval ( context ) < y . eval ( context ) ) , STR11 : infix ( 10 , lambda context , x , y : x . eval ( context ) <= y . eval ( context ) ) , }
2473	for every app_config in reversed list created out of the return value of the function apps.get_app_configs ,	for app_config in reversed ( list ( apps . get_app_configs ( ) ) ) :
17271	try ,	try :
1768	call the signals.got_request_exception.send method with sender set to type of the self class instance and request set to request .	signals . got_request_exception . send ( sender = self . __class__ , request = request )
9845	for every bytes in stream ,	for bytes in stream :
2235	if not ,	else :
16718	try ,	try :
7539	call the method self.validate with an argument out .	self . validate ( out )
6262	if not ,	else :
10461	property decorator ,	@ property
6801	code is a string STR0	code = STR0
15292	if PY3 field of module six is boolean True ,	if six . PY3 :
1419	call the safe_join function with arguments self.location and name , substitute it for path .	path = safe_join ( self . location , name )
10967	args_check is a static method .	args_check = staticmethod ( args_check )
15118	remove config dictionary entry under STR0 key , substitute it for value under STR1 key of config dictionary .	config [ STR0 ] = config . pop ( STR1 )
16951	yield representative and boolean True .	yield representative , True
4379	def get_handler with 3 arguments : self , unpacked list args and unpacked dictionary options .	def get_handler ( self , * args , ** options ) :
14764	define the function make_decorator with 2 arguments : unpacked list m_args and unpacked dictionary m_kwargs .	def _make_decorator ( * m_args , ** m_kwargs ) :
16451	if not ,	else :
9134	if not ,	else :
4869	from django.core.management import call_command into default name space .	from django . core . management import call_command
11366	call the function add_to_builtins with an argument string STR0 .	add_to_builtins ( STR0 )
5561	internal_use_only is boolean False .	internal_use_only = False
11440	derive the class Context from the BaseContext base class .	class Context ( BaseContext ) :
2337	call the method self.extra_headers.get with string STR0 and self.from_email as arguments , substitute the result for value under the STR1 key of msg dictionary .	msg [ STR0 ] = self . extra_headers . get ( STR1 , self . from_email )
4961	call the method to_delete.add with an argument model .	to_delete . add ( model )
18591	for every cmatch in cmatches ,	for cmatch in cmatches :
13599	replace all the elements of the basedir list by its corresponding absolute directory path , only is that directory exists .	basedirs = [ os . path . abspath ( basedir ) for basedir in basedirs if os . path . isdir ( basedir ) ]
17953	substitute offset.seconds for offset .	offset = offset . seconds // 60
7428	return value .	return value
18423	if lang_code is not None ,	if lang_code is not None :
15103	if root is true ,	if root :
6245	from django.utils.functional import lazy into default name space .	from django . utils . functional import lazy
10819	if length of self.backout is greater than zero ,	if not len ( self . backout ) :
9239	if self.is_required is false ,	if not self . is_required :
5578	define the method end_object with arguments self and obj .	def end_object ( self , obj ) :
16678	otherwise if result of the call to the function _len with an argument cache is greater than or equal to maxsize ,	elif _len ( cache ) >= maxsize :
6001	from wsgiref import simple_server into default name space .	from wsgiref import simple_server
6767	if ValidationError exception is caught ,	except ValidationError :
16998	define the function flatten_result with an argument source .	def flatten_result ( source ) :
15317	import module datetime .	import datetime
9271	define the method _format_value with 2 arguments : self and value .	def _format_value ( self , value ) :
13685	if termios is true ,	if termios :
10122	self._post is an instance of QueryDict created with arguments : self.body and encoding set to self._encoding , self._files is an instance of class MultiValueDict .	self . _post , self . _files = QueryDict ( self . body , encoding = self . _encoding ) , MultiValueDict ( )
3494	has_bz2 is boolean True .	has_bz2 = True
15551	from importlib import import_module into default name space .	from importlib import import_module
17874	if count2 does not equals to integer 0 ,	if count2 != 0 :
8261	skip this loop iteration .	continue
11209	raise an InvalidTemplateLibrary exception with an argument string STR0 , substitute STR1 with name and compile_function .	raise InvalidTemplateLibrary ( STR0 , ( name , compile_function ) )
591	substitute value_not_found_exception for self.LibraryValueNotFoundException .	self . LibraryValueNotFoundException = value_not_found_exception
14387	raise self.warning .	raise self . warning
9291	return the result of the function format_html called with 2 arguments : string STR0 , and result of the function flatatt , called with an argument final_attrs .	return format_html ( STR0 , flatatt ( final_attrs ) )
6895	call the function get_format with an argument string STR0 , substitute the first element of the result for input_format .	input_format = get_format ( STR0 ) [ 0 ]
13947	LUHN_ODD_LOOKUP is a tuple with 10 elements : integers 0 , 2 , 4 , 6 , 8 , 1 , 3 , 5 , 7 and 9 .	LUHN_ODD_LOOKUP = ( 0 , 2 , 4 , 6 , 8 , 1 , 3 , 5 , 7 , 9 )
18759	import module os .	import os
11410	if key is contained in d ,	if key in d :
2418	define the method __init__ with 11 arguments : self , subject set to an empty string , body set to an empty string ,	def __init__ ( self , subject = STR , body = STR , from_email = None , to = None , bcc = None , connection = None , attachments = None , headers = None , alternatives = None , cc = None ) :
8878	substitute SelectMultiple for widget .	widget = SelectMultiple
17807	replace every occurrence of STR in s with STR0 .	s = s . replace ( STR , STR0 )
2668	if self has an STR0 attribute , has_old_option is boolean True , otherwise it is boolean False .	has_old_option = hasattr ( self , STR0 )
8483	attrs is a dictionary with model for STR0 .	attrs = { STR0 : model }
244	call the method self._base_set with string STR0 , key , value and timeout as arguments , return the result .	return self . _base_set ( STR0 , key , value , timeout )
10529	if not ,	else :
17590	split instructions by STR0 character , substitute the result for styles .	styles = instructions . split ( STR0 )
554	for every k in doomed ,	for k in doomed :
1148	chunk_size is an integer 1024 .	chunk_size = 1024
8285	skip this loop iteration .	continue
12254	compare_to is None .	compare_to = None
8867	call the method self.queryset.get with an argument , unpacked dictionary with an element : value for key , substitute the result for value .	value = self . queryset . get ( ** { key : value } )
17406	if sep is not None ,	if sep is not None :
7354	value is boolean False .	value = False
16543	from django.utils.module_loading import import_string into default name space .	from django . utils . module_loading import import_string
6602	if resolved_path is true ,	if resolved_path :
1109	call the function force_bytes with argument content , substitute it for content .	content = force_bytes ( content )
7459	define the method __init__ with 3 arguments : self unpacked list args and unpacked dictionary kwargs .	def __init__ ( self , * args , ** kwargs ) :
2274	call the function forbid_multi_line_headers with 3 arguments : name , val and string STR0 , substitute the result for name and val , respectively .	name , val = forbid_multi_line_headers ( name , val , STR0 )
2880	substitute style.ERROR for style.ERROR_OUTPUT .	style . ERROR_OUTPUT = style . ERROR
11684	define the function make_list with an argument value .	def make_list ( value ) :
7680	for every base in new_class.__mro__ in reversed order ,	for base in reversed ( new_class . __mro__ ) :
3256	from django.db import connections , router , transaction and DEFAULT_DB_ALIAS into default name space .	from django . db import connections , router , transaction , DEFAULT_DB_ALIAS
10009	if settings.DEBUG is true ,	if settings . DEBUG :
15205	define the method configure_root with 3 arguments : self , config and incremental set to boolean False .	def configure_root ( self , config , incremental = False ) :
15487	call the method handler.endElement with an argument string STR0 .	handler . endElement ( STR0 )
10331	convert value to an string and substitute it for value .	value = str ( value )
15846	define the method __deepcopy__ with 2 arguments self and memo .	def __deepcopy__ ( self , memo ) :
12922	call the method block_context.add_blocks with an argument self.block .	block_context . add_blocks ( self . blocks )
3599	fixture_files is an empty list .	fixture_files = [ ]
6263	self.namespaces is an empty list .	self . namespaces = [ ]
11278	substitute func.__doc__ for compile_func.__doc__ .	compile_func . __doc__ = func . __doc__
18649	define the method __repr__ with an argument self .	def __repr__ ( self ) :
2837	define the method handle with 3 arguments : self , unpacked list labels and unpacked dictionary options .	def handle ( self , * labels , ** options ) :
7148	substitute length of digittuple for digits .	digits = len ( digittuple )
1104	define the method __init__ with arguments self , content and name defaulting to None .	def __init__ ( self , content , name = None ) :
4069	merge_migrations is an empty list .	merge_migrations = [ ]
10377	define the method set_cookie with 9 arguments : self , key , value set to an empty string , max_age set to None , expires set to None ,	def set_cookie ( self , key , value = STR , max_age = None , expires = None , path = STR0 , domain = None , secure = False , httponly = False ) :
633	substitute v for value under the k-th element of m key of _ dictionary .	_ [ m [ k ] ] = v
3991	call the method parser.add_argument with 5 arguments : string STR0 , action as a string STR1 , dest as a string STR2 , default set to boolean True , and help as a string STR3 .	parser . add_argument ( STR0 , action = STR1 , dest = STR2 , default = True , help = STR3 )
373	cache_suffix is a string STR0 .	cache_suffix = STR0
16529	if tok starts with STR ,	if tok . startswith ( STR ) :
9138	call the method self.attrs.copy , substitute the result for obj.attrs .	obj . attrs = self . attrs . copy ( )
11237	define the method filter_function with 3 arguments : self , func and unpacked dictionary flags .	def filter_function ( self , func , ** flags ) :
8214	for every form in self call the form.as_table method , join the results in a string , separated by an empty string .	forms = STR . join ( form . as_table ( ) for form in self )
8802	derive the class ModelChoiceIterator from object base class .	class ModelChoiceIterator ( object ) :
3398	if field_type is not equal to string STR0 or string STR1 ,	if field_type not in ( STR0 , STR1 ) :
10682	define the method create_token with 3 arguments : self , token_string and in_tag .	def create_token ( self , token_string , in_tag ) :
12704	raise an TemplateSyntaxError exception with an argument string STR0 .	raise TemplateSyntaxError ( STR0 )
443	define the method key_to_file with self class instance , key and version defaulting to None as arguments .	def _key_to_file ( self , key , version = None ) :
5147	open new_path file in STR0 mode , with file descriptor renamed to new_file ,	with open ( new_path , STR0 ) as new_file :
10556	from django.utils.encoding import force_str and force_text into default name space .	from django . utils . encoding import force_str , force_text
2169	call the self.close method .	self . close ( )
2389	attachment is an instance of a class SafeMIMEText , created with arguments : content , subtype and encoding .	attachment = SafeMIMEText ( content , subtype , encoding )
12246	value under the self key of state_frame dictionary is None .	state_frame [ self ] = None
12202	substitute i incremented by 1 for value under the STR0 key of the loop_dict dictionary .	loop_dict [ STR0 ] = i + 1
3947	define the method copy_plural_forms with arguments self , msgs and locale .	def copy_plural_forms ( self , msgs , locale ) :
14002	call the function binascii.hexlify with an argument x , convert the result to base 16 integer , return the result .	return int ( binascii . hexlify ( x ) , 16 )
12324	derive the class SsiNode from Node base class .	class SsiNode ( Node ) :
11242	call the function getargspec with an argument func , substitute the result for params , varargs , varkw and defaults , respectively .	params , varargs , varkw , defaults = getargspec ( func )
15291	evaluate the member method of s , encode with the encoding and errors as the arguments , return the result .	return s . encode ( encoding , errors )
8272	if construct is true ,	if construct :
16780	try ,	try :
13437	define the method _archive_cls with an argument file .	def _archive_cls ( file ) :
6640	import module re .	import re
6904	html is an empty dictionary .	html = { }
1784	call the function func with request and response as arguments , assign the result to response .	response = func ( request , response )
9701	if StopFutureHandlers exception is caught .	except StopFutureHandlers :
8380	if opts.fields equals ALL_FIELDS ,	if opts . fields == ALL_FIELDS :
5847	call the self.xml.addQuickElement method with 2 arguments : string STR0 and attr dictionary containing 1 entry : return value of the function smart_text with return value of the method value._get_pk_val as an argument for STR1 .	self . xml . addQuickElement ( STR0 , attrs = { STR1 : smart_text ( value . _get_pk_val ( ) ) } )
12942	if self.isolated_context is true ,	if self . isolated_context :
1076	buffer_ is None .	buffer_ = None
2578	call the method parser.add_argument with an argument string STR0 .	parser . add_argument ( STR0 )
15163	call the method self.as_tuple with an argument value under STR0 key of config dictionary , substitute the result for value under STR1 key of config dictionary .	config [ STR0 ] = self . as_tuple ( config [ STR1 ] )
7388	define the method __deepcopy__ with arguments self and memo .	def __deepcopy__ ( self , memo ) :
3653	if dirname is true , return dirname converted to a string and surounded by single quotes , if not return string STR0 .	return STR0 % dirname if dirname else STR1
16417	if STR0 is not contained in ip_str and number of occurrences of STR1 in ip_str is not equal to integer 7 ,	if STR0 not in ip_str and ip_str . count ( STR1 ) != 7 :
16588	define the method __init__ with 2 arguments : self and callback .	def __init__ ( self , callback ) :
7031	define the method widget_attrs with arguments self and widget .	def widget_attrs ( self , widget ) :
14613	compile regex from raw string STR0 , substitute it for date_re .	date_re = re . compile ( STR0 )
12627	if length of bits is greater or equal to integer 4 and second last element of bits equals sting STR0 ,	if len ( bits ) >= 4 and bits [ - 2 ] == STR0 :
13993	result is an integer 0 .	result = 0
8745	from django.db.models import ForeignKey .	from django . db . models import ForeignKey
5302	derive the class InvalidPage from the Exception base class .	class InvalidPage ( Exception ) :
483	call the method self.make_key with key and version set to version as arguments , substitute the result for key .	key = self . make_key ( key , version = version )
15683	from django.utils.six.moves import copyreg into default name space .	from django . utils . six . moves import copyreg
6750	return boolean True .	return True
7461	if STR0 key of the kwargs dictionary exists remove it and substitute its value for self.empty_value , if not , self.empty_value is an empty list .	self . empty_value = kwargs . pop ( STR0 , [ ] )
5217	get the value under the STR0 key of the info dictionary , substitute it for content_type .	content_type = info . get ( STR0 )
6751	if ValidationError exception is caught ,	except ValidationError :
17065	return an instance of SafeText , created with an argument t .	return SafeText ( t )
3251	substitute skipped for model_dependencies .	model_dependencies = skipped
18024	call the method timezone.localize with 2 arguments : value and is_dst as None , return the result .	return timezone . localize ( value , is_dst = None )
13163	derive the class SimpleTemplateResponse from the HttpResponse base class .	class SimpleTemplateResponse ( HttpResponse ) :
714	call the function _check_test_runner with dictionary kwargs as argument , use the result as an argument for the call to the function errors.extend .	errors . extend ( _check_test_runner ( ** kwargs ) )
18671	append data to self.children .	self . children . append ( data )
11217	return dec .	return dec
6946	call the method self.build_attrs with an argument id set to field modulus id_ , substitute the result for local_attrs .	local_attrs = self . build_attrs ( id = field % id_ )
6104	call the function importlib.import_module with 2 arguments : flup_module converted to string and appended to STR0 character , and string STR1 , substitute the result for module .	module = importlib . import_module ( STR0 % flup_module , STR1 )
2144	return nothing .	return
1505	substitute name for self._name .	self . _name = name
5484	if field.serialize is true ,	if field . serialize :
662	for every key and value in data.items function return value ,	for key , value in data . items ( ) :
13453	return cls .	return cls
14504	if name is None ,	if name is None :
9481	if self.is_localized is true ,	if self . is_localized :
9618	if six.PY2 is true , _BASE64_DECODE_ERROR is TypeError , if not , _BASE64_DECODE_ERROR is binascii.Error .	_BASE64_DECODE_ERROR = TypeError if six . PY2 else binascii . Error
3984	derive the class Command from the BaseCommand class .	class Command ( BaseCommand ) :
18410	if regex_match is false ,	if not regex_match :
15981	call the method self.reset .	self . reset ( )
17595	if fg is contained in color_names ,	if fg in color_names :
15970	call the function escape with an argument p , replace every occurrence of STR0 in the result for STR1 , format the string STR2 with the result , for every p in paras , substitute list of results for paras .	paras = [ STR0 % escape ( p ) . replace ( STR1 , STR2 ) for p in paras ]
17205	substitute old_mod for self.mod .	self . mod = old_mod
13080	break from the loop execution .	break
8781	if self.parent_instance is not None ,	if self . parent_instance is not None :
15014	substitute self.config for config .	config = self . config
15578	append string STR0 to format_locations .	format_locations . append ( STR0 )
2045	from django.utils import six into default name space .	from django . utils import six
7651	__all__is an tuple with 2 elements : strings STR0 and STR1 .	__all__ = ( STR0 , STR1 )
9202	inputs is an empty list .	inputs = [ ]
123	define the function make_key with self class instance , key and version set to None as arguments .	def make_key ( self , key , version = None ) :
9714	for every i and handler in enumerated iterable handlers ,	for i , handler in enumerate ( handlers ) :
1229	import module os .	import os
10568	TOKEN_COMMENT is integer 3 .	TOKEN_COMMENT = 3
13931	if header equals a string STR0 and is_accept_language_redundant is boolean True ,	if header == STR0 and is_accept_language_redundant :
2094	mail.outbox is an empty list .	mail . outbox = [ ]
13765	substitute digits for self.digits .	self . digits = digits
6159	derive the class SignatureExpired from the BadSignature base class .	class SignatureExpired ( BadSignature ) :
3330	table2model is a lambda function with an argument table_name , return value is the return value of the re.sub method , called with 3 arguments : raw string STR0 , empty string and result of the method table_name.title .	table2model = lambda table_name : re . sub ( STR0 , STR , table_name . title ( ) )
17724	otherwise if closing_tag is true ,	elif closing_tag :
2004	from django.utils import six into default name space .	from django . utils import six
15619	if AttributeError exception is caught ,	except AttributeError :
14451	call the function _ with an argument string STR0 , return the result .	return _ ( STR0 )
10915	raise an TemplateSyntaxError exception with an argument string STR0 , where STR1 is replaced with elemnts of token from upto index till the end , and token .	raise TemplateSyntaxError ( STR0 % ( token [ upto : ] , token ) )
1014	derive the class File from the FileProxyMixin base class .	class File ( FileProxyMixin ) :
5633	derive Serializer from the base.Serializer base class .	class Serializer ( base . Serializer ) :
17232	delete attr .	del attr
40	call the function local , substitute the result for self._caches .	self . _caches = local ( )
17005	params is a list with second element of source as a element .	params = [ source [ 1 ] ]
6574	if args in None of boolean False , substitute it for an empty list .	args = args or [ ]
7677	value under the STR0 key of the attrs dictionary is an instance of OrderedDict class , created with an argument current_fields .	attrs [ STR0 ] = OrderedDict ( current_fields )
1553	define the method __str__ with argument self .	def __str__ ( self ) :
9116	python_2_unicode_compatible decorator	@ python_2_unicode_compatible
17445	if this_bases is None ,	if this_bases is None :
3736	join into a file path : self.locale_dir and string STR0 appended to domain converted to string , substitute it for potfile .	potfile = os . path . join ( self . locale_dir , STR0 % str ( domain ) )
14281	if IndexError exception is caught ,	except IndexError :
16927	if not ,	else :
6674	define the method __eq__ with arguments self and other .	def __eq__ ( self , other ) :
12967	return an instance of a BlockNode class , created with 2 arguments : block_name and nodelist .	return BlockNode ( block_name , nodelist )
5159	for every path_to_remove in self.paths_to_remove ,	for path_to_remove in self . paths_to_remove :
15072	if StandardError , renamed to e , exception is caught ,	except StandardError as e :
2255	if not ,	else :
7369	return boolean True .	return True
5582	if indent is false ,	if not indent :
2089	from django.core.mail.backends.base import BaseEmailBackend into default name space .	from django . core . mail . backends . base import BaseEmailBackend
16679	substitute root for oldroot .	oldroot = root
11579	from django.template.base import Variable , Library and VariableDoesNotExist into default name space .	from django . template . base import Variable , Library , VariableDoesNotExist
5751	define the method handle_field with arguments self , obj and field .	def handle_field ( self , obj , field ) :
7811	self.cleaned_data is an empty dictionary .	self . cleaned_data = { }
9556	derive class SimpleCookie from the base class http_cookies.SimpleCookie .	class SimpleCookie ( http_cookies . SimpleCookie ) :
18419	if _supported is None ,	if _supported is None :
6571	if urlconf is None ,	if urlconf is None :
15162	otherwise if klass is subclass of logging.handlers.SysLogHandler class , and string STR0 is contained in config ,	elif issubclass ( klass , logging . handlers . SysLogHandler ) and STR0 in config :
18336	if not ,	else :
5415	define the function unregister_serializer with an argument format .	def unregister_serializer ( format ) :
762	INFO is integer 20 .	INFO = 20
7386	call the __init__ method of the base class of the class ChoiceField , called with 7 arguments : required set to required , widget set to widget , label set to label , initial set to initial , help_text set to help_text , unpacked list args , and unpacked dictionary kwargs .	super ( ChoiceField , self ) . __init__ ( required = required , widget = widget , label = label , initial = initial , help_text = help_text , * args , ** kwargs )
8809	if self.field.cache_choices is true ,	if self . field . cache_choices :
10346	if not ,	else :
13894	define function _generate_cache_key , with request , method , headerlist and key_prefix as arguments .	def _generate_cache_key ( request , method , headerlist , key_prefix ) :
3724	return nothing .	return
15588	do nothing .	pass
3781	get the value under the STR0 key of the options dictionary , substitute it for process_all .	process_all = options . get ( STR0 )
7858	call the method self.add_initial_prefix with an argument name , substitute the result for initial_prefixed_name .	initial_prefixed_name = self . add_initial_prefix ( name )
8798	raise an ValidationError with 2 arguments : self.error_messages dictionary value under the STR0 key , and code set to a string STR1 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 )
11657	append STR0 to digits .	digits . append ( STR0 )
8852	return self._choices .	return self . _choices
18177	define the function ugettext with an argument message .	def ugettext ( message ) :
3945	otherwise if self.verbosity is greater than integer 0 ,	elif self . verbosity > 0 :
13006	from django.template.loader import BaseLoader into default name space .	from django . template . loader import BaseLoader
12558	return an instance of IfEqualNode class , created with 5 arguments : val1 , val2 , nodelist_true , nodelist_false and negate .	return IfEqualNode ( val1 , val2 , nodelist_true , nodelist_false , negate )
14116	try ,	try :
15495	call the method handler.addQuickElement with 3 arguments : string STR0 , an empty string and a dictionary with 2 entries : STR1 for STR2 and value under the STR3 key of self.feed dictionary for STR4 .	handler . addQuickElement ( STR0 , STR , { STR1 : STR2 , STR3 : self . feed [ STR4 ] } )
10928	if invalid_var_format_string is None ,	if invalid_var_format_string is None :
18176	return message .	return message
4845	call the function get_runner with arguments settings and self.test_runner , substitute the result for test_runner_class .	test_runner_class = get_runner ( settings , self . test_runner )
13160	from django.utils import six into default name space .	from django . utils import six
18188	define the function get_language_from_path with an argument request .	def get_language_from_path ( request ) :
7747	label is an empty string .	label = STR
10660	append STR0 to third element of bit , substitute it for sentinal .	sentinal = bit [ 2 ] + STR0
12669	raise an TemplateSyntaxError exception with an argument string STR0 .	raise TemplateSyntaxError ( STR0 )
9487	call the method self.build_attrs with an argument attrs , substitute the result for final_attrs .	final_attrs = self . build_attrs ( attrs )
84	MEMCACHE_MAX_KEY_LENGTH is integer 250 .	MEMCACHE_MAX_KEY_LENGTH = 250
6488	return self._urlconf_module .	return self . _urlconf_module
10095	call the method self.read , substitute the result or self._body .	self . _body = self . read ( )
14528	define the method I with an argument self .	def I ( self ) :
3679	substitute file_name for self.file_name .	self . file = file_name
9800	derive the class ChunkIter from the six.Iterator base class .	class ChunkIter ( six . Iterator ) :
18396	get the value under the lang_code key of the _BROWSERS_DEPRECATED_LOCALES dictionary , substitute it for replacement .	replacement = _BROWSERS_DEPRECATED_LOCALES . get ( lang_code )
9485	call the method self.decompress with an argument value , substitute the result for value .	value = self . decompress ( value )
4502	if ImportError exception is caught ,	except ImportError :
12071	define the function pprint with an argument value .	def pprint ( value ) :
16576	if not ,	else :
11149	for every bit in bits ,	for bit in bits :
12975	call the method nodelist.get_nodes_by_type with an argument ExtendsNode , if it evaluates to true ,	if nodelist . get_nodes_by_type ( ExtendsNode ) :
253	call the function now.replace with microseconds set to integer 0 , substitute the result for now .	now = now . replace ( microsecond = 0 )
2958	take locale or all_locales , whichever is not empty , respectively , and substitute it for locales .	locales = locale or all_locales
14754	define the function decorator_from_middleware_with_args with an argument middleware_class .	def decorator_from_middleware_with_args ( middleware_class ) :
8960	call the function format_html with 2 arguments : string STR1 , and return value of the function , format_html_join , called with 3 arguments : empty string , string STR2 , tuple containing tuples with 2 elements : k and result of the function force_text with an argument v , for every k and v in items of the dictionary self , return the result .	return format_html ( STR1 , format_html_join ( STR , STR2 , ( ( k , force_text ( v ) ) for k , v in self . items ( ) ) ) )
17639	yield line .	yield line
14300	remove element under STR0 key of obj_dict dictionary , if it exists substitute it for data , if not data is an empty list .	data = obj_dict . pop ( STR0 , { } )
868	return boolean True if tag is contained in self.tags_available method return value , return False otherwise .	return tag in self . tags_available ( )
4793	from django.core.management.base import BaseCommand into default name space .	from django . core . management . base import BaseCommand
16074	nofollow_attr is an empty string .	nofollow_attr = STR
12961	substitute list with an element block_name for parser.__loaded_blocks .	parser . __loaded_blocks = [ block_name ]
4430	call the method now.decode with an argument string STR0 , substitute the result for now .	now = now . decode ( STR0 )
4022	raise an CommandError with an argument string STR0 .	raise CommandError ( STR0 )
15717	if self.__dispatch is None .	if self . __dispatch is None :
9355	value is an empty list .	value = [ ]
10205	define the method appendlist with 3 arguments : self , key and value .	def appendlist ( self , key , value ) :
939	do nothing .	pass
584	derive the class BaseMemcachedCache from base class BaseMemcachedCacheMethods and BaseCache .	class BaseMemcachedCache ( six . with_metaclass ( BaseMemcachedCacheMethods , BaseCache ) ) :
13096	call the function get_template_from_string with 3 arguments : template , origin and template_name , substitute the result for template .	template = get_template_from_string ( template , origin , template_name )
13764	substitute sign for self.sign .	self . sign = sign
11398	for every d in reversed list self.dicts ,	for d in reversed ( self . dicts ) :
7947	if not ,	else :
4609	from django.db import connections and DEFAULT_DB_ALIAS into default name space .	from django . db import connections , DEFAULT_DB_ALIAS
5326	raise an EmptyPage exception with string STR0 as an argument .	raise EmptyPage ( STR0 )
4111	from django.apps import apps into default name space .	from django . apps import apps
2615	from argparse import ArgumentParser into default name space .	from argparse import ArgumentParser
6501	define the method resolve_error_handler with arguments self and view_type .	def resolve_error_handler ( self , view_type ) :
3210	models is an empty set .	models = set ( )
9428	substitute choice for choice_value and choice_label , respectively .	choice_value , choice_label = choice
11152	call the method six.iteritems with an argument kwarg , convert the result into a list , substitute first element of the result for param and value .	param , value = list ( six . iteritems ( kwarg ) ) [ 0 ]
10345	instantiate class Header with 3 arguments : value , string STR0 , maxlinelen set to sys.maxsize , call the encode method on it , convert the result into a string and substitute it for value .	value = str ( Header ( value , STR0 , maxlinelen = sys . maxsize ) . encode ( ) )
951	alternatively , if six.PY3 is true check if message does not have an attribute STR0 , if six.PY3 is false , check if message doesnt have an attribute STR1 , perform the following ,	elif not hasattr ( message , STR0 if six . PY3 else STR1 ) :
15219	derive the class DjangoUnicodeDecodeError from the base class UnicodeDecodeError .	class DjangoUnicodeDecodeError ( UnicodeDecodeError ) :
12568	substitute text for self.text .	self . text = text
14399	substitute complain for pop .	pop = complain
9431	if id_ is true ,	if id_ :
8434	return exclude .	return exclude
9986	define the method __init__ with an argument self .	def __init__ ( self ) :
11776	replace every occurrence of arg is value for an empty string , substitute the result for value .	value = value . replace ( arg , STR )
11213	define the method filter with 4 arguments : self , name set to None , filter_func set to None and unpacked dictionary flags .	def filter ( self , name = None , filter_func = None , ** flags ) :
10437	substitute serialize for __str__ .	__str__ = serialize
8160	define the method is_valid with an argument self .	def is_valid ( self ) :
15936	WRAPPING_PUNCTUATION is a list with 6 elements : tuple with 2 elements : STR0 and STR1 , tuple with 2 elements : STR2 and STR3 , tuple with 2 elements : STR4 and STR5 , tuple with 2 elements : STR6 and STR7 , tuple with 2 elements : STR and STR , and tuple with 2 elements : 'STR STR8STR ' .	WRAPPING_PUNCTUATION = [ ( STR0 , STR1 ) , ( STR2 , STR3 ) , ( STR4 , STR5 ) , ( STR6 , STR7 ) , ( STR , STR ) , ( 'STR STR8STR' ) ]
3678	define the method __init__ with 4 arguments : self , dirpath , file_name and locale_dir .	def __init__ ( self , dirpath , file_name , locale_dir ) :
14191	if key is not contained in self ,	if key not in self :
8926	call the function warnings.warn with 3 arguments : string STR0 , RemovedInDjango19Warning and stacklevel set to an integer 2 .	warnings . warn ( STR0 , RemovedInDjango19Warning , stacklevel = 2 )
10435	substitute serialize for __bytes__ .	__bytes__ = serialize
8008	from django.utils.six.moves import xrange into default name space .	from django . utils . six . moves import xrange
2949	from django.conf import settings into default name space .	from django . conf import settings
10784	raise an self.error exception with 2 arguments : token and string STR0 , where STR1 is replaced with command and result of the function get_text_list called with an argument list , with p converted into a string and surrounded with single quotes for every p in parse_until .	raise self . error ( token , STR0 % ( command , get_text_list ( [ STR1 % p for p in parse_until ] ) ) )
17154	try ,	try :
14783	return result ,	return result
5894	define the method _handle_fk_field_node with arguments self , node and field .	def _handle_fk_field_node ( self , node , field ) :
2128	if self.timeout is not None ,	if self . timeout is not None :
6631	define the function get_urlconf with an argument default set to None .	def get_urlconf ( default = None ) :
13123	skip this loop iteration .	continue
12583	call the method parse from the instance of TemplateIfParser class , created with 2 arguments parser and bits , substitute the result for condition .	condition = TemplateIfParser ( parser , bits ) . parse ( )
10613	substitute source for self.source .	self . source = source
5782	from xml.sax import handler into default name space .	from xml . sax import handler
4507	if ImportError exception is caught ,	except ImportError :
17021	increment i-th element of result by piece .	result [ i ] += piece
15281	try ,	try :
13774	return value .	return value
18566	call the method context_match.group with an argument integer 1 , substitute the result for message_context .	message_context = context_match . group ( 1 )
16179	convert tag to lowercase if it is not equal to self.cdata_tag ,	if tag . lower ( ) != self . cdata_tag :
6576	if prefix is None ,	if prefix is None :
16023	define the function strip_entities with an argument value .	def strip_entities ( value ) :
17547	yield nothing .	yield
12065	do nothing ,	pass
1720	try ,	try :
10951	call the function mark_safe with an argument new_obj , substitute the result for obj .	obj = mark_safe ( new_obj )
14260	do nothing .	pass
10322	if val is an instance of bytes , return val , otherwise return result of the method val.encode called with an argument encoding .	return val if isinstance ( val , bytes ) else val . encode ( encoding )
5402	raise an self.exception exception .	raise self . exception
6242	from django.utils.datastructures import MultiValueDict into default name space .	from django . utils . datastructures import MultiValueDict
12783	if TemplateLoader has an attribute STR0 ,	if hasattr ( TemplateLoader , STR0 ) :
18736	try ,	try :
5680	call the function _get_model with an argument value under the STR0 key of the d dictionary , substitute the result for Model .	Model = _get_model ( d [ STR0 ] )
8490	if localized_fields is not None ,	if localized_fields is not None :
2731	if Exception , renamed to e , exception is caught ,	except Exception as e :
5084	define the method handle with 5 arguments : self , app_or_project , name , target set to None and unpacked dictionary options .	def handle ( self , app_or_project , name , target = None , ** options ) :
2440	evaluate the self.get_fqdn method , return the result .	return self . get_fqdn ( )
8190	define the method has_changed with an argument self .	def has_changed ( self ) :
10655	define the method split_contents with an argument self .	def split_contents ( self ) :
15995	if HTMLParseError exception is caught ,	except HTMLParseError :
14139	yield v .	yield v
12390	call the function reverse with 4 arguments : concatenated project_name , character STR0 and view_name , args as args , kwargs as kwargs , current_app as context.current_app , substitute the result for url .	url = reverse ( project_name + STR0 + view_name , args = args , kwargs = kwargs , current_app = context . current_app )
17462	if PY3 is true ,	if PY3 :
9816	define the method __init__ with arguments self , stream and boundary .	def __init__ ( self , stream , boundary ) :
11068	define the method render with 2 arguments : self and context .	def render ( self , context ) :
16635	substitute len for _len .	_len = len
16943	for every ch in input_iter ,	for ch in input_iter :
6610	define the function clear_url_caches .	def clear_url_caches ( ) :
9597	return cookiedict .	return cookiedict
16815	from django.conf import settings into default name space .	from django . conf import settings
9774	join result of the parts function into a bytes string , substitute it for out .	out = STR . join ( parts ( ) )
12080	from datetime import datetime into default name space .	from datetime import datetime
17434	for every i and arg in enumerated iterable args ,	for i , arg in enumerate ( args ) :
1748	substitute STR0 in STR1 with request.path , extra is an dictionary with two pairs of elements , STR2 with value 403 , and 'request with value request , respectively use the previous as the arguments for the call to the logger.warning function .	logger . warning ( STR0 , request . path , extra = { STR1 : 403 , STR2 : request } )
5466	do nothing .	pass
2945	if evaluation of the function find_command with self.program as argument equals to None ,	if find_command ( self . program ) is None :
12170	if self.is_reversed is true , substitute reversed_text is an string STR0 , if not , reversed_text is an empty string .	reversed_text = STR0 if self . is_reversed else STR
15492	return a dictionary with an entry : self.ns for STR0 .	return { STR0 : self . ns }
10212	call the method pop from the base class of the class QueryDict , with arguments key and unpacked list args , return the result .	return super ( QueryDict , self ) . pop ( key , * args )
4180	if target_app_labels_only is true ,	if target_app_labels_only :
1157	do nothig .	pass
3334	yield string STR0 as the result .	yield STR0
16500	get the value under the state key of the regexes dictionary , call the method finditer on the result with 2 arguments : text and start ,	for match in regexes [ state ] . finditer ( text , start ) :
3867	call the method msgs.decode with an argument string STR0 , substitute it for msgs .	msgs = msgs . decode ( STR0 )
4604	call the function sql_destroy_indexes with 3 arguments : app_config , self.style and connection , substitute the result for statements .	statements = sql_destroy_indexes ( app_config , self . style , connection )
4408	convert self.use_ipv6 to boolean , substitute it for self._raw_ipv6 .	self . _raw_ipv6 = bool ( self . use_ipv6 )
17567	append value under the 0 key of the opt_dict dictionary to code_list .	code_list . append ( opt_dict [ o ] )
4556	call the function sql_all with 3 arguments : app_config , self.style and connection , substitute the result for statements .	statements = sql_all ( app_config , self . style , connection )
5239	try ,	try :
16262	raise an ValueError exception with an argument string STR0 .	raise ValueError ( STR0 )
5112	append string STR0 to app_or_project , substitute it for base_directory .	base_directory = STR0 % app_or_project
4863	substitute value under the STR0 key of the options dictionary for value under the STR1 key of the os.environ dictionary .	os . environ [ STR0 ] = options [ STR1 ]
16101	if use_workaround is boolean False ,	if not use_workaround :
9405	call the method __init__ from the base class of the class CheckboxChoiceInput , with 2 arguments : unpacked list args , and unpacked dictionary kwargs .	super ( CheckboxChoiceInput , self ) . __init__ ( * args , ** kwargs )
10935	if not ,	else :
12593	if token.contents equals string STR0 ,	if token . contents == STR0 :
5725	call the function base.DeserializedObject with obj and m2m_data as arguments , yield the result as the generator return value .	yield base . DeserializedObject ( obj , m2m_data )
4518	if pythonrc is not a file ,	if not os . path . isfile ( pythonrc ) :
3321	define the method handle with 2 arguments : self and unpacked dictionary options .	def handle ( self , ** options ) :
9860	call the method stream.unget with elements of list chunk from the index next to the end .	stream . unget ( chunk [ next : ] )
4865	test_runner is an instance of TestRunner class , called with an argument unpacked dictionary options .	test_runner = TestRunner ( ** options )
4481	if ImportError exception is caught ,	except ImportError :
6824	from django.core.exceptions import ValidationError into default name space .	from django . core . exceptions import ValidationError
14611	from django.utils import six into default name space .	from django . utils import six
18790	evaluate the method git_log.communicate , substitute first element of the result for timestamp .	timestamp = git_log . communicate ( ) [ 0 ]
5713	if field.rel.to._meta.pk.rel is true ,	if field . rel . to . _meta . pk . rel :
463	return filelist .	return filelist
16094	replace every occurrence of STR in value for STR0 , return the result .	return value . replace ( STR , STR0 )
5060	import module stat .	import stat
17812	call the function force_text with an argument text , substitute the result for text .	text = force_text ( text )
10794	define the function prepend_token with 2 arguments : self and token .	def prepend_token ( self , token ) :
13580	_win is a tuple containing 1 initial boolean : True is sys.platform equals to string STR0 , False otherwise .	_win = ( sys . platform == STR0 )
13016	join app_config.path and string STR0 into file path , substitute it for template_dir .	template_dir = os . path . join ( app_config . path , STR0 )
11084	derive the class TextNode form the base class Node .	class TextNode ( Node ) :
7596	if STR0 is contained in kwargs ,	if STR0 in kwargs :
6562	if language_code is not contained in self._regex_dict ,	if language_code not in self . _regex_dict :
16604	from functools import update_wrapper .	from functools import update_wrapper
2175	call the function sanitize_address with arguments addr and email_message.encoding , for every addr in return value of the function email_message.recipients , store the results in a recipients list .	recipients = [ sanitize_address ( addr , email_message . encoding ) for addr in email_message . recipients ( ) ]
16027	try ,	try :
17897	return a string STR0 .	return STR0
2101	return msg_count .	return msg_count
11546	if e doesnt have an STR0 attribute ,	if not hasattr ( e , STR0 ) :
2276	derive the class SafeMIMEText from the MIMEMixin and MIMEText base class .	class SafeMIMEText ( MIMEMixin , MIMEText ) :
1414	if not ,	else :
13092	otherwise if template_tuple is None ,	elif template_tuple is None :
18323	use global variable _default .	global _default
16246	call the method m.group with an argument string STR0 , convert the result to lowercase , use it as an argument for the call to the , method MONTHS.index , increment the result by integer 1 , substitute it for month .	month = MONTHS . index ( m . group ( STR0 ) . lower ( ) ) + 1
4120	from django.db.migrations.autodetector import MigrationAutodetector into default name space .	from django . db . migrations . autodetector import MigrationAutodetector
4017	if self.merge and conflicts are both true ,	if self . merge and conflicts :
18133	call the function _trans.templatize with 2 arguments : src and origin , return the result .	return _trans . templatize ( src , origin )
5037	define the function emit_pre_migrate_signal with 4 arguments : create_models , verbosity , interactive and db .	def emit_pre_migrate_signal ( create_models , verbosity , interactive , db ) :
7762	create list out of last_row elements from the start to the last length of row_ender element , append str_hidden and row_ender to it , substitute the result for last element of output .	output [ - 1 ] = last_row [ : - len ( row_ender ) ] + str_hidden + row_ender
4243	with the call to the transaction.atomic method with using set to connection.alias , savepoint set to connection.features.can_rollback_ddl as arguments ,	with transaction . atomic ( using = connection . alias , savepoint = connection . features . can_rollback_ddl ) :
9148	define the method build_attrs with 3 arguments : self , extra_attrs set to None and unpacked dictionary kwargs .	def build_attrs ( self , extra_attrs = None , ** kwargs ) :
5416	if _serializers is false ,	if not _serializers :
1368	call the function file_move_safe with content.temporary_file_path function result and full_path .	file_move_safe ( content . temporary_file_path ( ) , full_path )
16992	return boolean True .	return True
5490	call the method self.handle_fk_field with arguments obj and field .	self . handle_fk_field ( obj , field )
16773	substitute package.__path__ for package_path .	package_path = package . __path__
4992	call the function check_for_migrations with arguments app_config and connection .	check_for_migrations ( app_config , connection )
15502	call the method handler.addQuickElement with 2 arguments : string STR0 and value under the STR1 key of the self.feed dictionary .	handler . addQuickElement ( STR0 , self . feed [ STR1 ] )
9724	substitute field_name for old_field_name .	old_field_name = field_name
16216	call the function force_str with an argument quoted_url , use the result as an argument for the call to the function unquote , use the result as an argument for the call to the function force_text , return the result .	return force_text ( unquote ( force_str ( quoted_url ) ) )
15828	raise an TypeError exception with an argument sting STR0 .	raise TypeError ( STR0 )
1690	call the function resolver.resolve_error_handler with status_code as an argument , assign the result to the callback and param_dict , respectively .	callback , param_dict = resolver . resolve_error_handler ( status_code )
17932	call the method self._isdst with an argument dt , use it as an key to get the value from the _time.tzname dictionary , return it .	return _time . tzname [ self . _isdst ( dt ) ]
14053	try ,	try :
7408	if v is an instance of list or tuple type ,	if isinstance ( v , ( list , tuple ) ) :
4598	call the add_arguments method from the base class of the class Command with parser as an argument .	super ( Command , self ) . add_arguments ( parser )
5646	data is an dictionary with 2 initial entries : return value of the smart_text function with the argument obj._meta for STR0 , and self._current for STR1 .	data = { STR0 : smart_text ( obj . _meta ) , STR1 : self . _current , }
11239	call the method self.filter with 3 arguments : name , func and unpacked dictionary flags .	return self . filter ( name , func , ** flags )
17178	raise an AttributeError with an argument attr .	raise AttributeError ( attr )
18437	break from the loop execution .	break
12712	define the function verbatim with 2 arguments : parser and token .	def verbatim ( parser , token ) :
14799	import module warnings .	import warnings
4613	define method add_arguments with self class instance and parser as the arguments .	def add_arguments ( self , parser ) :
18064	call the method _trans.ungettext with 3 arguments singular , plural and number .	return _trans . ungettext ( singular , plural , number )
18547	warn_msg is a string STR0 , formated with c , filemsg and comment_lineno_cache .	warn_msg = ( STR0 ) % ( c , filemsg , comment_lineno_cache )
12061	try ,	try :
12745	from django.utils import six into default name space .	from django . utils import six
5714	substitute value.pk for value .	value = value . pk
18786	if get_git_changeset has an attribute STR0 ,	if hasattr ( get_git_changeset , STR0 ) :
3964	split msgs by newline characters , for every line in result ,	for line in msgs . split ( STR0 ) :
8029	if data is not None or files is not None , self.is_bound is boolean True , otherwise it is boolean False .	self . is_bound = data is not None or files is not None
7073	define the method __init__ with 5 arguments : self , max_value set to None , min_value set to None , unpacked list args and unpacked dictionary kwargs .	def __init__ ( self , max_value = None , min_value = None , * args , ** kwargs ) :
5757	call the function yaml.dump with 4 arguments : self.objects , self.stream , Dumper=DjangoSafeDumper and unpacked dictionary self.options .	yaml . dump ( self . objects , self . stream , Dumper = DjangoSafeDumper , ** self . options )
11482	call the method Context.__init__ with 5 arguments : self , dict_ , current_app as current_app , use_l10n as use_l10n , use_tz as use_tz .	Context . __init__ ( self , dict_ , current_app = current_app , use_l10n = use_l10n , use_tz = use_tz )
14675	extend list kw with a list with 5 elements : d.hour , d.minute , d.second , d.microsecond and d.tzinfo .	kw . extend ( [ d . hour , d . minute , d . second , d . microsecond , d . tzinfo ] )
17875	call avoid_wrapping function with name2 modulus count2 as argument , call the ugettext with STR0 as argument , add previous 2 results , increment variable result by it .	result += ugettext ( STR0 ) + avoid_wrapping ( name2 % count2 )
17369	call the function _add_doc with 2 arguments : b and string STR0 .	_add_doc ( b , STR0 )
9927	append boundary to bytes string STR0 , substitute the result for self._separator .	self . _separator = STR0 + boundary
18298	if language is not contained in _translations ,	if language not in _translations :
5497	self.first is boolean False .	self . first = False
2685	return usage .	return usage
10008	if return value of the self.is_secure is false and server port is not equal to string STR0 , join host and server_port into a string , separated with STR1 , substitute the result for host .	host = STR0 % ( host , server_port )
12117	if not ,	else :
15420	return a dictionary with 2 elements : self._version for STR0 and STR1 for STR2 .	return { STR0 : self . _version , STR1 : STR2 }
7132	if self.localize is true ,	if self . localize :
6424	if not ,	else :
9923	return a tuple with 3 elements : TYPE , outdict and stream .	return ( TYPE , outdict , stream )
18075	call the function lazy with 2 arguments : func and resultclass , call the result with an argument , unpacked dictionary kwargs , substitute the result for proxy .	proxy = lazy ( func , resultclass ) ( ** kwargs )
17460	return an instance of metaclass class , created with 3 arguments : cls.__name__ , cls.__bases__ and orig_vars .	return metaclass ( cls . __name__ , cls . __bases__ , orig_vars )
2390	otherwise if basetype equals a string STR0 and subtype equals a string STR1 ,	elif basetype == STR0 and subtype == STR1 :
11060	append self to nodes .	nodes . append ( self )
18403	if strict is false ,	if not strict :
11953	return an empty string .	return STR
16883	get the next element of the iterable pattern_iter , assign the result for ch and escaped , respectively .	ch , escaped = next ( pattern_iter )
17308	if PY3 is true ,	if PY3 :
8966	join elements of output into a string , separated by newline characters , return the result .	return STR0 . join ( output )
16127	return endpos .	return endpos
9361	append string STR0 to output .	output . append ( STR0 )
7094	call the method widget_attrs with an argument widget , from the base class of the class IntegerField , substitute it for attrs .	attrs = super ( IntegerField , self ) . widget_attrs ( widget )
5420	delete the _serializers dictionary entry at the format key .	del _serializers [ format ]
15538	call the method handler.addQuickElement with 2 arguments : string STR0 and unique_id .	handler . addQuickElement ( STR0 , unique_id )
102	substitute timeout for self.default_timeout .	self . default_timeout = timeout
9660	call the Parser object with stream and self._boundary , for every item_type , meta_data and field_stream in return value ,	for item_type , meta_data , field_stream in Parser ( stream , self . _boundary ) :
17381	substitute frame.f_globals for _globs_ .	_globs_ = frame . f_globals
2454	from django.core.exceptions import ImproperlyConfigured into default name space .	from django . core . exceptions import ImproperlyConfigured
17668	if truncate_len equals integer 0 .	if truncate_len == 0 :
16339	define the function import_module with 3 arguments : name and package set to None .	def import_module ( name , package = None ) :
6269	if url_name exists substitute it for view_path , if not substitute .self._func_path for view_path .	view_path = url_name or self . _func_path
14518	define the method c with an argument self .	def c ( self ) :
10558	from django.utils.safestring import SafeData , EscapeData , mark_safe and mark_for_escaping into default namespace .	from django . utils . safestring import ( SafeData , EscapeData , mark_safe , mark_for_escaping )
11696	decorator function register.filter with an argument is_safe set to boolean True .	@ register . filter ( is_safe = True )
10737	call the method self.enter_command with 2 arguments command and token .	self . enter_command ( command , token )
2597	call the method self.main_help_text with an argument commands_only set to boolean True , append new line to it , write it to sys.stdout .	sys . stdout . write ( self . main_help_text ( commands_only = True ) + STR0 )
6922	format self.month_field string with name , use it as the key for the data dictionary , substitute the result for m .	m = data . get ( self . month_field % name )
15100	otherwise if disable_existing is true ,	elif disable_existing :
5478	if the key doesnt exists substitute boolean False for self.use_natural_primary_keys . call the method self.start_serialization	self . start_serialization ( )
2940	call the method parser.add_argument with string STR0 , string STR1 , dest set to string STR2 , action set to string STR3 , default as an empty list and help as an string STR4 .	parser . add_argument ( STR0 , STR1 , dest = STR2 , action = STR3 , default = [ ] , help = STR4 )
15761	define the method __cast with an argument self .	def __cast ( self ) :
14637	substitute utc for tzinfo .	tzinfo = utc
16198	call the function re.compile with an argument raw string STR1 , substitute the result for ETAG_MATCH .	ETAG_MATCH = re . compile ( STR1 )
14073	call the method os.dup2 with 2 arguments : result of the method se.fileno and result of the method sys.stderr.fileno .	os . dup2 ( se . fileno ( ) , sys . stderr . fileno ( ) )
15382	define the method add_root_elements with 2 arguments self and handler .	def add_root_elements ( self , handler ) :
10494	if value ,	if value :
1332	derive the class FileSystemStorage from the Storage base class .	class FileSystemStorage ( Storage ) :
6093	return boolean False .	return False
10576	VARIABLE_TAG_END is a string STR0 .	VARIABLE_TAG_END = STR0
4447	exit program with code integer 0 .	sys . exit ( 0 )
92	evaluate the function import_string with key_func as argument , return the result .	return import_string ( key_func )
18487	substitute STR0 in string STR1 with line , write it to out file .	out . write ( STR0 % line )
3602	call the method self.stdout.write with an argument string STR0 , where STR1 is replaced with result of the function humanize , called with an argument fixture_dir .	self . stdout . write ( STR0 % humanize ( fixture_dir ) )
8346	call the method formfield_callback with 2 arguments : f and unpacked dictionary kwargs , substitute the result for formfield .	formfield = formfield_callback ( f , ** kwargs )
14057	call the method sys.stderr.write with an argument string STR0 , formated with e.errno and e.strerror .	sys . stderr . write ( STR0 % ( e . errno , e . strerror ) )
17380	call the method sys._getframe with an argument 1 , substitute the result for frame .	frame = sys . _getframe ( 1 )
3082	replace STR1 in string STR0 with key and value under the key key of the user_setting dictionary , append it to the output .	output . append ( STR0 % ( key , user_settings [ key ] ) )
10673	self.verbatim is boolean False .	self . verbatim = False
13598	extend basedirs list with settings.LOCALE_PATHS .	basedirs . extend ( settings . LOCALE_PATHS )
2749	raise an CommandError exception with an argument string , STR0 , replace STR1 with self.leave_locale_alone and self.can_import_settings .	raise CommandError ( STR0 % ( self . leave_locale_alone , self . can_import_settings ) )
974	get attribute STR0 from the self object .	getattr ( self , STR0 )
6135	from django.utils.daemonize import become_daemon into default name space .	from django . utils . daemonize import become_daemon
6398	replace all STR0 in string STR1 with self.__class__.__name__ , urlconf_repr , self.app_name , self.namespace and self.regex.pattern , respectively . return it .	return str ( STR0 ) % ( self . __class__ . __name__ , urlconf_repr , self . app_name , self . namespace , self . regex . pattern )
13709	call the function reset_translations .	reset_translations ( )
14573	call the method self.data.replace with 2 arguments : month as integer 1 and day as integer 1 , on the result call the method , weekday , increment the result by integer 1 and substitute it for jan1_weekday .	jan1_weekday = self . data . replace ( month = 1 , day = 1 ) . weekday ( ) + 1
4223	write to the standard output result of the call to the method self.style.MIGRATE_SUCCESS with string STR0 as a argument .	self . stdout . write ( self . style . MIGRATE_SUCCESS ( STR0 ) )
11965	if vale is None or an empty string ,	if value in ( None , STR ) :
5464	do nothing .	pass
12051	split arg by STR0 , substitute the result for bits.s	bits = arg . split ( STR0 )
46	except if KeyError exception is caught ,	except KeyError :
2651	get name attribute of the self._out object , return it .	return getattr ( self . _out , name )
13314	define the method translate_token with 2 arguments : self and token .	def translate_token ( self , token ) :
10268	if last element of host equals character STR0 ,	if host [ - 1 ] == STR0 :
4618	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
12846	from django.template.loader import get_template into default name space .	from django . template . loader import get_template
10503	derive the class HttpResponseNotAllowed from the HttpResponse base class .	class HttpResponseNotAllowed ( HttpResponse ) :
16172	if there is no match ,	if not match :
4167	otherwise if value under the STR0 key of options dictionary is true ,	elif options [ STR0 ] :
16658	define the function wrapper with 2 arguments : unpacked list args and unpacked dictionary kwds .	def wrapper ( * args , ** kwds ) :
4426	if ImproperlyConfigured exception is caught ,	except ImproperlyConfigured :
4531	help is a string STR0 .	help = STR0
17260	append string STR0 to __name__ , use it as an key to get the value from the sys.modules dictionary , substitute it for response .	response = sys . modules [ __name__ + STR0 ]
7885	derive the class BoundField from the base class object .	class BoundField ( object ) :
12017	return maybe .	return maybe
5822	get field.name attribute of the obj , substitute it for related .	related = getattr ( obj , field . name )
7779	if error is not an instance of ValidationError ,	if not isinstance ( error , ValidationError ) :
5841	call the method self.xml.startElement with argument string STR0 and an empty dictionary .	self . xml . startElement ( STR0 , { } )
16380	doublecolon_len is integer 0 .	doublecolon_len = 0
5062	import module tempfile .	import tempfile
18642	obj is an instance of Node class , created with 3 arguments : children , connector and negated .	obj = Node ( children , connector , negated )
4815	query a string STR2 and store the result in confirm .	confirm = input ( STR2 )
10692	append block_content to a string STR0 , substitute the result for self.verbatim .	self . verbatim = STR0 % block_content
8006	from django.utils.safestring import mark_safe into default name space .	from django . utils . safestring import mark_safe
8753	otherwise if length of fks_to_parent is zero ,	elif len ( fks_to_parent ) == 0 :
8815	for every obj in result of the call to the method self.queryset.all ,	for obj in self . queryset . all ( ) :
3089	from django.core.management.base import BaseCommand and CommandError into default name space .	from django . core . management . base import BaseCommand , CommandError
15741	if six.PY3 is true ,	if six . PY3 :
6397	create a printable representation of self.urlconf_name object , substitute it for urlconf_repr .	urlconf_repr = repr ( self . urlconf_name )
17718	if tag is false or current_len is greater or equal to truncate_len ,	if not tag or current_len >= truncate_len :
17798	otherwise if , type of s doesnt equal to six.text_type ,	elif type ( s ) != six . text_type :
5022	output is an empty list .	output = [ ]
12763	define the method reset with an argument self .	def reset ( self ) :
13664	try ,	try :
14602	return doy .	return doy
8502	append string STR0 to model.__name__ , substitute the result for class_name .	class_name = model . __name__ + str ( STR0 )
18699	substitute self.__offset.seconds for offset .	offset = self . __offset . seconds // 60
13413	make a system symbolic link between original_path and symlink_path .	os . symlink ( original_path , symlink_path )
5336	return a instance of the class Page , created with 2 arguments : unpacked list args and unpacked dictionary kwargs .	return Page ( * args , ** kwargs )
2247	try ,	try :
10208	call the method bytes_to_text with 2 arguments : value and self.encoding , substitute the result for value .	value = bytes_to_text ( value , self . encoding )
9709	try ,	try :
1193	call the function POINTER with argument OVERLAPPED , substitute the result for LPOVERLAPPED .	LPOVERLAPPED = POINTER ( OVERLAPPED )
11062	get attr attribute of self object , if it exists substitute it for nodelist , if not nodelist is None .	nodelist = getattr ( self , attr , None )
2817	for eery app_config in app_configs ,	for app_config in app_configs :
4780	call the function import_module with an argument project_name .	import_module ( project_name )
1144	if not ,	else :
859	append check to checks list , for every check in self.register_checks , if check has an attribute STR0 and check.tags and tags set intersection is a non empty set .	checks = [ check for check in self . registered_checks if hasattr ( check , STR0 ) and set ( check . tags ) & set ( tags ) ]
3446	in string STR0 , replace STR1 with new_name and STR2 with num , substitute the result for new_name .	new_name = STR0 % ( new_name , num )
18098	call the function lazy_number with 5 arguments : ungettext , six.text_type , singular set to singular , plural set to plural , and number set to number , return the result .	return lazy_number ( ungettext , six . text_type , singular = singular , plural = plural , number = number )
5869	call the method self._get_model_from_node with arguments node and string STR0 .	Model = self . _get_model_from_node ( node , STR0 )
1231	try ,	try :
1366	try ,	try :
259	call the function datetime.fromtimestamp with argument timeout , substitute it for exp .	exp = datetime . fromtimestamp ( timeout )
15301	if iri is not initialized ,	if iri is None :
17009	pos and last are integer 0 .	pos = last = 0
10217	call the method self._assert_mutable .	self . _assert_mutable ( )
12663	if length of bits is not equal to integer 6 ,	if len ( bits ) != 6 :
2606	if not ,	else :
7863	append name to self._changed_data .	self . _changed_data . append ( name )
68	if value under the DEFAULT_CACHE_ALIAS key of caches dictionary is not equal to other , return boolean True , otherwise return False .	return caches [ DEFAULT_CACHE_ALIAS ] != other
12235	if pop_context is true ,	if pop_context :
1691	call the callback function with request and dictionary argument param_dict as the arguments , substitute it for response .	response = callback ( request , ** param_dict )
7525	if self.require_all_fields is boolean true ,	if self . require_all_fields :
17894	define the method utcoffset with 2 arguments self and dt .	def utcoffset ( self , dt ) :
9977	compile the regex STR0 with an argument re.I , substitute it for absolute_http_url_re .	absolute_http_url_re = re . compile ( STR0 , re . I )
3014	define the method create_table with arguments self , database and tablename .	def create_table ( self , database , tablename ) :
3823	if not ,	else :
13669	return boolean False .	return False
296	if settings.USE_TZ is true ,	if settings . USE_TZ :
14345	if not ,	else :
10648	derive the class Token form the base class object .	class Token ( object ) :
870	append check.tags into a list for every check in self.registered_checks if check has STR0 attribute , put the elements into a set and return it .	return set ( chain ( * [ check . tags for check in self . registered_checks if hasattr ( check , STR0 ) ] ) )
1742	substitute STR0 in STR1 with request.path , extra is an dictionary with two pairs of elements STR2 with value 404 ,	logger . warning ( STR0 , request . path , extra = { STR1 : 404 , STR2 : request } )
2820	append app_output to output .	output . append ( app_output )
170	substitute STR0 in string STR1 with key , call the function warnings.warn with previous string and CacheKeyWarning as arguments .	warnings . warn ( STR0 % key , CacheKeyWarning )
16125	call the method self.check_for_whole_start_tag with i as an argument , substitute result for the endpos .	endpos = self . check_for_whole_start_tag ( i )
11337	_templatetags_modules is an empty list .	_templatetags_modules = [ ]
9880	substitute greater element between integer 0 and end decremented by one for last .	last = max ( 0 , end - 1 )
16013	join elements of tags into a string , separated with STR0 , format string STR1 with it , substitute the result for tags_re .	tags_re = STR0 % STR1 . join ( tags )
9491	substitute i-th element of value for widget_value .	widget_value = value [ i ]
8739	form._meta.fields is a list created out of form._meta.fields elements .	form . _meta . fields = list ( form . _meta . fields )
12765	derive the class LoaderOrigin from the Origin base class .	class LoaderOrigin ( Origin ) :
14332	call the method self.setlistdefault with an argument key , append value to the result .	self . setlistdefault ( key ) . append ( value )
12924	if node is not an instance of TextNode ,	if not isinstance ( node , TextNode ) :
7720	define the method is_valid with an argument self .	def is_valid ( self ) :
8353	for every f in fields , if exclude is false , or if exclude is true and f is not contained in exclude , and only if f is not in ignored , append to list , a tuple with 2 elements : f and value under the f key of field_dict dictionary , use the resulting list as an argument , for the creation of the instance of OrderedDict class , substitute it for field_dict .	field_dict = OrderedDict ( [ ( f , field_dict . get ( f ) ) for f in fields if ( ( not exclude ) or ( exclude and f not in exclude ) ) and ( f not in ignored ) ] )
1745	if not ,	else :
8138	define the function compare_ordering_key with an argument k .	def compare_ordering_key ( k ) :
822	chain all errors elements into a list , return it .	return list ( chain ( * errors ) )
12284	return an string STR0 .	return STR0
10791	do nothing .	pass
14158	return boolean False .	return False
11854	if TypeError or ValueError exceptions are caught ,	except ( ValueError , TypeError ) :
3628	define the method parse_name with arguments self and fixture_name .	def parse_name ( self , fixture_name ) :
5827	call the method self.xml.endElement with an argument string STR0	self . xml . endElement ( STR0 )
1073	substitute self.DEFAULT_CHUNK_SIZE for chunk_size .	chunk_size = self . DEFAULT_CHUNK_SIZE
6004	from django.core.management.color import color_style into default name space .	from django . core . management . color import color_style
17319	define the method next with an argument self .	def next ( self ) :
8710	call the method form.add_prefix with an argument self.fk.name , use the result as an key to get the value of the form.data dictionary , assign it value None .	form . data [ form . add_prefix ( self . fk . name ) ] = None
10763	if node.must_be_first is true and nodelist is true ,	if node . must_be_first and nodelist :
9544	from django.utils.six.moves import http_cookies into default name space .	from django . utils . six . moves import http_cookies
14324	return value under the key key of self dictionary .	return self [ key ]
16387	if best_doublecolon_start equals integer 0 ,	if best_doublecolon_start == 0 :
17088	if not ,	else :
16199	MONTHS is a list with 12 elements : strings STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 , STR7 , STR8 , STR9 , STR10 , and STR11 .	MONTHS = STR0 . split ( )
7133	call the method formats.sanitize_separators with an argument value , substitute the result for value .	value = formats . sanitize_separators ( value )
17984	if not ,	else :
196	from django.utils.encoding import force_bytes into default name space .	from django . utils . encoding import force_bytes
707	__all__ is a list containing next strings , STR0 , STR1 , STR2 , STR3 , STR4 , STR5 ,	__all__ = [ STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 , STR7 , STR8 , STR9 , STR10 , STR11 , STR12 , STR13 , STR14 , ]
615	call the method self.make_key with key and version set to version as arguments , substitute the result for key .	key = self . make_key ( key , version = version )
61	define the method __delattr__ with self and name as arguments .	def __delattr__ ( self , name ) :
10180	call the method bytes_to_text with 2 arguments : key and self.encoding , substitute the result for key .	key = bytes_to_text ( key , self . encoding )
1644	from django import http into default name space .	from django import http
10356	define the method __delitem__ with 2 arguments : self and header .	def __delitem__ ( self , header ) :
528	call the self._lock.writer method , with the result perform the following ,	with self . _lock . writer ( ) :
8209	if self.forms is true ,	if self . forms :
7686	substitute declared_fields for new_class.base_fields .	new_class . base_fields = declared_fields
658	raise an ValueError exception with string STR0 as argument , substitute STR1 for key .	raise ValueError ( STR0 % key )
6415	call the method self._callback_strs.add with an argument lookup_str .	self . _callback_strs . add ( lookup_str )
17318	derive the class Iterator from the base class object .	class Iterator ( object ) :
607	convert return value of the function time.time to an integer , increment timeout by it .	timeout += int ( time . time ( ) )
10465	define the method serialize_headers with an argument self .	def streaming_content ( self ) :
12200	for every i and item in enumerated iterable values ,	for i , item in enumerate ( values ) :
5739	from django.utils import six into default name space .	from django . utils import six
6049	if not ,	else :
2756	call the method self.handle with 2 arguments unpacked list args and unpacked dictionary options , substitute the result for output .	output = self . handle ( * args , ** options )
14982	substitute self for value.configurator .	value . configurator = self
1305	call the get_valid_filename with argument name , return the result .	return get_valid_filename ( name )
14660	define the method strftime with 2 arguments : self and fmt .	def strftime ( self , fmt ) :
14329	call the method self.setlist with 2 arguments : key and default_list .	self . setlist ( key , default_list )
13584	define the function gen_filenames with an argument only_new defaulting to boolean False .	def gen_filenames ( only_new = False ) :
3167	raise an CommandError exception with an argument string STR0 .	raise CommandError ( STR0 )
11322	try ,	try :
12931	define the method __init__ with 4 arguments : self , template , unpacked list args and unpacked dictionary kwargs .	def __init__ ( self , template , * args , ** kwargs ) :
5854	field.rel.__class__.__name__ for STR0 and return value of the function smart_text with an argument field.rel.to._meta for STR1 . derive the class Deserializer from the base.Deserializer base class .	class Deserializer ( base . Deserializer ) :
12303	return an empty string ,	return STR
8201	replace STR0 in sting STR1 with self.prefix and index , return the result .	return STR0 % ( self . prefix , index )
16797	call the function hook with an argument entry , substitute the result for finder .	finder = hook ( entry )
2501	call the function get_commands , call the method keys on the result , substitute sorted result for usage .	usage = sorted ( get_commands ( ) . keys ( ) )
1264	current_chunk is None .	current_chunk = None
13433	derive the class Archive from the object base class .	class Archive ( object ) :
17505	increment self.waiting_readers by 1 .	self . waiting_readers += 1
9459	call the function chain with 2 arguments : self.choices and choices , convert the result into a list and substitute it for choices .	choices = list ( chain ( self . choices , choices ) )
18148	get the LANG_INFO dictionary value under the generic_lang_code key , return the result .	return LANG_INFO [ generic_lang_code ]
5443	call the s.serialize method with arguments queryset and unpacked dictionary options .	s . serialize ( queryset , ** options )
8092	update defaults dictionary with kwargs .	defaults . update ( kwargs )
3095	define the method add_arguments with arguments self and parser .	def add_arguments ( self , parser ) :
2909	get the value under the STR0 key of the options dictionary , if it exists substitute it for tags , if not , tags is None .	tags = options . get ( STR0 , None )
15824	call the method self._setup .	self . _setup ( )
13194	call the method self.resolve_context with an argument self.context_data , substitute the result for context .	context = self . resolve_context ( self . context_data )
6823	return WSGIHandler object .	return WSGIHandler ( )
6679	derive the class URLValidator form the RegexValidator base class .	class URLValidator ( RegexValidator ) :
6186	if is_compressed is true ,	if is_compressed :
864	if new_errors is not an iterable object raise an error with error message STR0 , with STR1 replaced by value of check .	assert is_iterable ( new_errors ) , ( STR0 % check )
13284	substitute value for self.value .	self . value = value
18798	return changeset .	return changeset
14021	call the function digest , substitute the filed digest_size of the result for hlen .	hlen = digest ( ) . digest_size
8687	return FormSet .	return FormSet
14431	define the function format with 2 arguments self and formatstr .	def format ( self , formatstr ) :
4423	call the method self.validate with an argument display_num_errors set to boolean True .	self . validate ( display_num_errors = True )
10248	post is a string STR0 .	post = STR0
11031	do nothing .	pass
5069	from django.core.management.base import BaseCommand and CommandError into default name space .	from django . core . management . base import BaseCommand , CommandError
3922	append self.msgmerge_options to a list containing string STR0 , append to it a list containing pofile and potfile , substitute the result for args .	args = [ STR0 ] + self . msgmerge_options + [ pofile , potfile ]
18789	call the subprocess.Popen function with , STR0 , stdout set to subprocess.PIPE , stderr set to subprocess.PIPE , shell set to boolean True , cwd set to repo_dir and universal_newlines set to boolean True , as arguments , substitute the result for git_log .	git_log = subprocess . Popen ( STR0 , stdout = subprocess . PIPE , stderr = subprocess . PIPE , shell = True , cwd = repo_dir , universal_newlines = True )
10266	call the method host_validation_re.match with an argument host .	if not host_validation_re . match ( host ) :
1689	try ,	try :
9366	get the value under the name key of the data dictionary , if it exists return it , if not return None .	return data . get ( name , None )
16233	for every regex in tuple with 3 elements : RFC1123_DATE , RFC850_DATE and ASCTIME_DATE ,	for regex in RFC1123_DATE , RFC850_DATE , ASCTIME_DATE :
12851	derive the class ExtendsError from the Exception base class .	class ExtendsError ( Exception ) :
14868	substitute result for self dictionary under key key .	self [ key ] = result
5114	docs_version is a string STR0 .	docs_version = STR0
13816	define function dictitem with s as an argument .	def dictitem ( s ) :
11533	define the method create_variable_node with 2 arguments : self and contents .	def create_variable_node ( self , contents ) :
5059	import module shutil .	import shutil
6166	define the function b64_hmac with arguments salt , value and key .	def base64_hmac ( salt , value , key ) :
10787	raise an self.error with 2 arguments : None and string STR0 , where STR1 is replaced with parse_until elements joined into a string , separated with STR2 .	raise self . error ( None , STR0 % STR1 . join ( parse_until ) )
15891	if fget is not None ,	if fget is not None :
14220	yield value under key key of self dictionary .	yield self [ key ]
11764	decorator function register.filter with an argument is_safe set to boolean True .	@ register . filter ( is_safe = True )
7071	substitute NumberInput for widget .	widget = NumberInput
675	property decorator ,	@ property
801	call the __init__ method with 3 arguments : DEBUG , unpacked list args and unpacked dictionary kwargs from the base class of Debug .	return super ( Debug , self ) . __init__ ( DEBUG , * args , ** kwargs )
16762	concatenate package_name , string STR0 and module_name , substitute it for full_module_name .	full_module_name = package_name + STR0 + module_name
12239	child_nodelists is a tuple with 2 initial elements : strings STR0 and STR1 .	child_nodelists = ( STR0 , STR1 )
14704	sites is an empty list .	sites = [ ]
17586	otherwise if STR0 is contained in part ,	elif STR0 in part :
3423	if num_repl is greater than integer 0 ,	if num_repl > 0 :
8113	define the method deleted_forms with an argument self .	def deleted_forms ( self ) :
7385	define the method __init__ with 9 arguments : self , choices set to an empty tuple , required set to boolean True , widget set to None , label set to None , initial set to None , help_text set to an empty string , unpacked list args and unpacked dictionary kwargs .	def __init__ ( self , choices = ( ) , required = True , widget = None , label = None , initial = None , help_text = STR , * args , ** kwargs ) :
15362	if categories is true ,	if categories :
2993	from django.core.management.base import BaseCommand and CommandError into default name space .	from django . core . management . base import BaseCommand , CommandError
11796	if autoescape is true and value is not an instance of SafeData , autoescape is boolean True , otherwise it is boolean False .	autoescape = autoescape and not isinstance ( value , SafeData )
2105	from django.conf import settings into default name space .	from django . conf import settings
9586	if cookie is not an instance of http_cookies.BaseCookie ,	if not isinstance ( cookie , http_cookies . BaseCookie ) :
6060	httpd.daemon_threads is boolean True .	httpd . daemon_threads = True
4642	call the add_argument method on the parser object , with string STR0 , and help set to string STR1 as arguments .	parser . add_argument ( STR0 , help = STR1 )
4358	import module os .	import os
766	decorator python_2_unicode_compatible .	@ python_2_unicode_compatible
9407	define the method is_checked with an argument self .	def is_checked ( self ) :
6283	call the function get_mod_func with an argument lookup_view , store the result in mod_name and func_name , respectively .	mod_name , func_name = get_mod_func ( lookup_view )
3112	get the value under the STR0 key of the options dictionary , substitute the result for output .	output = options . get ( STR0 )
8106	return form .	return form
4008	exit the program with the integer 2 as exit code .	sys . exit ( 2 )
11074	substitute node for bit .	bit = node
2191	from email.message import Message into default name space .	from email . message import Message
7418	if STR0 key of the kwargs dictionary exists remove it and substitute its value for self.coerce ,	self . coerce = kwargs . pop ( STR0 , lambda val : val )
8428	append f.name to exclude .	exclude . append ( f . name )
2465	define the function load_command_class with arguments : app_name and name .	def load_command_class ( app_name , name ) :
15640	call the function date_format with 2 arguments : value , string STR0 and use_l10n as use_l10n , return the result .	return date_format ( value , STR0 , use_l10n = use_l10n )
5131	if dirname starts with character STR0 or dirname equals a string STR1 ,	if dirname . startswith ( STR0 ) or dirname == STR1 :
4709	if self.verbosity is greater than integer 0 or self.interactive is true ,	if self . verbosity > 0 or self . interactive :
3110	get the value under the STR0 key of the options dictionary , substitute the result for database .	using = options . get ( STR0 )
8016	DELETION_FIELD_NAME is a string STR0 .	DELETION_FIELD_NAME = STR0
865	call the method errors.extend with argument new_errors .	errors . extend ( new_errors )
3429	append string STR0 to field_notes .	field_notes . append ( STR0 )
10797	delete the first element of self.tokens .	del self . tokens [ 0 ]
447	define the method clear with argument self .	def clear ( self ) :
5677	remove the value under the STR0 key from the options dictionary , assign it to the ignore , if the entry doesnt exists , substitute boolean False for ignore .	ignore = options . pop ( STR0 , False )
10917	substitute var_obj for self.var .	self . var = var_obj
13804	from module __future__ import unicode_literals to default name space .	from __future__ import unicode_literals
7698	substitute .error_class for self.error_class .	self . error_class = error_class
8325	skip this loop iteration .	continue
497	substitute value under the key key of self._cache dictionary for pickled .	pickled = self . _cache [ key ]
10596	define the method __init__ with 3 arguments : self , msg and params set to an empty tuple .	def __init__ ( self , msg , params = ( ) ) :
18102	call the function _trans.activate with an argument language , return the result .	return _trans . activate ( language )
14920	compile a regex from raw string STR0 , substitute it for INDEX_PATTERN .	INDEX_PATTERN = re . compile ( STR0 )
12283	define the method __repr__ with an argument self .	def __repr__ ( self ) :
11807	for every obj in value call the function mark_safe with an argument result of the function force_text called with an argument obj , return all the results in a list .	return [ mark_safe ( force_text ( obj ) ) for obj in value ]
3020	if self.verbosity is greater than integer 0 ,	if self . verbosity > 0 :
12912	append string STR0 to error_msg , where ' % s is replaced with self.parent_name.token .	error_msg += STR0 % self . parent_name . token
13139	call the function safe_join with 2 arguments template_dir and template_name , yield the result .	yield safe_join ( template_dir , template_name )
9736	break the loop execution .	break
3949	if self.domain equals a string STR0 ,	if self . domain == STR0 :
16997	return boolean False .	return False
11064	call the method nodelist.get_nodes_by_type with an argument nodetype , extend nodes with the result .	nodes . extend ( nodelist . get_nodes_by_type ( nodetype ) )
7182	skip this loop iteration .	continue
9351	derive the class SelectMultiple from the Select base class .	class SelectMultiple ( Select ) :
2933	help is string STR0 .	help = STR0
18420	_supported is an instance of OrderedDict class , created with an argument settings.LANGUAGES .	_supported = OrderedDict ( settings . LANGUAGES )
10118	if MultiPartParserError exception is caught ,	except MultiPartParserError :
8401	object_data is an empty dictionary .	object_data = { }
3190	substitute model._default_manager for objects .	objects = model . _default_manager
7045	substitute data for data_value if data is not None , otherwise data_value is an empty list .	data_value = data if data is not None else STR
6641	from django.core.exceptions import ValidationError into default name space .	from django . core . exceptions import ValidationError
11762	define the function ljust with 2 arguments value and arg .	def ljust ( value , arg ) :
9165	value is an empty string .	value = STR
828	get models.signals name attribute , store it in obj .	obj = getattr ( models . signals , name )
15952	define the function escapejs with an argument value .	def escapejs ( value ) :
4974	call the method connection.introspection.table_names , substitute the result for tables .	tables = connection . introspection . table_names ( )
1213	substitute fcntl.LOCK_SH for LOCK_SH .	LOCK_SH = fcntl . LOCK_SH
918	do nothing .	pass
17692	define the method _text_words with 3 arguments : self , length and truncate .	def _text_words ( self , length , truncate ) :
16714	from django.core.exceptions import ImproperlyConfigured into default name space .	from django . core . exceptions import ImproperlyConfigured
14796	return _decorator .	return _decorator
562	delete the value under the key key of the self._expire_info dictionary .	del self . _expire_info [ key ]
18216	call the function re.compile with 2 arguments : raw string STR0 and re.IGNORECASE , substitute the result for language_code_re .	language_code_re = re . compile ( STR0 , re . IGNORECASE )
6417	if p_pattern starts with a string STR0 ,	if p_pattern . startswith ( STR0 ) :
12729	called with an argument this_value_expr , result of the method parser.compile_filter called with an argument max_value_expr , return value of the method parser.compile_filter called with an argument max_width and asvar as asvar . register.tag decorator function with an argument STR0 ,	@ register . tag ( STR0 )
11998	define the function default_if_none with 2 arguments value and arg .	def default_if_none ( value , arg ) :
11284	call the function dec with an argument func , return the result .	return dec ( func )
1653	from django.views import debug into default name space .	from django . views import debug
6590	get the value under the ns key of the resolver.app_dict dictionary , substitute it for app_list .	app_list = resolver . app_dict [ ns ]
9268	define the method __init__ with 3 arguments : self , attrs set to None and format is None .	def __init__ ( self , attrs = None , format = None ) :
1785	return response .	return response
4977	return statements .	return statements
6569	call the function get_resolver with an argument urlconf , on the result call the method resolve with an argument path , return it .	return get_resolver ( urlconf ) . resolve ( path )
3842	call the method self.build_potfiles , substitute the result for potfiles .	potfiles = self . build_potfiles ( )
8711	use return value of the self.fk.get_attname as the name of the attribute of form.instance object to set , set it to self.instance.pk .	setattr ( form . instance , self . fk . get_attname ( ) , self . instance . pk )
15954	call the function allow_lazy with 2 arguments : escapejs , six.text_type , substitute the result for escapejs .	escapejs = allow_lazy ( escapejs , six . text_type )
824	define the function check_model_signals with app_config defaulting to None and unpacked dictionary kwargs as arguments ,	def check_model_signals ( app_configs = None , ** kwargs ) :
11113	return an empty dictionary .	return { }
17090	call the function curry with 2 arguments : _proxy_method and method set to six.text_type.encode , substitute the result for encode .	encode = curry ( _proxy_method , method = six . text_type . encode )
15572	format_locations is an empty list .	format_locations = [ ]
329	call the method self.make_key with key and version set to version as arguments , substitute it for key .	key = self . make_key ( key , version = version )
12075	return an string STR0 , replace STR1 with result of the function force_text ,	return STR0 % force_text ( e , errors = STR1 )
251	fetch one record from the database cursor points at , substitute the first element of return value for num .	num = cursor . fetchone ( ) [ 0 ]
3218	if deps is true ,	if deps :
399	renamed is boolean False .	renamed = False
8467	define the method validate_unique with an argument self .	def validate_unique ( self ) :
5232	return base and ext .	return base , ext
2044	from django.core.mail.backends.console import EmailBackend as ConsoleEmailBackend into default name space .	from django . core . mail . backends . console import EmailBackend as ConsoleEmailBackend
1892	define the _set_post method with self class instance and post as the arguments .	def _set_post ( self , post ) :
5249	define the method make_writeable with arguments self and filename .	def make_writeable ( self , filename ) :
15671	call the function unicodedata.normalize with 2 arguments : string STR0 and thousand_sep , put the result and thousand_sep into a set ,	for replacement in set ( [ thousand_sep , unicodedata . normalize ( STR0 , thousand_sep ) ] ) :
2393	otherwise if content is not an instance of Message class ,	elif not isinstance ( content , Message ) :
15975	derive the class MLStripper from the HTMLParser base class .	class MLStripper ( HTMLParser ) :
17144	delete X .	del X
18748	if tt.tm_isdst is greater than intger 0 , return boolean True , otherwise return boolean False .	return tt . tm_isdst > 0
5855	define the method __init__ with 3 arguments : self , stream_or_string and unpacked dictionary options .	def __init__ ( self , stream_or_string , ** options ) :
11536	substitute token.source for node.source .	node . source = token . source
6078	if character STR0 is contained in x ,	if STR0 in x :
17337	if PY3 is true ,	if PY3 :
12452	raise an TemplateSyntaxError with an argument string STR0 .	raise TemplateSyntaxError ( STR0 )
10777	return an instance of TemplateSyntaxError class with an argument msg .	return TemplateSyntaxError ( msg )
11431	define the method flatten with an argument self .	def flatten ( self ) :
3344	yield string STR1 % self.db_module as the result , where STR0 is replaced with self.db_module .	yield STR0 % self . db_module
7130	if value is contained in self.empty_values ,	if value in self . empty_values :
523	if value is None ,	if value is None :
7656	define the function get_declared_fields with 3 arguments : bases , attrs and with_base_fields set to boolean True .	def get_declared_fields ( bases , attrs , with_base_fields = True ) :
8708	if self.save_as_new is true ,	if self . save_as_new :
13815	define function patch_cache_control , with response and dictionary set of arguments , kwargs , as arguments .	def patch_cache_control ( response , ** kwargs ) :
700	substitute STR0 in TEMPLATE_FRAGMENT_KEY_TEMPLATE string with fragment_name and args.hexdigest ( ) , respectively , return the result .	return TEMPLATE_FRAGMENT_KEY_TEMPLATE % ( fragment_name , args . hexdigest ( ) )
3128	if STR0 is contained in exclude ,	if STR0 in exclude :
18261	translation._info is an empty dictionary .	translation . _info = { }
8252	define the function construct_instance with 4 arguments : form , instance , fields set to None and exclude set to None .	def construct_instance ( form , instance , fields = None , exclude = None ) :
7084	if value is contained in self.empty_values ,	if value in self . empty_values :
12755	call the function make_origin with 4 arguments : display_name , self.load_template_source , template_name and template_dirs , substitute the result for origin .	origin = make_origin ( display_name , self . load_template_source , template_name , template_dirs )
10074	for every handler in settings.FILE_UPLOAD_HANDLERS , add to a list result of the method uploadhandler.load_handler called with arguments handler and self , substitute resulting list for self._upload_handlers .	self . _upload_handlers = [ uploadhandler . load_handler ( handler , self ) for handler in settings . FILE_UPLOAD_HANDLERS ]
9563	return val and encoded as a tuple .	return val , encoded
3229	substitute field.rel.to for rel_model .	rel_model = field . rel . to
12322	return boolean True .	return True
15732	if bytes is contained in resultclasses , cls._delegate_bytes is boolean True , otherwise it is boolean False .	cls . _delegate_bytes = bytes in resultclasses
5008	append cleaned_lien to statement .	statement . append ( cleaned_line )
9738	define the method handle_file_complete with 3 arguments : self , old_field_name and counters .	def handle_file_complete ( self , old_field_name , counters ) :
5269	call the method p.communicate , assign the result to output and errors , respectively .	output , errors = p . communicate ( )
14033	call the method password.translate with an argument hmac.trans_36 , update inner dictionary with the result .	inner . update ( password . translate ( hmac . trans_36 ) )
10449	self._container is a list containing element value .	self . _container = [ value ]
12039	call the function ugettext with an argument string STR0 , substitute STR1 with the result of the call to the function , filesize_number_format with result of division of bytes by MB as an argument , substitute the result for value .	value = ugettext ( STR0 ) % filesize_number_format ( bytes / MB )
17138	try	try :
10142	endless loop ,	while True :
10702	call the method token_string.count with an argument STR0 , append the result to self.lineno .	self . lineno += token_string . count ( STR0 )
18764	sub is an empty string .	sub = STR
13568	try ,	try :
16867	append ch to result .	result . append ( ch )
16309	if ValueError exception is caught .	except ValueError :
3085	join elements of the output into a string , separated by newlies , return the string .	return STR0 . join ( output )
2164	for every message in email_messages :	for message in email_messages :
15624	define the function date_format with 3 arguments : value , format set to None and use_l10n set to None .	def date_format ( value , format = None , use_l10n = None ) :
4834	for arg in argv list without the first two elements ,	for arg in argv [ 2 : ] :
12491	node is an instance CycleNode class , created with values , name and silent set to silent .	node = CycleNode ( values , name , silent = silent )
5783	from xml.sax.expatreader import ExpatParser as _ExpatParser into default name space .	from xml . sax . expatreader import ExpatParser as _ExpatParser
5990	call the method __init__ from the base class of the ExternalReferenceForbidden class .	super ( ExternalReferenceForbidden , self ) . __init__ ( )
5091	try ,	try :
3106	call the method parser.add_argument with 5 arguments : string STR0 , string STR1 , default is None , dest set to string STR2 , and help is a string STR3 .	parser . add_argument ( STR0 , STR1 , default = None , dest = STR2 , help = STR3 )
13719	if exit_code is not equal to integer 3 .	if exit_code != 3 :
117	define the method get_backend_timeout with self class instance and timeout set to DEFAULT_TIMEOUT as arguments ,	def get_backend_timeout ( self , timeout = DEFAULT_TIMEOUT ) :
9992	self.path is an empty string .	self . path = STR
7559	if self.required is true ,	if self . required :
18582	strip message_context of STR characters from both ends , substitute the result for message_context .	message_context = message_context . strip ( STR )
6141	if __name__ equals a string STR0 .	if __name__ == STR0 :
6473	if sub_tried is not None ,	if sub_tried is not None :
12141	call the function pformat with an argument sys.modules , append the result for output .	output . append ( pformat ( sys . modules ) )
13677	call the traceback.extract_tb method with argument tb , substitute the first element of last row of the result to filename .	filename = traceback . extract_tb ( tb ) [ - 1 ] [ 0 ]
14862	return rv .	return rv
5574	write a new line to the self.stream file stream .	self . stream . write ( STR0 )
3869	if status is not equal to STATUS_OK ,	if status != STATUS_OK :
15594	reverse the order of modules elements , put them into a list , return it .	return list ( reversed ( modules ) )
11775	if value is an instance of SafeData , safe is boolean True , otherwise it is boolean False .	safe = isinstance ( value , SafeData )
5524	define the method __iter__ with an argument self .	def __iter__ ( self ) :
5208	raise an CommandError exception with an argument string STR0 , where STR1 is replaced with url , filename and e .	raise CommandError ( STR0 % ( url , filename , e ) )
1025	define the method __repr__ with argument self .	def __repr__ ( self ) :
16415	if count of occurrence of STR0 in ip_str is greater than integer 7 ,	if ip_str . count ( STR0 ) > 7 :
2693	call the method parser.add_option with 3 arguments : string STR0 , action set to a string STR1 , and help= STR2 .	parser . add_option ( STR0 , action = STR1 , help = STR2 )
13253	define the method led with 3 arguments self , left and parser .	def led ( self , left , parser ) :
11525	define the method error with 3 arguments : self , token and msg .	def error ( self , token , msg ) :
11454	raise an TypeError exception with an argument string STR0 .	raise TypeError ( STR0 )
7216	define the method prepare_value with arguments self and value .	def prepare_value ( self , value ) :
12557	call the method parser.compile_filter with an argument , third element of bits , substitute the result for val2 .	val2 = parser . compile_filter ( bits [ 2 ] )
13180	if template is an instance of list or tuple types ,	if isinstance ( template , ( list , tuple ) ) :
977	define the messages with an argument self .	def messages ( self ) :
4401	substitute self.addr without the first and last element for self.addr .	self . addr = self . addr [ 1 : - 1 ]
4074	common_ancestor is None .	common_ancestor = None
12118	if settings.DEBUG is true ,	if settings . DEBUG :
13509	print a string STR0 , where STR1 is substituted with : name , member.name and exc , respectively .	print ( STR0 % ( name , member . name , exc ) )
14212	define the method _iteritems with an argument self .	def _iteritems ( self ) :
7573	for every f in files ,	for f in dirs :
6232	raise an SignatureExpired exception with an argument string STR0 , where STR1 is replaced by age and max_age , respectively .	raise SignatureExpired ( STR0 % ( age , max_age ) )
8002	from django.forms.utils import ErrorList into default name space .	from django . forms . utils import ErrorList
16470	import module re .	import re
12470	if length of args equals integer 2 ,	if len ( args ) == 2 :
18529	append string STR0 to plural , where STR1 is replaced with t.contents .	plural . append ( STR0 % t . contents )
12479	if third element from the end of the args equals string STR0 ,	if args [ - 3 ] == STR0 :
14594	define the method y with an argument self .	def y ( self ) :
3068	derive the class Command from the BaseCommand base class .	class Command ( BaseCommand ) :
15002	kwargs is a dictionary with elements : config dictionary element under k key for k , for every k in result of function valid_ident , called with an argument k .	kwargs = dict ( ( k , config [ k ] ) for k in config if valid_ident ( k ) )
883	call the function get_token with an argument request , substitute the result for token .	token = get_token ( request )
2237	call the encode function on the Header class instance , created with argument val , substitute the result for val .	val = Header ( val ) . encode ( )
5866	call the method self._handle_object with an argument node , return the result .	return self . _handle_object ( node )
13013	call the function apps.get_app_configs , for every app_config in result ,	for app_config in apps . get_app_configs ( ) :
2096	msg_count is integer 0 .	msg_count = 0
15539	if value under the STR0 key of the item dictionary is not None ,	if item [ STR0 ] is not None :
13884	split string cc_delim_re by value of dictionary response under the key STR0 as a delimiter , substitute it for vary_headers .	vary_headers = cc_delim_re . split ( response [ STR0 ] )
10557	from django.utils.translation import ugettext_lazy and pgettext_lazy into default name space .	from django . utils . translation import ugettext_lazy , pgettext_lazy
7745	call the function bf.label_tag with an argument label , if the result is true substitute it for label , otherwise label is an empty string .	label = bf . label_tag ( label ) or STR
7754	call the function force_text with an argument top_errors , format error_row with it , insert it at the beginning of output .	output . insert ( 0 , error_row % force_text ( top_errors ) )
11640	return input_val .	return input_val
10913	call the method match.end , substitute the result for upto .	upto = match . end ( )
5903	get the field.rel.field_name from the obj , substitute it for obj_pk .	obj_pk = getattr ( obj , field . rel . field_name )
11521	define the method enter_command with 3 arguments : self , command and token .	def enter_command ( self , command , token ) :
2810	define the method handle with 3 arguments : self , unpacked list app_labels and unpacked dictionary options .	def handle ( self , * app_labels , ** options ) :
9467	derive the class RadioSelect from the RendererMixin and Select base classes .	class RadioSelect ( RendererMixin , Select ) :
10726	raise an exception ,	raise
10964	if plen is lesser than difference of alen and dlen , or if plen is greater than alen ,	if plen < ( alen - dlen ) or plen > alen :
1251	if call to the function _samefile with old_file_name and new_file_name evaluates to boolean True ,	if _samefile ( old_file_name , new_file_name ) :
13141	raise an exception .	raise
17680	increment s_len by integer 1 ,	s_len += 1
14270	define the method __init__ with 2 arguments : self and key_to_list_mapping set to an empty tuple .	def __init__ ( self , key_to_list_mapping = ( ) ) :
16840	int_part_gd is an empty string .	int_part_gd = STR
16654	substitute result for cache dictionary value under the key key .	cache [ key ] = result
7040	call the function self.to_python with an argument data , substitute the result for data .	data = self . to_python ( data )
5166	join first element of django.__path__ , string STR0 and subdir into a valid file path , return it .	return path . join ( django . __path__ [ 0 ] , STR0 , subdir )
4127	call the method parser.add_argument with string STR0 , action containing string STR1 , dest set to string STR2 , default set to True , help containing string STR3 as arguments .	parser . add_argument ( STR0 , action = STR1 , dest = STR2 , default = True , help = STR3 )
6662	substitute code for self.code .	self . code = code
9388	if self.value equals self.choice_value , return boolean True , if not , return boolean False .	return self . value == self . choice_value
7029	define the method bound_data with arguments self , data and initial .	def bound_data ( self , data , initial ) :
18501	substitute STR0 in string STR1 with message_context , result of the function join_tokens , called with 2 arguments : singular and trimmed and result of the function join_tokens called with 2 arguments : plural and trimmed , write the result to out .	out . write ( STR0 % ( message_context , join_tokens ( singular , trimmed ) , join_tokens ( plural , trimmed ) ) )
2245	if UnicodeEncodeError exception is caught ,	except UnicodeEncodeError :
7292	return boolean False .	return False
18362	get translation_function attribute of the t object , call the result with 3 arguments : singular , plural and number , return the result .	return getattr ( t , translation_function ) ( singular , plural , number )
1253	try ,	try :
1914	if exception is caught ,	except :
16656	return result .	return result
17249	derive class Module_six_moves_urllib_robotparser from the _LazyModule base class .	class Module_six_moves_urllib_robotparser ( _LazyModule ) :
7723	substitute STR0 in string STR1 with self.prefix and field_name and return it , if self.prefix is true , if not return field_name .	return STR0 % ( self . prefix , field_name ) if self . prefix else field_name
6807	decorator deconstructible ,	@ deconstructible
398	call the method tempfile.mkstemp with dir set to self._dir , substitute result for fd and tmp_path , respectively .	fd , tmp_path = tempfile . mkstemp ( dir = self . _dir )
1122	import module zlib .	import zlib
11909	substitute i-th element of list for title .	title = list_ [ i ]
2258	derive the class MIMEMixin .	class MIMEMixin ( ) :
11973	call the function time_format with 2 arguments : value and arg , return the result .	return time_format ( value , arg )
4029	if length of app_labels is equal to integer 1 ,	if len ( app_labels ) == 1 :
10713	parse_until is an empty list ,	parse_until = [ ]
7802	if field is contained in self.errors ,	if field in self . errors :
8059	define the method total_form_count with an argument self .	def total_form_count ( self ) :
6770	if ValidationError exception is caught ,	except ValidationError :
1318	raise an NotImplementedError exception with argument string STR0 .	raise NotImplementedError ( STR0 )
3243	found is boolean False .	found = False
4262	call the cursor.close method .	cursor . close ( )
15286	if the UnicodeEncodeError exception is caught ,	except UnicodeEncodeError :
3055	help is a tuple containing a string STR0 .	help = ( STR0 )
15326	months is a tuple with 12 elements : strings STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 , STR7 , STR8 , STR9 , STR10 and STR11 .	months = ( STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 , STR7 , STR8 , STR9 , STR10 , STR11 , )
10372	substitute has_header for __contains__ .	__contains__ = has_header
16664	substitute link for link_prev , link_next , key and result , respectively .	link_prev , link_next , key , result = link
10848	increment i by one .	i += 1
15857	call the function new_method_proxy with an argument str , substitute the result for __str__ .	__str__ = new_method_proxy ( str )
17409	otherwise if sep is not an instance of string type ,	elif not isinstance ( sep , str ) :
1334	if location is None ,	if location is None :
11107	if UnicodeDecodeError exception is caught ,	except UnicodeDecodeError :
424	call the method self._is_expired with argument f , invert the boolean result and return it .	return not self . _is_expired ( f )
11499	call the method __init__ from the base class of the class DebugLexer , with 2 arguments : template_string and origin .	super ( DebugLexer , self ) . __init__ ( template_string , origin )
15796	call the function lazy with 2 arguments : func and unpacked list resultclasses , call the result with 2 arguments : unpacked list args , and unpacked dictionary kwargs .	return lazy ( func , * resultclasses ) ( * args , ** kwargs )
9778	substitute self._leftover for output .	output = self . _leftover
11216	call the method self.filter_function with 2 arguments func and unpacked dictionary flags , return the result .	return self . filter_function ( func , ** flags )
9741	if file_obj is true ,	if file_obj :
18703	self.__name is a string STR0 , replace STR1 with sign , STR2 is replaced with absolute value of offset divided by 60 , and placed into 2 character spaces , and STR3 is replaced with reminder of the division of absolute offset by integer 60 , and placed into 2 character spaces .	self . __name = STR0 % ( sign , abs ( offset ) / 60. , abs ( offset ) % 60 )
15993	try ,	try :
12385	if NoReverseMatch exception is caught ,	except NoReverseMatch :
4419	substitute value under the STR0 key of the options dictionary for threading .	threading = options . get ( STR0 )
1702	for every middleware_method in self._request_middleware ,	for middleware_method in self . _request_middleware :
1891	return self._post .	return self . _post
12296	call the method condition.eval with an argument context , substitute the result for match .	match = condition . eval ( context )
1265	as long as current_chunk is not an empty string ,	while current_chunk != STR :
2694	call the method parser.add_option with 5 arguments : string STR1 , action set to a string STR2 , dest set to string STR3 default set to boolean False and help set to a string STR0 .	parser . add_option ( STR1 , action = STR2 , dest = STR3 , default = False , help = STR0 )
1574	substitute field_name for self.field_name .	self . field_name = field_name
6714	call a function _ with a string STR0 as an argument , substitute the result for message .	message = _ ( STR0 )
13971	from django.conf import settings into default name space .	from django . conf import settings
7749	call the function force_text with an argument field.help_text , format help_text_html with it , substitute the result for help_text .	help_text = help_text_html % force_text ( field . help_text )
13460	define the method list with an argument self .	def list ( self ) :
16726	if AttributeError exception is caught ,	except AttributeError :
1338	if base_url is None ,	if base_url is None :
6039	otherwise if first element of second row of args equals a string STR0 ,	elif args [ 1 ] [ 0 ] == STR0 :
11394	return duplicate .	return duplicate
17751	return a string STR0 formated with 3 elements : result of the function force_text called with an argument i , separated by result of the function _ called with an argument string STR1 , for every i in list_ without last element , result of the function force_text called with an argument last_word , result of the function force_text called with an argument : last element of list_ .	return STR0 % ( _ ( STR1 ) . join ( force_text ( i ) for i in list_ [ : - 1 ] ) , force_text ( last_word ) , force_text ( list_ [ - 1 ] ) )
16428	return boolean False .	return False
16653	call the function user_function with 2 arguments unpacked list args and unpacked dictionary kwds , substitute the result for result .	result = user_function ( * args , ** kwds )
5358	derive the class Page from the collections.Sequence base class .	class Page ( collections . Sequence ) :
18453	call the function re.compile with an argument raw string STR0 [ ^ STR1 ) | ( ? : STR2 ] * ? ' ) ) ) ? ( ? : \s+| $ ) '' , substitute the result for block_re .	block_re = re . compile ( STR0 )
17512	decrement self.waiting_writers by integer 1 ,	self . waiting_writers -= 1
11187	if self.takes_context is true ,	if self . takes_context :
14054	fork a child process , if the result equals integer 0 ,	if os . fork ( ) > 0 :
5771	raise an exception .	raise
1135	evaluate the method get_image_dimensions with self class instance and close set to close as the arguments , substitute the result for self._dimensions_cache .	self . _dimensions_cache = get_image_dimensions ( self , close = close )
6503	if not callback ,	if not callback :
15058	if StandardError , renamed to e , exception is caught ,	except StandardError as e :
5388	if self.number equals to self.paginator.num_pages ,	if self . number == self . paginator . num_pages :
4316	if not ,	else :
5257	import module os .	import os
11985	return an empty string .	return STR
17264	instantiate class Module_six_moves_urllib with an argument , string STR0 appended to __name__ , substitute it for value under the string STR1 appended to __name__ key of the sys.modules dictionary .	sys . modules [ __name__ + STR0 ] = Module_six_moves_urllib ( __name__ + STR1 )
1224	call the function fcntl.flock with return value of the _fd ( f ) function and flags as arguments , substitute the result for ret .	ret = fcntl . flock ( _fd ( f ) , flags )
2716	call the method self.create_parser with first and second element of argv , substitute the result for parser .	parser = self . create_parser ( argv [ 0 ] , argv [ 1 ] )
3825	if STR0 is a directory ,	if os . path . isdir ( STR0 ) :
5016	call the method apps.get_app_config with an argument model._met.app_label , substitute path field of the result for app_dir .	app_dir = apps . get_app_config ( model . _meta . app_label ) . path
13540	if not ,	else :
18648	return string STR0 , formated with self.connector and string created by joining c into a string , separated by STR1 , for every c in self.children .	return STR0 % ( self . connector , STR1 . join ( [ str ( c ) for c in self . children ] ) )
440	if OSError , renamed to e , exception is caught ,	except OSError as e :
15713	__dispatch is None .	__dispatch = None
947	call the __init__ method from the base class of the class ValidationError with arguments message , code and params .	super ( ValidationError , self ) . __init__ ( message , code , params )
3416	append string STR0 to field_notes .	field_notes . append ( STR0 )
11986	decorator function register.filter with 2 arguments string STR0 and is_safe set to boolean False .	@ register . filter ( STR0 , is_safe = False )
7202	call the method formats.get_format_lazy with an argument string STR0 , substitute the result for input_formats .	input_formats = formats . get_format_lazy ( STR0 )
6094	append value under the STR0 key of the options dictionary to the string STR1 , substitute it for flup_module .	flup_module = STR0 + options [ STR1 ]
17383	substitute if _locs_ is None for _locs_ .	_locs_ = frame . f_locals
15483	call the method handler.startDocument .	handler . startDocument ( )
15691	define the function wrapper with an argument unpacked list args .	def wrapper ( * args ) :
926	derive the class SuspiciousMultipartForm from the SuspiciousOperation base class .	class SuspiciousMultipartForm ( SuspiciousOperation ) :
16164	define the method parse_endtag with self class instance and i as the arguments .	def parse_endtag ( self , i ) :
11036	call the function current , substitute the result for current .	current = current ( )
5070	from django.core.management.utils import handle_extensions into default name space .	from django . core . management . utils import handle_extensions
17972	define the function get_current_timezone_name .	def get_current_timezone_name ( ) :
13331	raise an exception self.error_class with an argument string STR Unused STR0 at end of if expression '' , where STR1 is replaced with result of the method self.current_token.display .	raise self . error_class ( STR0 % self . current_token . display ( ) )
2616	from optparse import OptionParser into default name space .	from optparse import OptionParser
14652	MONTHS_3 is an dictionary with 12 entries : result of the call to the function _ with an argument string STR0 for 1 , result of the call to the function _ with an argument string STR1 for 2 , result of the call to the function _ with an argument string STR2 for 3 , result of the call to the function _ with an argument string STR3 for 4 , result of the call to the function _ with an argument string STR4 for 5 , result of the call to the function _ with an argument string STR5 for 6 , result of the call to the function _ with an argument string STR6 for 7 , result of the call to the function _ with an argument string STR7 for 8 , result of the call to the function _ with an argument string STR8 for 9 , result of the call to the function _ with an argument string STR9 for 10 , result of the call to the function _ with an argument string STR10 for 11 , result of the call to the function _ with an argument string STR11 for 12 .	MONTHS_3 = { 1 : _ ( STR0 ) , 2 : _ ( STR1 ) , 3 : _ ( STR2 ) , 4 : _ ( STR3 ) , 5 : _ ( STR4 ) , 6 : _ ( STR5 ) , 7 : _ ( STR6 ) , 8 : _ ( STR7 ) , 9 : _ ( STR8 ) , 10 : _ ( STR9 ) , 11 : _ ( STR10 ) , 12 : _ ( STR11 ) }
18281	define the method _add_local_translations with an argument self .	def _add_local_translations ( self ) :
14043	call the function _bin_to_long with an argument u perform bitwise exclusive OR with 2 operands , previous result an result , substitute the result for result .	result ^= _bin_to_long ( u )
2417	alternative_subtype is a string STR0 .	alternative_subtype = STR0
6534	if the union of the kwargs and defaults dictionary keys converted into sets is not the same as the union of the defaults and prefix	if set ( kwargs . keys ( ) ) | set ( defaults . keys ( ) ) != set ( params ) | set ( defaults . keys ( ) ) | set ( prefix_args ) :
7563	if self.match is not None ,	if self . match is not None :
18162	define the function ungettext with 3 arguments : singular , plural and number .	def ungettext ( singular , plural , number ) :
6260	if namespaces is true ,	if namespaces :
13776	call the self.convert method with s , self.decimal , self.decimal_digits and self.sign as arguments , assign the result to the neg and value , respectively .	neg , value = self . convert ( s , self . digits , self . decimal_digits , self . sign )
15209	define the function dictConfig with an argument config .	def dictConfig ( config ) :
14401	substitute complain for sort .	sort = complain
5429	call the function _load_serializers .	_load_serializers ( )
16227	define the function cookie_date with an argument epoch_seconds set to None .	def cookie_date ( epoch_seconds = None ) :
17541	call the method self.can_read.release .	self . can_read . release ( )
10635	try ,	try :
11346	substitute _templatetags_modules for templatetags_modules .	templatetags_modules = _templatetags_modules
5752	if field is an instance of models.TimeField and filed.name attribute of obj is not None ,	if isinstance ( field , models . TimeField ) and getattr ( obj , field . name ) is not None :
13336	call the method t.nud with an argument self , substitute the result for left .	left = t . nud ( self )
9827	define the method __init__ with arguments self , stream and boundary .	def __init__ ( self , stream , boundary ) :
10740	if KeyError exception is caught ,	except KeyError :
16401	define the function _unpack_ipv4 with an argument ip_str .	def _unpack_ipv4 ( ip_str ) :
1831	return result .	return result
17098	return s .	return s
853	call the method self.registered_checks.append with argument check .	self . registered_checks . append ( check )
14748	call the function update_wrapper with 3 arguments : _dec , decorator and assigned as result of the function available_attrs , called with an argument decorator .	update_wrapper ( _dec , decorator , assigned = available_attrs ( decorator ) )
6158	do nothing .	pass
16420	call the function _explode_shorthand_ip_string with an argument ip_str , substitute the result for ip_str .	ip_str = _explode_shorthand_ip_string ( ip_str )
16004	while STR0 is contained in value and STR1 is contained in value ,	while STR0 in value and STR1 in value :
11761	decorator stringfilter ,	@ stringfilter
14361	substitute first args for other_dict .	other_dict = args [ 0 ]
9732	call the function exhaust with an argument self._input_data .	exhaust ( self . _input_data )
2396	if not ,	else :
4871	from django.db import connection into default name space .	from django . db import connection
9251	return FILE_INPUT_CONTRADICTION .	return FILE_INPUT_CONTRADICTION
13608	sum _cached_filenames , new_filenames and _error_files , store the result in filelist .	filelist = _cached_filenames + new_filenames + _error_files
8128	raise an AttributeError exception with an argument string : STR0 , where STR1 is replaced with self.__class__.__name__ .	raise AttributeError ( STR0 % self . __class__ . __name__ )
11453	if other_dict doesnt have an STR0 attribute ,	if not hasattr ( other_dict , STR0 ) :
17594	remove the first element from colors , substitute it for fg .	fg = colors . pop ( )
15455	if value under the STR0 key of the item dictionary is not None ,	if item [ STR0 ] is not None :
7637	from collections import OrderedDict into default name space .	from collections import OrderedDict
17179	get attr attribute from the _module object , substitute it for value .	value = getattr ( _module , attr )
5338	if self._count is None ,	if self . _count is None :
4688	derive the class Command from the BaseCommand class .	class Command ( BaseCommand ) :
18277	for every app_config in app_configs ,	for app_config in app_configs :
11276	call the function parse_bits with 8 arguments : parser , bits , params , varargs , varkw , defaults , takes_context and function_name , substitute the result for args and kwargs .	args , kwargs = parse_bits ( parser , bits , params , varargs , varkw , defaults , takes_context , function_name )
12318	define the function include_is_allowed with an argument filepath .	def include_is_allowed ( filepath ) :
11592	register is an instance of Library class .	register = Library ( )
4543	from django.core.management.base import AppCommand into default name space .	from django . core . management . base import AppCommand
11005	call the function pgettext_lazy with an argument self.message_context and value , return the result .	return pgettext_lazy ( self . message_context , value )
15901	define the function fdel with 2 arguments : instance and name set to fdel.__name__ .	def fdel ( instance , name = fdel . __name__ ) :
2843	join output into a string , separated by newline characters , return it .	return STR0 . join ( output )
2054	raise an ImproperlyConfigured exception with argument string STR0 , replace STR1 with self.file_path .	raise ImproperlyConfigured ( STR0 % self . file_path )
12473	raise an TemplateSyntaxError exception with an argument string STR0 , where STR1 is replaced with name .	raise TemplateSyntaxError ( STR0 % name )
13552	from django.apps import apps into default name space .	from django . apps import apps
14020	call the function force_bytes with an argument salt , substitute the result for salt .	salt = force_bytes ( salt )
16157	if string end ends with string STR0 ,	if end . endswith ( STR0 ) :
3804	if not ,	else :
2009	call the __init__ method from the base class of the EmailBackend class , with arguments : unpacked list args and unpacked dictionary kwargs .	super ( EmailBackend , self ) . __init__ ( * args , ** kwargs )
11041	substitute settings.TEMPLATE_STRING_IF_INVALID for current ,	current = settings . TEMPLATE_STRING_IF_INVALID
6363	call the method self.regex.search with an argument path , substitute the result for match .	match = self . regex . search ( path )
9257	if attrs is true ,	if attrs :
14142	substitute _iterkeys for keys .	keys = _iterkeys
15606	if not ,	else :
9143	if self.input_type equals string STR0 and self has an attribute STR1 , return boolean True , otherwise return boolean False .	return self . input_type == STR0 if hasattr ( self , STR1 ) else False
18271	call the method translation._catalog.copy , substitute the result for self._catalog .	self . _catalog = translation . _catalog . copy ( )
5701	call the method field.rel.to._default_manager.db_manager with an argument db on the return value call the method get_by_natural_key , with unpacked list value as an argument , return the pk field of the result .	return field . rel . to . _default_manager . db_manager ( db ) . get_by_natural_key ( * value ) . pk
8288	if commit is true ,	if commit :
15633	call the method numberformat.format with 6 arguments : value , result of the function get_format called with 3 arguments : string STR0 , lang and use_l10n set to use_l10n , decimal_pos , result of the function get_format called with 3 arguments : string STR1 , lang and use_l10n as use_l10n , result of the function get_format called with an argument : string STR2 , lang and use_l10n as use_l10n and force_grouping as force_grouping , return the result .	return numberformat . format ( value , get_format ( STR0 , lang , use_l10n = use_l10n ) , decimal_pos , get_format ( STR1 , lang , use_l10n = use_l10n ) , get_format ( STR2 , lang , use_l10n = use_l10n ) , force_grouping = force_grouping )
543	return boolean False .	return False
9799	raise SuspiciousMultipartForm exception with an argument string , STR0 .	raise SuspiciousMultipartForm ( STR0 )
8007	from django.utils import six into default name space .	from django . utils import six
4918	final_output is an empty list .	final_output = [ ]
5567	remove the entry under the STR0 key of the self.json_kwargs dictionary .	self . json_kwargs . pop ( STR0 , None )
8042	define the method __getitem__ with an argument self .	def __getitem__ ( self , index ) :
2411	if six.PY2 is true ,	if six . PY2 :
8015	ORDERING_FIELD_NAME is a string STR0 .	ORDERING_FIELD_NAME = STR0
5126	if relative_dir is true ,	if relative_dir :
10079	return self._upload_handlers .	return self . _upload_handlers
166	if length of key is greater than MEMCACHE_MAX_KEY_LENGTH ,	if len ( key ) > MEMCACHE_MAX_KEY_LENGTH :
15333	call the method time_str.decode with an argument string STR0 , substitute the result for time_str .	time_str = time_str . decode ( STR0 )
4095	try ,	try :
12271	substitute negate for self.negate .	self . negate = negate
17340	define the function u with an argument s .	def u ( s ) :
6236	from importlib import import_module into default name space .	from importlib import import_module
10388	get the value under the key key of the self.cookies dictionary , substitute expires for STR0 key of the returned dictionary .	self . cookies [ key ] [ STR0 ] = expires
4555	get the value under the STR0 key of the options dictionary , use it as the key to get the value from the connections dictionary , substitute the result for connection .	connection = connections [ options [ STR0 ] ]
2770	if app_config is None ,	if app_config is None :
7715	property decorator ,	@ property
471	from django.core.cache.backends.base import BaseCache and DEFAULT_TIMEOUT into default name space .	from django . core . cache . backends . base import BaseCache , DEFAULT_TIMEOUT
9092	if AttributeError exception is caught ,	except AttributeError :
12004	convert value and arg to integers , if value is divisible by arg , return True , otherwise return boolean False .	return int ( value ) % int ( arg ) == 0
15730	skip this loop iteration ,	continue
15758	call the function func with 2 arguments : unpacked list self.__args and unpacked dictionary self.__kw , return the result .	return func ( * self . __args , ** self . __kw )
18272	define the method _add_installed_apps_translations with an argument self .	def _add_installed_apps_translations ( self ) :
8873	define the method _has_changed with 3 arguments : self , initial and data .	def _has_changed ( self , initial , data ) :
2368	read the whole file f , substitute the result for content .	content = f . read ( )
12949	return an empty string .	return STR
5367	define the method __getitem__ with arguments self and index .	def __getitem__ ( self , index ) :
8539	subtract result of the method self.initial_form_count from i , use the result as an index to get the element from self.initial_extra , substitute it for value under the STR0 key of kwargs dictionary .	kwargs [ STR0 ] = self . initial_extra [ i - self . initial_form_count ( ) ]
8254	substitute instance._meta for opts .	opts = instance . _meta
5273	for every ext in extensions ,	for ext in extensions :
16403	return None .	return None
7696	substitute prefix for self.prefix .	self . prefix = prefix
3854	for f in file_list ,	for f in file_list :
17968	call the function get_default_timezone , use the result as an argument for the call to the function _get_timezone_name , return the result .	return _get_timezone_name ( get_default_timezone ( ) )
2850	call the __init__ method from the base class of the NoArgsCommand class .	super ( NoArgsCommand , self ) . __init__ ( )
6149	import module json .	import json
13504	create directories from the elements in filename .	os . makedirs ( filename )
10448	call the method self.make_bytes with an argument value , substitute the result for value .	value = self . make_bytes ( value )
1015	bring integer 2 to the power of 10 , multiply it by 64 , substitute the result for DEFAULT_CHUNK_SIZE .	DEFAULT_CHUNK_SIZE = 64 * 2 ** 10
6229	if max_age is not None ,	if max_age is not None :
9988	self.POST is an instance of QueryDict class created with an argument mutable set to boolean True .	self . POST = QueryDict ( mutable = True )
4954	call the method router.get_migratable_models with argument : app_config , connection.alias and include_auto_created set to True , substitute the result for app_models .	app_models = router . get_migratable_models ( app_config , connection . alias , include_auto_created = True )
17357	define the function u with an argument s .	def u ( s ) :
12204	subtract i from len_values , decrement the result by integer 1 , substitute it for value under the STR0 key of the loop_dict dictionary .	loop_dict [ STR0 ] = len_values - i - 1
17035	zip elements of inner_result and inner_args into a list of tuples , for every i_item and i_args in the result ,	for i_item , i_args in zip ( inner_result , inner_args ) :
1013	decorator python_2_unicode_compatible ,	@ python_2_unicode_compatible
16239	try ,	try :
13875	split the string cc_delim_re with value under the key STR0 of response dictionary as delimiter , substitute result for vary_headers .	vary_headers = cc_delim_re . split ( response [ STR0 ] )
7253	if self has an STR0 attribute and self._regex_validator is contained in self.validators ,	if hasattr ( self , STR0 ) and self . _regex_validator in self . validators :
6722	substitute message for self.message .	self . message = message
8934	from UserList import UserList into default namespace .	from UserList import UserList
147	call the method self.get with key and version set to version as arguments , substitute the result for value .	value = self . get ( key , version = version )
6934	call the method datetime_safe.new_date with an argument date_value , substitute the result for date_value .	date_value = datetime_safe . new_date ( date_value )
847	define initialization method __init__ with argument self .	def __init__ ( self ) :
15835	if self._wrapped is empty ,	if self . _wrapped is empty :
18801	define the method addQuickElement with 4 arguments : self , name , contents set to None and attrs set to None .	def addQuickElement ( self , name , contents = None , attrs = None ) :
10633	define the method render with 2 arguments self and context .	def render ( self , context ) :
15534	if value under the STR0 key of the item dictionary is not None ,	if item [ STR0 ] is not None :
8178	substitute i-th element of self.forms for form .	form = self . forms [ i ]
17448	return an instance of metaclass class , created with 3 arguments : string STR0 , None and an empty dictionary .	return metaclass ( STR0 , None , { } )
8309	call the method f.value_from_object with an argument instance , substitute the result for qs .	qs = f . value_from_object ( instance )
2291	define the method __setitem__ with arguments self , name and val .	def __setitem__ ( self , name , val ) :
18127	call the function _trans.to_locale with an argument language , return the result .	return _trans . to_locale ( language )
16572	request_repr is a string STR0 .	request_repr = STR0
3478	import module os .	import os
11753	decorator stringfilter ,	@ stringfilter
15755	substitute method for value under the funcname key of the dictionary under the klass key of the cls.__dispatch dictionary .	cls . __dispatch [ klass ] [ funcname ] = method
1857	substitute environ for self.META .	self . META = environ
16180	slice the rawdata to obtain substring from i-th to j-th element , use it as the argument for the method call to the self.handle_data .	self . handle_data ( rawdata [ i : j ] )
17121	substitute int for integer_types .	integer_types = int ,
8696	substitute self.model._default_manager for queryset .	queryset = self . model . _default_manager
13049	define the method __init__ with 2 arguments : self and loaders .	def __init__ ( self , loaders ) :
6786	call the function _ with the argument string STR0 , substitute the result for message .	message = _ ( STR0 )
5197	substitute url for display_url .	display_url = url
7485	f.required is boolean False .	f . required = False
4872	derive class Command from the BaseCommand base class .	class Command ( BaseCommand ) :
13751	if not ,	else :
11474	extend collect list with settings.TEMPLATE_CONTEXT_PROCESSORS .	collect . extend ( settings . TEMPLATE_CONTEXT_PROCESSORS )
18584	strip message_context of STR characters from both ends , substitute the result for message_context .	message_context = message_context . strip ( STR )
11580	from django.conf import settings into default name space .	from django . conf import settings
7447	raise an ValidationError with 3 arguments : value under the STR0 key of the self.error_messages dictionary , code set to an string STR1 and dictionary params with an entry : val for STR2 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 , params = { STR2 : val } , )
5733	import module sys .	import sys
4242	write the string STR0 to the standard output .	self . stdout . write ( STR0 )
12428	return an string STR0 .	return STR0
10198	call the method self._assert_mutable .	self . _assert_mutable ( )
114	call the params.get method with string STR0 and an empty string as arguments , substitute the result for self._key_prefix .	self . key_prefix = params . get ( STR0 , STR )
3097	call the method parser.add_argument with 4 arguments : string STR0 , default set to string STR1 , dest set to STR2 and help is a string STR3 .	parser . add_argument ( STR0 , default = STR1 , dest = STR2 , help = STR3 )
649	define the method decr with self , key , delta defaulting to integer 1 and version defaulting to None as arguments .	def decr ( self , key , delta = 1 , version = None ) :
14459	if self.timezone is false ,	if not self . timezone :
10816	define the method more with an argument self .	def more ( self ) :
12356	define the method render with 2 arguments : self and context .	def render ( self , context ) :
475	__locks is an empty dictionary .	_locks = { }
12584	call the method parser.parse with an argument tuple with 3 elements : strings STR0 , STR1 and STR2 , substitute the result for nodelist .	nodelist = parser . parse ( ( STR0 , STR1 , STR2 ) )
18438	call the method language_code_re.search with an argument accept_lang , if it evaluates to false ,	if not language_code_re . search ( accept_lang ) :
17491	define the method __init__ with an argument self .	def __init__ ( self ) :
7430	call the method clean with an argument value from the base class of the class TypedChoiceField , substitute the result for value .	value = super ( TypedChoiceField , self ) . clean ( value )
14047	import module os .	import os
11824	try ,	try :
8682	if STR0 attribute of meta is None , or if it doesnt exists if fields is None and if STR1 attribute of meta is None , or if it doesnt exists if exclude is None .	if ( getattr ( meta , STR0 , fields ) is None and getattr ( meta , STR1 , exclude ) is None ) :
8300	skip this loop iteration .	continue
10275	if host ends with STR0 , remove the last element from host .	host = host [ : - 1 ] if host . endswith ( STR0 ) else host
1980	define the function mail_managers with subject , message , fails_silently set to boolean False , connection set to None ,	def mail_managers ( subject , message , fail_silently = False , connection = None , html_message = None ) :
2416	derive the class EmailMultiAlternatives from the EmailMessage base class .	class EmailMultiAlternatives ( EmailMessage ) :
17134	if not ,	else :
10421	define the method write with 2 arguments : self and value .	def write ( self , content ) :
1957	from django.core.mail.utils import CachedDnsName and DNS_NAME into default name space .	from django . core . mail . utils import CachedDnsName , DNS_NAME
11587	from django.utils.safestring import mark_safe , SafeData and mark_for_escaping into default name space .	from django . utils . safestring import mark_safe , SafeData , mark_for_escaping
2079	open the file in mode STR0 and with file name obtained by calling the self._get_filename method .	self . stream = open ( self . _get_filename ( ) , STR0 )
3083	otherwise if value under the key STR0 of the options dictionary is true ,	elif options [ STR0 ] :
6861	month_field is a string STR0 .	month_field = STR0
4145	call the function MigrationExecutor with connection and self.migration_progress_callback as arguments , substitute the result fro executor .	executor = MigrationExecutor ( connection , self . migration_progress_callback )
3177	try ,	try :
8927	from django.forms.utils import everything into default name space .	from django . forms . utils import *
8728	if self._pk_field equals self.fk ,	if self . _pk_field == self . fk :
15197	if filters is true ,	if filters :
11218	otherwise if name is not None and filter_func is None ,	elif name is not None and filter_func is None :
2289	if not ,	else :
2954	all_locales is an empty string .	all_locales = [ ]
7417	define the method __init__ with 3 arguments : self , unpacked list args and unpacked dictionary kwargs .	def __init__ ( self , * args , ** kwargs ) :
11395	define the method __repr__ with an argument self .	def __repr__ ( self ) :
6414	join together callback.__module__ , character STR0 and callback.__name__ , substitute the result for lookup_str .	lookup_str = callback . __module__ + STR0 + callback . __name__
7942	get the value under the self.name key of the self.form.initial dictionary , if it exists , substitute it for data , if not , substitute self.field.initial for data .	data = self . form . initial . get ( self . name , self . field . initial )
14948	substitute value for rest .	rest = value
9624	call the method boundary with an argument string STR0 , use the result to call to the parse_header function , assign the result to ctypes and opts .	ctypes , opts = parse_header ( content_type . encode ( STR0 ) )
8641	self.new_objects is an empty list .	self . new_objects = [ ]
2120	raise an ValueError exception with argument string STR0 .	raise ValueError ( STR0 )
5085	substitute app_or_project for self.app_or_project .	self . app_or_project = app_or_project
16494	substitute length of text for end .	end = len ( text )
14732	if instance is not None ,	if instance is not None :
17980	if timezone is an instance of tzinfo ,	if isinstance ( timezone , tzinfo ) :
11752	decorator function register.filter with an argument is_safe set to boolean False .	@ register . filter ( is_safe = False )
8695	if queryset is None ,	if queryset is None :
10353	call the method self._convert_to_charset with arguments : header and string STR0 , substitute the result for header .	header = self . _convert_to_charset ( header , STR0 )
14016	if iterations is lesser than integer 0 , raise an error .	assert iterations > 0
9013	if Exception exception is caught ,	except Exception :
1735	if response has an attribute named STR0 and response.render is a callable function ,	if hasattr ( response , STR0 ) and callable ( response . render ) :
13546	from __future__ import absolute_import into default name space .	from __future__ import absolute_import
1898	define _get_files method with self class instance as the argument .	def _get_files ( self ) :
4321	for every node in return value of the graph.leaf_nodes method called with the app_name argument ,	for node in graph . leaf_nodes ( app_name ) :
11538	define the method unclosed_block_tag with 2 arguments : self and parse_until .	def unclosed_block_tag ( self , parse_until ) :
2601	call the method self.fetch_command with first element of options.args as argument , on the result call the method print_help , with 2 arguments : self.prog_name and first element of options.args .	self . fetch_command ( options . args [ 0 ] ) . print_help ( self . prog_name , options . args [ 0 ] )
8797	if return values of the function force_text called two times with 1 argument , with value , and with orig , are equal ,	if force_text ( value ) != force_text ( orig ) :
18708	define the method utcoffset with 2 arguments self and dt .	def utcoffset ( self , dt ) :
263	call the method pickle.dumps with value and pickle.HIGHEST_PROTOCOL as arguments , substitute it for pickled .	pickled = pickle . dumps ( value , pickle . HIGHEST_PROTOCOL )
15987	define the method handle_charref with 2 arguments self and name .	def handle_charref ( self , name ) :
7234	substitute STR0 in string STR1 with the elements of value converted into a tuple , substitute the result for value .	value = STR0 % tuple ( value )
14956	match rest string with self.DOT_PATTERN regex , substitute the result for m .	m = self . DOT_PATTERN . match ( rest )
10373	define the method items with an argument self .	def items ( self ) :
7528	otherwise if field.required is true ,	elif field . required :
7142	if value is contained in self.empty_values ,	if value in self . empty_values :
13138	try ,	try :
2496	if argv is true , substitue it for self.argv , if not substitute sys.argv for self.argv .	self . argv = argv or sys . argv [ : ]
8607	add data to seen_data set .	seen_data . add ( data )
7021	extend errors list with e.error_list .	errors . extend ( e . error_list )
16698	with lock ,	with lock :
11178	call the method parse_bits with 8 arguments : parser , bits , params , varargs , varkw , defaults , takes_context and name , substitute the result for args and kwargs , respectively .	args , kwargs = parse_bits ( parser , bits , params , varargs , varkw , defaults , takes_context , name )
17200	substitute name for new_attr .	new_attr = name
14071	call the method os.dup2 with 2 arguments : result of the method si.fileno and result of the method sys.stdin.fileno .	os . dup2 ( si . fileno ( ) , sys . stdin . fileno ( ) )
7957	get the value under the STR0 key of the widget.attrs dictionary , if the key exists substitute it for id_ , if not , substitute self.auto_id for id_ .	id_ = widget . attrs . get ( STR0 ) or self . auto_id
432	evaluate self.clear method and return the result .	return self . clear ( )
13520	call the method self._archive.close .	self . _archive . close ( )
12043	call the function ugettext with an argument string STR0 , substitute STR1 with the result of the call to the function , filesize_number_format with result of division of bytes by TB as an argument , substitute the result for value .	value = ugettext ( STR0 ) % filesize_number_format ( bytes / TB )
15226	define function python_2_unicode_compatible , with klass as an argument .	def python_2_unicode_compatible ( klass ) :
13533	join to_path and name into a file path , substitute the result for filename .	filename = os . path . join ( to_path , name )
5117	context is an instance of a class Context , created with 2 arguments : dictionary created by apllying options to unpacked dictionary containing 3 entries : name for base_name , top_dir for base_directory and docs_version for STR0 and autoescape set to boolean False .	context = Context ( dict ( options , ** { base_name : name , base_directory : top_dir , STR0 : docs_version , } ) , autoescape = False )
1191	_anonymous_ is a list containing one string : STR0 .	_anonymous_ = [ STR0 ]
12481	raise an TemplateSyntaxError exception with an argument string STR0 , where STR1 is replaced with last element of args .	raise TemplateSyntaxError ( STR0 % args [ - 1 ] )
8517	call the method self.get_queryset , return the length of the result .	return len ( self . get_queryset ( ) )
1598	derive the class MemoryFileUploadHandler from the FileUploadHandler base class .	class MemoryFileUploadHandler ( FileUploadHandler ) :
15723	cls.__dispatch is an empty dictionary .	cls . __dispatch = { }
2834	substitute string STR0 , with STR1 replaced by label , for missing_args_message .	missing_args_message = STR0 % label
1680	insert mw_instance.process_exception at the beginning of self._exception_middleware .	self . _exception_middleware . insert ( 0 , mw_instance . process_exception )
5811	call the method self.xml.startElement with 2 arguments : string STR0 and a dictionary containing 2 entries : field.name for STR1 , and return value of the field.get_internal_type method for STR2 .	self . xml . startElement ( STR0 , { STR1 : field . name , STR2 : field . get_internal_type ( ) } )
5681	if base.DeserializationError exception is caught ,	except base . DeserializationError :
1755	call the method self.get_exception_response with the request , resolver and integer 400 as the arguments , substitute the result for response .	response = self . get_exception_response ( request , resolver , 400 )
3901	call the function is_ignored , with arguments : file_path and self.ignore_patterns , if it evaluates to true ,	if is_ignored ( file_path , self . ignore_patterns ) :
1278	import module errno .	import errno
8590	delete the form.cleaned_data dictionary entry under the field key .	del form . cleaned_data [ field ]
10546	from functools import partial into default name space .	from functools import partial
12828	call the function t.render with an argument context_instance , return the result .	return t . render ( context_instance )
1377	mode is a string STR0 is chunk is instance of the type bytes , otherwise mode is a string STR1 .	mode = STR0 if isinstance ( chunk , bytes ) else STR1
9387	define the method is_checked with an argument self .	def is_checked ( self ) :
18655	return obj .	return obj
16672	return result .	return result
7356	convert value into boolean and substitute it for value .	value = bool ( value )
8884	if value is false ,	if not value :
2173	return boolean False .	return False
8153	if self._errors is None ,	if self . _errors is None :
10920	try ,	try :
11340	for every templatetag_module in templatetags_modules_candidates ,	for templatetag_module in templatetags_modules_candidates :
4801	dest set to string STR1 , default set to boolean True , and help as a string STR2 call the method parser.add_argument with 3 arguments : string STR3 , default set to DEFAULT_DB_ALIAS , and help set to string STR4 .	parser . add_argument ( STR1 , default = DEFAULT_DB_ALIAS , help = STR2 )
2809	call the method parser.add_argument with 4 arguments : string STR0 , metavar set to STR1 , nargs set to STR2 , and help set to string STR3 .	parser . add_argument ( STR0 , metavar = STR1 , nargs = STR2 , help = STR3 )
7442	define the method validate with arguments self and value .	def validate ( self , value ) :
7639	import module datetime .	import datetime
17664	substitute length for truncate_len .	truncate_len = length
4788	import module warnings .	import warnings
4350	from django.core.servers.fastcgi import runfastcgi into default namespace .	from django . core . servers . fastcgi import runfastcgi
13386	return path .	return path
15449	call the method handler.addQuickElement with 2 arguments : string STR0 and value under the STR1 key of item dictionary .	handler . addQuickElement ( STR0 , item [ STR1 ] )
7629	call the function clean_ipv6_address with arguments value and self.unpack_ipv4 , return the result .	return clean_ipv6_address ( value , self . unpack_ipv4 )
6980	substitute required , label and initial for self.required , self.label and self.initial .	self . required , self . label , self . initial = required , label , initial
3239	remove first element from model_dependencies , assign it to model and deps , respectively .	model , deps = model_dependencies . pop ( )
13058	for every loader in self._loaders ,	for loader in self . _loaders :
1845	call the sio.readline method , substitute the result for line .	line = sio . readline ( )
5910	if not ,	else :
1038	call the os.path.getsize function with argument self.file.name , return the result .	return os . path . getsize ( self . file . name )
13733	if not ,	else :
2863	if sys.stdout has an attribute named STR0 and call to the sys.stdout.isatty returns boolean True , substitute True for is_a_tty .	is_a_tty = hasattr ( sys . stdout , STR0 ) and sys . stdout . isatty ( )
6052	define the function run with 5 arguments : addr , port , wsgi_handler , ipv6 set to boolean False and threading set to boolean False .	def run ( addr , port , wsgi_handler , ipv6 = False , threading = False ) :
9531	derive the class SplitHiddenDateTimeWidget from the SplitDateTimeWidget base class .	class SplitHiddenDateTimeWidget ( SplitDateTimeWidget ) :
13308	increment i by integer 1 .	i += 1
9242	call the function conditional_escape with an argument checkbox_name , substitute the result for value under the STR0 key of the substitutions dictionary .	substitutions [ STR0 ] = conditional_escape ( checkbox_name )
17223	for every attr in _urllib_parse_moved_attributes ,	for attr in _urllib_parse_moved_attributes :
6559	property decorator ,	@ property
9920	assign value and params to the value under the name key of the outdict dictionary .	outdict [ name ] = value , params
4976	call the method connection.ops.sql_flush with arguments : style , tables , seqs and allow_cascade , substitute the result for statements .	statements = connection . ops . sql_flush ( style , tables , seqs , allow_cascade )
13692	call the signal.signal method with signal.SIGTTOU and signal.SIG_IGN as arguments , store the result in old_handler .	old_handler = signal . signal ( signal . SIGTTOU , signal . SIG_IGN )
7989	call the function smart_text with an argument auto_id , format the result with self.html_name , return it .	return smart_text ( auto_id ) % self . html_name
12374	substitute args for self.args .	self . args = args
1216	if ImportError or AttributeError exception occurred ,	except ( ImportError , AttributeError ) :
15628	define the function number_format with 4 arguments : value , decimal_pos set to None , use_l10n set to None ,	def number_format ( value , decimal_pos = None , use_l10n = None , force_grouping = False ) :
2469	define the function get_commands .	def get_commands ( ) :
8438	define the method _update_errors with 2 arguments : self and errors .	def _update_errors ( self , errors ) :
310	call the method cursor.execute with string STR0 as argument , substitute the STR1 with table and list containing return value of the method call ops.value_to_db_datetime with argument now on the object under the db key of connections dictionary , respectively .	cursor . execute ( STR0 % table , [ connections [ db ] . ops . value_to_db_datetime ( now ) ] )
13068	call the method self.cache_key with 2 arguments name and dirs , substitute the result for key .	key = self . cache_key ( name , dirs )
17867	divide since by seconds , store the floored result in count .	count = since // seconds
17928	return self.DSTDIFF .	return self . DSTDIFF
16569	if Exception exception is caught ,	except Exception :
6893	if settings.USE_L10N is true ,	if settings . USE_L10N :
4394	if m is None ,	if m is None :
17390	if print_ is None ,	if print_ is None :
17051	derive the class EscapeText from six.text_type and EscapeData base classes .	class EscapeText ( six . text_type , EscapeData ) :
11948	if IndexError exception is caught ,	except IndexError :
12758	return template and None .	return template , None
18371	define the function ungettext with 3 arguments : singular , plural and number .	def ungettext ( singular , plural , number ) :
5202	call the function cleanup_url with an argument url , assign the result to filename and display_url , respectively .	filename , display_url = cleanup_url ( url )
3046	if DatabaseError , renamed to e , exception is caught ,	except DatabaseError as e :
3505	define the method handle with 3 arguments : self , unpacked list fixture_labels and unpacked dictionary options .	def handle ( self , * fixture_labels , ** options ) :
13768	define private method __repr__ with argument self .	def __repr__ ( self ) :
5426	get the value under the format key of the _serializers dictionary , return the Serializer filed of the result .	return _serializers [ format ] . Serializer
3642	ser_fmt is None .	ser_fmt = None
17143	bitwise shift integer 1 to the left by 63 spaces , substitute integer 1 from the result , convert the result to a integer , substitute it for MAXSIZE .	MAXSIZE = int ( ( 1 << 63 ) - 1 )
16544	from django.views.debug import ExceptionReporter and get_exception_reporter_filter into default name space .	from django . views . debug import ExceptionReporter , get_exception_reporter_filter
18073	if number is an instance of int type .	if isinstance ( number , int ) :
12398	substitute url for value under the self.asvar key of context dictionary .	context [ self . asvar ] = url
4710	call the method self.style.MIGRATE_HEADING with an argument string STR0 , write it to self.stdout .	self . stdout . write ( self . style . MIGRATE_HEADING ( STR0 ) )
11610	if value is false , return it , if it is true convert first element of value to uppercase letter , return the value .	return value and value [ 0 ] . upper ( ) + value [ 1 : ]
958	if messages is not an instance of the ValidationError class ,	if not isinstance ( messages , ValidationError ) :
15853	call the function new_method_proxy with an argument bytes , substitute the result for __bytes__ .	__bytes__ = new_method_proxy ( bytes )
4034	write string STR0 to self.stdout stream .	self . stdout . write ( STR0 )
15842	if proto is greater than or equal to integer 2 ,	if proto >= 2 :
11200	call the method self.tag_function with an argument name , return the result .	return self . tag_function ( name )
5599	if GeneratorExit exception is caught ,	except GeneratorExit :
6453	if language_code is not contained in self._namespace_dict ,	if language_code not in self . _namespace_dict :
14349	define the method items with an argument self .	def items ( self ) :
11534	return an instance of DebugVariableNode , created with an argument contents .	return DebugVariableNode ( contents )
16712	import module sys .	import sys
14769	if middleware has an attribute STR0 ,	if hasattr ( middleware , STR0 ) :
17552	foreground is a dictionary created with elements : x appended to a string STR0 for value under the key x of color_names dictionary , for every x in sequence of integers from 0 to 7 .	foreground = dict ( ( color_names [ x ] , STR0 % x ) for x in range ( 8 ) )
11652	append result of method six.text_type called with an argument digit to an list , for every digit in reversed order of digits , substitute the resulting list for digits .	digits = [ six . text_type ( digit ) for digit in reversed ( digits ) ]
9849	break the loop execution .	break
6505	replace STR0 in the string STR1 with view_type , use it as an name of the attribute to get from the urls , substitute it for callback .	callback = getattr ( urls , STR0 % view_type )
6784	compare is a lambda function with arguments self , a and b , return value is boolean True if a is not b , otherwise it is False .	compare = lambda self , a , b : a is not b
16644	increment stats dictionary value under the MISSES key by integer 1 .	stats [ MISSES ] += 1
17456	if slots is an instance of str ,	if isinstance ( slots , str ) :
9918	get the value under the STR0 key of the params dictionary , if it is true ,	if params . get ( STR0 ) :
1771	return response .	return response
1051	call the method self._get_size_from_underlying_file , substitute the result for self._size .	self . _size = self . _get_size_from_underlying_file ( )
7711	get the value under the name key of the self.fields dictionary , substitute it for field .	field = self . fields [ name ]
4903	from django.apps import apps into default name space .	from django . apps import apps
757	if not ,	else :
3433	if new_name ends with a string STR0 ,	if new_name . endswith ( STR0 ) :
15364	if ttl is not None ,	if ttl is not None :
12168	substitute nodelist_empty for self.nodelist_empty .	self . nodelist_empty = nodelist_empty
6092	call the method sys.stderr.write with an argument string STR0 .	sys . stderr . write ( STR0 )
10073	define the method _initialize_handlers with an argument self .	def _initialize_handlers ( self ) :
5427	define the function get_serializer_formats .	def get_serializer_formats ( ) :
5125	call the method path_rest.replace with arguments base_name and name , substitute the result for relative_dir .	relative_dir = path_rest . replace ( base_name , name )
10329	define the method _convert_to_charset with 4 arguments : self , value , charset and mime_encode set to boolean False .	def _convert_to_charset ( self , value , charset , mime_encode = False ) :
6306	if not ,	else :
15436	if value under the STR0 key of the self.feed dictionary is not None ,	if self . feed [ STR0 ] is not None :
13414	supported is boolean True .	supported = True
14039	call the function inner.copy , substitute the result for dig1 , call the function outer.copy , substitute the result for dig2 .	dig1 , dig2 = inner . copy ( ) , outer . copy ( )
15276	if s is an instance of an object six.memoryview .	if isinstance ( s , six . memoryview ) :
15790	return self .	return self
3002	Otherwise , settings.CACHES is used to find cache tables . STR0 -- database STR1store STR2database STR3Nominates a database onto which the cache tables will be installed .	parser . add_argument ( STR1 , action = STR2 , dest = STR3 , default = DEFAULT_DB_ALIAS , help = STR4 )
16272	if six.PY2 is true ,	if six . PY2 :
10326	substitute serialize_headers for __bytes__ .	__bytes__ = serialize_headers
2	import module warnings .	import warnings
14138	call the method self._iteritems , for every k and v in the result ,	for k , v in self . _iteritems ( ) :
6905	for every i in self.years append tuple containing i and i elements into a list , substitute the resulting string for choices .	choices = [ ( i , i ) for i in self . years ]
7902	define the method __iter__ with an argument self .	def __iter__ ( self ) :
17921	define the method utcoffset with 2 arguments : self and dt .	def utcoffset ( self , dt ) :
16395	if STR0 is contained in last elements of hextets ,	if STR0 in hextets [ - 1 ] :
6259	substitute app_name for self.app_name .	self . app_name = app_name
17130	substitute unicode for text_type .	text_type = unicode
3565	add obj.object.__class__ to self.models set .	self . models . add ( obj . object . __class__ )
15044	get config dictionary element under STR0 key , if it exists substitute it for root , if not , root is None .	root = config . get ( STR0 , None )
673	import memcache .	import memcache
9673	if item_type equals FIELD ,	if item_type == FIELD :
13008	from django.utils import six into default name space .	from django . utils import six
4794	from django.utils.deprecation import RemovedInDjango19Warning into default name space .	from django . utils . deprecation import RemovedInDjango19Warning
14102	define the method __bool__ with an argument self .	def __bool__ ( self ) :
8980	errors is an empty list .	errors = [ ]
15047	call the method self.configure_root with 2 arguments : root and boolean True .	self . configure_root ( root , True )
8886	instantiate base class of the class ModelMultipleChoiceField , substitute filed to_python of the result for to_py .	to_py = super ( ModelMultipleChoiceField , self ) . to_python
15879	substitute self._setupfunc for repr_attr .	repr_attr = self . _setupfunc
13720	return exit_code .	return exit_code
13725	call the function reloader_thread .	reloader_thread ( )
8376	raise an TypeError exception with an argument msg .	raise TypeError ( msg )
18348	define the function ugettext with an argument message .	def ugettext ( message ) :
301	call the cursor method on the value under the db key of connections dictionary , preform following with return value named cursor ,	with connections [ db ] . cursor ( ) as cursor :
2533	define the method autocomplete with an argument self .	def autocomplete ( self ) :
5185	call the method re.search with 2 arguments : raw string STR0 and name , if it evaluates to false ,	if not re . search ( STR0 , name ) :
3543	if self.fixture_count equals integer 0 and self.hide_empty is true ,	if self . fixture_count == 0 and self . hide_empty :
11321	define the function import_library with an argument taglib_module .	def import_library ( taglib_module ) :
2012	call the method msg.as_bytes , substitute the result for msg_data .	msg_data = msg . as_bytes ( )
17738	append truncate_text to out .	out += truncate_text
11309	call the function partial with 8 arguments : generic_tag_compiler , params set to params , varargs set to varargs , varkw set to varkw , defaults set to defaults , name set to function_name , takes_context set to takes_context and node_class set to InclusionNode , substitute the result for compile_func .	compile_func = partial ( generic_tag_compiler , params = params , varargs = varargs , varkw = varkw , defaults = defaults , name = function_name , takes_context = takes_context , node_class = InclusionNode )
6564	substitute the regex_compiled for value under the language_code key of the self._regex_dict dictionary .	self . _regex_dict [ language_code ] = regex_compiled
7843	return self.cleaned_data .	return self . cleaned_data
8788	define the method clean with 2 arguments : self and value .	def clean ( self , value ) :
13348	from lib2to3.pytree import Leaf and Node into default name space .	from lib2to3 . pytree import Leaf , Node
3498	help is an string STR0 .	help = STR0
965	message is an instance of the ValidationError class created with an argument message .	message = ValidationError ( message )
10512	derive the class Http404 from the Exception base class .	class Http404 ( Exception ) :
829	if obj is instance of models.signals.ModelSignal class ,	if isinstance ( obj , models . signals . ModelSignal ) :
3753	call the function io.open with 3 arguments : potfile , string STR0 and encoding set to string STR1 as arguments , with the result renamed to fp , perform the following :	with io . open ( potfile , STR0 , encoding = STR1 ) as fp :
3123	if not ,	else :
8945	if value is boolean True ,	if value is True :
17189	return attrs .	return attrs
15944	call the function re.compile with 2 arguments : raw string STR1 and re.IGNORECASE , substitute the result for html_gunk_re .	html_gunk_re = re . compile ( STR1 , re . IGNORECASE )
12396	raise an exception .	raise
15128	call the method self.configure_custom with an argument config , substitute the result for result .	result = self . configure_custom ( config )
386	try ,	try :
16226	call the function original_urlencode with 2 arguments : list with 2 elements : result of the function force_str with an argument k , and list with results of the function force_str with an argument i , for every i in v , only if v is a list or a tuple , otherwise second element is result of the function force_str with an argument v , for every k and v in query , and doseq , return the result .	return original_urlencode ( [ ( force_str ( k ) , [ force_str ( i ) for i in v ] if isinstance ( v , ( list , tuple ) ) else force_str ( v ) ) for k , v in query ] , doseq )
17374	if value.__traceback__ is not tb ,	if value . __traceback__ is not tb :
17453	remove STR0 key from the orig_vars dictionary .	orig_vars . pop ( STR0 , None )
11233	substitute name for filter_func._filter_name .	filter_func . _filter_name = name
8677	call the method add_fields from the base class of the class BaseModelFormSet , with 2 arguments : form and index .	super ( BaseModelFormSet , self ) . add_fields ( form , index )
388	evaluate self._is_expired method with f as argument , if the result is false ,	if not self . _is_expired ( f ) :
18659	convert self.children into an boolean , return it .	return bool ( self . children )
14919	compile a regex from raw string STR0 , substitute it for DOT_PATTERN .	DOT_PATTERN = re . compile ( STR0 )
8171	if forms_valid is true and call to the method self.non_form_errors , evaluates to false , return boolean True , otherwise return False .	return forms_valid and not self . non_form_errors ( )
4552	define the method handle_app_config with 3 arguments : self , app_config and unpacked dictionary options .	def handle_app_config ( self , app_config , ** options ) :
13440	substitute file for filename .	filename = file
1824	substitute empty bytes string for self.buffer .	self . buffer = STR
16060	sum trail and closing , substitute the result for lead .	trail = closing + trail
15463	if value under the STR0 key of the item dictionary is not None ,	if item [ STR0 ] is not None :
18035	import module re .	import re
18794	changeset is None .	changeset = None
4227	call the connection.cursor method , substitute the result for cursor .	cursor = connection . cursor ( )
8189	do nothing .	pass
5972	substitute pubid for self.pubid .	self . pubid = pubid
16466	if TypeError exception is caught ,	except TypeError :
17986	define the function deactivate .	def deactivate ( ) :
16593	return integer 0 .	return 0
4628	define the method handle_app_config with self class instance , app_config and dictionary options as arguments .	def handle_app_config ( self , app_config , ** options ) :
11601	get STR0 attribute from the func object , substitute it for _dec._decorated_function , if it doesnt exist , substitute func for _dec._decorated_function .	_dec . _decorated_function = getattr ( func , STR0 , func )
15956	if text has an STR0 attribute ,	if hasattr ( text , STR0 ) :
17054	substitute EscapeText for EscapeString .	EscapeString = EscapeText
6724	substitute code for self.code .	self . code = code
14950	if m is None ,	if m is None :
6993	update widget.attrs dictionary with extra_attrs .	widget . attrs . update ( extra_attrs )
8319	ignored is an empty list .	ignored = [ ]
3387	append STR0 to field_type .	field_type += STR0
8084	substitute self.files for value under the STR0 key of the defaults dictionary .	defaults [ STR0 ] = self . files
3315	derive the class Command from the BaseCommand base class .	class Command ( BaseCommand ) :
183	docstirng	STR0
12970	call the method token.split_contents , substitute the result for bits .	bits = token . split_contents ( )
8480	derive the class ModelForm from the base class in the return value of the method six.with_metaclass , called with 2 arguments : ModelFormMetaclass and BaseModelForm .	class ModelForm ( six . with_metaclass ( ModelFormMetaclass , BaseModelForm ) ) :
8112	property decorator ,	@ property
17830	if OverflowError or ValueError exceptions are caught ,	except ( ValueError , KeyError ) :
1885	define method GET with self class instance as an argument .	def GET ( self ) :
6061	call the method httpd.set_app with an argument wsgi_handler .	httpd . set_app ( wsgi_handler )
6591	if current_app and is true and current_app is contained in app_list ,	if current_app and current_app in app_list :
13494	define the method extract with 2 arguments self and to_path .	def extract ( self , to_path ) :
7874	define the method is_multipart with an argument self .	def is_multipart ( self ) :
8681	meta is an instance of a class named STR0 , derived from the object base class , without any fields .	meta = type ( str ( STR0 ) , ( object , ) , { } )
2639	if options.settings is true ,	if options . settings :
5259	import module sys .	import sys
1925	call the self.get_response with request as the argument , substitute the result for response .	response = self . get_response ( request )
15994	call the method s.feed with an argument value .	s . feed ( value )
4208	define the method migration_progress_callback with self class instance , action , migration and fake set to boolean False as arguments .	def migration_progress_callback ( self , action , migration , fake = False ) :
10727	call the method self.create_variable_node with an argument filter_expression , substitute the result for var_node .	var_node = self . create_variable_node ( filter_expression )
3328	get value under the STR0 key of the options dictionary , use it as a key to get the value from the connections dictionary , substitute the result for connection .	connection = connections [ options [ STR0 ] ]
454	if exp is not None and exp is lesser than return value of the function time.time ,	if exp is not None and exp < time . time ( ) :
14145	substitute _iteritems for iteritems .	iteritems = _iteritems
4485	raise an ImportError exception with an argument string STR0 .	raise ImportError ( STR0 )
209	define the initialization method __init__ with self , table and params as arguments .	def __init__ ( self , table , params ) :
3259	from django.core.management.color import no_style into default name space .	from django . core . management . color import no_style
16418	if count of occurrence of STR0 in ip_str is not equal to integer 3 ,	if ip_str . count ( STR0 ) != 3 :
379	evaluate method self.has_key with key and version as arguments , if the result is true ,	if self . has_key ( key , version ) :
4549	define the method add_arguments with 2 arguments self and parser .	def add_arguments ( self , parser ) :
8827	substitute empty_label for self.empty_label .	self . empty_label = empty_label
1200	define the function lock with arguments f and flags .	def lock ( f , flags ) :
6179	is_compressed is boolean False .	is_compressed = False
12113	if csrf_token equals string STR0 ,	if csrf_token == STR0 :
1951	define the get_str_from_wsgi function with environ , key and default as arguments .	def get_str_from_wsgi ( environ , key , default ) :
16408	return boolean False .	return False
5075	can_import_settings is boolean False .	can_import_settings = False
15552	import module unicodedata .	import unicodedata
1112	define the method __str__ with argument self .	def __str__ ( self ) :
6909	for every i in successive list of integers from 1 to 30 , append tuple containing i and i elements into a list , substitute the resulting string for choices .	choices = [ ( i , i ) for i in range ( 1 , 32 ) ]
5107	if self.verbosity is greater or equal to integer 2 ,	if self . verbosity >= 2 :
347	return boolean False .	return False
4389	get the value under the STR0 key of the options dictionary , if it is false ,	if not options . get ( STR0 ) :
18357	return message .	return message
3998	crate a set containing of app_labels elements , substitute it for app_labels .	app_labels = set ( app_labels )
895	substitute connection.queries for value under the STR0 key of the context_extras dictionary .	context_extras [ STR0 ] = connection . queries
2378	call the method msg.attach with an argument body_msg .	msg . attach ( body_msg )
1441	import module os .	import os
15062	try ,	try :
4246	if self.verbosity is greater or equal to 3 ,	if self . verbosity >= 3 :
9173	if attrs is not None ,	if attrs is not None :
15722	define the method __prepare_class__ with an argument self .	def __prepare_class__ ( cls ) :
14893	call the method self.configurator.convert with an arugment value , substitute the result for result .	result = self . configurator . convert ( value )
17881	import module sys .	import sys
941	do nothing .	pass
11111	define the method token_kwargs : bits , parser and support_legacy set to boolean False .	def token_kwargs ( bits , parser , support_legacy = False ) :
5527	raise a NotImplementedError with an argument string STR0 .	raise NotImplementedError ( STR0 )
14011	call the function force_bytes with an argument password , substitute the result for password .	password = force_bytes ( password )
16831	if decimal_pos is not None ,	if decimal_pos is not None :
3066	define the function module_to_dict with 2 arguments : module and omittable as a lambda function with an argument k ,	def module_to_dict ( module , omittable = lambda k : k . startswith ( STR0 ) ) :
7774	define the method _raw_value with 2 arguments : self and fieldname .	def _raw_value ( self , fieldname ) :
2402	if mimetype is None ,	if mimetype is None :
4081	raise an ValueError with an argument string STR0 , where STR1 is replaced with migration_names .	raise ValueError ( STR0 % migration_names )
10802	return an instance of FilterExpression class , created with 2 arguments : token and self .	return FilterExpression ( token , self )
2782	append e to warnings list for every e in all_issues , if checks.WARNING is lesser than or equal to e.level , and e.level is lesser than checks.WARNING and result of the method e.is_silenced in false .	warnings = [ e for e in all_issues if checks . WARNING <= e . level < checks . ERROR and not e . is_silenced ( ) ]
18466	singular is an empty list .	singular = [ ]
18366	define the function ngettext with 3 arguments : singular , plural and number .	def ngettext ( singular , plural , number ) :
9368	derive the class ChoiceInput from the SubWidget base class .	class ChoiceInput ( SubWidget ) :
11320	call the function is_library_missing with an argument path , return the result .	return is_library_missing ( path )
3114	get the value under the STR0 key of the options dictionary , substitute the result for use_natural_keys .	use_natural_keys = options . get ( STR0 )
8114	if call to the method self.is_valid , evaluates to false or self.can_delete is boolean false ,	if not self . is_valid ( ) or not self . can_delete :
16386	replace hextets list from the best_doublecolon_start index to best_doublecolon_end index with an empty string .	hextets [ best_doublecolon_start : best_doublecolon_end ] = [ STR ]
1198	substitute BOOL for UnlockFileEx.restype .	UnlockFileEx . restype = BOOL
8668	call the method pk.rel.to._default_manager.get_queryset , substitute the result for qs .	qs = pk . rel . to . _default_manager . get_queryset ( )
917	derive the class DjangoRuntimeWarning from the RuntimeWarning base class .	class DjangoRuntimeWarning ( RuntimeWarning ) :
3757	requires_system_checks is boolean False .	requires_system_checks = False
17379	if _globs_ is None ,	if _globs_ is None :
7713	raise an KeyError with an argument string STR0 , substitute STR1 with name and self.__class__.__name__ .	raise KeyError ( STR0 % ( name , self . __class__ . __name__ ) )
12360	define the method __init__ with 2 arguments : self and nodelist .	def __init__ ( self , nodelist ) :
5769	with 2 arguments : stream and Loader set to SafeLoader , and unpacked dictionary options , yield one element of the itterable obj .	yield obj
13531	if leading is true ,	if leading :
2986	msg is a string STR0 , with STR1 replaced by self.program and errors .	msg = STR0 % ( self . program , errors )
14877	substitute result for value under key key of self dictionary .	self [ key ] = result
6042	call the self.style.HTTP_NOT_MODIFIED with an argument msg , substitute it for msg .	msg = self . style . HTTP_NOT_MODIFIED ( msg )
10536	response.content is bytes empty string .	response . content = STR
3813	call the method settings.configure with an argument USE_I18N set to boolean True .	settings . configure ( USE_I18N = True )
15350	format string STR0 with hour and minute , append it to time_str , return the result .	return time_str + STR0 % ( hour , minute )
10016	if domain is true ,	if domain :
2842	append label_output to output .	output . append ( label_output )
3846	for every potfile in potfiles ,	for potfile in potfiles :
5178	if file path absolute_path exists ,	if path . exists ( absolute_path ) :
6328	derive the class LocaleRegexProvider with object as base class .	class LocaleRegexProvider ( object ) :
14741	call the function bound_func with 2 arguments : unpacked list args and unpacked dictionary kwargs , return the result .	return bound_func ( * args , ** kwargs )
14568	call the method self.data.timetuple , use the result as an argument for the call to the function time.mktime , return result converted into an integer .	return int ( time . mktime ( self . data . timetuple ( ) ) )
9720	if SkipFile exception is caught ,	except SkipFile :
7399	return an empty string .	return STR
9112	call the method __new__ from the base class of the class MediaDefiningClass , called with 4 arguments : mcs , name , bases and attrs .	new_class = ( super ( MediaDefiningClass , mcs ) . __new__ ( mcs , name , bases , attrs ) )
335	return default .	return default
384	call the function self._key_to_file with key and version as arguments , substitute it for fname .	fname = self . _key_to_file ( key , version )
4733	write string STR0 to self.stdout stream .	self . stdout . write ( STR0 )
15906	for every item in values ,	for item in values :
18589	plural is an empty list .	plural = [ ]
11851	define the function length with an argument value .	def length ( value ) :
5013	define the function custom_sql_for_model with 3 arguments : app_config , style and connection .	def custom_sql_for_model ( model , style , connection ) :
15499	call the method handler.addQuickElement with 2 arguments : string STR0 and result of the function rfc3339_date , called with an argument result of the method self.latest_post_date .	handler . addQuickElement ( STR0 , rfc3339_date ( self . latest_post_date ( ) ) )
10564	from django.utils.encoding import python_2_unicode_compatible into default name space .	from django . utils . encoding import python_2_unicode_compatible
6978	creation_counter is an integer 0 .	creation_counter = 0
284	define the method delete with self class instance , key and version set to None as arguments .	def delete ( self , key , version = None ) :
16973	ch2 is None .	ch2 = None
4732	if lengths of new_operations and operations are the same ,	if len ( new_operations ) == len ( operations ) :
14429	compile regex from a string STR0 , substitute it for re_escaped .	re_escaped = re . compile ( STR0 )
157	define the method set_many with arguments , self , data , timeout defaulting to DEFAULT_TIMEOUT and version set to None .	def set_many ( self , data , timeout = DEFAULT_TIMEOUT , version = None ) :
16367	split ip_str by STR0 , substitute the result for hextets .	hextets = ip_str . split ( STR0 )
3372	if column_name is contained in indexes ,	if column_name in indexes :
2166	if sent is true ,	if sent :
16586	return first 989 elements of formatted_subject .	return formatted_subject [ : 989 ]
2548	if first element of cwords equals a string STR0 ,	if cwords [ 0 ] == STR0 :
9055	call the method self._css.keys , sort the result and substitute it for media .	media = sorted ( self . _css . keys ( ) )
2366	call the os.path.basename with path as argument , substitute the result for filename .	filename = os . path . basename ( path )
3340	yield string STR0 as the result .	yield STR0
10998	define the method resolve with 2 arguments : self and context .	def resolve ( self , context ) :
13559	try ,	try :
16097	import module sys .	import sys
12972	raise an TemplateSyntaxError exception with an argument string STR0 , where STR1 is replaced with first element of bits .	raise TemplateSyntaxError ( STR0 % bits [ 0 ] )
6729	if value is false or character STR0 is not contained in value ,	if not value or STR0 not in value :
10861	substitute subject elements from p-th to i-th index for res .	res = subject [ p : i ]
11944	if arg is smaller than integer 1 ,	if arg < 1 :
2558	if subcommand_cls.use_argparse is true ,	if subcommand_cls . use_argparse :
9541	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
729	increment weight by integer 2 .	weight += 2
4508	do nothing .	pass
11303	call the function context_class with 2 arguments : _dict and unpacked dictionary containing 4 entries : context.autoescape for STR0 , context.autoescape for STR1 , context.use_l10n for STR2 , and context.use_tz for STR3 , substitute the result for new_context .	new_context = context_class ( _dict , ** { STR0 : context . autoescape , STR1 : context . current_app , STR2 : context . use_l10n , STR3 : context . use_tz , } )
4511	call the method rlcompleter.Completer with an argument imported_objects , use the complete field of the result as an argument for the call to the method readline.set_completer .	readline . set_completer ( rlcompleter . Completer ( imported_objects ) . complete )
18083	raise an KeyError with an argument string STR0 , where STR1 is replaced with number .	raise KeyError ( STR0 % number )
14891	define the method __getitem__ with 2 arguments : self and key .	def __getitem__ ( self , key ) :
7013	return nothing ,	return
2775	define the method check with 4 arguments : self , app_configs set to None , tags set to None , display_num_errors set to boolean False .	def check ( self , app_configs = None , tags = None , display_num_errors = False ) :
4938	extend final_output with alter_sql .	final_output . extend ( alter_sql )
1668	call the mw_class function , store the result in the mw_instance .	mw_instance = mw_class ( )
8415	call the function limit_choices_to , substitute the result for limit_choices_to .	limit_choices_to = limit_choices_to ( )
2897	define the method add_arguments with arguments self and parser .	def add_arguments ( self , parser ) :
7383	substitute Select for widget .	widget = Select
18033	call the method value.replace with an arugment tzinfo set to None , return the result .	return value . replace ( tzinfo = None )
9815	derive the class InterBoundaryIter from the six.Iterator base class .	class InterBoundaryIter ( six . Iterator ) :
8009	from django.utils.translation import ungettext and ugettext as _ into default name space .	from django . utils . translation import ungettext , ugettext as _
15200	call the method logging.getLogger with an argument name , substitute the result for logger .	logger = logging . getLogger ( name )
3464	if field_type equals a string STR0 ,	if field_type == STR0 :
17731	if not ,	else :
6091	call the method sys.stderr.write with an argument string STR0 .	sys . stderr . write ( STR0 )
6014	call the function get_wsgi_application , return the result .	return get_wsgi_application ( )
1991	do nothing .	pass
3359	call the method connection.introspection.get_relations with 2 arguments cursor , table_name and substitute the result for indexes .	indexes = connection . introspection . get_indexes ( cursor , table_name )
8915	if data is None ,	if data is None :
15760	call the function func with 2 arguments : unpacked list self.__args and unpacked dictionary self.__kw , use the result as an argument for the call to the function bytes , return the result .	return bytes ( func ( * self . __args , ** self . __kw ) )
10603	derive the class Origin form the base class object .	class Origin ( object ) :
1889	if self does not has an STR0 attribute .	if not hasattr ( self , STR0 ) :
13562	do nothing .	pass
17640	line is an empty string .	line = STR
1605	call the new_file method form the base class from the MemoryFileUploadHandler class with arguments : unpacked list args and unpacked list kwargs .	super ( MemoryFileUploadHandler , self ) . new_file ( * args , ** kwargs )
14791	if not ,	else :
3988	call the method parser.add_argument with 5 arguments : string STR1 , action as a string STR2 , dest as string STR3 , default set to boolean False , help as a string STR0 .	parser . add_argument ( STR1 , action = STR2 , dest = STR3 , default = False , help = STR0 )
4109	import module itertools .	import itertools
3981	from django.db.migrations.state import ProjectState into default name space .	from django . db . migrations . state import ProjectState
11157	if not ,	else :
4222	if fake is true ,	if fake :
15988	format string STR0 with name , append it to self.fed .	self . fed . append ( STR0 % name )
10332	try ,	try :
11379	define the method __enter__ with an argument self .	def __enter__ ( self ) :
5390	multiply self.number and self.paginator.per_page , return the result .	return self . number * self . paginator . per_page
14759	if six.PY3 is true ,	if six . PY3 :
6073	return boolean False .	return False
3523	if has_bz2 is true ,	if has_bz2 :
3092	from django.utils.deprecation import RemovedInDjango19Warning into default name space .	from django . utils . deprecation import RemovedInDjango19Warning
14727	call the function decorator with 2 arugments : unpacked list args and unpacked dictionary kwargs , return the result .	return decorator ( * args , ** kwargs )
73	call the function signals.request_finished.connect with argument close_caches .	signals . request_finished . connect ( close_caches )
4118	from django.db.migrations.loader import MigrationLoader and AmbiguityError into default name space .	from django . db . migrations . loader import MigrationLoader , AmbiguityError
17518	yield nothing .	yield
3146	raise an CommandError exception with an argument string STR0 .	raise CommandError ( STR0 )
9212	return value under the name key of the data dictionary , if it doesnt exists , return None .	return data . get ( name , None )
14161	define the method copy with an argument self .	def copy ( self ) :
12988	raise an TemplateSyntaxError exception with an argument string STR0 , where STR1 is replaced with options .	raise TemplateSyntaxError ( STR0 % option )
3562	increment objects_in_fixture by one .	objects_in_fixture += 1
14554	divide self.data.day by 10 , substitute reminder of the result for last .	last = self . data . day % 10
3979	from django.db.migrations.autodetector import MigrationAutodetector into default name space .	from django . db . migrations . autodetector import MigrationAutodetector
16176	slice the rawdata from i-th to the j-th element , replace with it STR1 in the string STR0 , use it to call the method self.error .	self . error ( STR0 % ( rawdata [ i : j ] , ) )
4178	if run_syncdb and executor.loader.unmigrated_apps exist ,	if run_syncdb and executor . loader . unmigrated_apps :
10402	call the method signing.get_cookie_signer with an argument salt set to sum of key and salt , call the method sign on the result with an argument value , substitute the result for value .	value = signing . get_cookie_signer ( salt = key + salt ) . sign ( value )
7310	return None .	return None
15113	try ,	try :
14243	call the method self.__class__ with an argument self , return the result .	return self . __class__ ( self )
13837	delete dictionary item STR0 from cc .	del cc [ STR0 ]
7544	define the method has_changed with arguments self , initial and data .	def _has_changed ( self , initial , data ) :
18468	incomment is boolean False .	incomment = False
17029	call the function flatten_result with an argument item , assign the result to res and args , respectively .	res , args = flatten_result ( item )
2926	try ,	try :
9537	from django.http.request import HttpRequest , QueryDict , RawPostDataException , UnreadablePostError and build_request_repr into default name space .	from django . http . request import ( HttpRequest , QueryDict , RawPostDataException , UnreadablePostError , build_request_repr )
7370	otherwise if value is boolean False , string STR0 or string STR1	elif value in ( False , STR0 , STR1 ) :
13200	if not ,	else :
8196	if not ,	else :
13303	i is integer 0 .	i = 0
3100	call the method parser.add_argument with 6 arguments : string STR0 , string STR1 , dest set to STR2 , action set to STR3 , default is a an empty list and help is a string STR4 .	parser . add_argument ( STR0 , STR1 , dest = STR2 , action = STR3 , default = [ ] , help = STR4 )
10738	try ,	try :
5240	call the method archive.extract with arguments : filename and tempdir .	archive . extract ( filename , tempdir )
12153	define the method render with 2 arguments : self and context .	def render ( self , context ) :
17042	for every i in range of integers from 0 to length of result , not included ,	for i in range ( len ( result ) ) :
13425	import module tarfile .	import tarfile
2065	set value under the STR0 key of kwargs dictionary to None .	kwargs [ STR0 ] = None
12940	call the method get_template with an argument template , substitute the result for template .	template = get_template ( template )
15682	from django.utils.deprecation import RemovedInDjango19Warning into default name space .	from django . utils . deprecation import RemovedInDjango19Warning
15845	return a tuple with 3 elements : copyreg._reconstructor , tuple with 3 elements : self.__class__ , object and None , and result of the method self.__getstate__ .	return ( copyreg . _reconstructor , ( self . __class__ , object , None ) , self . __getstate__ ( ) )
17370	call the function _add_doc with 2 arguments : u and string STR0 .	_add_doc ( u , STR0 )
7091	raise an ValidationError with 2 arguments : value under the STR0 key of the self.error_messages dictionary and code set to STR1 .	raise ValidationError ( self . error_messages [ STR0 ] , code = STR1 )
13249	join elements of out into a string , separated with whitespaces , append STR0 to it , append the result to STR1 , return it .	return STR0 + STR . join ( out ) + STR1
6255	substitute func for self.func .	self . func = func
5175	call the method self.download with an argument template , substitute the result for absolute_path .	absolute_path = self . download ( template )
3583	call the method self.parse_name with an argument fixture_label , substitute the result for fixture_name , ser_fmt , cmp_fmt , respective .	fixture_name , ser_fmt , cmp_fmt = self . parse_name ( fixture_label )
11808	decorator function register.filter with an argument is_safe set to boolean True .	@ register . filter ( is_safe = True )
2833	label is a string STR0	label = STR0
14199	define the method __reversed__ with an argument self .	def __reversed__ ( self ) :
13196	return content .	return content
6046	call the self.style.HTTP_NOT_FOUND with an argument msg , substitute it for msg .	msg = self . style . HTTP_NOT_FOUND ( msg )
966	extend the self.error_list list with message.error_list .	self . error_list . extend ( message . error_list )
18548	call the function warnings.warn with 2 arguments : warn_msg and TranslatorCommentWarning .	warnings . warn ( warn_msg , TranslatorCommentWarning )
3669	from django.utils.jslex import prepare_js_for_gettext into default name space .	from django . utils . jslex import prepare_js_for_gettext
1741	if exception http.Http404 as e is caught ,	except http . Http404 as e :
5718	if not ,	else :
9548	call the _tc.load method with the STR0 converted to string as an argument .	_tc . load ( str ( STR0 ) )
15179	return result .	return result
15726	call the method resultclass.mro , reverse the order of elements , for every type_ in the result .	for type_ in reversed ( resultclass . mro ( ) ) :
18010	if timezone has an attribute STR0 ,	if hasattr ( timezone , STR0 ) :
5307	do nothing .	pass
7509	clean_data is an empty list .	clean_data = [ ]
12175	for every node in self.nodelist_empty ,	for node in self . nodelist_empty :
12512	raise an TemplateSyntaxError exception with an argument string STR2 , where STR3 is replaced with filter_name .	raise TemplateSyntaxError ( STR2 % filter_name )
18288	call the function translation with an argument settings.LANGUAGE_CODE , substitute the result for default_translation .	default_translation = translation ( settings . LANGUAGE_CODE )
17123	substitute str for text_type .	text_type = str
5342	substitute length of self.object_list for self._count .	self . _count = len ( self . object_list )
16464	try ,	try :
3987	call the method parser.add_argument with 4 arguments : string STR0 , metavar set to string STR1 , nargs set to characte STR2 , and help as a string STR3 .	parser . add_argument ( STR0 , metavar = STR1 , nargs = STR2 , help = STR3 )
5640	define the method start_object with arguments self and obj .	def start_object ( self , obj ) :
12406	return self.content	return self . content
17899	return ZERO .	return ZERO
18668	return data .	return data
6097	append string STR0 to flup_module .	flup_module += STR0
10618	try ,	try :
3072	Default values are prefixed by STR0 . ' define the method handle with arguments self and unpacked dictionary options .	def handle ( self , ** options ) :
10750	call the method self.unclosed_block_tag with an argument parse_until .	self . unclosed_block_tag ( parse_until )
15476	for every cat in value under the STR0 key of the item dictionary ,	for cat in item [ STR0 ] :
7020	get the value under the e.code key of the self.error_messages dictionary , substitute the result for e.message .	e . message = self . error_messages [ e . code ]
10477	call the function force_text with an argument redirect_to , use the result as an argument for the call to the function urlparse , substitute the result for parsed .	parsed = urlparse ( force_text ( redirect_to ) )
3792	append list containing string STR0 to self.xgettext_options .	self . xgettext_options = self . xgettext_options [ : ] + [ STR0 ]
10321	define the function to_bytes with arguments val and encoding .	def to_bytes ( val , encoding ) :
9081	define the method __add__ with arguments self and other .	def __add__ ( self , other ) :
1438	define the _setup method with argument self .	def _setup ( self ) :
16769	if value under the name key of the sys.modules dictionary is not None , return boolean True , otherwise return boolean False .	return sys . modules [ name ] is not None
12800	loaders is an empty list .	loaders = [ ]
15065	raise an ValueError exception with an argument string STR0 formated with name and e .	raise ValueError ( STR0 % ( name , e ) )
13181	call the method loader.select_template with an argument template , return the result .	return loader . select_template ( template )
2165	call the method self._send with argument message , substitute the result for sent .	sent = self . _send ( message )
7732	call the method self.error_class with an argument list containing results of the function conditional_escape , called with an argument error , for every error in bf.errors , substitute the result for bf_errors .	bf_errors = self . error_class ( [ conditional_escape ( error ) for error in bf . errors ] )
11115	if match is true and call to the method match.group with an argument integer 1 evaluates to true , kwarg_format is boolean True , otherwise it is boolean False .	kwarg_format = match and match . group ( 1 )
12959	append block_name to parser.__loaded_blocks .	parser . __loaded_blocks . append ( block_name )
15446	call the method handler.addQuickElement with 2 arguments : string STR0 and value under the STR1 key of the item dictionary .	handler . addQuickElement ( STR0 , item [ STR1 ] )
16533	replace every occurrence of STRspecial in tok with STR0 , substitute the result for tok .	tok = tok . replace ( STR0 , STR1 )
8233	call the function formset.is_valid , if it evaluates to false ,	if not formset . is_valid ( ) :
16810	return boolean True .	return True
4439	get the value under the e.errno key of the ERRORS dictionary , substitute it for error_text .	error_text = ERRORS [ e . errno ]
10602	do nothing .	pass
10255	if Exception exception is caught ,	except Exception :
9401	call the function force_text with an argument self.value , substitute the result for self.value .	self . value = force_text ( self . value )
14334	for every key in self ,	for key in self :
18705	return self.__name .	return self . __name
11899	extend new_second_item with item .	new_second_item . extend ( item )
5129	make target_dir directory ,	os . mkdir ( target_dir )
17840	remove first and last elements of s , replace every occurrence of string STR0 formated with quote with quote , replace every occurrence of raw string STRspecial in the result with string '\STR , return the result .	return s [ 1 : - 1 ] . replace ( STR0 % quote , quote ) . replace ( STRspecial , STRspecial )
7841	do nothing .	pass
14946	call the method self.resolve with an argument value , return the result .	return self . resolve ( value )
14059	call the method os.setsid .	os . setsid ( )
3744	replace every occurrence of old for new in msgs , substitute the result for msgs .	msgs = msgs . replace ( old , new )
1548	do nothing .	pass
6752	do nothing .	pass
17995	call the method deactivate .	deactivate ( )
14858	raise an ValueError exception with an argument string STR0 formated with level .	raise ValueError ( STR0 % level )
5471	remove the STR0 key from the options dictionary and substitute it for self.stream , if the key doesnt exists call the six.String function and substitute the result for self.stream .	self . stream = options . pop ( STR0 , six . StringIO ( ) )
1560	derive the class StopFutureHandlers from the UploadFileException base class .	class StopFutureHandlers ( UploadFileException ) :
1090	return self .	return self
1703	call the middleware_method with the request as an argument , substitute the result for response .	response = middleware_method ( request )
16058	if middle ends with closing and count of occurrence of closing in middle equals count of occurrence of opening in middle incremented by one ,	if ( middle . endswith ( closing ) and middle . count ( closing ) == middle . count ( opening ) + 1 ) :
3504	call the method parser.add_argument with 6 arguments : string STR0 , string STR1 , action as a string STR2 , dest as a string STR3 , default set to boolean False and help set to string STR4 .	parser . add_argument ( STR0 , STR1 , action = STR2 , dest = STR3 , default = False , help = STR4 )
14822	for every renamed_method in cls.renamed_methods ,	for renamed_method in cls . renamed_methods :
3529	try ,	try :
14347	substitute _iterlists for iterlists .	iterlists = _iterlists
10582	ALLOWED_VARIABLE_CHARS is a string STR0 .	ALLOWED_VARIABLE_CHARS = ( STR0 )
17959	define the function get_default_timezone .	def get_default_timezone ( ) :
4882	get the value under the key STR0 of options dictionary , substitute it for verbosity .	verbosity = options . get ( STR0 )
18527	otherwise if t.token_type equals TOKEN_VAR ,	elif t . token_type == TOKEN_VAR :
16584	define the method format_subject with 2 arguments : self and subject .	def format_subject ( self , subject ) :
10103	self._post_parse_error is boolean True .	self . _post_parse_error = True
8614	call the function ugettext with an argument string STR0 , where STR1 is replaced with return value of the get_text_list function called with 2 arguments : unique_check and return value of the function six.text_type called with return value of the function _ with an argument string STR2 , return the result .	return ugettext ( STR0 ) % { STR1 : get_text_list ( unique_check , six . text_type ( _ ( STR2 ) ) ) , }
4319	call self.stdout.write method with app_name and self.style.MIGRATE_LABEL as arguments .	self . stdout . write ( app_name , self . style . MIGRATE_LABEL )
5859	DEFAULT_DB_ALIAS for self.db . remove the STR0 key from the options dictionary , substitute the return value for self.db , if the key doesnt exists substitute boolean False for self.ignore .	self . ignore = options . pop ( STR0 , False )
7795	call the method self.error_class , substitute the result for value under the field key of the self._errors dictionary .	self . _errors [ field ] = self . error_class ( )
4823	from django.conf import settings into default name space .	from django . conf import settings
8791	return None .	return None
14512	call the method self.timezone.utcoffset with an argument self.data , substitute the result for offset .	offset = self . timezone . utcoffset ( self . data )
16228	call the function formatdate with an argument epoch_seconds , substitute the result for rfcdate .	rfcdate = formatdate ( epoch_seconds )
3785	get the value under the STR0 key of the options dictionary , if it is true ,	if options . get ( STR0 ) :
17920	call the method tzinfo.__init__ with an argument self .	tzinfo . __init__ ( self )
9179	input_type is a string STR0 .	input_type = STR0
15222	call the initialization method UnicodeDecodeError.__init__ , with self instance of this class and *args as arguments .	UnicodeDecodeError . __init__ ( self , * args )
13957	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
6163	define the function b64_decode with an argument s .	def b64_decode ( s ) :
8513	update defaults dictionary with kwargs .	defaults . update ( kwargs )
13280	derive the class Literal from the TokenBase base class .	class Literal ( TokenBase ) :
3894	if self.verbosity is greater than integer 1 ,	if self . verbosity > 1 :
15169	if STR0 is not contained in te converted into a string ,	if STR0 not in str ( te ) :
14466	return an empty string .	return STR
6253	derive the class ResolverMatch with object as base class .	class ResolverMatch ( object ) :
6411	if callback doesnt have STR0 attribute ,	if not hasattr ( callback , STR0 ) :
2286	if not ,	else :
12562	register.tag decorator ,	@ register . tag
2747	if self.leave_locale_alone is false ,	if not self . leave_locale_alone :
14723	substitute deconstruct for klass.deconstruct .	klass . deconstruct = deconstruct
13236	return an instance of RequestContext class , created with 3 arguments : self._request , context and current_app set to self._current_app .	return RequestContext ( self . _request , context , current_app = self . _current_app )
11634	convert arg to an integer , substitute it for p .	p = int ( arg )
3918	if basedir is not a directory ,	if not os . path . isdir ( basedir ) :
10005	substitute the value under the STR0 key of the self.META dictionary , substitute it for host .	host = self . META [ STR0 ]
3968	append line to lines .	lines . append ( line )
9871	call the method data.find with an argument self._boundary , substitute the result for index .	index = data . find ( self . _boundary )
2529	substitute app_name for klass .	klass = app_name
8054	call the form.is_valid method , if it evaluates to false ,	if not form . is_valid ( ) :
4860	from django.test.utils import get_runner into default namespace .	from django . test . utils import get_runner
16620	increment key by item .	key += item
9804	define the method __next__ with an argument self .	def __next__ ( self ) :
16918	if not ,	else :
1525	substitute field_name for self.field_name .	self . field_name = field_name
1026	substitute STR0 in string STR1 with self.__class__.__name__ and self , if exists , or string STR2 if it doesnt , return it .	return STR0 % ( self . __class__ . __name__ , self or STR1 )
15254	if not ,	else :
12649	call the method parser.add_library with an argument lib .	parser . add_library ( lib )
15439	if value under the STR0 key of the self.feed dictionary is not None ,	if self . feed [ STR0 ] is not None :
11628	return input_val .	return input_val
12072	try ,	try :
4962	for every model in app_models ,	for model in app_models :
10088	call the method parser.parse , return the result .	return parser . parse ( )
2872	call the function termcolors.parse_color_setting with DJANGO_COLORS as an argument , assign the result to color_settings .	color_settings = termcolors . parse_color_setting ( DJANGO_COLORS )
17180	set attr attribute of the self object to value .	setattr ( self , attr , value )
14104	define the method __nonzero__ with an argument self .	def __nonzero__ ( self ) :
7167	return attrs .	return attrs
9520	if any w.needs_multipart_form for every w in self.widgets is true , return boolean True , if not return boolean False .	return any ( w . needs_multipart_form for w in self . widgets )
8572	for every form in self.forms append form to a list , if function form.is_valid evaluates to true , and form is not contained in forms_to_delete , substitute the resulting list for valid_forms .	valid_forms = [ form for form in self . forms if form . is_valid ( ) and form not in forms_to_delete ]
333	call the method self.make_key with key and version set to version as arguments , substitute it for key .	key = self . make_key ( key , version = version )
15442	call the method handler.endElement with an argument string STR0 .	handler . endElement ( STR0 )
11949	return integer 0 .	return 0
10729	otherwise if token.token_type equals integer 2 ,	elif token . token_type == 2 :
1397	define the method delete with arguments self and name .	def delete ( self , name ) :
163	define the method clear with self class instance as the argument ,	def clear ( self ) :
2846	derive the NoArgsCommand class from the BaseCommand base class .	class NoArgsCommand ( BaseCommand ) :
14308	return default ,	return default
1240	if os has an attribute STR0 ,	if hasattr ( os , STR0 ) :
4517	call the function os.path.expanduser with an argument pythonrc , substitute the result for pythonrc .	pythonrc = os . path . expanduser ( pythonrc )
13755	BASE2_ALPHABET is a string STR0 .	BASE2_ALPHABET = STR0
11069	bits is an empty list .	bits = [ ]
11261	derive the class AssignmentNode form the base class TagHelperNode .	class AssignmentNode ( TagHelperNode ) :
8091	and i is greater than or equal to self.min_num , value under the STR0 key of the defaults dictionary is boolean True .	defaults [ STR0 ] = True
12968	decorator method register.tag with an argument STR0 ,	@ register . tag ( STR0 )
17983	call the method pytz.timezone with an argument timezone , substitute the result for _active.value .	_active . value = pytz . timezone ( timezone )
11179	call the function node_class with 3 arguments : takes_context , args and kwargs .	return node_class ( takes_context , args , kwargs )
8276	raise an ValueError with an argument string STR0 , where STR1 is replaced with opts.object_name and fail_message , respectively .	raise ValueError ( STR0 % ( opts . object_name , fail_message ) )
9133	call the method attrs.copy , substitute the result for self.attrs .	self . attrs = attrs . copy ( )
8562	call the function form.save_m2m .	form . save_m2m ( )
17251	for every attr in _urllib_robotparser_moved_attributes ,	for attr in _urllib_robotparser_moved_attributes :
15615	convert val to an list , substitute it for val .	val = list ( val )
12210	len_item is integer 1 .	len_item = 1
2228	try ,	try :
10501	derive the class HttpResponseForbidden from the HttpResponse base class .	class HttpResponseForbidden ( HttpResponse ) :
9929	boundarystream is an instance of InterBoundaryIter class , created with self._stream and self._separator as arguments .	boundarystream = InterBoundaryIter ( self . _stream , self . _separator )
4123	help is a string STR0 .	help = STR0
15743	if not ,	else :
18567	if first element of message_context equals to character STR ,	if message_context [ 0 ] == STR :
9629	convert value under the STR0 key of the META dictionary to an integer of base of value under the STR1 key of META dictionary , if the key doesnt exists use 0 as the base , substitute the result for content_length .	content_length = int ( META . get ( STR0 , META . get ( STR1 , 0 ) ) )
2037	derive the class EmailBackend from the BaseEmailBackend base class .	class EmailBackend ( BaseEmailBackend ) :
6809	compare is a lambda function with arguments self , a and b , return value is boolean true if a is lesser than b , otherwise is false .	compare = lambda self , a , b : a < b
10032	call the method signing.get_cookie_signer with an argument salt set to sum of key and salt , call the method unsign on the result , with arguments cookie_value and max_age set to max_age .	value = signing . get_cookie_signer ( salt = key + salt ) . unsign ( cookie_value , max_age = max_age )
13106	from pkg_resources import resource_string into default name space .	from pkg_resources import resource_string
218	call the method self.validate_key with argument key .	self . validate_key ( key )
11999	if value is None ,	if value is None :
16548	DEFAULT_LOGGING is a dictionary with 5 initial entries : 1 for STR0 , False for STR1 , and 3 additional pairs of dictionaries for string .	DEFAULT_LOGGING = { STR0 : 1 , STR1 : False , STR2 : { STR3 : { STR4 : STR5 , } , STR6 : { STR7 : STR8 , } , } , STR9 : { STR10 : { STR11 : STR12 , STR13 : [ STR14 ] , STR15 : STR16 , } , STR17 : { STR18 : STR19 , } , STR20 : { STR21 : STR22 , STR23 : [ STR24 ] , STR25 : STR26 } } , STR27 : { STR28 : { STR29 : [ STR30 ] , } , STR31 : { STR32 : [ STR33 ] , STR34 : STR35 , STR36 : False , } , STR37 : { STR38 : [ STR39 ] , STR40 : STR41 , STR42 : False , } , STR43 : { STR44 : [ STR45 ] , } , } }
18551	join lineno_comment_map dictionary value under the comment_lineno_cache key into a string , separated with STR0 , format with it a string STR1 , write it to out .	out . write ( STR0 % STR1 . join ( lineno_comment_map [ comment_lineno_cache ] ) )
5835	call the method self._start_relational_field with the argument field .	self . _start_relational_field ( field )
10348	raise an exception .	raise
17323	call the method operator.attrgetter with an argument _meth_func , substitute the result for get_method_function .	get_method_function = operator . attrgetter ( _meth_func )
4774	help is a tuple containing string STR0 .	help = ( STR0 )
14410	use_func is boolean True .	use_func = True
12130	call the function next with an argument cycle_iter , call the method resolve on the result with an argument context , substitute the result for value .	value = next ( cycle_iter ) . resolve ( context )
4693	call the method parser.add_argument with 5 arguments : string STR0 , action as a string STR1 , dest as a string STR2 , default set to boolean False and help as a string STR3 .	parser . add_argument ( STR0 , action = STR1 , dest = STR2 , default = False , help = STR3 )
11450	call the function copy with an argument self.render_context , substitute the result for duplicate.render_context .	duplicate . render_context = copy ( self . render_context )
5304	derive the class PageNotAnInteger from the InvalidPage base class .	class PageNotAnInteger ( InvalidPage ) :
3074	call the method settings._setup .	settings . _setup ( )
5044	call the method models.signals.pre_syncdb.send with 6 arguments : sender set to app_config.models_module , app set to app_config.models_module , create_models set to create_models , verbosity set to verbosity , interactive set to interactive , and db set to db .	models . signals . pre_syncdb . send ( sender = app_config . models_module , app = app_config . models_module , create_models = create_models , verbosity = verbosity , interactive = interactive , db = db )
3144	if not ,	else :
1612	if not ,	else :
8290	call the function save_m2m .	save_m2m ( )
8410	substitute value under the field_name key of the self.fields dictionary for formfield .	formfield = self . fields [ field_name ]
12629	substitute last element of bits for taglib .	taglib = bits [ - 1 ]
2998	help is an string STR0 .	help = STR0
8759	otherwise if length of fks_to_parent is zero ,	elif len ( fks_to_parent ) == 0 :
9708	increment chunk by over_chunk .	chunk += over_chunk
15589	define the function get_format_modules with 2 arguments : lang set to None and reverse set to boolean False .	def get_format_modules ( lang = None , reverse = False ) :
16905	if ch equals a string STR0 ,	if ch == STR0 :
7744	call the function force_text with an argument bf.label , use the result as an argument for the call to the function conditional_escape , substitute the result label .	label = conditional_escape ( force_text ( bf . label ) )
930	derive the class DisallowedHost from the SuspiciousOperation base class .	class DisallowedHost ( SuspiciousOperation ) :
4671	call the method add_arguments from the base class of the Command class , with an argument parser .	super ( Command , self ) . add_arguments ( parser )
15950	_js_escapes is a dictionary with 11 initial entries : STR0 for integer representation of string STR1\\u0027 STR2STR , STR3 for integer representation of string STR , STR4 for integer representation of string STR5 , STR6 for integer representation of string STR7 , STR8 for integer representation of string STR9 , STR10 for integer representation of string STR11 , STR12 for integer representation of string STR13 , STR14 for integer representation of string STR15 , STR16 for integer representation of string STR17 and STR18 for integer representation of string STR19 .	_js_escapes = { ord ( STRspecial ) : STR0 , ord ( 'STR STR1\\u0027 STR2\\u0022 STR3> STR4\\u003E STR5< STR6\\u003C STR7& STR8\\u0026 STR9= STR10\\u003D STR11- STR12\\u002D STR13; STR14\\u003B STR15\u2028 STR16\\u2028 STR17\u2029 STR18\\u2029' }
16168	if there is no match ,	if not match :
16430	try ,	try :
17328	call the method operator.attrgetter with an argument _func_globals , substitute the result for get_method_globals .	get_function_globals = operator . attrgetter ( _func_globals )
18526	raise an SyntaxError with an argument string STR0 , formated with t.contents , filemsg and t.lineno .	raise SyntaxError ( STR0 % ( t . contents , filemsg , t . lineno ) )
13820	if not ,	else :
14461	try ,	try :
13158	from django.http import HttpResponse into default name space .	from django . http import HttpResponse
4450	call the method executor.migration_plan wiht return value of te method executor.loader.graph.leaf_nodes as argument , substitute it for plan .	plan = executor . migration_plan ( executor . loader . graph . leaf_nodes ( ) )
16258	if Exception exception is caught .	except Exception :
7793	call the method self.error_class with an argument error_class as an string STR0 , substitute the result for value under the field key of the self._errors dictionary .	self . _errors [ field ] = self . error_class ( error_class = STR0 )
2608	define the function execute_from_command_line with an argument argv set to None .	def execute_from_command_line ( argv = None ) :
10181	call the method bytes_to_text with 2 arguments : key and self.encoding , substitute the result for value .	value = bytes_to_text ( value , self . encoding )
2995	from django.db.utils import DatabaseError into default name space .	from django . db . utils import DatabaseError
14074	substitute so and se for sys.stdout and sys.stderr .	sys . stdout , sys . stderr = so , se
1195	substitute BOOL for LockFileEx.restype .	LockFileEx . restype = BOOL
15270	if encoding equals to string STR0 .	if encoding == STR0 :
1862	if string STR0 is contained in content_params ,	if STR0 in content_params :
9817	substitute stream for self._stream .	self . _stream = stream
11495	from django.utils.formats import localize into default name space .	from django . utils . formats import localize
16211	call the function allow_lazy with 2 arguments : urlquote and six.text_type , substitute the result for urlquote .	urlquote = allow_lazy ( urlquote , six . text_type )
13807	import time module .	import time
3525	call the method connection.constraint_checks_disabled , with the result perform ,	with connection . constraint_checks_disabled ( ) :
1281	from django.conf import settings into default name space .	from django . conf import settings
16351	from django.core.exceptions import ValidationError into default name space .	from django . core . exceptions import ValidationError
9454	yield widget .	yield widget
14204	remove k element from self.keyOrder dictionary .	self . keyOrder . remove ( k )
18334	if t is not None ,	if t is not None :
16346	break from the loop execution .	break
6550	if m and n are not None ,	if m is not None and n is not None :
3070	define the method add_arguments with 2 arguments self and parser .	def add_arguments ( self , parser ) :
18792	call the datetime.datetime.utcfromtimestamp with timestamp converted to an integer as argument , substitute result for timestamp .	timestamp = datetime . datetime . utcfromtimestamp ( int ( timestamp ) )
12208	if unpack is true ,	if unpack :
15631	if not ,	else :
3031	append string STR0 to field_output .	field_output . append ( STR0 )
12167	if not ,	else :
9584	if cookie is an empty string ,	if cookie == STR :
2272	derive the class SafeMIMEMessage from the MIMEMixin and MIMEMessage base class .	class SafeMIMEMessage ( MIMEMixin , MIMEMessage ) :
10285	import module sys .	import sys
2277	define the __init__ method with arguments : self , text , subtype and charset .	def __init__ ( self , text , subtype , charset ) :
17373	define the function reraise with 3 arguments : tp , value and tb set to None .	def reraise ( tp , value , tb = None ) :
434	for every fname in filelist ,	for fname in filelist :
16406	from django.core.validators import validate_ipv4_address .	from django . core . validators import validate_ipv4_address
2932	derive class Command from base class BaseCommand .	class Command ( BaseCommand ) :
17828	try ,	try :
6915	define the method id_for_label with arguments self and id .	def id_for_label ( self , id_ ) :
232	call the cursor method on the value under the db key of connections dictionary , preform following with return value named cursor ,	with connections [ db ] . cursor ( ) as cursor :
12102	if self.setting is true ,	if self . setting :
2588	if ImproperlyConfigured renamed to exc , exception is caught ,	except ImproperlyConfigured as exc :
7301	define the method _has_changed with arguments self , data and initial .	def _has_changed ( self , initial , data ) :
7256	append self._regex_validator to self.validators .	self . validators . append ( self . _regex_validator )
2422	if content is None , raise an error .	assert content is not None
3236	skipped is an empty list .	skipped = [ ]
4268	for model in model_list ,	for model in model_list :
14203	try ,	try :
2007	pop the value under the STR0 key of the kwargs dictionary , if it exists replace it for self.stream , if not replace sys.stdout for self.stream .	self . stream = kwargs . pop ( STR0 , sys . stdout )
7024	define the method clean with arguments self and value .	def clean ( self , value ) :
14164	get dictionary self items , convert the result into a dictionary , convert the result into a string and return it .	return str ( dict ( self . items ( ) ) )
10413	call the function force_bytes with arguments value and self._charset , return the result .	return force_bytes ( value , self . _charset )
2778	visible_issue_count is an integer 0 .	visible_issue_count = 0
7853	if field.show_hidden_initial is false ,	if not field . show_hidden_initial :
10869	call the function next_space_index with 2 arguments subject and i , substitute the result for i .	i = next_space_index ( subject , i )
8560	define the function save_m2m .	def save_m2m ( ) :
8969	python_2_unicode_compatible decorator ,	@ python_2_unicode_compatible
7929	substitute self.html_initial_name for name .	name = self . html_initial_name
12818	define the function get_template_from_string with 3 : source , origin set to None and name set to None .	def get_template_from_string ( source , origin = None , name = None ) :
9533	call the method __init__ from the base class of the class SplitHiddenDateTimeWidget , with 3 arguments : attrs , date_format , and time_format .	super ( SplitHiddenDateTimeWidget , self ) . __init__ ( attrs , date_format , time_format )
1350	if call to the function os.path.exists with argument directory evaluates to boolean False ,	if not os . path . exists ( directory ) :
15204	substitute propagate for logger.propagate .	logger . propagate = propagate
15791	decorator function wraps with an argument func .	@ wraps ( func )
6022	define the __init__ method with 3 arguments : self , unpacked list args and unpacked dictionary **kwargs .	def __init__ ( self , * args , ** kwargs ) :
12819	return an instance of Template class , created with 2 arguments : source , origin and name , return the result .	return Template ( source , origin , name )
8118	call the method self.total_form_count , for every i in sequence of integers , from 0 to the previous result ,	for i in range ( 0 , self . total_form_count ( ) ) :
11749	decorator stringfilter ,	@ stringfilter
11849	return an empty string .	return STR
14717	call the method __new__ with an argument cls from the base class of the klass function .	obj = super ( klass , cls ) . __new__ ( cls )
17963	call the method pytz.timezone with an argument settings.TIME_ZONE , substitute the result for _localtime .	_localtime = pytz . timezone ( settings . TIME_ZONE )
6124	daemonize is boolean False .	daemonize = False
6522	if not ,	else :
2559	append to options a tuple containing 2 entries : firs element of sorted list of the s_opt.option_strings ,	options += [ ( sorted ( s_opt . option_strings ) [ 0 ] , s_opt . nargs != 0 ) for s_opt in parser . _actions if s_opt . option_strings ]
10277	convert pattern to lowercase , substitute it for pattern .	pattern = pattern . lower ( )
9243	call the function conditional_escape with an argument checkbox_id , substitute the result for value under the STR0 key of the substitutions dictionary .	substitutions [ STR0 ] = conditional_escape ( checkbox_id )
14441	substitute obj for self.data .	self . data = obj
2372	define the method _create_attachments with arguments self and msg .	def _create_attachments ( self , msg ) :
18005	if should_convert is true , call the function localtime with an argument value and return the result , otherwise return value .	return localtime ( value ) if should_convert else value
645	val is None .	val = None
7195	if value is an instance of datetime.date class ,	if isinstance ( value , datetime . date ) :
7819	call the method field.widget.value_from_datadict with 3 arguments : self.data , self.files and return value of the method , self.add_prefix called with an argument name , substitute the result for value .	value = field . widget . value_from_datadict ( self . data , self . files , self . add_prefix ( name ) )
13327	return retval .	return retval
619	return val .	return val
15325	define the function rfc2822_date with an argument date .	def rfc2822_date ( date ) :
15834	define the method __getstate__ with an argument self .	def __getstate__ ( self ) :
17258	append string STR0 to __name__ , use it as an key to get the value from the sys.modules dictionary , substitute it for error .	error = sys . modules [ __name__ + STR0 ]
7257	regex is an property object of this class , with _get_regex getter and _set_regex setter function .	regex = property ( _get_regex , _set_regex )
17577	a dictionary with 18 pairs of dictionary value and string keys for DARK_PALETTE , and a dictionary with 18 pairs of dictionary value and string keys for LIGHT_PALETTE . substitute DARK_PALETTE for DEFAULT_PALETTE .	DEFAULT_PALETTE = DARK_PALETTE
4506	import readline .	import readline
3115	if use_natural_keys is true ,	if use_natural_keys :
7865	call the method field._has_changed with 2 arguments : initial_value and data_value , if it evaluates to true ,	if field . _has_changed ( initial_value , data_value ) :
6911	output is an empty list .	output = [ ]
3697	if domain equals a string STR0 and file_ext is contained in command.extensions ,	if domain == STR0 and file_ext in command . extensions :
11143	substitute params without the first element for params .	params = params [ 1 : ]
12654	define the function now with 2 arguments : parser and token .	def now ( parser , token ) :
16171	match the rawdata from the position i , with _html_parser.endtagfind pattern , assign the result to the match .	match = _html_parser . endtagfind . match ( rawdata , i )
5917	if keys is true ,	if keys :
16555	call the function logging_config_func with an argument DEFAULT_LOGGING .	logging_config_func ( DEFAULT_LOGGING )
15253	call the function six.text_type with s as an argument , substitute result for s .	s = six . text_type ( s )
6422	if pattern.app_name is true ,	if pattern . app_name :
8327	skip this loop iteration .	continue
15096	if log is contained in child_loggers ,	if log in child_loggers :
6347	define the method __init__ with 5 arguments : self , regex , callback , default_args set to None and name set to None .	def __init__ ( self , regex , callback , default_args = None , name = None ) :
18345	if six.PY3 is true ,	if six . PY3 :
1965	call the EmailMultiAlternatives function with , subject , message , from_email , recipient_list and connection set to connection , as arguments , assign the result to mail .	mail = EmailMultiAlternatives ( subject , message , from_email , recipient_list , connection = connection )
10875	return s .	return s
2509	call the method app.rpartition with an argument STR0 , substitute last element of the result for app .	app = app . rpartition ( STR0 ) [ - 1 ]
3608	call the method self.stdout.write with an argument string STR0 , where STR1 is replaced with fixture_name , and result of the function humanize called with an argument fixture_dir .	self . stdout . write ( STR0 % ( fixture_name , humanize ( fixture_dir ) ) )
2520	define the method fetch_command , with arguments self and subcommand .	def fetch_command ( self , subcommand ) :
11313	return dec .	return dec
14433	call the function force_text with an argument formatstr , use the result as an argument for the call to the method ,	for i , piece in enumerate ( re_formatchars . split ( force_text ( formatstr ) ) ) :
10317	otherwise if self.reason_phrase is None ,	elif self . reason_phrase is None :
15506	call the method handler.addQuickElement with 2 arguments : string STR0 and value under the STR1 key of the self.feed dictionary .	handler . addQuickElement ( STR0 , self . feed [ STR1 ] )
10878	filter_raw_string is a raw string STR0 , where STR2 is replaced with constant_string , STR3 with raw string STR4 , STR5 with string STR1 , STR6 with result of the function re.escape called with an argument FILTER_SEPARATOR , anbd STR7 with result of the function re.escape called with an argument FILTER_ARGUMENT_SEPARATOR .	filter_raw_string = STR0 % { STR2 : constant_string , STR3 : STR4 , STR5 : STR1 , STR6 : re . escape ( FILTER_SEPARATOR ) , STR7 : re . escape ( FILTER_ARGUMENT_SEPARATOR ) , }
1963	define send_mail funtion with subject , message , from_email , recipient_list , fail_silently set to boolean False ,	def send_mail ( subject , message , from_email , recipient_list , fail_silently = False , auth_user = None , auth_password = None , connection = None , html_message = None ) :
15423	call the method handler.startElement with 2 arguments : string STR0 and result of the method self.item_attributes with an argument item .	handler . startElement ( STR0 , self . item_attributes ( item ) )
14140	if six.PY3 is true ,	if six . PY3 :
10978	self.translate is boolean False .	self . translate = False
7523	field_value is None .	field_value = None
5380	call the method self.paginator.validate_number with self.number incremented by 1 as argument , return the result .	return self . paginator . validate_number ( self . number + 1 )
15639	otherwise if value is an instance of datetime.datetime ,	elif isinstance ( value , datetime . datetime ) :
9941	if length of value is greater or equal to integer 2 and first and last elements of value are an empty string ,	if len ( value ) >= 2 and value [ : 1 ] == value [ - 1 : ] == STR :
14993	substitute value under the STR0 key of dictionary d , substitute it for suffix .	suffix = d [ STR0 ]
15071	substitute handler for value under name key of handlers dictionary .	handlers [ name ] = handler
18535	append contents to plural .	plural . append ( contents )
13131	from django.utils._os import safe_join into default name space .	from django . utils . _os import safe_join
955	if message is an instance of dict type ,	if isinstance ( message , dict ) :
6302	get func_name attribute from the mod object , substitute it for view_func .	view_func = getattr ( mod , func_name )
16610	substitute tup for elements of self .	self [ : ] = tup
3579	if objects_in_fixture equals integer 0 ,	if objects_in_fixture == 0 :
806	define initialization method __init__ with self class instance , unpacked list args , unpacked dictionary kwargs as arguments .	def __init__ ( self , * args , ** kwargs ) :
10857	if i is greater than length of subject ,	if i >= len ( subject ) :
6638	return boolean False .	return False
13034	do nothing .	pass
7499	if self.require_all_fields is true ,	if self . require_all_fields :
8298	concatenate opts.concrete_fields , opts.virtual_fields and opts.many_to_many , for every f in the result ,	for f in opts . concrete_fields + opts . virtual_fields + opts . many_to_many :
12530	raise an TemplateSyntaxError exception with an argument string STR0 , where STR1 is replaced with token.contents .	raise TemplateSyntaxError ( STR0 % token . contents )
14705	if site is contained in sites1 ,	for site in sites1 :
14355	define the method copy with an argument self .	def copy ( self ) :
6778	if KeyError exception is caught ,	except KeyError :
5883	call the method self._handle_m2m_field_node with an argument field_node and field , substitute the result for value under the field.name key of m2m_data dictionary .	m2m_data [ field . name ] = self . _handle_m2m_field_node ( field_node , field )
2243	try ,	try :
13736	do nothing ,	pass
11831	return first element of value .	return value [ 0 ]
10004	if not ,	else :
8769	max_num is integer 1 .	max_num = 1
13515	call the method shutil.copyfileobj with 2 arguments : extracted and outfile .	shutil . copyfileobj ( extracted , outfile )
3087	from collections import OrderedDict into default name space .	from collections import OrderedDict
10629	for every subnode in node ,	for subnode in node :
6314	if urlconf is None ,	if urlconf is None :
4668	help is a string STR0 .	help = STR0
17792	msg is an string STR0 .	msg = ( STR0 )
13635	if not ,	else :
15115	if TypeError , renamed to te , exception is caught ,	except TypeError as te :
9616	FILE is a file '' .	FILE = STR0
4712	append migration.name to string STR0 , write it to self.stdout stream .	self . stdout . write ( STR0 % migration . name )
17494	call the method threading.Semaphore with an argument integer 0 , substitute the result for self.can_write .	self . can_write = threading . Semaphore ( 0 )
16255	define the function parse_http_date_safe an argument date .	def parse_http_date_safe ( date ) :
14363	call the method other_dict.lists , for every key and value_list in result ,	for key , value_list in other_dict . lists ( ) :
11283	otherwise if func is callable ,	elif callable ( func ) :
7177	if value is an instance of six.text_type class ,	if isinstance ( value , six . text_type ) :
8292	substitute save_m2m for form.save_m2m .	form . save_m2m = save_m2m
8339	if error_messages is true and f.name is contained in error_messages ,	if error_messages and f . name in error_messages :
7469	call the method self.coerce with an argument choice , append the result to new_value .	new_value . append ( self . coerce ( choice ) )
13038	open the file named filepath in read mode , with file descriptor renamed to fp perform ,	with open ( filepath , STR0 ) as fp :
504	try ,	try :
6530	if length of args is not equal to the sum of the lengths of params and prefix_args ,	if len ( args ) != len ( params ) + len ( prefix_args ) :
2742	if not ,	else :
2287	call the method payload.decode with 2 arguments : text and utf8_charset , substitute the result for self._payload .	self . set_payload ( text , utf8_charset )
11857	define the function length_is with 2 arguments value and arg .	def length_is ( value , arg ) :
11024	if TypeError and AttributeError exceptions are caught ,	except ( TypeError , AttributeError ) :
13329	call the method self.expression , substitute the result for retval .	retval = self . expression ( )
10931	format settings.TEMPLATE_STRING_IF_INVALID with self.var , return the result .	return settings . TEMPLATE_STRING_IF_INVALID % self . var
6383	substitute self.urlconf_name for self.urlconf_module .	self . _urlconf_module = self . urlconf_name
8656	and pk.rel.parent_link is true and function pk_is_not_editable called with an argument pk.rel.to._meta.pk evaluates to true , if function pk_is_not_editable called with an argument pk evaluates to true , or pk.name is not contained in form.fields ,	if pk_is_not_editable ( pk ) or pk . name not in form . fields :
6981	substitute show_hidden_initial for self.show_hidden_initial .	self . show_hidden_initial = show_hidden_initial
4092	substitute STR1 in a string STR0 with return value of the operation.describe method , write the result to self.stdout .	self . stdout . write ( STR0 % operation . describe ( ) )
1018	if name is None ,	if name is None :
17281	_func_globals is a string STR0 .	_func_globals = STR0
16699	call the method cache.clear .	cache . clear ( )
9330	if option_label is an instance of list or tuple ,	if isinstance ( option_label , ( list , tuple ) ) :
8654	define the method pk_is_not_editable with an argument pk .	def pk_is_not_editable ( pk ) :
6663	if inverse_match is not None ,	if inverse_match is not None :
3037	a string STR0 , where STR1 is replaced with tablename and f.name , respectively , return value of the function qn called with an argument tablename and return value of the function qn called with an argument f.name . join field_output elements into a string , separated by whitespaces , append it to table_output .	table_output . append ( STR . join ( field_output ) )
11957	call the method formats.time_format with 2 arguments : value and arg , return the result .	return formats . date_format ( value , arg )
13703	substitute code_changed for fn .	fn = code_changed
3713	if is_templatized is true ,	if is_templatized :
9011	try ,	try :
17962	if settings.TIME_ZONE is an instance of six.string_types and pytz is not None ,	if isinstance ( settings . TIME_ZONE , six . string_types ) and pytz is not None :
9208	join inputs elements into a string , separated with newline character , use it as an argument for the call to the function mark_safe , return the result .	return mark_safe ( STR0 . join ( inputs ) )
13472	if not ,	else :
4101	writer is instance of MigrationWriter class , created with new_migration argument .	writer = MigrationWriter ( new_migration )
12891	call the method block_context.push with 2 arguments : self.name and push .	block_context . push ( self . name , push )
8177	for every i in sequence of integers , from 0 to the result of the method self.total_form_count ,	for i in range ( 0 , self . total_form_count ( ) ) :
5685	raise an exception .	raise
16504	increment start by length of toktext .	start += len ( toktext )
15046	try ,	try :
672	define the method __init__ with argument self , server and params .	def __init__ ( self , server , params ) :
4055	crate a file named init_path .	open ( init_path , STR0 ) . close ( )
6037	if first element of the second row of args equals a string STR0 ,	if args [ 1 ] [ 0 ] == STR0 :
13318	call the function self.create_var with an argument token , return the result .	return self . create_var ( token )
17926	define the method utcoffset with 2 arguments : self and dt .	def dst ( self , dt ) :
18471	comment_lineno_cache is None .	comment_lineno_cache = None
1087	if buffer_ is not None ,	if buffer_ is not None :
6268	join func.__module__ and func.__name__ into a string , separated by character STR0 , substitute it for self._func_path .	self . _func_path = STR0 . join ( [ func . __module__ , func . __name__ ] )
7462	call the method __init__ with 2 arguments : unpacked list args and unpacked dictionary kwargs , from the base class of the class TypedMultipleChoiceField .	super ( TypedMultipleChoiceField , self ) . __init__ ( * args , ** kwargs )
14247	call the method clear from the base class of the class SortedDict .	super ( SortedDict , self ) . clear ( )
17011	if elt is an instance of six.string_types class ,	if isinstance ( elt , six . string_types ) :
5029	for every app_dir in app_dirs ,	for app_dir in app_dirs :
8634	otherwise if form.has_changed method evaluates to true ,	elif form . has_changed ( ) :
13420	remove original_path directory .	os . rmdir ( original_path )
2014	if method msg.get_charset evaluates to true , call the get_output_charset method on the return value of the msg.get_charset method , substitute the result for charset , otherwise if it is false , substitute the string STR0 for charset .	charset = msg . get_charset ( ) . get_output_charset ( ) if msg . get_charset ( ) else STR0
7913	get the value under the self.name key of the self.form.errors dictionary , if the key exists , return it , if not evaluate the method self.form.error_class and return the result .	return self . form . errors . get ( self . name , self . form . error_class ( ) )
13897	call method request.META.get with arguments header and None .	value = request . META . get ( header , None )
13214	define the method __iter__ with an argument self .	def __iter__ ( self ) :
16166	take two characters from the i-th element of rawdata , if they are not equal to the string STR1 , throw an exception with string STR0 as the message .	assert rawdata [ i : i + 2 ] == STR0 , STR1
16141	set attrvalue to None .	attrvalue = None
15041	call the method self.configure_logger with 3 arguments : name , value under name key of loggers dictionary and boolean True .	self . configure_logger ( name , loggers [ name ] , True )
2283	call the method text.encode with argument utf8_charset.output_charset , substitute the result for payload .	payload = text . encode ( utf8_charset . output_charset )
7337	if value is true ,	if value :
7222	return None .	return None
1463	do nothing .	pass
8923	only if form_class is not None , and if form_class has an attribute STR0 and form_class._meta.fields is not None ,	return ( form_class is not None and ( hasattr ( form_class , STR0 ) and ( form_class . _meta . fields is not None or form_class . _meta . exclude is not None ) ) )
12789	func.is_usable in false ,	if not func . is_usable :
16093	define the function avoid_wrapping with an argument value .	def avoid_wrapping ( value ) :
4392	if not ,	else :
5146	call the method content.encode with an argument string STR0 , substitute it for content .	content = content . encode ( STR0 )
6110	if value under the STR0 key of the options dictionary is false and values under the STR1 and STR2 keys of the options dictionary are true ,	if options [ STR0 ] and options [ STR1 ] and not options [ STR2 ] :
13	define the function get_cache with backend and dictionary pair of elements kwargs as arguments .	def get_cache ( backend , ** kwargs ) :
12517	define the function firstof with 2 arguments : parser and token .	def firstof ( parser , token ) :
620	define the method set with 5 arguments , self class instance , key , value , timeout set to DEFAULT_TIMEOUT and version set to None .	def set ( self , key , value , timeout = DEFAULT_TIMEOUT , version = None ) :
484	call the method self.validate_key with argument key .	self . validate_key ( key )
733	increment weight by integer 2 .	weight += 2
12773	return an instance of LoaderOrigin class , created with 4 arguments : display_name , loader , name and dirs .	return LoaderOrigin ( display_name , loader , name , dirs )
10605	substitute name for self.name .	self . name = name
10734	if command is contained in parse_until ,	if command in parse_until :
18225	call the method check_for_language.cache_clear .	check_for_language . cache_clear ( )
13416	supported is boolean False .	supported = False
5926	define the method _get_model_from_node with arguments self , node and attr .	def _get_model_from_node ( self , node , attr ) :
6029	derive the class WSGIRequestHandler from simple_server.WSGIRequestHandler and object base classes .	class WSGIRequestHandler ( simple_server . WSGIRequestHandler , object ) :
4396	call the method m.groups , assign the result to self.addr , _ipv4 , _ipv6 , _fqdn and self.port , respectively .	self . addr , _ipv4 , _ipv6 , _fqdn , self . port = m . groups ( )
1411	for every entry in os.listdir function return value called with the argument path ,	for entry in os . listdir ( path ) :
1227	all the function fcntl.flock with return value of the _fd ( f ) function and fcntl.LOCK_UN as arguments , substitute the result for ret .	ret = fcntl . flock ( _fd ( f ) , fcntl . LOCK_UN )
10742	try ,	try :
2676	define the method use_argparse with an argument self ,	def use_argparse ( self ) :
9889	iterator is an instance of ChunkIter class , created with arguments : stream_or_iterable and integer 16384 .	iterator = ChunkIter ( stream_or_iterable , 16384 )
18674	if data is instance of Node and data.negated is false , and if data.connector equals conn_type or length of data equals integer 1 ,	if ( isinstance ( data , Node ) and not data . negated and ( data . connector == conn_type or len ( data ) == 1 ) ) :
16761	return boolean False .	return False
12227	call the method node.render with an argument context , append the result to the nodelist .	nodelist . append ( node . render ( context ) )
13748	kwargs is a empty dictionary .	kwargs = { }
14728	from functools import wraps , update_wrapper and WRAPPER_ASSIGNMENTS into default name space .	from functools import wraps , update_wrapper , WRAPPER_ASSIGNMENTS
1948	define the function get_bytes_from_wsgi with environ , key and default as arguments .	def get_bytes_from_wsgi ( environ , key , default ) :
8257	for every f in opts.fields ,	for f in opts . fields :
12206	if i is equal to len_values decremented by 1 , value under the STR0 key of the loop_dict dictionary is boolean True , otherwise it is False .	loop_dict [ STR0 ] = ( i == len_values - 1 )
5918	call the function getInnerText with argument k , on the result call the method strip , for every k in keys , append the results to field_value list .	field_value = [ getInnerText ( k ) . strip ( ) for k in keys ]
15626	define the function time_format with 3 arguments : value , format set to None and use_l10n set to None .	def time_format ( value , format = None , use_l10n = None ) :
7908	convert result of the method self.__iter__ into a list , return its length .	return len ( list ( self . __iter__ ( ) ) )
18467	plural is an empty list .	plural = [ ]
14623	if match is true ,	if match :
2967	for dirpath , dirnames and filenames , respectively , in directory tree tuple starting from the ldir ,	for dirpath , dirnames , filenames in os . walk ( ldir ) :
16300	return a list with an element etag_str .	return [ etag_str ]
11407	substitute value for value under the key key of dictionary at last element of self.dicts .	self . dicts [ - 1 ] [ key ] = value
17359	substitute unichr for unichr .	unichr = unichr
29	if not ,	else :
13806	import re module .	import re
6474	call the method tried.extend with an argument : t added to a list containing element pattern , for every t in sub_tried .	tried . extend ( [ pattern ] + t for t in sub_tried )
5150	replace STR1 in string STR0 with new_path , write it to the self.stdout stream .	self . stdout . write ( STR0 % new_path )
14795	return _wrapped_view .	return _wrapped_view
15992	s is an instance of MLStripper class .	s = MLStripper ( )
8345	if not ,	else :
3152	call the method apps.get_app_config with an argument app_label , substitute the result for app_config .	app_config = apps . get_app_config ( app_label )
2994	from django.db import connections , router , transaction , models and DEFAULT_DB_ALIAS into default name space .	from django . db import connections , router , transaction , models , DEFAULT_DB_ALIAS
6547	format candidate_pat with candidate_subs , return the result .	return candidate_pat % candidate_subs
8439	substitute self._meta for opts .	opts = self . _meta
5600	raise an exception ,	raise
839	from itertools import chain into default name space .	from itertools import chain
11146	args is an empty list .	args = [ ]
902	call the translation.get_language_bidi function , substitute the result for the value under the STR0 key of the context_extras dictionary .	context_extras [ STR0 ] = translation . get_language_bidi ( )
11452	define the method update with 2 arguments : self and other_dict .	def update ( self , other_dict ) :
14184	append key to self.keyOrder .	self . keyOrder . append ( key )
6375	return self._callback .	return self . _callback
12302	call the method nodelist.render with an argument context , return the result .	return nodelist . render ( context )
233	call the method cursor.execute with string STR0 as argument , substitute the STR1 with table and list containing key , respectively .	cursor . execute ( STR0 % table , [ key ] )
2517	if self.settings_exception is not None ,	if self . settings_exception is not None :
526	call the method self.make_key with key and version set to version as arguments , substitute the result for key .	key = self . make_key ( key , version = version )
12045	call the function ugettext with an argument string STR0 , substitute STR1 with the result of the call to the function , filesize_number_format with result of division of bytes by PB as an argument , substitute the result for value .	value = ugettext ( STR0 ) % filesize_number_format ( bytes / PB )
15234	if s is instance of a class Promise ,	if isinstance ( s , Promise ) :
8968	call the method self.as_ul , return the result .	return self . as_ul ( )
11928	decorator function register.filter with an argument is_safe set to boolean False .	@ register . filter ( is_safe = False )
18193	import module re .	import re
5337	define the method _get_count with an argument self .	def _get_count ( self ) :
1790	import module sys .	import sys
13407	define the method symlinks_supported .	def symlinks_supported ( ) :
8627	substitute form.instance for obj .	obj = form . instance
4522	compile the handle.read in mode STR0 source is read from file pythonrc , execute the compiled script with imported_objects variables .	exec ( compile ( handle . read ( ) , pythonrc , STR0 ) , imported_objects )
2853	raise an CommandError exception with an argument string STR0 .	raise CommandError ( STR0 )
3440	convert new_name to a string and append it to string STR0 , substitute the result for new_name .	new_name = STR0 % new_name
10972	call the method resolve with an argument context , from the instance of Variable class , created with an argument path .	return Variable ( path ) . resolve ( context )
13684	define ensure_echo_on function .	def ensure_echo_on ( ) :
16033	if not ,	else :
671	derive the class MemcachedCache from the BaseMemcachedCache base class .	class MemcachedCache ( BaseMemcachedCache ) :
8661	if index is not None ,	if index is not None :
3064	raise an CommandError exception with an argument string STR0 ,	raise CommandError ( STR0 % connection . client . executable_name )
3902	if self.verbosity is greater than integer 1 ,	if self . verbosity > 1 :
6619	get STR0 attribute of the _prefixes , if it exists , return it , otherwise return STR1 .	return getattr ( _prefixes , STR0 , STR1 )
15086	while i is lesser than num_existing and first pflen elements of i-th element of existing equals prefixed ,	while ( i < num_existing ) and ( existing [ i ] [ : pflen ] == prefixed ) :
13606	substitute new_filenames for filelist .	filelist = new_filenames
16325	call the function warnings.warn with 3 arguments : string STR0 , RemovedInDjango19Warning and stacklevel set to integer 2 .	warnings . warn ( STR0 , RemovedInDjango19Warning , stacklevel = 2 )
710	from .. import Warning , register and Tags into default name space .	from . . import Warning , register , Tags
8874	if initial is not None , substitute initial for initial_value , otherwise initial_value is an empty string .	initial_value = initial if initial is not None else STR
16568	call the method filter.get_request_repr with an argument request , format string STR0 with the result , substitute the result for request_repr .	request_repr = STR0 . format ( filter . get_request_repr ( request ) )
9359	if options is true ,	if options :
5927	call the method node.getAttribute with an argument attr , substitute the result for model_identifier .	model_identifier = node . getAttribute ( attr )
6431	substitute tuple containing 2 elements : sum of p_pattern and prefix , and sub_pattern for value under the namespace key of the namespace dictionary .	namespaces [ namespace ] = ( p_pattern + prefix , sub_pattern )
14214	yield key and value under key key of self dictionary .	yield key , self [ key ]
4994	for model in return value of the method router.get_migratable_models with arguments app_config , connection.alias ,	for model in router . get_migratable_models ( app_config , connection . alias , include_auto_created = True ) :
909	define the function media with an argument request .	def media ( request ) :
8412	substitute formfield.limit_choices_to for limit_choices_to .	limit_choices_to = formfield . limit_choices_to
5636	self._current is None .	self . _current = None
1431	define the method created_time with arguments self and name .	def created_time ( self , name ) :
10550	from django.apps import apps into default name space .	from django . apps import apps
1683	get attribute STR0 from the view object , if the attribute doesnt exist return the empty set , substitute the result for non_atomic_requests .	non_atomic_requests = getattr ( view , STR0 , set ( ) )
13507	call the method self._archive.extractfile with an argument member , substitute the result for extracted .	extracted = self . _archive . extractfile ( member )
701	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
13030	call the function safe_join with 2 arguments template_dir and template_name , yield the result .	yield safe_join ( template_dir , template_name )
16917	call the function walk_to_end with 2 arguments : ch and pattern_iter .	walk_to_end ( ch , pattern_iter )
12969	define the function do_extends with 2 arguments parser and token .	def do_extends ( parser , token ) :
18744	if OverflowError or ValueError exceptions are caught ,	except ( OverflowError , ValueError ) :
17824	call the method six.unichr with an argument c , return the result .	return six . unichr ( c )
10887	for every match in matches ,	for match in matches :
1797	from django.core.handlers import base into default name space .	from django . core . handlers import base
6712	decorator deconstructible ,	@ deconstructible
5301	from django.utils import six into default name space .	from django . utils import six
1185	derive the class _OFFSET from the Structure base class .	class _OFFSET ( Structure ) :
13738	from _systemrestart import SystemRestart into default name space .	from _systemrestart import SystemRestart
15998	close file descriptor s .	s . close ( )
13988	call the function hmac.compare_digest with 2 arguments : result of the function force_bytes called with an argument val1 , and result of the function force_bytes called with an argument val2 , return the result .	return hmac . compare_digest ( force_bytes ( val1 ) , force_bytes ( val2 ) )
15258	if an exception of the type UnicodeDecodeError , renamed to e , is caught ,	except UnicodeDecodeError as e :
17291	_func_defaults is a string STR0 .	_func_defaults = STR0
12499	register.tag decorator ,	@ register . tag
8824	if required is true and initial is not None ,	if required and ( initial is not None ) :
10292	from django.core.serializers.json import DjangoJSONEncode into default name space .	from django . core . serializers . json import DjangoJSONEncoder
7303	return is boolean False .	return False
10468	define the method streaming_content with 2 arguments : self and value .	def streaming_content ( self , value ) :
2623	derive the class CommandError from the base class Exception .	class CommandError ( Exception ) :
10287	from email.header import Header into default name space .	from email . header import Header
18670	if squash is false ,	if not squash :
8845	substitute queryset for self._queryset .	self . _queryset = queryset
4785	chars is a string STR0 .	chars = STR0
6870	self.years is list containing 10 successive integers from this_year .	self . years = range ( this_year , this_year + 10 )
5810	call the method self.indent with argument integer 2 .	self . indent ( 2 )
16189	import module re .	import re
