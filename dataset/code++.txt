15913	convert is a dictionary with 4 initial entries : list with 3 tuples : tuple with 2 elements : string STR0 , and lambda function with 2 arguments : self and other , resulting boolean False if self is lesser than other or self is equal to other , tuple with 2 elements : string STR1 , and lambda function with 2 arguments : self and other , resulting boolean True if self is lesser than other or self is equal to other , tuple with 2 elements : string STR2 , and lambda function with 2 arguments : self and other , resulting boolean False if self is lesser than other , for STR3 , list with 3 tuples : tuple with 2 elements : string STR4 , and lambda function with 2 arguments : self and other , resulting boolean False if self is lesser than or equal to other , or self is equal to other , tuple with 2 elements : string STR5 , and lambda function with 2 arguments : self and other , resulting boolean True if self is lesser than or equal to other , or self is not equal to other , tuple with 2 elements : string STR6 , and lambda function with 2 arguments : self and other , resulting boolean False if self is lesser than or equal to other , for STR7 , list with 3 tuples : tuple with 2 elements : string STR8 , and lambda function with 2 arguments : self and other , resulting boolean False if self is greater than other or self is equal to other , tuple with 2 elements : string STR9 , and lambda function with 2 arguments : self and other , resulting boolean True if self is greater than other or self is equal to other , tuple with 2 elements : string STR10 , and lambda function with 2 arguments : self and other , resulting boolean False if self is greater than other , for STR11 , and list with 3 tuples : tuple with 2 elements : string STR12 , and lambda function with 2 arguments : self and other , resulting boolean True if self is not greater than or is not equal to other , or self is equal to other , tuple with 2 elements : string STR13 , and lambda function with 2 arguments : self and other , resulting boolean True if self is greater than or not equal to other , or self is not equal to other , tuple with 2 elements : string STR14 , and lambda function with 2 arguments : self and other , resulting boolean False if self is greater than or equal to other , for STR15 ,	convert = { STR0 : [ ( STR1 , lambda self , other : not ( self < other or self == other ) ) , ( STR2 , lambda self , other : self < other or self == other ) , ( STR3 , lambda self , other : not self < other ) ] , STR4 : [ ( STR5 , lambda self , other : not self <= other or self == other ) , ( STR6 , lambda self , other : self <= other and not self == other ) , ( STR7 , lambda self , other : not self <= other ) ] , STR8 : [ ( STR9 , lambda self , other : not ( self > other or self == other ) ) , ( STR10 , lambda self , other : self > other or self == other ) , ( STR11 , lambda self , other : not self > other ) ] , STR12 : [ ( STR13 , lambda self , other : ( not self >= other ) or self == other ) , ( STR14 , lambda self , other : self >= other and not self == other ) , ( STR15 , lambda self , other : not self >= other ) ] }
15915	convert cls to a dictionary , convert the result into a set and convert convert into a set , roots is a set of differences of the two previous sets .	roots = set ( dir ( cls ) ) & set ( convert )
13276	OPERATORS is an dictionary with 12 initial entries : result of the function inflix called with 2 arguments , integer 6 , and lambda function with 3 arguments context , x and y , returns boolean True if x.eval ( context ) or y.eval ( context ) is True , for STR0 , result of the function inflix called with 2 arguments , integer 7 , and lambda function with 3 arguments context , x and y , returns boolean True if x.eval ( context ) and y.eval ( context ) is True for STR1 , result of the function prefix called with 2 arguments , integer 8 , and lambda function with 2 arguments context and x , returns boolean True if x.eval ( context ) is True for STR2 , result of the function inflix called with 2 arguments , integer 9 , and lambda function with 2 arguments context and x , returns boolean True if x.eval ( context ) is contained in y.eval ( context ) for STR3 , result of the function inflix called with 2 arguments , integer 9 , and lambda function with 2 arguments context and x , returns boolean True if x.eval ( context ) is not contained in y.eval ( context ) , for STR4 , result of the function inflix called with 2 arguments , integer 10 , and lambda function with 3 arguments context , x and y , returns boolean True if x.eval ( context ) equals y.eval ( context ) for STR5 , result of the function inflix called with 2 arguments , integer 10 , and lambda function with 3 arguments context , x and y , returns boolean True if x.eval ( context ) equals y.eval ( context ) for STR6 , result of the function inflix called with 2 arguments , integer 10 , and lambda function with 3 arguments context , x and y , returns boolean True if x.eval ( context ) doesnt equals y.eval ( context ) for STR7 , result of the function inflix called with 2 arguments , integer 10 and , lambda function with 3 arguments context , x and y , returns boolean True if x.eval ( context ) is greater than y.eval ( context ) for STR8 , result of the function inflix called with 2 arguments , integer 10 and and lambda function with 3 arguments context , x and y , returns boolean True if x.eval ( context ) is greater than or equal to y.eval ( context ) for STR9 , result of the function inflix called with 2 arguments , integer 10 and and lambda function with 3 arguments context , x and y , returns boolean True if x.eval ( context ) is smaller than y.eval ( context ) for STR10 , result of the function inflix called with 2 arguments , integer 10 and and lambda function with 3 arguments context , x and y , returns boolean True if x.eval ( context ) is smaller than or equal to y.eval ( context ) for STR11 ,	OPERATORS = { STR0 : infix ( 6 , lambda context , x , y : x . eval ( context ) or y . eval ( context ) ) , STR1 : infix ( 7 , lambda context , x , y : x . eval ( context ) and y . eval ( context ) ) , STR2 : prefix ( 8 , lambda context , x : not x . eval ( context ) ) , STR3 : infix ( 9 , lambda context , x , y : x . eval ( context ) in y . eval ( context ) ) , STR4 : infix ( 9 , lambda context , x , y : x . eval ( context ) not in y . eval ( context ) ) , STR5 : infix ( 10 , lambda context , x , y : x . eval ( context ) == y . eval ( context ) ) , STR6 : infix ( 10 , lambda context , x , y : x . eval ( context ) == y . eval ( context ) ) , STR7 : infix ( 10 , lambda context , x , y : x . eval ( context ) != y . eval ( context ) ) , STR8 : infix ( 10 , lambda context , x , y : x . eval ( context ) > y . eval ( context ) ) , STR9 : infix ( 10 , lambda context , x , y : x . eval ( context ) >= y . eval ( context ) ) , STR10 : infix ( 10 , lambda context , x , y : x . eval ( context ) < y . eval ( context ) ) , STR11 : infix ( 10 , lambda context , x , y : x . eval ( context ) <= y . eval ( context ) ) , }
13278	call the function OPERATORS.items , for every key and op in result ,	for key , op in OPERATORS . items ( ) :