9330	if option_label is an instance of list or tuple ,	if isinstance ( option_label , ( list , tuple ) ) :
15582	split locale by STR0 , append the first element of the result to locales .	locales . append ( locale . split ( STR0 ) [ 0 ] )
5727	try ,	try :
9788	return self .	return self
9231	concatenate name and string STR0 , return it .	return name + STR0
12391	current_app as context.current_app , substitute the result for url . if NoReverseMatch exception is caught ,	except NoReverseMatch :
8337	if help_texts is true and f.name is contained in help_texts ,	if help_texts and f . name in help_texts :
1433	use the result as an argument for the call to the function datetime.fromtimestamp , return the result . define the method modified_time with arguments self and name .	def modified_time ( self , name ) :
9513	media is a property object of the current class , with _get_media as getter function .	media = property ( _get_media )
8069	return total_forms .	return total_forms
14564	format string STR0 with the second element of the result , return it . define the method U with an argument self .	def U ( self ) :
11703	define the function truncatechars with 2 arguments value and arg .	def truncatechars ( value , arg ) :
18688	from datetime import timedelta and tzinfo into default name space .	from datetime import timedelta , tzinfo
17670	if html is true ,	if html :
2243	try ,	try :
16265	raise an ValueError exception with an argument string `` Base36 input too large '' .	raise ValueError ( `` Base36 input too large '' )
8671	call the method qs.using with an argument form.instance._state.db , substitute the result for qs .	qs = qs . using ( form . instance . _state . db )
5708	if field_value is not None ,	if field_value is not None :
4576	from django.core.management.sql import sql_custom into default name space .	from django . core . management . sql import sql_custom
17341	return s .	return s
12285	define the method __iter__ with an argument self .	def __iter__ ( self ) :
17756	call the function allow_lazy with 2 arguments : normalize_newlines and six.text_type , substitute the result for normalize_newlines .	normalize_newlines = allow_lazy ( normalize_newlines , six . text_type )
5232	return base and ext .	return base , ext
4562	derive the class Command from the AppCommand base class .	class Command ( AppCommand ) :
6799	compare is a lambda function with arguments self , a and b , return value is boolean true if a is greater than b , otherwise is false .	compare = lambda self , a , b : a > b
9303	call the method __init__ from the base class of the class Select , with an argument attrs .	super ( Select , self ) . __init__ ( attrs )
9635	call the method boundary.encode with an argument string STR0 , substitute the result for boundary .	boundary = boundary . encode ( STR0 )
6071	if message is true ,	if message :
18204	from django.utils.encoding import force_text into default name space .	from django . utils . encoding import force_text
9344	get the value under value key of a dictionary with 4 entries : STR0 for boolean True , STR1 for boolean False , STR2 for STR3 ,	value = { True : STR0 , False : STR1 , STR2 : STR3 , STR4 : STR5 } [ value ]
9821	define the method __next__ with an argument self .	def __next__ ( self ) :
3105	dest is STR0 , default is boolean False and help is a string STR1 . call the method parser.add_argument with 3 arguments : string STR2 , dest set to string STR3 ,	parser . add_argument ( STR0 , dest = STR1 , help = `` Only dump objects with given primary keys. `` `` Accepts a comma separated list of keys. `` `` This option will only work when you specify one model . '' )
12195	if self.is_reversed is true ,	if self . is_reversed :
14269	derive the class MultiValueDict from the dict base class .	class MultiValueDict ( dict ) :
12514	call the method parser.delete_first_token .	parser . delete_first_token ( )
15951	STR0 for integer representation of string STR1 , STR2 for integer representation of string STR3 , STR4 for integer representation of string STR5 , STR6 for integer representation of string STR7 , STR8 for integer representation of string STR9 , STR10 for integer representation of string STR11 , STR12 for integer representation of string STR13 , STR14 for integer representation of string STR15 , STR16 for integer representation of string STR17 and STR18 for integer representation of string STR19 . for eery z in range of integers from 0 to 31 , update _js_escapes dictionary with STR20 formated with z ,	_js_escapes . update ( ( ord ( STR0 % z ) , STR1 % z ) for z in range ( 32 ) )
17827	if not ,	else :
17649	derive the class Truncator form the SimpleLazyObject class .	class Truncator ( SimpleLazyObject ) :
951	alternatively , if six.PY3 is true check if message does not have an attribute STR0 , if six.PY3 is false , check if message doesnt have an attribute STR1 , perform the following ,	elif not hasattr ( message , STR0 if six . PY3 else STR1 ) :
464	derive the class CacheClass from the base class FileBasedCache .	class CacheClass ( FileBasedCache ) :
3446	in string STR0 , replace STR1 with new_name and STR2 with num , substitute the result for new_name .	new_name = STR0 % ( new_name , num )
3351	yield and empty string as the result .	yield STR0
16623	if kwds is true ,	if kwds :
1622	define lambda function that returns self.file.encoding field , use it as an argument for property function , put the result in encoding .	encoding = property ( lambda self : self . file . encoding )
9666	get the value under the STR0 key of the disposition dictionary , strip it of whitespaces , substitute the result for field_name .	field_name = disposition [ STR0 ] . strip ( )
16574	if record.exc_info is true ,	if record . exc_info :
12549	call the method parser.parse with an argument tuple with an element string STR0 and end_tag , substitute the result for nodelist_true .	nodelist_loop = parser . parse ( ( STR0 , end_tag ) )
2896	requires_system_checks is boolean False .	requires_system_checks = False
4740	if not ,	else :
16105	and dictionary of arbitrary length **kwargs as arguments . call the initialization method for the base class , _html_parser.HTMLParser.__init__ with self ,	_html_parser . HTMLParser . __init__ ( self , convert_charrefs = convert_charrefs , ** kwargs )
4728	call the method self.style.MIGRATE_HEADING with an argument string `` Optimizing ... '' , write it to self.stdout .	self . stdout . write ( self . style . MIGRATE_HEADING ( `` Optimizing ... '' ) )
18074	substitute number for value under the STR0 key of the kwargs dictionary .	kwargs [ STR0 ] = number
10255	if META_override is not None , or otherwise generated with the call to the function pformat with an argument request.META . if Exception exception is caught ,	except Exception :
18505	call the method blankout with 2 arguments : part and STR0 , write the result to out .	out . write ( blankout ( part , STR0 ) )
8423	otherwise if self._meta.fields is true and field is not contained in self._meta.fields ,	elif self . _meta . fields and field not in self . _meta . fields :
9247	define the method value_from_datadict with 4 arguments : self , data , files and name .	def value_from_datadict ( self , data , files , name ) :
8344	raise an TypeError with an string STR0 .	raise TypeError ( STR0 )
9910	outdict is an empty dictionary .	outdict = { }
14250	define the method __init__ with 2 arguments : self and iterable set to None .	def __init__ ( self , iterable = None ) :
10258	call the function force_str with an argument string STR0 ,	return force_str ( STR0 % ( request . __class__ . __name__ , path , six . text_type ( get ) , six . text_type ( post ) , six . text_type ( cookies ) , six . text_type ( meta ) ) )
15614	if val is an instance of tuple ,	if isinstance ( val , tuple ) :
13547	import module os .	import os
13096	call the function get_template_from_string with 3 arguments : template , origin and template_name , substitute the result for template .	template = get_template_from_string ( template , origin , template_name )
8814	if not ,	else :
7793	call the method self.error_class with an argument error_class as an string STR0 ,	self . _errors [ field ] = self . error_class ( error_class = STR0 )
15327	days is a tuple with 7 elements : strings STR0 , STR1 , STR2 , STR3 , STR4 , STR5 and STR6 .	days = ( STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 )
7016	try	try :
16259	do nothing .	pass
6362	define the method resolve with arguments self and path .	def resolve ( self , path ) :
943	do nothing .	pass
7887	substitute form for self.form .	self . form = form
5781	from xml.dom import pulldom into default name space .	from xml . dom import pulldom
16905	if ch equals a string STR0 ,	if ch == STR0 :
16583	call the function get_connection with 2 arguments : backend set to self.email_backend and fail_silently set to boolean True .	return get_connection ( backend = self . email_backend , fail_silently = True )
9113	if STR0 is not contained in attrs ,	if STR0 not in attrs :
12216	zip self.loopvars and item is a list to tuples , convert the result to an dictionary , substitute it for unpacked_vars .	unpacked_vars = dict ( zip ( self . loopvars , item ) )
6081	substitute x for k and boolean True for v .	k , v = x , True
15628	format , if its true , otherwise string STR0 and use_l10n as use_l10n , return the result . define the function number_format with 4 arguments : value , decimal_pos set to None , use_l10n set to None ,	def number_format ( value , decimal_pos = None , use_l10n = None , force_grouping = False ) :
7559	required set to required , widget set to widget , label set to label , initial st to initial , help_text set to help_text , unpacked list args , unpacked dictionary kwargs . if self.required is true ,	if self . required :
3149	try ,	try :
18040	STR0 , STR1 , STR2 , STR3 , STR4 , STR5 , STR6 , STR7 , STR8 , STR9 , STR10 , STR11 , STR12 , STR13 , STR14 , STR15 , STR16 , STR17 , STR18 , STR19 , STR20 and STR21 . LANGUAGE_SESSION_KEY is an string STR22 .	LANGUAGE_SESSION_KEY = STR0
8542	call the method _construct_form from the base class of the class BaseModelFormSet , with 2 arguments : i and unpacked dictionary kwargs .	return super ( BaseModelFormSet , self ) . _construct_form ( i , ** kwargs )
8602	create a tuple out of elements under the key field of the form.cleaned_data dictionary , add elements of date_data to it ,	data = ( form . cleaned_data [ field ] , ) + date_data
17808	call the method ustring_re.sub with 2 arguments : fix and s , return the result .	return ustring_re . sub ( fix , s )
8681	meta is an instance of a class named STR0 , derived from the object base class , without any fields .	meta = type ( str ( STR0 ) , ( object , ) , { } )
4955	for every model in app_models ,	for model in app_models :
7265	substitute ClearableFileInput for widget .	widget = ClearableFileInput
8826	if not ,	else :
15931	from django.utils import six into default name space .	from django . utils import six
9751	define the method __init__ with 3 arguments : self , producer and length set to None .	def __init__ ( self , producer , length = None ) :
12848	from django.utils import six into default name space .	from django . utils import six
15300	define the function iri_to_uri with iri as an argument .	def iri_to_uri ( iri ) :
13945	__all__ is an list with an element STR0 .	__all__ = [ STR0 ]
7250	if regex is an instance of six.string_types class ,	if isinstance ( regex , six . string_types ) :
1374	call the function locks.lock with fd and locks.LOCK_EX as arguments .	locks . lock ( fd , locks . LOCK_EX )
17365	define the function iterbytes with an argument buf .	def iterbytes ( buf ) :
12886	convert self to a tuple , call the result with 2 arguments : block.name and block.nodelist , substitute the result for block .	block = type ( self ) ( block . name , block . nodelist )
17401	errors is a string `` strict '' .	errors = `` strict ''
13623	import gettext module .	import gettext
13907	define the function get_cache_key , with request key_prefix set to None , method set to STR0 and cache set to None as arguments .	def get_cache_key ( request , key_prefix = None , method = STR0 , cache = None ) :
818	from . import Error , Tags and register into default name space .	from . import Error , Tags , register
16705	substitute cache_clear for wrapper.cache_clear .	wrapper . cache_clear = cache_clear
8345	if not ,	else :
9326	result of the function force_text with an argument option_label , return the result . define the method render_options with 3 arguments : self , choices and selected_choices .	def render_options ( self , choices , selected_choices ) :
10156	substitute settings.DEFAULT_CHARSET for encoding .	encoding = settings . DEFAULT_CHARSET
5143	call the method content.decode with an argument string STR0 , substitute it for content .	content = content . decode ( STR0 )
18019	if value.tzinfo is not None and call to the method value.tzinfo.utcoffset called with an argument value evaluates to not None ,	return value . tzinfo is not None and value . tzinfo . utcoffset ( value ) is not None
12036	replace ' % ( size ) d with bytes , substitute the result for value . otherwise if bytes is smaller than MB ,	elif bytes < MB :
10342	call the method value.encode with an argument charset , substitute the result for value .	value = value . encode ( charset )
15208	substitute DictConfigurator for dictConfigClass .	dictConfigClass = DictConfigurator
11159	if param is contained in unhandled_params ,	if param in unhandled_params :
4784	raise an exception CommandError , with argument string `` % r conflicts with the name of an existing Python module and can not be used as a project name . Please try another name . `` , where STR0 is replaced with project_name .	raise CommandError ( `` % r conflicts with the name of an existing `` `` Python module and can not be used as a `` `` project name . Please try another name . '' % project_name )
4304	call the method call_command with string STR0 , string STR1 , verbosity set to self.verbosity ,	call_command ( STR0 , STR1 , verbosity = self . verbosity , database = connection . alias , skip_validation = True , app_label = app_label , hide_empty = True )
7934	call the method self.as_widget with 3 arguments : instance of a class Textarea , attrs and unpacked dictionary kwargs , return the result .	return self . as_widget ( Textarea ( ) , attrs , ** kwargs )
6687	define the method __call__ with arguments self and value .	def __call__ ( self , value ) :
16170	find the ending position of the regular expression match of the object match , substitute the result for j .	j = match . end ( )
1668	call the mw_class function , store the result in the mw_instance .	mw_instance = mw_class ( )
16584	define the method format_subject with 2 arguments : self and subject .	def format_subject ( self , subject ) :
1816	if size equals to integer zero .	if size == 0 :
16120	define method clear_cdata_mode , with self class instance as an argument .	def clear_cdata_mode ( self ) :
11286	raise an TemplateSyntaxError exception with an argument string `` Invalid arguments provided to assignment_tag '' .	raise TemplateSyntaxError ( `` Invalid arguments provided to assignment_tag '' )
13351	PATTERN is a string `` classdef < STR0 any+ STR1suite < any*funcdef < STR2 unifunc=STR3parameters < STR4 NAME STR5 > any+ > any* > > '' .	PATTERN = `` '' '' classdef < STR0 any+ STR1 suite < any* funcdef < STR2 unifunc=STR3 parameters < STR4 NAME STR5 > any+ > any* > > `` '' ''
5573	if value under the STR0 key of the self.options dictionary is true ,	if self . options . get ( `` indent '' ) :
15272	if not ,	else :
3058	call the method parser.add_argument with arguments : string STR0 , action set to string STR1 , dest set to string STR2 ,	parser . add_argument ( STR0 , action = STR1 , dest = STR2 , default = DEFAULT_DB_ALIAS , help = STR3 STR4 )
8551	substitute qs for self._queryset .	self . _queryset = qs
7074	substitute max_value and min_value for self.max_value and self.min_value .	self . max_value , self . min_value = max_value , min_value
9022	return value .	return value
7868	property decorator ,	@ property
5850	call the method self.xml.endElement with an argument string STR0 .	self . xml . endElement ( `` field '' )
6333	define the method regex with an argument self .	def regex ( self ) :
14962	call the method m.groups , substitute the first element of the result for idx .	idx = m . groups ( ) [ 0 ]
4076	apply operator.eq function to elements of level iterable , until level is reduced to a single value , if the result is true ,	if reduce ( operator . eq , level ) :
14874	get value under key key of self dictionary , if it doesnt exists return default , substitute the result for value .	value = dict . get ( self , key , default )
18176	return message .	return message
3565	add obj.object.__class__ to self.models set .	self . models . add ( obj . object . __class__ )
3066	define the function module_to_dict with 2 arguments : module and omittable as a lambda function with an argument k ,	def module_to_dict ( module , omittable = lambda k : k . startswith ( STR0 ) ) :
4039	for every app_label and app_migrations in result of the method changes.items ,	for app_label , app_migrations in changes . items ( ) :
12255	if compare_to is not equal to value under the self key of state_frame .	if compare_to ! = state_frame [ self ] :
929	do nothing .	pass
7751	label is an empty string .	help_text = STR0
11369	from django.utils.module_loading import import_string into default name space .	from django . utils . module_loading import import_string
12222	if not ,	else :
17847	define the function camel_case_to_spaces with an argument value .	def camel_case_to_spaces ( value ) :
13146	call the method self.get_template_sources with 2 arguments template_name and template_dirs , for every filepath in the result ,	for filepath in self . get_template_sources ( template_name , template_dirs ) :
5029	for every app_dir in app_dirs ,	for app_dir in app_dirs :
1917	call the get_script_name function with environ as argument , use the result as an argument for call to the set_script_prefix function .	set_script_prefix ( get_script_name ( environ ) )
1707	if request has an attribute named STR0 ,	if hasattr ( request , STR0 ) :
17395	define the function write with an argument data .	def write ( data ) :
16743	call the method copy.copy with an argument register_to._registry , substitute the result for before_import_registry .	before_import_registry = copy . copy ( register_to . _registry )
16826	if first element of str_number equals a string STR0 .	if str_number [ 0 ] == STR0 :
1327	define the method created_time with arguments self and name .	def created_time ( self , name ) :
910	return an dictionary containing 1 entry : settings.MEDIA_URL for STR0 .	return { STR0 : settings . MEDIA_URL }
13884	split string cc_delim_re by value of dictionary response under the key STR0 as a delimiter , substitute it for vary_headers .	vary_headers = cc_delim_re . split ( response [ STR0 ] )
18291	update the self._catalog dictionary with other._catalog .	self . _catalog . update ( other . _catalog )
17479	and unpacked dictionary kwargs , return the result . define the function assertRaisesRegex with 3 arguments : self , unpacked list args and unpacked dictionary kwargs .	def assertRaisesRegex ( self , * args , ** kwargs ) :
13086	raise an TemplateDoesNotExist exception with an argument name .	raise TemplateDoesNotExist ( name )
17337	return it . if PY3 is true ,	if PY3 :
16348	call the function _resolve_name with 3 arguments : name list elements from the level index to the end , package and level ,	name = _resolve_name ( name [ level : ] , package , level )
7614	and RemovedInDjango19Warning . call the __init__ method with unpacked list args and unpacked dictionary kwargs from the base class of the IPAddressField class .	super ( IPAddressField , self ) . __init__ ( * args , ** kwargs )
809	define initialization method __init__ with self class instance , unpacked list args , unpacked dictionary kwargs as arguments .	def __init__ ( self , * args , ** kwargs ) :
18149	if KeyError exception is caught ,	except KeyError :
15227	if field PY2 of the module six is boolean True ,	if six . PY2 :
5008	append cleaned_lien to statement .	statement . append ( cleaned_line )
7122	if STR0 attribute of attrs dictionary does not exists , set it to to string STR1 .	attrs . setdefault ( STR0 , STR1 )
8753	fk_name , parent_model._meta.app_label and parent_model._meta.object_name , respectively . otherwise if length of fks_to_parent is zero ,	elif len ( fks_to_parent ) == 0 :
12233	for every node in self.nodelist_loop ,	for node in self . nodelist_loop :
16176	slice the rawdata from i-th to the j-th element , replace with it STR0 in the string `` bad end tag : % r '' , use it to call the method self.error .	self . error ( `` bad end tag : % r '' % ( rawdata [ i : j ] , ) )
15871	derive the class SimpleLazyObject from the LazyObject base class .	class SimpleLazyObject ( LazyObject ) :
4407	if self.use_ipv6 substitute string STR0 for self.addr , if not substitute STR1 for self.addr .	self . addr = STR0 if self . use_ipv6 else STR1
2529	substitute app_name for klass .	klass = app_name
15348	multiply offset.days , integer 24 and integer 60 , sum the result with floored result of division of offset.seconds ,	timezone = ( offset . days * 24 * 60 ) + ( offset . seconds // 60 )
9866	return chunk .	return chunk
3547	where STR0 is replaced with self.loaded_object_count and self.fixture_count , respectively . if not ,	else :
5292	if f is a file ,	if os . path . isfile ( f ) :
14912	if type of result is ConvertingDict , ConvertingList or ConvertingTuple ,	if type ( result ) in ( ConvertingDict , ConvertingList , ConvertingTuple ) :
12962	call the method parser.parse with an argument tuple with one element string STR0 , substitute the result for nodelist .	nodelist = parser . parse ( ( STR0 , ) )
18604	split p into two parts at the first STR0 , use the second element of the result to format string STR1 , write it to out .	out . write ( STR0 % p . split ( STR1 , 1 ) [ 1 ] )
17111	return an instance of EscapeBytes , created with an argument , reuslt of the call to the function bytes with an argument s .	return EscapeBytes ( bytes ( s ) )
11094	call the function force_text with an argument value , substitute the result for value .	value = force_text ( value )
18599	call the method constant_re.match with first element of parts as an argument , substitute the result for cmatch .	cmatch = constant_re . match ( parts [ 0 ] )
17673	call the function allow_lazy with an argument chars , substitute the result for chars .	chars = allow_lazy ( chars )
16658	define the function wrapper with 2 arguments : unpacked list args and unpacked dictionary kwds .	def wrapper ( * args , ** kwds ) :
14417	return value .	return value
14537	define the method L with an argument self .	def L ( self ) :
609	define the method make_key with self class instance , key and version defaulting to None as arguments .	def make_key ( self , key , version = None ) :
18569	otherwise if , first element of message_context is equal to `` ' '' ,	elif message_context [ 0 ] == `` ' '' :
60	set the attribute name from value under the DEFAULT_CACHE_ALIAS key of caches dictionary to value , return it .	return setattr ( caches [ DEFAULT_CACHE_ALIAS ] , name , value )
10282	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
2104	import module threading .	import threading
15369	define the method add_item with 17 arguments : self , title , link , description , author_email set to None , author_name set to None ,	def add_item ( self , title , link , description , author_email = None , author_name = None , author_link = None , pubdate = None , comments = None , unique_id = None , unique_id_is_permalink = None , enclosure = None , categories = ( ) , item_copyright = None , ttl = None , updateddate = None , ** kwargs ) :
1377	mode is a string STR0 is chunk is instance of the type bytes , otherwise mode is a string STR1 .	mode = STR0 if isinstance ( chunk , bytes ) else STR1
15484	call the method handler.startElement with 2 arguments : string STR0 and result of the method self.root_attributes .	handler . startElement ( STR0 , self . root_attributes ( ) )
11639	if ValueError , OverflowError or InvalidOperation exceptions are caught ,	except ( ValueError , OverflowError , InvalidOperation ) :
4903	from django.apps import apps into default name space .	from django . apps import apps
2121	self.connection is None .	self . connection = None
12254	compare_to is None .	compare_to = None
2067	define the method write_message with arguments self and message .	def write_message ( self , message ) :
13366	from os.path import join , normcase , normpath , abspath , isabs , sep and dirname into default name space .	from os . path import join , normcase , normpath , abspath , isabs , sep , dirname
3966	append newline to plural_form_line , substitute the result for line .	line = STR0 % plural_form_line
100	if ValueError or TypeError exceptions occurred ,	except ( ValueError , TypeError ) :
14725	if args is true ,	if not args :
17477	define the function assertCountEqual with 3 arguments : self , unpacked list args and unpacked dictionary kwargs .	def assertCountEqual ( self , * args , ** kwargs ) :
7208	return value ,	return value
17222	_urllib_parse_moved_attributes is a list with 16 elemetns , all of them are the results of the call to the function MovedAttribute with different 3 string arguments .	_urllib_parse_moved_attributes = [ MovedAttribute ( `` ParseResult '' , `` urlparse '' , `` urllib.parse '' ) , MovedAttribute ( `` SplitResult '' , `` urlparse '' , `` urllib.parse '' ) , MovedAttribute ( `` parse_qs '' , `` urlparse '' , `` urllib.parse '' ) , MovedAttribute ( `` parse_qsl '' , `` urlparse '' , `` urllib.parse '' ) , MovedAttribute ( `` urldefrag '' , `` urlparse '' , `` urllib.parse '' ) , MovedAttribute ( `` urljoin '' , `` urlparse '' , `` urllib.parse '' ) , MovedAttribute ( `` urlparse '' , `` urlparse '' , `` urllib.parse '' ) , MovedAttribute ( `` urlsplit '' , `` urlparse '' , `` urllib.parse '' ) , MovedAttribute ( `` urlunparse '' , `` urlparse '' , `` urllib.parse '' ) , MovedAttribute ( `` urlunsplit '' , `` urlparse '' , `` urllib.parse '' ) , MovedAttribute ( `` quote '' , `` urllib '' , `` urllib.parse '' ) , MovedAttribute ( `` quote_plus '' , `` urllib '' , `` urllib.parse '' ) , MovedAttribute ( `` unquote '' , `` urllib '' , `` urllib.parse '' ) , MovedAttribute ( `` unquote_plus '' , `` urllib '' , `` urllib.parse '' ) , MovedAttribute ( `` urlencode '' , `` urllib '' , `` urllib.parse '' ) , MovedAttribute ( `` splitquery '' , `` urllib '' , `` urllib.parse '' ) , ]
11668	define the function linenumbers with 2 arguments value and autoescape set to None .	def linenumbers ( value , autoescape = None ) :
9449	if renderer is true ,	if renderer :
11477	append func to processors .	processors . append ( func )
14078	call the method os.umask with an argument umask .	os . umask ( umask )
4900	import module os .	import os
8741	define the method get_unique_error_message with 2 arguments : self and unique_check .	def get_unique_error_message ( self , unique_check ) :
18128	define the function get_language_from_request with 2 arguments : request and check_path set to boolean False .	def get_language_from_request ( request , check_path = False ) :
17261	append string `` .moves.urllib_robotparser '' to __name__ , use it as an key to get the value from the sys.modules dictionary , substitute it for robotparser .	robotparser = sys . modules [ __name__ + `` .moves.urllib_robotparser '' ]
10499	derive the class HttpResponseNotFound from the HttpResponse base class .	class HttpResponseNotFound ( HttpResponse ) :
863	call the check function with argument app_config set to app_config , substitute the result for new_errors .	new_errors = check ( app_configs = app_configs )
8770	kwargs is a dictionary with 17 entries : form for STR0 , formfield_callback for STR1 , formset for STR2 ,	kwargs = { STR0 : form , STR1 : formfield_callback , STR2 : formset , STR3 : extra , STR4 : can_delete , STR5 : can_order , STR6 : fields , STR7 : exclude , STR8 : min_num , STR9 : max_num , STR10 : widgets , STR11 : validate_min , STR12 : validate_max , STR13 : localized_fields , STR14 : labels , STR15 : help_texts , STR16 : error_messages , }
7273	return None .	return None
314	divide num by self._cull_frequency , floor the result and substitute it for cull_num .	cull_num = num // self . _cull_frequency
7264	derive the class FileField from the base class Field class .	class FileField ( Field ) :
12903	substitute template_dirs for self.template_dirs .	self . template_dirs = template_dirs
15103	if root is true ,	if root :
8478	call the function with 7 arguments : self , self.instance , self._meta.fields , fail_message , commit , self._meta.exclude ,	return save_instance ( self , self . instance , self . _meta . fields , fail_message , commit , self . _meta . exclude , construct = False )
6607	call the function get_ns_resolver with arguments ns_pattern and resolver , substitute the result for resolver .	resolver = get_ns_resolver ( ns_pattern , resolver )
10891	where STR0 is replaced with first upto elements of token string , token string elements from upto to start index , and token string elements from start index to the end . if var_obj is None ,	if var_obj is None :
13155	error_msg is a string `` Your TEMPLATE_DIRS setting is empty . Change it to point to at least one template directory . `` .	error_msg = `` Your TEMPLATE_DIRS setting is empty . Change it to point to at least one template directory . ''
397	call the method self._cull .	self . _cull ( )
11985	return an empty string .	return STR0
4633	join statements in a string separated by newline , return the result .	return STR0 . join ( statements )
15474	if value under the STR0 key of the item dictionary is not None ,	if item [ STR0 ] is not None :
14359	raise an TypeError with an argument string `` update expected at most 1 arguments , got % d '' formated with length of args .	raise TypeError ( `` update expected at most 1 arguments , got % d '' % len ( args ) )
10955	substitute new_obj for obj .	obj = new_obj
16820	otherwise substitute settings.USE_L10N for use_grouping . if use_grouping is true substitute it for use_grouping , otherwise substitute force_grouping for use_grouping .	use_grouping = use_grouping or force_grouping
6361	joint prefix , character STR0 and self._callback_str together , substitute the result for self._callback_str .	self . _callback_str = prefix + STR0 + self . _callback_str
15762	if self._delegate_bytes is true ,	if self . _delegate_bytes :
15832	define the method _setup with an argument self .	def _setup ( self ) :
14279	try ,	try :
3569	e.args is a tuple containing string `` Could not load % ( app_label ) s. % ( object_name ) s ( pk= % ( pk ) s ) : % ( error_msg ) s ,	e . args = ( `` Could not load % ( app_label ) s. % ( object_name ) s ( pk= % ( pk ) s ) : % ( error_msg ) s '' % { STR0 : obj . object . _meta . app_label , STR1 : obj . object . _meta . object_name , STR2 : obj . object . pk , STR3 : force_text ( e ) } , )
2708	return parser	return parser
14508	return a string STR0 formated with self.data.microsecond .	return STR0 % self . data . microsecond
14333	define the method _iteritems with an argument self .	def _iteritems ( self ) :
2211	call the function os.getpid , substitute it for pid .	pid = os . getpid ( )
10930	if invalid_var_format_string is true ,	if invalid_var_format_string :
15820	if name equals string `` _wrapped '' ,	if name == `` _wrapped '' :
3091	from django.db import router and DEFAULT_DB_ALIAS into default name space .	from django . db import router , DEFAULT_DB_ALIAS
12831	define the function select_template with 2 arguments : template_name_list and dirs set to None .	def select_template ( template_name_list , dirs = None ) :
5490	call the method self.handle_fk_field with arguments obj and field .	self . handle_fk_field ( obj , field )
10971	call the function warnings.warn with 3 arguments :	warnings . warn ( `` resolve_variable ( ) is deprecated . Use django.template . '' `` Variable ( path ) .resolve ( context ) instead '' , RemovedInDjango20Warning , stacklevel = 2 )
1171	define the _fd function with argument f .	def _fd ( f ) :
12196	reverse elements order of values .	values = reversed ( values )
2558	if subcommand_cls.use_argparse is true ,	if subcommand_cls . use_argparse :
10744	if TemplateSyntaxError , renamed to e , exception is caught ,	except TemplateSyntaxError as e :
10696	call the method token_string.find with an argument TRANSLATOR_COMMENT_MARK , if it evaluates to true ,	if token_string . find ( TRANSLATOR_COMMENT_MARK ) :
8198	label set to return value of the function _ called with an string STR0 and required as boolean False . if self.can_delete is true ,	if self . can_delete :
18049	from django.utils.translation import trans_null as trans .	from django . utils . translation import trans_null as trans
15073	raise an ValueError exception with an argument string STR0 formated with name and e .	raise ValueError ( STR0 STR1 % ( name , e ) )
2860	define the function supports_color , without arguments .	def supports_color ( ) :
5493	if self.selected_fields is None or field.attname is contained in self.selected_fields ,	if self . selected_fields is None or field . attname in self . selected_fields :
5816	call the method self.xml.endElement with an argument string STR0	self . xml . endElement ( `` field '' )
4665	from django.core.management.sql import check_for_migrations into default name space .	from django . core . management . sql import check_for_migrations
6711	raise a ValidationError exception with 2 arguments : return value of the function _ with an string argument STR0 ,	raise ValidationError ( _ ( STR0 ) , code = STR1 )
10961	call the function getargspec with an argument func , substitute the result for args , varargs , varkw and defaults , respectively .	args , varargs , varkw , defaults = getargspec ( func )
7774	self.error_class called with an argument error_class set to string STR0 . define the method _raw_value with 2 arguments : self and fieldname .	def _raw_value ( self , fieldname ) :
17664	substitute length for truncate_len .	truncate_len = length
13123	skip this loop iteration .	continue
362	import module tempfile .	import tempfile
5361	substitute number for self.number .	self . number = number
13373	do nothing .	pass
14515	year_days is a list with 13 elements : None , integer 0 , integer 31 , integer 59 , integer 90 , integer 120 , integer 151 , integer 181 ,	year_days = [ None , 0 , 31 , 59 , 90 , 120 , 151 , 181 , 212 , 243 , 273 , 304 , 334 ]
18717	`` Use django.utils.timezone.get_default_timezone instead . '' and RemovedInDjango19Warning . call the method tzinfo.__init__ with an argument self .	tzinfo . __init__ ( self )
7709	define the method __getitem__ with 2 arguments : self and name .	def __getitem__ ( self , name ) :
14659	derive the class date from the real_date base class .	class date ( real_date ) :
15456	call the method handler.addQuickElement with 2 arguments : string STR0 and value under the STR1 key of the item dictionary .	handler . addQuickElement ( `` description '' , item [ STR0 ] )
9154	get the value under the name key of the data dictionary , return it , if the previous doesnt exists , return None .	return data . get ( name , None )
7531	skip this loop iteration ,	continue
3151	try ,	try :
10932	return settings.TEMPLATE_STRING_IF_INVALID .	return settings . TEMPLATE_STRING_IF_INVALID
15191	for every h in elements of logger.handlers list ,	for h in logger . handlers [ : ] :
3320	call the method parser.add_argument with 5 arguments : string STR0 , action set to string STR1 , dest as a string STR2 ,	parser . add_argument ( STR0 , action = STR1 , dest = STR2 , default = DEFAULT_DB_ALIAS , help = STR3 STR4 )
2000	raise an NotImplementedError exception with argument string STR0 .	raise NotImplementedError ( STR0 )
3971	return msgs .	return msgs
7308	call the method to_python with an argument data from the base class of the class ImageField , substitute the result for f .	f = super ( ImageField , self ) . to_python ( data )
5266	stderr set to PIPE , close_fds set to boolean True is os.name is not equal to STR0 , universal_newlines set to boolean True . if OSError , renamed to e , exception is caught ,	except OSError as e :
15082	append STR0 to name , substitute the result for prefixed .	prefixed = name + `` . ''
940	derive the class ImproperlyConfigured from the Exception base class .	class ImproperlyConfigured ( Exception ) :
5371	convert self.object_list to a list .	self . object_list = list ( self . object_list )
15267	evaluate the function force_bytes , with the arguments s , encoding , strings_only and errors , return the result .	return force_bytes ( s , encoding , strings_only , errors )
1992	define the method close with argument self .	def close ( self ) :
2364	append a tuple containing 3 elements : filename , content , mimetype to self.attachments list .	self . attachments . append ( ( filename , content , mimetype ) )
1467	define __del__ method with self as the argument .	def __del__ ( self ) :
16800	if not ,	else :
16596	if settings.DEBUG is true , return boolean False , otherwise return boolean True .	return not settings . DEBUG
3322	try ,	try :
1511	if not ,	else :
8789	if value is contained in self.empty_values ,	if value in self . empty_values :
852	if check is not contained in self.registered_checks .	if check not in self . registered_checks :
13381	get the unicode representation of current working directory , join it and path into a string , substitute the result for path .	path = join ( os . getcwdu ( ) , path )
18103	define the function deactivate .	def deactivate ( ) :
13247	define the method __repr__ with an argument self .	def __repr__ ( self ) :
6232	raise an SignatureExpired exception with an argument string STR0 , where STR1 is replaced by age and max_age , respectively .	raise SignatureExpired ( STR0 % ( age , max_age ) )
13948	define the function luhn with an argument candidate .	def luhn ( candidate ) :
9214	input_type is a string STR0 .	input_type = STR0
8780	if not self.pk_field is boolean False . remove element from kwargs dictionary under the key STR0 , substitute it for self.to_field if it exists ,	self . to_field = kwargs . pop ( `` to_field '' , None )
738	if weight is greater or equal to integer 6 ,	if weight > = 6 :
14699	substitute the result for year . call the method dt.timetuple , substitute the result for timetuple .	timetuple = dt . timetuple ( )
15401	if latest_date is None or item_date is greater than latest_date ,	if latest_date is None or item_date > latest_date :
11473	extend collect list with _builtin_context_processors .	collect . extend ( _builtin_context_processors )
10015	msg is a string `` Invalid HTTP_HOST header : % r . `` , replace STR0 with host .	msg = `` Invalid HTTP_HOST header : % r . '' % host
10885	filters is an empty list .	filters = [ ]
1371	binary or STR0 attribute of the os object , or integer 0 if it doesnt exists . call the os.open function with full_path , flags and octal number 0o666 as arguments , substitute the result for fd .	fd = os . open ( full_path , flags , 0o666 )
13877	vary_headers is an empty list .	vary_headers = [ ]
6235	import module functools .	import functools
1119	call the self.seek method with argument integer 0 .	self . seek ( 0 )
5189	raise an CommandError with an argument string `` % r is not a valid % s name . Please % s . `` , were STR0 is replaced with name ,	raise CommandError ( `` % r is not a valid % s name . Please % s . '' % ( name , app_or_project , message ) )
18710	define the method tzname with 2 arguments self and dt .	def tzname ( self , dt ) :
4497	define the method handle with 3 arguments : self and unpacked dictionary options .	def handle ( self , ** options ) :
4290	call the connection.creation.sql_indexes_for_model with model and no_style ( ) as arguments , substitute the result for index_squl .	index_sql = connection . creation . sql_indexes_for_model ( model , no_style ( ) )
8210	return the media field of the first element of self.forms .	return self . forms [ 0 ] . media
8793	if self.to_field is true ,	if self . to_field :
17895	return ZERO .	return ZERO
121	timeout is a integer -1 .	timeout = - 1
3000	define the method add_arguments with arguments self and parser .	def add_arguments ( self , parser ) :
14614	compile regex from raw string STR0 ,	time_re = re . compile ( rSTR0 rSTR1 )
8734	if it doesnt exists return value of the function capfirst with an argument self.fk.verbose_name for STR0 . if self.fk.rel.field_name is not equal to self.fk.rel.to._meta.pk.name ,	if self . fk . rel . field_name ! = self . fk . rel . to . _meta . pk . name :
3005	get the value under the STR0 key of the options dictionary , convet it to an integer and substitute for self.verbosity .	self . verbosity = int ( options . get ( STR0 ) )
11346	substitute _templatetags_modules for templatetags_modules .	templatetags_modules = _templatetags_modules
1496	define the method _get_name with argument self .	def _get_name ( self ) :
7734	if bf_errors is true ,	if bf_errors :
2218	append idstring to the STR0 character , substitute it for idstring .	idstring = STR0 + idstring
4687	from django.db.migrations.optimizer import MigrationOptimizer into default name space .	from django . db . migrations . optimizer import MigrationOptimizer
14794	return response .	return response
14606	define the function time_format with 2 arguments : value and format_string .	def time_format ( value , format_string ) :
1860	convert value under the STR0 key of the environ dictionary to uppercase , substitute it for self.method .	self . method = environ [ STR0 ] . upper ( )
6885	substitute self.none_value for self.month_none_value .	self . month_none_value = self . none_value
11878	define the function unordered_list with 2 arguments value and autoescape set to None .	def unordered_list ( value , autoescape = None ) :
4519	skip this loop iteration .	continue
13753	call the function check_errors with argument main_func , substitute the result for wrapped_main_func .	wrapped_main_func = check_errors ( main_func )
2443	call the function socket.getfqdn , substitute the result for self._fqdn .	self . _fqdn = socket . getfqdn ( )
10903	call the methof match.group with an argument `` filter_name '' , substitute the result for filter_name .	filter_name = match . group ( `` filter_name '' )
17718	substitute the result for tag . if tag is false or current_len is greater or equal to truncate_len ,	if not tag or current_len > = truncate_len :
837	which has not been installed . '' with all the STR0 replaced by values of description , name and reference joined into a string delimited by STR1 , respectively , obj set to receiver.__module__ , hint set to None and id set to string STR2 , append the result to errors . return errors .	return errors
14842	import module types .	import types
11880	substitute conditional_escape for escaper .	escaper = conditional_escape
7849	self._changed_data is an empty list .	self . _changed_data = [ ]
3449	substitute col_name for value under the STR0 key of the field_params dictionary .	field_params [ STR0 ] = col_name
2797	append string `` System check identified % s ( % s silenced ) . '' to msg , replace first STR0 for : string `` no issues '' ,	msg += `` System check identified % s ( % s silenced ) . '' % ( `` no issues '' if visible_issue_count == 0 else `` 1 issue '' if visible_issue_count == 1 else `` % s issues '' % visible_issue_count , len ( all_issues ) - visible_issue_count , )
2255	if not ,	else :
16323	from django.utils import six into default name space .	from django . utils import six
4579	help is a string , `` Prints the custom table modifying SQL statements for the given app name ( s ) . `` .	help = `` Prints the custom table modifying SQL statements for the given app name ( s ) . ''
13095	try ,	try :
4640	help is a string `` Prints the SQL statements for the named migration . ''	help = `` Prints the SQL statements for the named migration . ''
7454	return boolean True .	return True
436	define the method _createdir with argument self .	def _createdir ( self ) :
9202	inputs is an empty list .	inputs = [ ]
11294	get STR0 attribute from self object . if it doesnt exists return boolean False , if the result evaluates to false ,	if not getattr ( self , STR0 , False ) :
7597	get the value under the STR0 key of the kwargs dictionary , update errors dictionary with it .	errors . update ( kwargs [ STR0 ] )
12468	if STR0 is contained in second element of args ,	if STR0 in args [ 1 ] :
867	define the method tag_exists with self class instance and tag as arguments .	def tag_exists ( self , tag ) :
9301	allow_multiple_selected is boolean False .	allow_multiple_selected = False
12930	derive the class IncludeNode from the Node base class .	class IncludeNode ( Node ) :
9150	if extra_attrs is true ,	if extra_attrs :
5307	do nothing .	pass
11936	return an empty string .	return STR0
9736	break the loop execution .	break
16637	root is an empty list .	root = [ ]
1867	if not ,	else :
5239	try ,	try :
32	remove STR0 key from params dictionary and put it into backend .	backend = params . pop ( STR0 )
1175	from ctypes import sizeof , c_ulong , c_void_p , c_int64 , Structure , Union , POINTER , windll and byref into default name space .	from ctypes import ( sizeof , c_ulong , c_void_p , c_int64 , Structure , Union , POINTER , windll , byref )
18695	define the method __init__ with 2 arguments : self and offset .	def __init__ ( self , offset ) :
16678	otherwise if result of the call to the function _len with an argument cache is greater than or equal to maxsize ,	elif _len ( cache ) > = maxsize :
10742	try ,	try :
1587	define the method __init__ with arguments self , argument list args and dictionary of arguments kwargs .	def __init__ ( self , * args , ** kwargs ) :
13520	call the method self._archive.close .	self . _archive . close ( )
7191	if value is contained in self.empty_values ,	if value in self . empty_values :
12997	substitute value for value under the options key of options dictionary .	options [ option ] = value
8033	if data is true , substitute it for self.files , otherwise self.files is an empty dictionary .	self . files = files or { }
16811	if ImportError exception is caught ,	except ImportError :
7768	STR0 , error_row set to a a string , STR1 , row_ender set to a string STR2 , help_text_html set to a string , STR3 and errors_on_separate_row set to boolean False . define the method as_ul with an argument self .	def as_ul ( self ) :
6619	get STR0 attribute of the _prefixes , if it exists , return it , otherwise return STR1 .	return getattr ( _prefixes , `` value '' , STR0 )
17825	if ValueError exception is caught ,	except ValueError :
13059	call the function find_template_loader with an argument loader , append the result to cached_loaders .	cached_loaders . append ( find_template_loader ( loader ) )
6634	try ,	try :
1267	write current_chunk to file fd .	os . write ( fd , current_chunk )
2523	substitute value under the subcommand key of the commands dictionary for app_name .	app_name = commands [ subcommand ]
12642	if not ,	else :
15130	remove config dictionary element under STR0 key , if it exists substitute it for name , if not , name is an empty string .	name = config . get ( STR0 , STR1 )
8850	define the method _get_choices with an argument self .	def _get_choices ( self ) :
14813	call the function warnings.warn with 3 arguments : string `` ` % s. % s` is deprecated , use ` % s` instead . `` ,	warnings . warn ( `` ` % s. % s` is deprecated , use ` % s` instead . '' % ( self . class_name , self . old_method_name , self . new_method_name ) , self . deprecation_warning , 2 )
13203	substitute self for retval .	retval = self
11046	substitute settings.TEMPLATE_STRING_IF_INVALID for current .	current = settings . TEMPLATE_STRING_IF_INVALID
15870	substitute super for _super .	_super = super
326	define initialization method __init__ with 4 arguments : self , host , list of arguments args and dictionary of arguments kwargs .	def __init__ ( self , host , * args , ** kwargs ) :
16324	from django.utils.deprecation import RemovedInDjango19Warning into default name space .	from django . utils . deprecation import RemovedInDjango19Warning
17164	if PY3 is true ,	if PY3 :
8368	if not formfield_callback is None . call the method __new__ from the base class of the class ModelFormMetaclass , with 4 arguments : mcs , name , bases and attrs ,	new_class = super ( ModelFormMetaclass , mcs ) . __new__ ( mcs , name , bases , attrs )
14430	derive the class Formatter from object base class .	class Formatter ( object ) :
11048	raise an exception .	raise
16028	call the function urlsplit with an argument url , assign the result to scheme , netloc , path , query and fragment , respectively .	scheme , netloc , path , query , fragment = urlsplit ( url )
16909	name is an empty list .	name = [ ]
11299	evaluates to true , call the function select_template with an argument file_name , substitute the result for t .	t = select_template ( file_name )
11733	html set to boolean True and truncate set to string STR0 , return the result . decorator function register.filter with an argument is_safe set to boolean False .	@ register . filter ( is_safe = False )
6273	define the method __repr__ with an argument self .	def __repr__ ( self ) :
16540	from django.core import mail into default name space .	from django . core import mail
6234	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
4399	if self.addr is true ,	if self . addr :
15750	if t is contained in self.__dispatch ,	if t in self . __dispatch :
15427	call the method handler.addQuickElement with 2 arguments : string STR0 and value under the STR1 key of the self.feed dictionary .	handler . addQuickElement ( `` title '' , self . feed [ STR0 ] )
7320	call the method Image.open with an argument file , on the result call the verify method	Image . open ( file ) . verify ( )
6633	define the function is_valid_path with arguments path and urlconf set to None .	def is_valid_path ( path , urlconf = None ) :
2089	from django.core.mail.backends.base import BaseEmailBackend into default name space .	from django . core . mail . backends . base import BaseEmailBackend
7787	error is an dictionary with an initial entry error.error_list for filed if true , or NON_FIELD_ERRORS if not .	error = { field or NON_FIELD_ERRORS : error . error_list }
12093	register is an instance of Library class .	register = Library ( )
16066	call the function smart_urlquote with an argument string STR0 formated with an argument middle , substitute the result for url .	url = smart_urlquote ( STR0 % middle )
10798	define the function add_library with 2 arguments : self and lib .	def add_library ( self , lib ) :
7517	if not ,	else :
6515	call the method self._populate ,	self . _populate ( )
948	if message is an instance of ValidationError class ,	if isinstance ( message , ValidationError ) :
11814	define the function striptags with an argument value .	def striptags ( value ) :
490	return boolean False .	return False
13225	call the method HttpResponse.content.fset with 2 arguments : self and value .	HttpResponse . content . fset ( self , value )
14342	substitute _iteritems for items .	items = _iteritems
16827	sign is a string STR0 .	sign = STR0
17760	call the function allow_lazy with an argument phone2numeric , substitute the result for phone2numeric .	phone2numeric = allow_lazy ( phone2numeric )
454	if exp is not None and exp is lesser than return value of the function time.time ,	if exp is not None and exp < time . time ( ) :
14559	if las equals integer 3 ,	if last == 3 :
17097	if s is an instance of SafeData .	if isinstance ( s , SafeData ) :
17569	if text is true format with it and RESET a string STR0 , if not format it with an empty string and RESET , substitute the result for text .	text = STR0 % ( text or STR1 , RESET )
920	do nothing .	pass
10858	raise an TemplateSyntaxError exception with an argument string `` Searching for value . Unexpected end of string in column % d : % s '' ,	raise TemplateSyntaxError ( `` Searching for value . Unexpected `` `` end of string in column % d : % s '' % ( i , subject ) )
5512	define the method handle_m2m_field with argument self , obj and field .	def handle_m2m_field ( self , obj , field ) :
12031	move integer 1 left for 30 bits , substitute the result for GB .	GB = 1 < < 30
10261	call the method six.text_type with 3 arguments : s , encoding and string STR0 .	return six . text_type ( s , encoding , STR0 )
10817	if self.pointer is smaller than length of self.subject , return boolean True , otherwise return False .	return self . pointer < len ( self . subject )
13105	try ,	try :
6318	method lru_cache.lru_cache with an argument maxsize set to None , as a decorator ,	@ lru_cache . lru_cache ( maxsize = None )
17157	raise an AttributeError with an argument string `` % s could not be imported `` , formated with self.name .	raise AttributeError ( `` % s could not be imported `` % self . name )
12045	call the function ugettext with an argument string `` % s PB '' , substitute STR0 with the result of the call to the function ,	value = ugettext ( `` % s PB '' ) % filesize_number_format ( bytes / PB )
6584	substitute parts , without the first element , for path .	path = parts [ 1 : ]
7491	return value .	return value
11681	convert value to lowercase and return the result .	return value . lower ( )
8596	if form.cleaned_data is true and value under the field key of form.cleaned_data dictionary is not None ,	if ( form . cleaned_data and form . cleaned_data [ field ] is not None and form . cleaned_data [ unique_for ] is not None ) :
10212	call the method pop from the base class of the class QueryDict , with arguments key and unpacked list args , return the result .	return super ( QueryDict , self ) . pop ( key , * args )
15559	from django.utils.translation import get_language , to_locale and check_for_language into default name space .	from django . utils . translation import get_language , to_locale , check_for_language
12663	if length of bits is not equal to integer 6 ,	if len ( bits ) ! = 6 :
17093	if not ,	else :
13740	endless loop ,	while True :
12485	if second from the end element of args equals a string STR0 ,	elif args [ - 2 ] == `` as '' :
8091	and i is greater than or equal to self.min_num , value under the STR0 key of the defaults dictionary is boolean True .	defaults [ STR0 ] = True
16469	return boolean True .	return True
15126	define the method configure_filter with 2 arguments : self and config .	def configure_filter ( self , config ) :
15665	call the function get_format with an argument string STR0 , substitute the result for decimal_separator .	decimal_separator = get_format ( STR0 )
3032	otherwise if f.unique is true ,	elif f . unique :
7882	for field in self if field.is_hidden is false , append field to a list , return the resulting list .	return [ field for field in self if not field . is_hidden ]
301	call the cursor method on the value under the db key of connections dictionary , preform following with return value named cursor ,	with connections [ db ] . cursor ( ) as cursor :
8229	can_delete for STR0 , min_num for STR1 , max_num for STR2 , absolute_max for STR3 , validate_min for STR4 for validate_max for STR5 . create a class class which name is generated by converting STR6 into a string and appending it to form.__name__ ,	return type ( form . __name__ + str ( STR0 ) , ( formset , ) , attrs )
10201	substitute the resulting list for list_ . call the method setlist from the base class of the QueryDict class , with arguments key and list_ .	super ( QueryDict , self ) . setlist ( key , list_ )
17373	define the function reraise with 3 arguments : tp , value and tb set to None .	def reraise ( tp , value , tb = None ) :
18586	inplural is boolean False .	inplural = False
7855	if not substitute field.initial for initial_value . if initial_value is an callable object ,	if callable ( initial_value ) :
10951	call the function mark_safe with an argument new_obj , substitute the result for obj .	obj = mark_safe ( new_obj )
17189	return attrs .	return attrs
18546	filemsg is a string STR0 , where STR1 is replaced with origin .	filemsg = STR0 % origin
2460	join management_dir and string STR0 into a file path name , substitute it for command_dir .	command_dir = os . path . join ( management_dir , STR0 )
3873	call the function io.open with 3 arguments : potfile , string STR0 and encoding set to string STR1 as arguments ,	with io . open ( potfile , STR0 , encoding = STR1 ) as fp :
16613	return self.hashvalue .	return self . hashvalue
15840	call the method cls.__new__ with 2 arguments : cls and unpacked list args .	return cls . __new__ ( cls , * args )
9673	if item_type equals FIELD ,	if item_type == FIELD :
6020	derive the class WSGIServer from simple_server.WSGIServer and object base classes .	class WSGIServer ( simple_server . WSGIServer , object ) :
10042	call the function urlsplit with an argument location , substitute the result for bits .	bits = urlsplit ( location )
1780	call the resolver.resolve_error_handler with integer 500 as the argument , assign the resulting tuple elements to the callback ,	callback , param_dict = resolver . resolve_error_handler ( 500 )
9111	define the method __new__ with 4 arguments mcs , name , bases and attrs .	def __new__ ( mcs , name , bases , attrs ) :
3281	if ImportError exception is caught ,	except ImportError :
1092	close the file self .	self . close ( )
10536	response.content is bytes empty string .	response . content = bSTR0
17970	define the function get_current_timezone .	def get_current_timezone ( ) :
3060	get the value under the STR0 key of the options dictionary , use it as a key to access the element under the connections dictionary , substitute it for connection .	connection = connections [ options . get ( STR0 ) ]
9328	substitute the resulting set for selected_choices . output is an empty list .	output = [ ]
17258	append string `` .moves.urllib_error '' to __name__ , use it as an key to get the value from the sys.modules dictionary , substitute it for error .	error = sys . modules [ __name__ + `` .moves.urllib_error '' ]
9530	called with the argument microseconds set to integer 0 , on the result of the method value.time . return list containing 2 elements : None and None .	return [ None , None ]
3155	if app_config.models_module is None or app_config is contained in excluded_apps ,	if app_config . models_module is None or app_config in excluded_apps :
16706	call the function update_wrapper with 2 arguments : wrapper and user_function , return the result .	return update_wrapper ( wrapper , user_function )
6562	if language_code is not contained in self._regex_dict ,	if language_code not in self . _regex_dict :
15591	call the function get_language , substitute the result for lang .	lang = get_language ( )
8742	unique_check is a list with elements field , for every field in unique_check if field is not equal to self.fk.name .	unique_check = [ field for field in unique_check if field ! = self . fk . name ]
9552	if _cookie_encodes_correctly and _cookie_allows_colon_in_names are boolean True ,	if _cookie_encodes_correctly and _cookie_allows_colon_in_names :
5203	if self.verbosity is greater or equal to integer 2 ,	if self . verbosity > = 2 :
5971	substitute sysid for self.sysid .	self . sysid = sysid
9221	derive the class ClearableFileInput from the FileInput base class .	class ClearableFileInput ( FileInput ) :
11188	append resolved_args to a list containing context element , substitute it for resolved_args .	resolved_args = [ context ] + resolved_args
7632	default_validators is an list containing validators.validate_slug .	default_validators = [ validators . validate_slug ]
6419	if pattern is an instance of RegexURLResolver class ,	if isinstance ( pattern , RegexURLResolver ) :
14003	define the function _long_to_bin with 2 arguments : x and hex_format_string .	def _long_to_bin ( x , hex_format_string ) :
1244	if os.path has an attribute STR0 ,	if hasattr ( os . path , STR0 ) :
13134	define the method get_template_source with 3 arguments : self , template_name , template_dirs set to None .	def get_template_sources ( self , template_name , template_dirs = None ) :
16362	call the function _explode_shorthand_ip_string with an argument ip_str , substitute the result for ip_str .	ip_str = _sanitize_ipv4_mapping ( ip_str )
16216	call the function force_str with an argument quoted_url , use the result as an argument for the call to the function unquote ,	return force_text ( unquote ( force_str ( quoted_url ) ) )
5818	call the method self._start_relational_field with an argument field .	self . _start_relational_field ( field )
4358	import module os .	import os
3432	append string `` Field renamed because it started with STR0 . '' to field_notes .	field_notes . append ( `` Field renamed because it started with STR0 . '' )
5733	import module sys .	import sys
