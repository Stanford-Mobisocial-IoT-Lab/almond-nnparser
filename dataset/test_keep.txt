18173	define the function gettext with an argument message .	def gettext ( message ) :
17399	get STR0 attribute from fp object , substitute it for errors if it exists , if not errors is None .	errors = getattr ( fp , STR0 , None )
17765	call the method zfile.close .	zfile . close ( )
15128	call the method self.configure_custom with an argument config , substitute the result for result .	result = self . configure_custom ( config )
8706	define the method _construct_form with 3 arguments : self , i and unpacked dictionary kwargs .	def _construct_form ( self , i , ** kwargs ) :
15205	define the method configure_root with 3 arguments : self , config and incremental set to boolean False .	def configure_root ( self , config , incremental = False ) :
12020	return no .	return no
1427	raise an ValueError with string STR0 as argument .	raise ValueError ( STR0 )
18217	call the function re.compile with an argument raw string STR0 , substitute the result for language_code_prefix_re .	language_code_prefix_re = re . compile ( STR0 )
14142	substitute _iterkeys for keys .	keys = _iterkeys
7128	call the method __init__ from the base class of the class DecimalField , with 4 arguments : max_value , min_value , unpacked list args and unpacked dictionary kwargs .	super ( DecimalField , self ) . __init__ ( max_value , min_value , * args , ** kwargs )
10325	if six.PY3 is true ,	if six . PY3 :
3024	name set to a string STR0 , max_length set to integer 255 , unique set to boolean True and primary_key set to boolean True , return value of the method models.TextField called with argument name set to a string STR1 , and return value of the method models.DateTimeField called with 2 arguments : name set to string STR2 and db_index set to True . table_output is an empty list .	table_output = [ ]
10536	response.content is bytes empty string .	response . content = STR
6467	slice the path list from the result of the match.end method as the start index to the end , substitute it for new_path .	new_path = path [ match . end ( ) : ]
6637	if Resolver404 exception is caught ,	except Resolver404 :
13434	define the method __init__ with 2 arguments self and file .	def __init__ ( self , file ) :
484	call the method self.validate_key with argument key .	self . validate_key ( key )
4077	substitute first element of level for common_ancestor .	common_ancestor = level [ 0 ]
6179	is_compressed is boolean False .	is_compressed = False
2587	call the settings.INSTALLED_APPS .	settings . INSTALLED_APPS
17421	if arg is an instance of unicode ,	if isinstance ( arg , unicode ) :
414	return nothing .	return
8269	call the method f.save_form_data with 2 arguments : instance and value under the f.name key of cleaned_data dictionary .	f . save_form_data ( instance , cleaned_data [ f . name ] )
7565	if recursive is true ,	if recursive :
3930	write errors to self.stdout .	self . stdout . write ( errors )
1443	from django.core.files.utils import FileProxyMixin into default name space .	from django . core . files . utils import FileProxyMixin
7691	define the method __init__ with 4 arguments : self , data set to None , files set to None , auto_id is an string STR0 , prefix is None , initial set to None , error_class set to ErrorList , label_suffix set to None , empty_permitted set to boolean False .	def __init__ ( self , data = None , files = None , auto_id = STR0 , prefix = None , initial = None , error_class = ErrorList , label_suffix = None , empty_permitted = False ) :
1408	define the method listdir with arguments self and path .	def listdir ( self , path ) :
10848	increment i by one .	i += 1
5	from django.core.cache.backends.base import InvalidCacheBackendError , CacheKeyWarning and BaseCache into default name space .	from django . core . cache . backends . base import ( InvalidCacheBackendError , CacheKeyWarning , BaseCache )
18148	get the LANG_INFO dictionary value under the generic_lang_code key , return the result .	return LANG_INFO [ generic_lang_code ]
6783	derive the class BaseValidator form the object base class .	class BaseValidator ( object ) :
11507	call the method self.create_token with 3 arguments : self.template_string list elements from start index to end index , tuple with 2 elements : start and end and boolean False , append the result to result .	result . append ( self . create_token ( self . template_string [ start : end ] , ( start , end ) , True ) )
11526	call the method self.source_error with 2 arguments : token.source and msg , return the result .	return self . source_error ( token . source , msg )
16893	if not ,	else :
16313	return boolean False .	return False
13435	call the method self._archive_cls with an argument file , call the result with an argument file , substitute the result for self._archive .	self . _archive = self . _archive_cls ( file ) ( file )
15121	if not ,	else :
10551	from django.conf import settings into default name space .	from django . conf import settings
8262	if exclude is true and f.name is contained in exclude ,	if exclude and f . name in exclude :
18263	define the method _init_translation_catalog with an argument self .	def _init_translation_catalog ( self ) :
16085	otherwise if autoescape is true ,	elif autoescape :
10686	self.verbatim is boolean False .	self . verbatim = False
3731	if command.verbosity is greater than integer 0 ,	elif command . verbosity > 0 :
15097	substitute logging.NOTSET for logger.level .	logger . level = logging . NOTSET
18692	from django.utils.encoding import force_str , force_text and DEFAULT_LOCALE_ENCODING into default name space .	from django . utils . encoding import force_str , force_text , DEFAULT_LOCALE_ENCODING
8086	try ,	try :
7388	define the method __deepcopy__ with arguments self and memo .	def __deepcopy__ ( self , memo ) :
16775	return boolean False .	return False
10925	if not ,	else :
14707	append site to sites .	sites . append ( site )
2498	self.settings_exception is None .	self . settings_exception = None
17416	raise an TypeError exception with an argument string STR0 .	raise TypeError ( STR0 )
18558	call the method imatch.group with an argument integer 1 , substitute the result for g .	g = imatch . group ( 1 )
13216	raise an ContentNotRenderedError exception with an string STR0 .	raise ContentNotRenderedError ( STR0 STR1 )
1893	substitute post for self._post .	self . _post = post
11513	define the method create_token with 4 arguments : self , token_string , source and in_tag .	def create_token ( self , token_string , source , in_tag ) :
1094	if file self is not closed ,	if not self . closed :
8415	call the function limit_choices_to , substitute the result for limit_choices_to .	limit_choices_to = limit_choices_to ( )
10142	endless loop ,	while True :
5194	if url ends with STR0 character ,	if url . endswith ( STR0 ) :
173	substitute self.version for version .	version = self . version
8896	for every pk in value ,	for pk in value :
3264	help is a tuple containing a string : STR1 STR2	help = ( STR1 STR2 STR3 )
7859	call the method field.hidden_widget , substitute the result for field.hidden_widget .	hidden_widget = field . hidden_widget ( )
16089	otherwise if autoescape is true ,	elif autoescape :
5546	if Model.DoesNotExist exception is caught ,	except Model . DoesNotExist :
3050	if self.verbosity is greater than integer 1 ,	if self . verbosity > 1 :
5631	from django.utils.encoding import smart_text and is_protected_type into default name space .	from django . utils . encoding import smart_text , is_protected_type
8364	get STR0 attribute from the options object , if it exists substitute it for self.error_messages , if not self.error_messages is None .	self . error_messages = getattr ( options , STR0 , None )
5803	if obj_pk is not None ,	if obj_pk is not None :
4835	if arg starts with options ,	if arg . startswith ( option ) :
12181	parentloop is an empty dictionary .	parentloop = { }
9066	define the method __getitem__ with arguments self and name .	def __getitem__ ( self , name ) :
14863	derive the class ConvertingDict from dict base class .	class ConvertingDict ( dict ) :
2926	try ,	try :
16981	remove last element for quant .	quant = quant [ : - 1 ]
17987	if active has an attribute STR0 ,	if hasattr ( _active , STR0 ) :
12257	return nodelist_true_output , if true , if not call the method self.nodelist_true.render with an argument context and return the result .	return nodelist_true_output or self . nodelist_true . render ( context )
9760	return self.position .	return self . position
6156	from django.utils.module_loading import import_string into default name space .	from django . utils . module_loading import import_string
16708	from __future__ import absolute_import into default name space .	from __future__ import absolute_import
13135	if template_dirs is false ,	if not template_dirs :
1640	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
9304	convert elements of choices into a list , substitute it for self.choices .	self . choices = list ( choices )
5233	define the function with arguments self and filename .	def extract ( self , filename ) :
18621	if first is true ,	if first :
7504	for every x in self.fields call the method x.__deepcopy__ with an argument memo , put the result into a tuple , substitute it for result.fields .	result . fields = tuple ( [ x . __deepcopy__ ( memo ) for x in self . fields ] )
8259	skip this loop iteration .	continue
12278	call the method self.nodelist_true.render with an argument context , return the result .	return self . nodelist_true . render ( context )
9835	call the method self._stream.unget with an argument unused_char .	self . _stream . unget ( unused_char )
13776	call the self.convert method with s , self.decimal , self.decimal_digits and self.sign as arguments , assign the result to the neg and value , respectively .	neg , value = self . convert ( s , self . digits , self . decimal_digits , self . sign )
16903	if ch is not equal to string STR0 or string STR1 ,	if ch not in ( STR0 , STR1 ) :
12932	substitute template for self.template .	self . template = template
17798	otherwise if , type of s doesnt equal to six.text_type ,	elif type ( s ) != six . text_type :
10471	append value to self._closable_objects list .	self . _closable_objects . append ( value )
16280	decrement factor by one .	factor -= 1
2625	derive the CommandParser class from the ArgumentParser base class .	class CommandParser ( ArgumentParser ) :
15925	from __future__ import unicode_literals into default name space .	from __future__ import unicode_literals
3448	if col_name is not equal to new_name and field_notes is true ,	if col_name != new_name and field_notes :
8985	define the method as_json with 2 arguments self and escape_html set to boolean False .	def as_json ( self , escape_html = False ) :
17309	define the function get_unbound_function with an argument unbound .	def get_unbound_function ( unbound ) :
1387	if e.errno equals to errno.EEXIST ,	if e . errno == errno . EEXIST :
11907	i is integer 0 .	i = 0
5468	internal_use_only is a boolean False .	internal_use_only = False
709	from django.apps import apps into default name space .	from django . apps import apps
8020	define the method __init__ with 3 arguments : self , unpacked list args and unpacked dictionary kwargs .	def __init__ ( self , * args , ** kwargs ) :
4969	return reversed list output .	return output [ : : - 1 ]
8472	call the method self._update_errors with an argument e .	self . _update_errors ( e )
4002	call the method apps.get_app_config with an argument app_label .	apps . get_app_config ( app_label )
7316	file is an instance of BytesIO class created with an argument : return value of the method data.read .	file = BytesIO ( data . read ( ) )
9056	return the result of the call to the function chain , with an argument unpacked list , containing the result of the function , format_html called with 3 arguments : string STR4 , return value of the function self.absolute_path called with an argument path and medium , for every medium in media and for every path in value under the medium key of the self._css dictionary .	return chain ( * [ [ format_html ( STR4 , self . absolute_path ( path ) , medium ) for path in self . _css [ medium ] ] for medium in media ] )
10072	del self._post	del self . _post
8663	if not ,	else :
10588	derive the class TemplateSyntaxError form the base class Exception .	class TemplateSyntaxError ( Exception ) :
11487	updates is an empty dictionary .	updates = dict ( )
2406	call the method self._create_mime_attachment with the arguments content and mimetype , substitute the result for attachment .	attachment = self . _create_mime_attachment ( content , mimetype )
2543	options is a list containing a tuple with 2 entries : string STR0 and None .	options = [ ( STR0 , None ) ]
10151	_mutable is boolean True .	_mutable = True
14586	subtract day_of_year from i , if the result is smaller than the result of subtraction of weekday from integer 4 ,	if ( i - day_of_year ) < ( 4 - weekday ) :
2489	create dictionary out of the unpacked dictionary options , using defaults._get_kwargs as a mapping function , substitute the result for defaults .	defaults = dict ( defaults . _get_kwargs ( ) , ** options )
6674	define the method __eq__ with arguments self and other .	def __eq__ ( self , other ) :
1096	otherwise if self.name exists and self.name file path exists ,	elif self . name and os . path . exists ( self . name ) :
14091	define the method write with 2 arguments : self and s .	def write ( self , s ) :
924	do nothing .	pass
10207	call the method bytes_to_text with 2 arguments : key and self.encoding , substitute the result for key .	key = bytes_to_text ( key , self . encoding )
15295	if not ,	else :
13714	if sys.platform equals to string STR0 ,	if sys . platform == STR0 :
10926	if settings.TEMPLATE_STRING_IF_INVALID is true ,	if settings . TEMPLATE_STRING_IF_INVALID :
7830	if ValidationError renamed to e , exception is caught ,	except ValidationError as e :
4547	help is a string STR0 .	help = STR0
17687	convert num to an integer , substitute the result for length .	length = int ( num )
10417	call the method closable.close .	closable . close ( )
1070	yield one element of data iterable .	yield data
5220	if ext is true ,	if ext :
12330	call the function include_is_allowed with an argument filepath , if it evaluates to false ,	if not include_is_allowed ( filepath ) :
5062	import module tempfile .	import tempfile
12012	try ,	try :
16149	if end is not a STR0 or STR1 character ,	if end not in ( STR0 , STR1 ) :
18552	comment_lineno_cache is None ,	comment_lineno_cache = None
17605	return None .	return None
4626	call the add_arguments method with parser as argument form the base class of the class Command .	super ( Command , self ) . add_arguments ( parser )
12549	call the method parser.parse with an argument tuple with an element string STR0 and end_tag , substitute the result for nodelist_true .	nodelist_loop = parser . parse ( ( STR0 , end_tag ) )
11582	from django.utils.dateformat import format and time_format into default name space .	from django . utils . dateformat import format , time_format
10252	cookies is a string STR0 .	cookies = STR0
15309	try ,	try :
14801	do nothing .	pass
8235	return valid .	return valid
3533	raise an exception .	raise
3220	if not ,	else :
2327	define the method get_connection with arguments self and fail_silently set to boolean False .	def get_connection ( self , fail_silently = False ) :
11924	increment i by 1 .	i += 1
14441	substitute obj for self.data .	self . data = obj
13723	call the function thread.start_new_thread with main_func , args and kwargs as arguments .	thread . start_new_thread ( main_func , args , kwargs )
16024	call the method re.sub with 3 arguments : raw string STR0 , empty string and result of the function force_text , called with an argument value , return the result .	return re . sub ( STR0 , STR , force_text ( value ) )
14651	MONTHS is an dictionary with 12 entries : result of the call to the function _ with an argument string STR0 for 1 , result of the call to the function _ with an argument string STR1 for 2 , result of the call to the function _ with an argument string STR2 for 3 , result of the call to the function _ with an argument string STR3 for 4 , result of the call to the function _ with an argument string STR4 for 5 , result of the call to the function _ with an argument string STR5 for 6 , result of the call to the function _ with an argument string STR6 for 7 , result of the call to the function _ with an argument string STR7 for 8 , result of the call to the function _ with an argument string STR8 for 9 , result of the call to the function _ with an argument string STR9 for 10 , result of the call to the function _ with an argument string STR10 for 11 , and result of the call to the function _ with an argument string STR11 for 12 .	MONTHS = { 1 : _ ( STR0 ) , 2 : _ ( STR1 ) , 3 : _ ( STR2 ) , 4 : _ ( STR3 ) , 5 : _ ( STR4 ) , 6 : _ ( STR5 ) , 7 : _ ( STR6 ) , 8 : _ ( STR7 ) , 9 : _ ( STR8 ) , 10 : _ ( STR9 ) , 11 : _ ( STR10 ) , 12 : _ ( STR11 ) }
17755	call the method re_newlines.sub with 2 arguments : STR0 and text , return the result .	return re_newlines . sub ( STR0 , text )
5813	call the method field.value_to_string with an argument obj , use the result as an argument for the call the method self.xml.characters .	self . xml . characters ( field . value_to_string ( obj ) )
11199	if name is callable object ,	if callable ( name ) :
18195	import module gettext as gettext_module .	import gettext as gettext_module
5229	convert base to lowercase , if it ends with string STR0 ,	if base . lower ( ) . endswith ( STR0 ) :
13210	return retval .	return retval
4437	ERRORS is a dictionary with 3 initial entries : string STR0 for errno.EACCES , STR1 for errno.EADDRINUSE and STR2 for errno.EADDRNOTAVAIL .	ERRORS = { errno . EACCES : STR0 , errno . EADDRINUSE : STR1 , errno . EADDRNOTAVAIL : STR2 , }
16481	derive the class Lexer from the object base class .	class Lexer ( object ) :
11545	define the method compile_function_error with 3 arguments : self , token and e .	def compile_function_error ( self , token , e ) :
15974	call the function allow_lazy with 2 arguments : linebreaks , six.text_type , substitute the result for linebreaks .	linebreaks = allow_lazy ( linebreaks , six . text_type )
14039	call the function inner.copy , substitute the result for dig1 , call the function outer.copy , substitute the result for dig2 .	dig1 , dig2 = inner . copy ( ) , outer . copy ( )
9238	call the function format_html with 3 arguments : self.url_markup_template , value.url and return value of the function force_text , called with an argument value , substitute the result for value under the STR0 key of the substitutions dictionary .	substitutions [ STR0 ] = format_html ( self . url_markup_template , value . url , force_text ( value ) )
18186	define the function get_language_from_request with 2 arguments : request and check_path set to boolean False .	def get_language_from_request ( request , check_path = False ) :
11994	decorator function register.filter with an argument is_safe set to boolean False .	@ register . filter ( is_safe = False )
18493	append t.contents to comment .	comment . append ( t . contents )
3374	value under the STR0 key of the extra_params dictionary is boolean True ,	extra_params [ STR0 ] = True
6159	derive the class SignatureExpired from the BadSignature base class .	class SignatureExpired ( BadSignature ) :
6806	code is a string STR0	code = STR0
656	val is None .	val = None
14581	if not ,	else :
3485	from django.core.management.color import no_style into default name space .	from django . core . management . color import no_style
1855	substitute path_info for self.path_info .	self . path_info = path_info
1163	return None .	return None
3747	call the function os.unlink with an argument work_file .	os . unlink ( work_file )
10183	define the method __delitem__ with 3 arguments : self and key .	def __delitem__ ( self , key ) :
16118	replace STR0 in the string STR1 with the result of the function call tag.lower ( ) , use it and the re.I as the input arguments for function re.compile , put the result in the self.interesting .	self . interesting = re . compile ( STR0 % tag . lower ( ) , re . I )
3922	append self.msgmerge_options to a list containing string STR0 , append to it a list containing pofile and potfile , substitute the result for args .	args = [ STR0 ] + self . msgmerge_options + [ pofile , potfile ]
9288	substitute string STR0 for value under the STR1 key of final_attrs dictionary .	final_attrs [ STR0 ] = STR1
5089	if target is None ,	if target is None :
2853	raise an CommandError exception with an argument string STR0 .	raise CommandError ( STR0 )
